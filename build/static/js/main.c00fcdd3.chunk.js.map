{"version":3,"sources":["registerServiceWorker.js","common/core/constants/validationMessages.js","common/core/config/competencyIcons.js","common/core/config/appConfig.js","common/core/constants/regExpressions.js","common/commonFunctions.js","common/core/redux/reducers/reducerUser.js","common/core/redux/reducers/reducerStudent.js","common/core/redux/reducers/index.js","common/core/redux/types.js","common/core/api/apiConfigJson.js","common/core/api/apiService.js","common/core/redux/actions/actionUser.js","common/core/redux/actions/actionStudent.js","common/authorization/login.js","common/authorization/sideBar.js","common/authorization/signUp.js","common/authorization/hrSignUp.js","common/changePassword/changePassword.js","common/forgotPassword/resetPassword.js","user/header/header.js","common/cropper/imageCropper.js","user/dashboard/dashboard.js","user/profile/addEducation.js","user/profile/addEmployment.js","user/profile/addProject.js","user/profile/addCareerProfile.js","user/profile/addPersonalProfile.js","user/profile/addSkills.js","user/profile/videoIntroduction.js","user/profile/editProfile.js","user/profile/timeSlots.js","user/profile/slotArrangement.js","video/header/header.js","video/video.js","videoChat/js/socket.js","videoChat/js/Emitter.js","videoChat/js/MediaDevice.js","videoChat/js/PeerConnection.js","videoChat/js/MainWindow.js","videoChat/js/CallWindow.js","videoChat/js/CallModal.js","videoChat/header/header.js","videoChat/js/app.js","interviewer/header/header.js","interviewer/profile/timeSlots.js","interviewer/dashboard/dashboard.js","interviewer/profile/addEducation.js","interviewer/profile/addEmployment.js","interviewer/profile/addProject.js","interviewer/profile/addCareerProfile.js","interviewer/profile/addPersonalProfile.js","interviewer/profile/addSkills.js","interviewer/profile/editProfile.js","recruiter/header/header.js","recruiter/jobDescription/showVideo.js","recruiter/header/sidebar.js","recruiter/jobDescription/userMapping.js","recruiter/jobDescription/addJobDescription.js","recruiter/jobDescription/jobDescription.js","recruiter/jobDescription/videoHistory.js","admin/header/header.js","admin/candidate/addMoreStudent.js","admin/candidate/candidate.js","admin/hruser/addMoreStudent.js","admin/hruser/hruser.js","theRapidHireRoute.js","index.js","assets/img/sample-profile.jpg","assets/img/default_achievement.jpg","../node_modules/validatorjs/src/lang sync /^/.//.*$","assets/img/default-img.PNG"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","email","required","invalid","parentEmail","password","newPassword","oldPassword","confirmNewPassword","passwordPattern","same","firstName","alphaOnly","lastName","parentFirstName","parentLastName","parentName","parentLName","day","month","year","DOBDay","DOBMonth","DOBYear","city","country","summary","instituteName","startDate","endDate","title","description","competency","importance","skills","fromYear","toYear","fromGrade","toGrade","request","recommendation","recommenderTitle","birthDate","groupName","aboutGroup","designation","organisation","industry","functionalArea","role","profileRole","mobileNo","ICONS","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","50","51","52","53","54","56","57","58","59","60","61","CONSTANTS","IV_LENGTH","ENCRYPTION_KEY","CRYPTER_KEY","regExpressions","validationMessages","azureStorageAccount","azureContainer","getAPIURL","azureThumbContainer","APIPort","azureBlobURI","profileAlbum","coverAlbum","badgeAlbum","certificateAlbum","mediaAlbum","trophieAlbum","feedAlbum","oragnizationAlbum","audioAlbum","smallThumb","mediumThumb","typeSchool","typeUniversity","moment","OTHER","socket","URL","httpServer","APIURL","icons","rangeSliderHideValue","rangeSliderHideName","groupStatus","REQUESTED","INVITED","ACCEPTED","REJECTED","feedActivity","CREATEFEED","LIKEFEED","SHAREFEED","COMMENTONFEED","singleTrack","multipleTrack","cryptlib","require","iv","key","getHashSha256","azureURL","cryptr","Cryptr","toastId","setLocalStorage","value","JSON","stringify","data","encodedData","encrypt","localStorage","setItem","getLocalStorage","getItem","parse","decrypt","decryptedData","clearLocalStorage","clear","showErrorToast","errorMessage","event","toast","isActive","position","POSITION","TOP_RIGHT","hideProgressBar","closeOnClick","pauseOnHover","showSuccessToast","message","success","ZoomInAndOut","children","props","timeout","onEnter","node","classList","add","onExit","remove","renderMessage","className","text","replace","returnUrl","uploadToAzure","type","userId","file","sasToken","callback","AzureStorage","folderName","fileName","generateTimestamp","name","uploadPath","Blob","createBlobServiceWithSas","createBlockBlobFromBrowserFile","result","limitCharacter","count","slice","length","SampleNextArrow","arrow","onClick","SamplePrevArrow","extension","split","pop","valueOf","possible","i","charAt","Math","floor","random","generateRandomString","getThumbImage","imageType","imagePath","getIPAddress","onNewIP","pc","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iceServers","noop","localIPs","ipRegex","iterateIP","ip","createDataChannel","createOffer","sdp","forEach","line","indexOf","setLocalDescription","reason","onicecandidate","ice","candidate","INITIAL_STATE","userData","parentData","otherUserInfoData","all","competencyData","achievementData","oragnizationData","recommendationData","onlyAchievement","appReducer","combineReducers","User","action","payload","userInfo","roleId","Object","assign","object","hasOwnProperty","element","headerCount","userInfoStudent","students","index","payloaddata","headerCountMessage","connectionCount","messagingCount","notificationCount","splice","findIndex","todo","parseInt","parentInfo","groupInfoData","groupListData","groupId","Student","educationInfo","rootReducer","undefined","login","url","method","deviceId","showResultMessage","showErrorMessage","updateUserStatus","signupUser","createdBy","signupHR","companyId","companyName","signupParent","invite","dob","emailVerify","code","roleType","forgotPassword","resetPassword","logout","changePassword","getUserDetails","addResume","userProfileId","resumeURL","resumeName","addVideo","videoLink","getEmploymentListById","addEmployment","currentCompany","currentSalary","currentSalaryInLakh","currentSalaryInThousand","describe","noticePeriod","offeredSalary","offeredSalaryInLakh","offeredSalaryInThousand","offeredDesignation","lastWorkingDate","nextEmployer","editEmployment","employmentId","deleteEmployment","getSkillsListById","getKeySkillsList","getProfileRoleList","getCompanyList","getProjectListById","getAssociatedListDataByUserId","addProject","projectName","projectURL","associatedWith","projectFinished","editProject","projectId","getDesiredProfileListById","addCareerProfile","jobType","employmentType","desiredShift","expectedSalary","expectedSalaryInLakh","expectedSalaryInThousand","desiredLocation","desiredIndustry","editDesiredProfileData","profileId","addJobDescription","titleId","noOfPosition","minExperience","maxExperience","postedBy","jobDescId","getJobDescriptonListById","editJobDescriptionData","recruiterId","addUserSkills","experienceInYear","experienceInMonth","currentLocation","getUserSkillsById","editUserSkills","editUserProfile","createInterviewersSkills","keySkillId","skillId","getInterviewersSkillsListById","editInterviewersSkillsData","createSlot","slotId","slotRegisteredDate","startTimeStamp","endTimeStamp","interviewerId","modifySlot","bookedTimeSlot","deleteTimeSlotByInterviewer","getTimeSlotByInterviewer","getTimeSlotByUser","saveChatLink","videoChatLink","getCandidateList","getHrList","createJobMap","jobMapId","jobId","candidateId","hrId","status","updateProfileImage","profilePicture","updateJobMap","getUserListForMapping","getUserListForHR","apiFailCounter","axios","defaults","baseURL","interceptors","use","config","token","access_token","headers","Authorization","Promise","reject","handleErrorByStatus","theRapidHireApiService","apiKeyName","apiDetails","ApiJson","Error","requestObject","_data_","paramObj","prepareDataObject","_url_","injectParamsToUrl","response","maxContentLength","toString","open","origin","actionUserLogin","actionUserLogout","actionGetStudentPersonalInfo","actionSetStudentAsUser","actionGetStudentList","actionGetStudentUpdatedInfo","actionGetHeaderCount","actionUpdateHeaderCount","actionChangePasswordStatus","actionRemoveStudent","actionUpdateUserInfo","actionUpdateParentInfo","actionGetAllCompetency","actionGetAchievementsByUser","actionGetAchievementsData","actionListOragnization","actionGetRecommendationsByUser","Component","getUrlParameter","results","RegExp","exec","decodeURIComponent","Login","context","getValidatorData","getClasses","field","classnames","isValid","handleChange","setState","target","validateData","self","validate","isLoading","handleSubmit","submitData","preventDefault","bind","validatorTypes","strategy","createSchema","_this","this","document","documentMode","StyleMedia","body","matchUrl","params","user","pass","trim","toLowerCase","search","parsedGroupId","parsedEmail","parsedPass","userResponse","history","push","autoClose","toastClassName","transition","FormGroup","FormControl","placeholder","onChange","autoComplete","getValidationMessages","onKeyPress","Link","to","Button","bsStyle","disabled","style","right","bottom","pathname","eventKey","validation","connect","dispatch","bindActionCreators","Signup","getRoles","roles","err","handleSelect","clearValidations","setValidatorTypes","handleResetForm","initialState","isOpen","parentField","setDatePickerPlaceHolder","elementObject","messageObject","getElementsByName","visibility","setTimeout","Nav","activeKey","NavItem","maxLength","HRSignup","setUserInfo","invitedRoleId","format","Number","INVITE_0","tabValue","handleCompanyChange","newValue","otherCompanyName","company","INVITE_4","companyDetail","parsed","qs","label","INVITE_1","INVITE_2","INVITE_3","loginData","STUDENT_ROLE","checkAge","PARENT_ROLE","Date","today","age","getFullYear","rules","messages","options","closeCPModal","cpModal","closeCPComponent","handleButtonState","decrptText","show","Modal","onHide","backdrop","keyboard","Body","ButtonToolbar","OverlayTrigger","placement","overlay","Tooltip","id","variant","InputGroup","Addon","ResetPassword","Header","asyncContainer","Typeahead","showVideoChat","userProfile","otherUser","getUserProfileData","Navbar","fluid","Collapse","Form","pullLeft","pullRight","parent","ImageCropper","closeCropModal","cropModal","imageSource","handleImageChange","files","fileType","reader","FileReader","readAsDataURL","onload","imageName","selectedOption","aspectRatio","tagValue","cropBoxWidth","cropBoxHeight","modalSize","labelName","cropImageResult","refs","cropper","getCroppedCanvas","fillColor","imageSmoothingEnabled","imageSmoothingQuality","toDataURL","croppedImage","dataURLtoFile","uploadImageToAzure","dataurl","filename","arr","bstr","atob","n","u8arr","Uint8Array","charCodeAt","blob","bsSize","closeButton","Title","ref","minCropBoxWidth","minCropBoxHeight","src","height","width","opacity","guides","viewMode","background","zoomable","cropBoxMovable","cropBoxResizable","highlight","dragMode","movable","Footer","clearable","accept","bstyle","_","debounce","cropImage","Dashboard","dataMap","contentEditable","scrollTo","setProfileData","tagline","editTag","profileImage","coverImage","joinVideoChat","videoKeySelf","videoKeyUser","videoKeyClient","videoKeyInterviewer","editJobDescriptionComponent","jobDescriptionDetail","showJobDescriptionComponent","getProfileData","toggleDropdown","showDropdown","loader1","loader2","jobDescriptionListData","showVideoComponent","editName","editTagLine","getSlotDetails","res","bookedSlotData","map","DropdownButton","MenuItem","student","AsyncTypeahead","addEducation","closeEducationModal","educationModal","closeEducationComponent","handleCompare","fromValue","toValue","fromValueNum","toValueNum","handleToGrade","handleFromGrade","handleToYear","educationToYear","DOB","educationMode","x","getElementById","selectBoxLength","handleFromYear","educationFromYear","handleChangeStart","handleDateChange","handleChangeEnd","isAfter","oragnizationFile","uploadOragnizationLogo","deleteEducation","educationId","getAllEducation","handleInstituteChange","organizationId","handleInputChange","listOragnization","searchText","oragnizationPreview","oragnizationLogo","isToGrade","isToYear","educationDetail","logo","institute","fileData","item","yearList","gradeArray","gradeList","horizontal","Col","sm","controlId","componentClass","ControlLabel","minLength","labelKey","onSearch","allowNew","newSelectionPrefix","onInputChange","defaultInputValue","Row","renderGradeDropdown","handleFromClick","renderFromYearDropdown","reverse","renderToYearDropdown","alt","class","closeAchievementyModal","setEmploymentData","startDay","startMonth","startYear","endDay","endMonth","endYear","lakh","thousand","toDate","checked","lwdDate","lwdDay","lwdYear","lwdMonth","fromDate","selectStartDate","selectDateChange","selectEndDate","selectLWDDate","selectLwdChange","closeImageModal","imagesModal","currentCheckBox","todaysDate","closeEmploymentModal","employmentModal","closeEmploymentComponent","promptRecommendation","employmentDetail","EmploymentId","Radio","classes","defaultValue","end","short","endYearGiven","Checkbox","defaultChecked","inputRef","competencyDropdown","emptyToDate","setProjectData","closeProjectModal","projectModal","closeProjectComponent","associateList","projectDetail","getAssociatedListData","statusCode","resourceData","ProjectId","setCareerProfileData","mediaImgArray","handleLocationChange","handleDesiredIndustryChange","closeCareerProfileModal","careerProfileModal","closeCareerProfileComponent","locationList","desiredIndustryList","careerProfileDetail","profiletId","multi","locationId","addPersonalProfile","profileRoleId","closePersonalProfileModal","personalProfileModal","closePersonalProfileComponent","profileRoleList","ass","addSkills","setSkillsData","availableSkills","handleSkillsChange","closeSkillsModal","skillsModal","closeSkillsComponent","rating","skillsList","skillsDetail","skillName","videoIntroduction","closeVideoModal","closeVideoComponent","videoModal","video","poster","player","duration","from","controls","onReady","onPlayerReady","onPlay","onVideoPlay","onPause","onVideoPause","onTimeUpdate","onVideoTimeUpdate","onSeeking","onVideoSeeking","onSeeked","onVideoSeeked","onEnd","onVideoEnd","bucketName","dirName","region","accessKeyId","secretAccessKey","EditProfile","setUserProfileData","showEducationComponent","showEmploymentComponent","getEmploymentData","showSkillsComponent","getSkillsData","showPersonalProfileComponent","showProjectComponent","getProjectsData","showCareerProfileComponent","getCareerProfileData","editEducationComponent","editEmploymentComponent","editSkillsComponent","editProjectComponent","editCareerProfileComponent","makeTagLineEditable","saveTagLine","saveName","newArray","join","makeNameEditable","updateUserData","S3FileUpload","uploadFile","profileData","uploadFiles","sendData","DeleteFile","deleteFile","showPCareerProfileComponent","employmentListData","skillsListData","projectListData","careerProfileListData","experience","overflow","color","exportFile","employmentListDeducationListDataata","educationListData","tabindex","TimeSlots","timeSlotData","setTimeSlotForWeek","timeSlotForWeek","date","setDate","getDate","finalDate","getMonth","showDate","selectedDate","dateChange","updateTimeSlot","SlotArrangement","getSlotList","args","startTime","StartTime","endTime","EndTime","cancel","data-toggle","NavDropdown","divider","AWS","hasGetUserMedia","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Video","showVideo","IdentityPoolId","s3bucketName","s3","dateinfo","timestampData","getTime","etag","recordedChunks","booleanStop","incr","uploadId","recorder","audioConstraints","audioStreamInitialize","script","createElement","async","appendChild","alert","update","credentials","CognitoIdentityCredentials","RoleArn","AccountId","get","S3","logger","apiVersion","Bucket","mediaDevices","stream","$","removeAttr","MediaRecorder","addEventListener","e","normalArr","size","startMultiUpload","continueMultiUpload","start","stop","disableAllButton","attr","pause","addClass","removeClass","resume","audioBlob","Key","ContentType","ACL","createMultipartUpload","stack","UploadId","PartNumber","uploadPart","ETag","completeMultiUpload","outputTag","obj","MultipartUpload","Parts","completeMultipartUpload","Location","saveVideoURL","startRecording","stopRecording","uploading","videoConstraints","facingMode","SOCKET_HOST","io","Emitter","events","fn","isFunction","listeners","_fn","MediaDevice","min","ideal","max","audio","emit","DOMException","on","len","arguments","track","enabled","set","getTracks","moz","chromeVersion","userAgent","credential","username","friendID","PC_CONFIG","PeerConnection","onaddstream","mediaDevice","isCaller","addStream","isStarter","close","off","getDescription","createAnswer","desc","rtcSdp","RTCSessionDescription","setRemoteDescription","iceCandidate","RTCIceCandidate","addIceCandidate","MainWindow","startCall","clientId","readOnly","spellCheck","callWithVideo","CallWindow","Audio","echoCancellation","btns","icon","setMediaStream","nextProps","conf","toggle","capitalize","peerSrc","localSrc","peerVideo","srcObject","localVideo","deviceType","deviceState","btn","disable","toggleMediaDevice","endCall","startCallInterviewer","el","autoPlay","muted","renderControlButtons","CallModal","callFrom","rejectCall","acceptWithVideo","App","callWindow","callModal","recordVideo","multiStreamRecorder","localSource","startCallHandler","startCallByInterviewer","endCallHandler","rejectCallHandler","requestUserMedia","newState","RecordRTC","mimeType","recorderType","MultiStreamRecorder","disableLogs","timeSlice","ondataavailable","bytesToSize","checkForInactiveTracks","onTimeStamp","timestamp","bitsPerSecond","previewStream","elementClass","bytes","pow","toPrecision","timeData","launchDate","getUTCDate","getMinutes","hour","getHours","Color","schedule","scheduleObj","popupOpen","onPopupOpen","showQuickInfo","eventSettings","dataSource","option","startHour","endHour","allowMultiple","textField","idField","colorField","services","Week","Agenda","onSelect","studentData","profileOwner","ShowVideo","closeShowVideoModal","showVideoModal","closeShowVideoComponent","chatLink","UserMapping","showVideoHistory","jobDetail","setJobDescriptionData","jobDescription","AddJobDescription","handleProfileRoleChange","titleNotAvailable","closeJobDescriptionModal","jobDescriptionModal","closeJobDescriptionComponent","getJobDescriptionDetails","streetAddress1","JobDescription","tagUserForJob","cursor","VideoHistory","slotVideoData","videoLinkInterviewer","videoChatLinkInterviewer","videoLinkUser","videoChatLinkUser","AddMoreStudent","existMail","studentMailList","streetAddress2","zipcode","addStudentModelFun","addStudentModel","response1","closeAddStudentModel","onBlur","Candidate","handleClickProfile","candidateAndHrDataJson","studentList","str_array","id2","studentLis","generateSASToken","removeStudent","confirmAlert","customUI","onClose","isArchived","resetStudentList","viewSampleProfile","showProfile","deleteStudent","studentId","parentId","addParentModel","setStudentData","setParentProfileData","htmlFor","accomplishment","Hruser","theRapidHireRoute","createBrowserHistory","getUserInfo","Switch","Route","exact","path","component","ForgotPassword","ChangePassword","UserDashboard","UserEditProfile","TimeSlot","TimeSlotUser","InterviewerEditProfile","InterviewerDashboard","store","applyMiddleware","promise","createStore","createStoreWithMiddleware","reducers","ReactDOM","render","BrowserRouter","TheRapidHireRoute","process","fetch","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","webpackContext","req","webpackContextResolve","__webpack_require__","o","keys","resolve"],"mappings":"gLAUMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,M,+GC/EjE,MACEC,MAAO,CACLC,SAAU,kCACVC,QAAS,sCAEXC,YAAa,CACXF,SAAU,wCAEZG,SAAU,CACRH,SAAU,6BACVI,YAAa,4BACbC,YAAa,gCACbC,mBAAoB,oCACpBC,gBACE,2GACFC,KAAM,kDAERC,UAAW,CACTT,SAAU,0BACVU,UAAW,2CAEbC,SAAU,CACRX,SAAU,yBACVU,UAAW,0CAEbE,gBAAiB,CACfZ,SAAU,oCACVU,UAAW,qDAEbG,eAAgB,CACdb,SAAU,mCACVU,UAAW,oDAEbI,WAAY,CACVd,SAAU,mCACVU,UAAW,oDAGbK,YAAa,CACXf,SAAU,kCACVU,UAAW,mDAGbM,IAAK,CAAEhB,SAAU,qBACjBiB,MAAO,CAAEjB,SAAU,uBACnBkB,KAAM,CAAElB,SAAU,sBAClBmB,OAAQ,CAAEnB,SAAU,cACpBoB,SAAU,CAAEpB,SAAU,gBACtBqB,QAAS,CAAErB,SAAU,eACrBsB,KAAM,CAAEtB,SAAU,qBAClBP,MAAO,CAAEO,SAAU,sBACnBuB,QAAS,CAAEvB,SAAU,wBACrBwB,QAAS,CAAExB,SAAU,wBACrByB,cAAe,CAAEzB,SAAU,0BAC3B0B,UAAW,CAAE1B,SAAU,sBACvB2B,QAAS,CAAE3B,SAAU,sBACrB4B,MAAO,CAAE5B,SAAU,sBACnB6B,YAAa,CAAE7B,SAAU,4BACzB8B,WAAY,CAAE9B,SAAU,4BACxB+B,WAAY,CAAE/B,SAAU,mCACxBgC,OAAQ,CAAEhC,SAAU,wBACpBiC,SAAU,CAAEjC,SAAU,sBACtBkC,OAAQ,CAAElC,SAAU,sBACpBmC,UAAW,CAAEnC,SAAU,uBACvBoC,QAAS,CAAEpC,SAAU,uBACrBqC,QAAS,CAAErC,SAAU,wBACrBsC,eAAgB,CAAEtC,SAAU,+BAC5BuC,iBAAkB,CAAEvC,SAAU,kCAC9BwC,UAAW,CAAExC,SAAU,oCACvByC,UAAW,CAAEzC,SAAU,2BACvB0C,WAAY,CAAE1C,SAAU,+BACxBO,gBACE,yIACFoC,YAAa,CAAC3C,SAAU,4BACxB4C,aAAc,CAAC5C,SAAU,6BACzB6C,SAAU,CAAC7C,SAAU,yBACrB8C,eAAgB,CAAC9C,SAAU,+BAC3B+C,KAAM,CAAC/C,SAAU,qBACjBgD,YAAa,CAAChD,SAAU,4BACxBrB,SAAU,CAACqB,SAAU,yBACrBiD,SAAU,CAACjD,SAAU,0BAhFvB,uBAiFU,CAACA,SAAU,wBAjFrB,uBAkFU,CAACA,SAAU,wBAlFrB,4BAmFe,CAACA,SAAU,6BAnF1B,wBAoFU,CAACA,SAAU,0BApFrB,4BAqFc,CAACA,SAAU,6BArFzB,mCAsFqB,CAACA,SAAU,6BAtFhC,6BAuFgB,CAACA,SAAU,oCAvF3B,8BAwFkB,CAACA,SAAU,8BAxF7B,qBAyFS,CAACA,SAAU,iCAzFpB,yBA0Fa,CAACA,SAAU,qCA1FxB,6BA2FgB,CAACA,SAAU,gCA3F3B,8BA4FkB,CAACA,SAAU,sCA5F7B,oCA6FwB,CAACA,SAAU,iCA7FnC,wCA8F4B,CAACA,SAAU,qCA9FvC,gCA+FkB,CAACA,SAAU,mCA/F7B,gCAgGkB,CAACA,SAAU,mCAhG7B,GC2DekD,EA3DD,CACZC,EAAG,gBACHC,EAAG,mCACHC,EAAG,eACHC,EAAG,wBACHC,EAAG,wBACHC,EAAG,aACHC,EAAG,cACHC,EAAG,sBACHC,EAAG,0BACHC,GAAI,eACJC,GAAI,gBACJC,GAAI,yBACJC,GAAI,kBACJC,GAAI,YACJC,GAAI,gBACJC,GAAI,aACJC,GAAI,iBACJC,GAAI,gBACJC,GAAI,cACJC,GAAI,eACJC,GAAI,eACJC,GAAI,iBACJC,GAAI,cACJC,GAAI,mBACJC,GAAI,wBACJC,GAAI,oBACJC,GAAI,gBACJC,GAAI,kCACJC,GAAI,6BACJC,GAAI,wBACJC,GAAI,sBACJC,GAAI,6BACJC,GAAI,+BACJC,GAAI,mBACJC,GAAI,wBACJC,GAAI,wBACJC,GAAI,mBACJC,GAAI,WACJC,GAAI,oBACJC,GAAI,kCACJC,GAAI,+BACJC,GAAI,aACJC,GAAI,oBACJC,GAAI,kBACJC,GAAI,gBACJC,GAAI,kBACJC,GAAI,eACJC,GAAI,iBACJC,GAAI,aACJC,GAAI,eACJC,GAAI,oBACJC,GAAI,iBACJC,GAAI,cACJC,GAAI,YACJC,GAAI,eACJC,GAAI,c,gBCKSC,EAtDG,CAChBC,UAAW,GACXC,eAAgB,mCAChBC,YACE,oEACFC,eCZa,CACbrG,UAAW,mBAIXH,gBACE,qEDOFyG,qBACAC,oBAAqB,2BAErBC,eAAgBC,IAAYD,eAC5BE,oBAAqBD,IAAYC,oBACjCC,QAAS,QACTC,aAAc,yDACdC,aAAc,UACdC,WAAY,QACZC,WAAY,SACZC,iBAAkB,eAClBC,WAAY,QACZC,aAAc,SACdC,UAAW,QACXC,kBAAmB,eACnBC,WAAY,aACZC,WAAY,KACZC,YAAa,KACbC,WAAY,SACZC,eAAgB,aAChBlG,SAAU,IACVC,OAAQkG,MAASlH,OACjBiB,UAAW,EACXC,QAAS,GACTiG,MAAM,QACNC,OAAQ,CACNC,IAAKpB,IAAYqB,WAAarB,IAAYsB,OAAS,IAAMtB,IAAYE,SAGvEqB,QACAC,qBAAsB,GACtBC,oBAAqB,OACrBC,YAAa,CACXC,UAAW,YACXC,QAAS,UACTC,SAAU,WACVC,SAAU,YAEZC,aAAc,CACZC,WAAY,aACZC,SAAU,WACVC,UAAW,YACXC,cAAe,iBAEjBC,YAAa,SACbC,cAAe,Y,kBEhDbC,EAAWC,EAAQ,KACrBC,EAAK,mBACLC,EAAMH,EAASI,cAJM,mCAIwB,IAE3CC,EAAQ,UAAMnD,EAAUW,aAAhB,YAAgCX,EAAUO,gBAKhD6C,GAJW,UAAMpD,EAAUW,aAAhB,YACfX,EAAUS,qBAGG,IAAI4C,IAAOrD,EAAUG,cAChCmD,EAAU,GAaDC,EAAkB,SAACN,EAAKO,GACnCA,EAAQC,KAAKC,UAAUF,GACvB,IAZ2BG,EAYrBC,GAZqBD,EAYOH,EAX3BJ,EAAOS,QAAQF,IAYtBG,aAAaC,QAAQd,EAAKW,IAIfI,EAAkB,SAAAf,GAC7B,GAAIA,EAAK,CACP,IAAIU,EAAOG,aAAaG,QAAQhB,GAChC,GAAIU,EAGF,OAFI3K,QAAQC,IAAI0K,GACZA,EAAOF,KAAKS,MAjBO,SAAAP,GAC3B,OAAOP,EAAOe,QAAQR,GAgBIS,CAAcT,IAKxC,OAAO,MASIU,EAAoB,WAC/BP,aAAaQ,SAIFC,EAAiB,SAACC,EAAcC,GACtCC,QAAMC,SAASrB,KAClBA,EAAUoB,QAAMvL,MAAMqL,EAAc,CAClCI,SAAUF,QAAMG,SAASC,UACzBC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,MAMPC,EAAmB,SAAAC,GACzBT,QAAMC,SAASrB,KAClBA,EAAUoB,QAAMU,QAAQD,EAAS,CAC/BP,SAAUF,QAAMG,SAASC,UACzBC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,MAkBPI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAuBC,GAA1B,EAAaX,SAAb,+CAC1B,kBAAC,IAAD,iBACMW,EADN,CAEEC,QAAS,IACTC,QAAS,SAAAC,GAAI,OAAIA,EAAKC,UAAUC,IAAI,SAAU,YAC9CC,OAAQ,SAAAH,GACNA,EAAKC,UAAUG,OAAO,SAAU,WAChCJ,EAAKC,UAAUC,IAAI,UAAW,cAG/BN,IAKQS,EAAgB,SAAAZ,GAC3B,OAAO,0BAAMa,UAAU,SAASb,IAGrBtB,EAAU,SAAAoC,GAErB,OADgBnD,EAASe,QAAQoC,EAAMhD,EAAKD,GAC3BkD,QAAQ,MAAO,YA8B3B,SAAS1F,IACd,IAAI2F,EAAY,CACdrE,OAAQ,GACRvB,eAAgB,GAChBE,oBAAqB,GACrBoB,WAAY,GACZnB,QAAS,IAEX,OAAQ3I,OAAOC,SAASC,UAEtB,IAAK,iBACHkO,EAAUrE,OAAS,iBACnBqE,EAAU5F,eAAiB,iCAC3B4F,EAAU1F,oBAAsB,4CAChC0F,EAAUtE,WAAa,UACvBsE,EAAUzF,QAAU,OACpB,MAEF,QACEyF,EAAUrE,OAAS,YACnBqE,EAAU5F,eAAiB,iCAC3B4F,EAAU1F,oBAAsB,4CAChC0F,EAAUtE,WAAa,UACvBsE,EAAUzF,QAAU,OAGxB,OAAOyF,EAIF,IAQMC,EAAgB,SAACC,EAAMC,EAAQC,EAAMC,EAAUC,GAC1D,GAAa,KAATF,EAAa,CACf,IAAIG,EAAe3O,OAAO2O,aACtBC,EAAsB,IAATN,EAAarG,EAAUY,aAAeZ,EAAUa,WAC7D+F,EAAWC,EAAkBN,EAAKO,MAClCC,EAAU,aAAST,EAAT,YAAmBK,EAAnB,YAAiCC,GAE3BF,EAAaM,KAAKC,yBACpCjH,EAAUW,aACV6F,GAGUU,+BACVlH,EAAUO,eACVwG,EACAR,GACA,SAACpN,EAAOgO,GACFV,GAAUA,EAAStN,EAAOgO,EAAQJ,EAAYH,GAC9CzN,GACFH,QAAQC,IAAI,SAAUE,QAYnBiO,EAAiB,SAACnB,EAAMoB,GACnC,SAAIpB,IAAQoB,IACHpB,EAAKqB,MAAM,EAAGD,IAAUpB,EAAKsB,OAASF,EAAQ,MAAQ,KAMpDG,EAAkB,SAAAjC,GAAU,IAC/BkC,EAAmBlC,EAAnBkC,MAAOC,EAAYnC,EAAZmC,QACf,OACE,0BACE1B,UAAS,+CAA0CyB,GACnDC,QAASA,KAKFC,EAAkB,SAAApC,GAAU,IAC/BkC,EAAmBlC,EAAnBkC,MAAOC,EAAYnC,EAAZmC,QACf,OACE,0BACE1B,UAAS,8CAAyCyB,GAClDC,QAASA,KAgBFb,EAAoB,SAAAD,GAC/B,IAAIgB,EAAYhB,EAASiB,MAAM,KAAKC,MAGpC,OADErG,MAASsG,UAdgB,WAK3B,IAJA,IAAI9B,EAAO,GACP+B,EACF,iEAEOC,EAAI,EAAGA,EAAI,EAAGA,IACrBhC,GAAQ+B,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAAST,SAE9D,OAAOtB,EAMgBqC,GAAyB,IAAMV,GAW3CW,EAAgB,SAACC,EAAWC,GACvC,GAAIA,IAkCc,aAAdD,GACc,WAAdA,GACc,UAAdA,GAGA,MADa,UAAMrF,EAAN,YAAkBsF,IAOxBC,EAAe,SAAAC,GAE1B,IAIIC,EAAK,IAHP7Q,OAAO8Q,mBACP9Q,OAAO+Q,sBACP/Q,OAAOgR,yBACqB,CAC1BC,WAAY,KAEdC,EAAO,aACPC,EAAW,GACXC,EAAU,kEAGZ,SAASC,EAAUC,GACZH,EAASG,IAAKV,EAAQU,GAC3BH,EAASG,IAAM,EAIjBT,EAAGU,kBAAkB,IAGrBV,EAAGW,cACA/Q,MAAK,SAASgR,GACbA,EAAIA,IAAI3B,MAAM,MAAM4B,SAAQ,SAASC,GAC/BA,EAAKC,QAAQ,aAAe,GAChCD,EAAKxR,MAAMiR,GAASM,QAAQL,MAG9BR,EAAGgB,oBAAoBJ,EAAKP,EAAMA,MAEnC/P,OAAM,SAAS2Q,OAKlBjB,EAAGkB,eAAiB,SAASC,GAExBA,GACAA,EAAIC,WACJD,EAAIC,UAAUA,WACdD,EAAIC,UAAUA,UAAU9R,MAAMiR,IAGjCY,EAAIC,UAAUA,UAAU9R,MAAMiR,GAASM,QAAQL,KCtV7Ca,EAAgB,CACpBC,SAAUlG,EAAgB,aAAe,GACzCmG,WAAYnG,EAAgB,cAC5BoG,kBAAmBpG,EAAgB,kBChB/BiG,EAAgB,CACpBI,IAAK,GACLC,eAAgB,GAChBC,gBAAiB,GACjBC,iBAAkB,GAClBC,mBAAoB,GACpBC,gBAAiB,ICVbC,EAAaC,YAAgB,CACjC9R,MAAO,eAACA,EAAD,uDAAS,GAAT,OAAgBA,GACvB+R,KFqBa,WAAoC,IAAnC/R,EAAkC,uDAA1BmR,EAAea,EAAW,uCAChD,OAAQA,EAAOzE,MACb,IG9BsB,aH+BpB,GAAIyE,EAAOC,SAAWD,EAAOC,QAAQpH,MAAQmH,EAAOC,QAAQpH,KAAKwD,OAAQ,CACvE,IAAI6D,EAAWF,EAAOC,QAAQpH,KAAKwD,QAAU,GACrB,IAApB6D,EAASC,QACXnS,EAAMoR,SAAWc,EACjBlS,EAAMqR,WAAa,KACnB5G,EAAgB,aAAc,OAaH,IAApByH,EAASC,QAChBnS,EAAMqR,WAAaa,EACnBzH,EAAgB,aAAcyH,GAE9BlS,EAAMoR,SAAWc,GAEjBlS,EAAMoR,SAAWc,EAEnBzH,EAAgB,WAAYyH,GAE9B,OAAOE,OAAOC,OAAO,GAAIrS,GAE3B,IGzDqC,4BH0DnC,GAAIgS,EAAOC,SAAWD,EAAOC,QAAQpH,MAAQmH,EAAOC,QAAQpH,KAAKwD,OAAQ,CACvE,IAAMiE,EAASN,EAAOC,QAAQpH,KAAKwD,OAC/B6D,EAAWhH,EAAgB,YAE/B,IAAK,IAAMf,KAAOmI,EAChB,GAAIA,EAAOC,eAAepI,GAAM,CAC9B,IAAMqI,EAAUF,EAAOnI,GACvB+H,EAAS/H,GAAOqI,EAChBxS,EAAMmK,GAAOqI,EAGjBxS,EAAMoR,SAAWc,EACjBzH,EAAgB,WAAYyH,GAE9B,OAAOE,OAAOC,OAAO,GAAIrS,GAE3B,IG5EuB,cHiFrB,OAJAA,EAAMoR,SAAW,GACjBpR,EAAMqR,WAAa,KACnBrR,EAAMyS,YAAc,KACpBlH,IACO6G,OAAOC,OAAO,GAAIrS,GAE3B,IG7E+B,sBH8E7B,GACEgS,EAAOC,SACPD,EAAOC,QAAQX,kBACf,CACA,IAAIA,EAAoBU,EAAOC,QAAQX,kBACvCtR,EAAMsR,kBAAoBA,EAC1B7G,EAAgB,gBAAiB6G,GAEnC,OAAOc,OAAOC,OAAO,GAAIrS,GAE3B,IGtF4B,mBHuF1B,GAAIgS,EAAOC,QAAS,CAClB,IAAMS,EAAkBV,EAAOC,QAAQpH,KAAKwD,OACxC6D,EAAWhH,EAAgB,cAC3BA,EAAgB,cAChBA,EAAgB,YACpBgH,EAASS,SAAWD,EACpB1S,EAAMoR,SAAWc,EACjBlS,EAAMqR,WAAaa,EACnBzH,EAAgB,aAAcyH,GAC9BzH,EAAgB,WAAYyH,GAE9B,OAAOE,OAAOC,OAAO,GAAIrS,GAE3B,IGxF+B,sBHyF7B,GAAIgS,EAAOC,SAAWD,EAAOC,QAAQpH,KAAK2C,OAAQ,CACjCxN,EAAMoR,SACrBpR,EAAMoR,SAASuB,SAASX,EAAOC,QAAQpH,KAAK+H,OAAO/G,SACjDmG,EAAOC,QAAQpH,KAAKgB,SACtBpB,EACEzK,EAAMoR,SAASuB,SAASX,EAAOa,YAAYhI,KAAK+H,OAAO/G,UACvD,GAGJ,OAAOuG,OAAOC,OAAO,GAAIrS,GAE3B,IGlG4B,mBHmG1B,GACEgS,EAAOC,SACPD,EAAOC,QAAQpH,MACfmH,EAAOC,QAAQpH,KAAKwD,OAAO,GAC3B,CACA,IAAMyE,EAAqBd,EAAOC,QAAQpH,KAAKwD,OAAO,GACtDrO,EAAMyS,YAAcK,EAEtB,OAAOV,OAAOC,OAAO,GAAIrS,GAE3B,IG3G+B,sBH4G7B,GAAIgS,EAAQ,CACV,IAAIS,EAAcT,EAAOC,QACzBQ,EAAW,gBACuB,MAAhCA,EAAYM,gBAA0B,EAAIN,EAAYM,gBACxDN,EAAW,eACsB,MAA/BA,EAAYO,eAAyB,EAAIP,EAAYO,eACvDP,EAAW,kBACyB,MAAlCA,EAAYQ,kBACR,EACAR,EAAYQ,kBAClBjT,EAAMyS,YAAcA,EAEtB,OAAOL,OAAOC,OAAO,GAAIrS,GAE3B,IGxHkC,yBHyHhC,IAAIkS,EAAWhH,EAAgB,cAC3BA,EAAgB,cAChBA,EAAgB,YASpB,OARAhL,QAAQC,IAAI+R,EAAQ,mBACpBA,EAAQ,mBAAwB,EAChClS,EAAMoR,SAAWc,EACbhH,EAAgB,gBAClBlL,EAAMqR,WAAaa,EACnBzH,EAAgB,aAAcyH,IAEhCzH,EAAgB,WAAYyH,GACrBE,OAAOC,OAAO,GAAIrS,GAE3B,IGpI+B,sBHqI7B,GAAIgS,EAAOC,SAAWD,EAAOC,QAAQzE,OAAQ,CAC3C,IAAI0E,EAAWhH,EAAgB,cAC3BA,EAAgB,gBAClBgH,EAAQ,SAAagB,OACnBhB,EAAQ,SAAaiB,WACnB,SAAAC,GAAI,OAAIA,EAAK5F,SAAW6F,SAASrB,EAAOC,QAAQzE,OAAQ,OAE1D,GAEFxN,EAAMqR,WAAaa,EACnBlS,EAAMoR,SAAWc,EACjBzH,EAAgB,aAAcyH,GAC9BzH,EAAgB,WAAYyH,IAGhC,OAAOE,OAAOC,OAAO,GAAIrS,GAE3B,IGpJqC,4BHqJnC,GAAIgS,EAAOC,QAAS,CAClB,IAAMK,EAASN,EAAOC,QAClBC,EAAWhH,EAAgB,YAE/B,IAAK,IAAMf,KAAOmI,EAChB,GAAIA,EAAOC,eAAepI,GAAM,CAC9B,IAAMqI,EAAUF,EAAOnI,GACvB+H,EAAS/H,GAAOqI,EAChBxS,EAAMmK,GAAOqI,EAGjBxS,EAAMoR,SAAWc,EACjBzH,EAAgB,WAAYyH,GAE9B,OAAOE,OAAOC,OAAO,GAAIrS,GAE3B,IGnKuC,8BHoKrC,GAAIgS,EAAOC,QAAS,CAClB,IAAMK,EAASN,EAAOC,QACtB/R,QAAQC,IAAImS,GACZ,IAAIgB,EAAapI,EAAgB,cAEjC,IAAK,IAAMf,KAAOmI,EAChB,GAAIA,EAAOC,eAAepI,GAAM,CAC9B,IAAMqI,EAAUF,EAAOnI,GACvBmJ,EAAWnJ,GAAOqI,EAClBxS,EAAMmK,GAAOqI,EAGjBxS,EAAMqR,WAAaiC,EACnB7I,EAAgB,aAAc6I,GAEhC,OAAOlB,OAAOC,OAAO,GAAIrS,GAE3B,IGjLkC,yBHkLhC,GAAIgS,EAAOC,UACT/R,QAAQC,IAAI6R,EAAOC,SACnBjS,EAAMuT,cAAgBvB,EAAOC,QACzBjS,EAAMwT,eAAe,CACvB,IAAIA,EAAgBxT,EAAMwT,cACtBZ,EAAQ5S,EAAMwT,cAAcL,WAC9B,SAAAC,GAAI,OAAIA,EAAKK,SAAWzB,EAAOC,QAAQwB,YAE1B,IAAXb,IACFY,EAAcZ,GAASZ,EAAOC,QAC9BjS,EAAMwT,cAAgBA,GAI5B,OAAOpB,OAAOC,OAAO,GAAIrS,GAE3B,IGhM2B,kBHoMzB,OAHIgS,EAAOC,SAAWD,EAAOC,QAAQpH,KAAKwD,SACxCrO,EAAMwT,cAAgBxB,EAAOC,QAAQpH,KAAKwD,QAErC+D,OAAOC,OAAO,GAAIrS,GAE3B,QACE,OAAOA,IEvOX0T,QDUa,WAAoC,IAAnC1T,EAAkC,uDAA1BmR,EAAea,EAAW,uCAChD,OAAQA,EAAOzE,MACb,IERiC,wBFS/B,GAAIyE,EAAOC,SAAWD,EAAOC,QAAQpH,KAAKwD,OAAQ,CAChD,IAAMsF,EAAgB3B,EAAOC,QAAQpH,KAAKwD,OAC1CrO,EAAMuR,IAAMoC,EAEd,OAAOvB,OAAOC,OAAO,GAAIrS,GAE3B,IEb8B,qBFiB5B,OAHIgS,EAAOC,SAAWD,EAAOC,QAAQpH,KAAKwD,SACxCrO,EAAMwR,eAAiBQ,EAAOC,QAAQpH,KAAKwD,QAEtC+D,OAAOC,OAAO,GAAIrS,GAE3B,IEjBmC,0BFqBjC,OAHIgS,EAAOC,SAAWD,EAAOC,QAAQpH,KAAKwD,SACxCrO,EAAMyR,gBAAkBO,EAAOC,QAAQpH,KAAKwD,QAEvC+D,OAAOC,OAAO,GAAIrS,GAE3B,IEHgC,uBFO9B,OAHIgS,EAAOC,SAAWD,EAAOC,QAAQpH,KAAKwD,SACxCrO,EAAM4R,gBAAkBI,EAAOC,QAAQpH,KAAKwD,QAEvC+D,OAAOC,OAAO,GAAIrS,GAE3B,IE3BgC,uBF+B9B,OAHIgS,EAAOC,SAAWD,EAAOC,QAAQpH,KAAKwD,SACxCrO,EAAM0R,iBAAmBM,EAAOC,QAAQpH,KAAKwD,QAExC+D,OAAOC,OAAO,GAAIrS,GAE3B,IE/BsC,6BFmCpC,OAHIgS,EAAOC,SAAWD,EAAOC,QAAQpH,KAAKwD,SACxCrO,EAAM2R,mBAAqBK,EAAOC,QAAQpH,KAAKwD,QAE1C+D,OAAOC,OAAO,GAAIrS,GAE3B,QACE,OAAOA,MCxCE4T,EAPK,SAAC5T,EAAOgS,GAI1B,MAHoB,gBAAhBA,EAAOzE,OACTvN,OAAQ6T,GAEHhC,EAAW7R,EAAOgS,I,4LEfZ,IACb8B,MAAO,CACLC,IAAK,aACLC,OAAQ,OACRnJ,KAAM,CACJvK,MAAO,GACPI,SAAU,GACVuT,SAAU,IAEZC,mBAAmB,EACnBC,kBAAkB,GAGpBC,iBAAkB,CAChBL,IAAK,4BACLC,OAAQ,MACRnJ,KAAM,CACJ2C,OAAQ,GACR3B,SAAU,IAEZqI,mBAAmB,EACnBC,kBAAkB,GAGpBE,WAAY,CACVN,IAAK,aACLC,OAAQ,OACRnJ,KAAM,CACJ7J,UAAW,GACXE,SAAU,GACVZ,MAAO,GACP6R,OAAQ,GACR3E,OAAQ,GACR8G,UAAU,IAEZJ,mBAAmB,EACnBC,kBAAkB,GAGpBI,SAAU,CACRR,IAAK,eACLC,OAAQ,OACRnJ,KAAM,CACJ7J,UAAW,GACXE,SAAU,GACVZ,MAAO,GACP6R,OAAQ,GACR3E,OAAQ,GACRgH,UAAU,GACVC,YAAY,IAEdP,mBAAmB,EACnBC,kBAAkB,GAGpBO,aAAc,CACZX,IAAK,cACLC,OAAQ,OACRnJ,KAAM,CACJ7J,UAAW,GACXE,SAAU,GACVZ,MAAO,GACP6R,OAAQ,GACRQ,SAAU,GACVgC,OAAQ,GACRnH,OAAQ,GACR9M,SAAU,GACVkU,IAAK,IAEPV,mBAAmB,EACnBC,kBAAkB,GAGpBU,YAAa,CACXd,IAAK,mBACLC,OAAQ,MACRnJ,KAAM,CACJiK,KAAM,IAERZ,mBAAmB,EACnBC,kBAAkB,GAGpBY,SAAU,CACRhB,IAAK,gBACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpBa,eAAgB,CACdjB,IAAK,oCACLC,OAAQ,OACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpBc,cAAe,CACblB,IAAK,sBACLC,OAAQ,OACRnJ,KAAM,CACJiK,KAAM,GACNnU,YAAa,IAEfuT,mBAAmB,EACnBC,kBAAkB,GAGpBe,OAAQ,CACNnB,IAAK,aACLC,OAAQ,OACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpBgB,eAAgB,CACdpB,IAAK,sBACLC,OAAQ,OACRnJ,KAAM,CACJjK,YAAa,GACbD,YAAa,IAEfuT,mBAAmB,EACnBC,kBAAkB,GAIpBiB,eAAgB,CACdrB,IAAK,0BACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpBkB,UAAW,CACTtB,IAAK,4BACLC,OAAQ,MACRnJ,KAAM,CACJyK,cAAc,GACd9H,OAAO,GACP+H,UAAU,GACVC,WAAW,IAEbtB,mBAAmB,EACnBC,kBAAkB,GAGpBsB,SAAU,CACR1B,IAAK,4BACLC,OAAQ,MACRnJ,KAAM,CACJ2C,OAAO,GACP8H,cAAc,GACdI,UAAU,IAEZxB,mBAAmB,EACnBC,kBAAkB,GAIpBwB,sBAAuB,CACrB5B,IAAK,gCACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpByB,cAAe,CACb7B,IAAK,iBACLC,OAAQ,OACRnJ,KAAM,CACJ2C,OAAO,GACPtK,YAAY,GACZC,aAAa,GACb0S,eAAe,GACfC,cAAc,GACdC,oBAAoB,GACpBC,wBAAwB,GACxBC,SAAS,GACTC,aAAa,GACbC,cAAc,GACdC,oBAAoB,GACpBC,wBAAwB,GACxBC,mBAAmB,GACnBrU,UAAU,GACVC,QAAQ,GACRqU,gBAAgB,GAChBC,aAAa,IAEftC,mBAAmB,EACnBC,kBAAkB,GAGpBsC,eAAgB,CACd1C,IAAK,gBACLC,OAAQ,MACRnJ,KAAM,CACJ2C,OAAO,GACPkJ,aAAa,GACbxT,YAAY,GACZC,aAAa,GACb0S,eAAe,GACfC,cAAc,GACdC,oBAAoB,GACpBC,wBAAwB,GACxBC,SAAS,GACTC,aAAa,GACbC,cAAc,GACdC,oBAAoB,GACpBC,wBAAwB,GACxBC,mBAAmB,GACnBrU,UAAU,GACVC,QAAQ,GACRqU,gBAAgB,GAChBC,aAAa,IAEftC,mBAAmB,EACnBC,kBAAkB,GAGpBwC,iBAAkB,CAChB5C,IAAK,2CACLC,OAAQ,SACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpByC,kBAAmB,CACjB7C,IAAK,mDACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAIpB0C,iBAAkB,CAChB9C,IAAK,aACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAIpB2C,mBAAoB,CAClB/C,IAAK,kBACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAIpB4C,eAAgB,CACdhD,IAAK,eACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAIpB6C,mBAAoB,CAClBjD,IAAK,6BACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpB8C,8BAA+B,CAC7BlD,IAAK,+DACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpB+C,WAAY,CACVnD,IAAK,cACLC,OAAQ,OACRnJ,KAAM,CACJ2C,OAAO,GACP2J,YAAc,GACdC,WAAa,GACbC,eAAiB,GACjBC,gBAAkB,GAClBlV,YAAc,GACdH,UAAU,GACVC,QAAQ,IAEVgS,mBAAmB,EACnBC,kBAAkB,GAGpBoD,YAAa,CACXxD,IAAK,cACLC,OAAQ,MACRnJ,KAAM,CACJ2C,OAAO,GACP2J,YAAc,GACdC,WAAa,GACbC,eAAiB,GACjBC,gBAAkB,GAClBlV,YAAc,GACdH,UAAU,GACVC,QAAQ,GACRsV,UAAU,IAEZtD,mBAAmB,EACnBC,kBAAkB,GAIpBsD,0BAA2B,CACzB1D,IAAK,mCACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAIpBuD,iBAAkB,CAChB3D,IAAK,oBACLC,OAAQ,OACRnJ,KAAM,CACF2C,OAAO,GACPpK,SAAW,GACXC,eAAiB,GACjBC,KAAO,GACPqU,QAAU,GACVC,eAAiB,GACjBC,aAAe,GACfC,eAAiB,GACjBC,qBAAuB,GACvBC,yBAA2B,GAC3BC,gBAAkB,GAClBC,gBAAkB,IAEtBhE,mBAAmB,EACnBC,kBAAkB,GAGpBgE,uBAAwB,CACtBpE,IAAK,oBACLC,OAAQ,MACRnJ,KAAM,CACJ2C,OAAO,GACLpK,SAAW,GACXC,eAAiB,GACjBC,KAAO,GACPqU,QAAU,GACVS,UAAU,GACVR,eAAiB,GACjBC,aAAe,GACfC,eAAiB,GACjBC,qBAAuB,GACvBC,yBAA2B,GAC3BC,gBAAkB,GAClBC,gBAAkB,IAEtBhE,mBAAmB,EACnBC,kBAAkB,GAGpBkE,kBAAmB,CACjBtE,IAAK,qBACLC,OAAQ,OACRnJ,KAAM,CACF2C,OAAO,GACPrL,MAAQ,GACRmW,QAAU,GACVlW,YAAc,GACdmW,aAAe,EACfC,cAAgB,EAChBC,cAAgB,EAChBvZ,SAAW,GACXwZ,SAAU,GACVnW,OAAQ,GACRoW,UAAU,IAEdzE,mBAAmB,EACnBC,kBAAkB,GAGpByE,yBAA0B,CACxB7E,IAAK,oCACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpB0E,uBAAwB,CACtB9E,IAAK,qBACLC,OAAQ,MACRnJ,KAAM,CACJiO,YAAY,GACZtE,UAAU,GACVrS,MAAQ,GACRC,YAAc,GACdmW,aAAe,GACfC,cAAgB,GAChBC,cAAgB,GAChBvZ,SAAW,GACXqD,OAAQ,GACRmW,SAAU,GACVC,UAAU,IAEZzE,mBAAmB,EACnBC,kBAAkB,GAGpB4E,cAAe,CACbhF,IAAK,kBACLC,OAAQ,OACRnJ,KAAM,CACL2C,OAAO,GACP2E,OAAO,GACP5P,OAAO,GACPgB,YAAY,GACZyV,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,EAChB1V,SAAS,GAEV0Q,mBAAmB,EACnBC,kBAAkB,GAGpBgF,kBAAmB,CACjBpF,IAAK,iCACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpBiF,eAAgB,CACdrF,IAAK,kBACLC,OAAQ,MACRnJ,KAAM,CACJ2C,OAAO,GACP8H,cAAc,GACd/S,OAAO,IAET2R,mBAAmB,EACnBC,kBAAkB,GAGpBkF,gBAAiB,CACftF,IAAK,kBACLC,OAAQ,MACRnJ,KAAM,CACJ2C,OAAO,GACP2E,OAAO,GACPmD,cAAc,GACd/R,YAAY,GACZhB,OAAO,GACPyW,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,EAChB1V,SAAS,GAEX0Q,mBAAmB,EACnBC,kBAAkB,GAGpBmF,yBAA0B,CACxBvF,IAAK,kDACLC,OAAQ,OACRnJ,KAAM,CACJ2C,OAAO,GACP+L,WAAW,GACXC,QAAQ,IAEVtF,mBAAmB,EACnBC,kBAAkB,GAGpBsF,8BAA+B,CAC7B1F,IAAK,+DACLC,OAAQ,MACRnJ,KAAM,GACNqJ,mBAAmB,EACnBC,kBAAkB,GAGpBuF,2BAA4B,CAC1B3F,IAAK,oDACLC,OAAQ,MACRnJ,KAAM,CACJ2C,OAAO,GACPjL,OAAO,GACPiX,QAAQ,IAEVtF,mBAAmB,EACnBC,kBAAkB,GAGpBwF,WAAY,CACV5F,IAAK,eACLC,OAAQ,OACRnJ,KAAM,CACJ+O,OAAO,GACPC,mBAAmB,GACnBC,eAAgB,GAChBC,aAAa,GACbC,cAAe,GACfxM,OAAO,IAET0G,mBAAmB,EACnBC,kBAAkB,GAGpB8F,WAAY,CACVlG,IAAK,eACLC,OAAQ,MACRnJ,KAAM,CACJ+O,OAAO,GACPC,mBAAmB,GACnBC,eAAgB,GAChBC,aAAa,GACbC,cAAe,GACfxM,OAAO,IAET0G,mBAAmB,EACnBC,kBAAkB,GAGpB+F,eAAiB,CACfnG,IAAK,qBACLC,OAAQ,OACRnJ,KAAM,CACJ2C,OAAO,GACPqM,mBAAmB,IAErB3F,mBAAmB,EACnBC,kBAAkB,GAGpBgG,4BAA8B,CAC5BpG,IAAK,oCACLC,OAAQ,MACRnJ,KAAM,GAENqJ,mBAAmB,EACnBC,kBAAkB,GAGpBiG,yBAA2B,CACzBrG,IAAK,4CACLC,OAAQ,MACRnJ,KAAM,GAENqJ,mBAAmB,EACnBC,kBAAkB,GAGpBkG,kBAAoB,CAClBtG,IAAK,8BACLC,OAAQ,MACRnJ,KAAM,GAENqJ,mBAAmB,EACnBC,kBAAkB,GAGpBmG,aAAc,CACVvG,IAAK,mBACLC,OAAQ,MACRnJ,KAAM,CACJ+O,OAAO,GACPzH,OAAO,GACPoI,cAAc,GACd/M,OAAO,IAET0G,mBAAmB,EACnBC,kBAAkB,GAGtBqG,iBAAmB,CACjBzG,IAAK,mCACLC,OAAQ,MACRnJ,KAAM,GAENqJ,mBAAmB,EACnBC,kBAAkB,GAGpBsG,UAAY,CACV1G,IAAK,4BACLC,OAAQ,MACRnJ,KAAM,GAENqJ,mBAAmB,EACnBC,kBAAkB,GAGpBuG,aAAc,CACZ3G,IAAK,aACLC,OAAQ,OACRnJ,KAAM,CACJ8P,SAAS,GACTC,MAAM,GACNC,YAAa,GACbC,KAAK,GACLC,OAAO,GACPzG,UAAW,IAEbJ,mBAAmB,EACnBC,kBAAkB,GAIpB6G,mBAAoB,CAClBjH,IAAK,WACLC,OAAQ,MACRnJ,KAAM,CACJoQ,eAAgB,GAChBzN,OAAQ,IAEV0G,mBAAmB,EACnBC,kBAAkB,GAIpB+G,aAAc,CACZnH,IAAK,aACLC,OAAQ,MACRnJ,KAAM,CACJ8P,SAAS,GACTC,MAAM,GACNC,YAAa,GACbC,KAAK,GACLC,OAAO,GACPzG,UAAW,IAEbJ,mBAAmB,EACnBC,kBAAkB,GAIpBgH,sBAAwB,CACtBpH,IAAK,0BACLC,OAAQ,MACRnJ,KAAM,GAENqJ,mBAAmB,EACnBC,kBAAkB,GAGpBiH,iBAAmB,CACjBrH,IAAK,gCACLC,OAAQ,MACRnJ,KAAM,GAENqJ,mBAAmB,EACnBC,kBAAkB,IC/oBlBkH,I,OAAiB,GAErBC,KAAMC,SAASC,QACb9T,IAAYqB,WAAarB,IAAYsB,OAAS,IAAMtB,IAAYE,QAElE0T,KAAMG,aAAa7Y,QAAQ8Y,KACzB,SAASC,GACP,IAAIzJ,EAAWhH,EAAgB,YAC/B,GAAIgH,GACEA,EAAS0J,MAAO,CAClB,IAAIC,EAAe3J,EAAS0J,MAC5BD,EAAOG,QAAQC,cAAf,gBAAwCF,GAG5C,OAAOF,KAET,SAAStb,GACP,OAAO2b,QAAQC,OAAO5b,MAI1B,IAmBM6b,GAAsB,SAAA7b,GAC1B,GAAIA,GAA0B,UAAjBA,EAAM0a,OAAoB,CACrC,IAAM1O,EAAUhM,EAAMgM,QACtBZ,EAAeY,KAsDJ8P,GAlDgB,SAACC,EAAYvR,GAC1C,IAAIwR,EAAaC,GAAQF,GACzB,IAAKC,EAIH,MAHAnc,QAAQC,IACN,wEAEI,IAAIoc,MACR,wEAIJ,IAAIC,EAAgBpK,OAAOC,OAAO,GAAIgK,GAItC,OAHAG,EAAc3R,KAtCU,SAAC4R,EAAQC,GACjC,IAAK,IAAIvS,KAAOsS,EACVC,EAASvS,KAA0B,IAAlBuS,EAASvS,GAC5BsS,EAAOtS,GAAOuS,EAASvS,GAEI,kBAAhBsS,EAAOtS,KAAmBsS,EAAOtS,GAAO,IAGvD,OAAOsS,EA8BcE,CAAkBH,EAAc3R,KAAMA,GAC3D2R,EAAczI,IA5BU,SAAC6I,EAAOF,GAChC,IAAI3I,EAAM6I,EACV,IAAK,IAAIzS,KAAOuS,EACd3I,EAAMA,EAAI3G,QAAQ,IAAMjD,EAAKuS,EAASvS,IAExC,OAAO4J,EAuBa8I,CAAkBL,EAAczI,IAAKlJ,GAElDyQ,KAAMkB,GACV9c,MAAK,SAAS2O,GAEb,GADAgN,GAAiB,EACbhN,EAAOxD,MAA+B,YAAvBwD,EAAOxD,KAAKkQ,QAC7B,GAAI1M,EAAOxD,KAAKwB,QAAS,CACvB,IAAMA,EAAUgC,EAAOxD,KAAKwB,SACY,IAApCmQ,EAActI,mBAChB9H,EAAiBC,SAGrB6P,GAAoB7N,EAAOxD,MAE7B,OAAOwD,KAERjO,OAAM,SAASC,GAiBd,OAhBAH,QAAQC,IAAI,QAASE,GACjBA,GAASA,EAAMyc,WACsB,IAAnCN,EAAcrI,kBAChB+H,GAAoB7b,EAAMyc,UAI5Bzc,EAAMsb,OAAOoB,iBAAmB,GAChC1c,EAAM2c,WAAWnM,QAAQ,kBAAoB,KAE7CwK,IACsB,IACpBrQ,aAAaQ,QACbvM,OAAOge,KAAKhe,OAAOC,SAASge,OAAQ,UAGjC7c,EAAMyc,aCtFNK,GAAkB,SAAAtS,GAE7B,MAAO,CACL0C,KHrBsB,aGsBtB0E,QAHckK,GAAuB,QAAStR,KAOrCuS,GAAmB,WAE9B,MAAO,CACL7P,KH3BuB,cG4BvB0E,QAHckK,GAAuB,YAO5BkB,GAA+B,SAAA7P,GAE1C,MAAO,CACLD,KHjCqC,4BGkCrC0E,QAHckK,GAAuB,yBAA0B,CAAE3O,aAOxD8P,GAAyB,SAAAzS,GACpC,MAAO,CACL0C,KHpC+B,sBGqC/B0E,QAAS,CAAEX,kBAAmBzG,EAAKyG,qBAI1BiM,GAAuB,SAAA/P,GAElC,MAAO,CACLD,KH1C4B,mBG2C5B0E,QAHckK,GAAuB,6BAA8B,CAAE3O,aAO5DgQ,GAA8B,SAAA3S,GAEzC,MAAO,CACL0C,KHtC+B,sBGuC/B0E,QAHcpH,IAOL4S,GAAuB,SAAAjQ,GAElC,MAAO,CACLD,KH5C4B,mBG6C5B0E,QAHckK,GAAuB,iBAAkB,CAAE3O,aAOhDkQ,GAA0B,SAAA7S,GACrBsR,GAAuB,oBAAqBtR,GAC5D,MAAO,CACL0C,KHlD+B,sBGmD/B0E,QAASpH,IAIA8S,GAA6B,WACxC,MAAO,CACLpQ,KHvDkC,2BG2DzBqQ,GAAsB,SAAA/S,GACjC,MAAO,CACL0C,KH3D+B,sBG4D/B0E,QAASpH,IAIAgT,GAAuB,SAAAhT,GAElC,MAAO,CACL0C,KHjEqC,4BGkErC0E,QAHcpH,IAwBLiT,GAAyB,SAAAjT,GAEpC,MAAO,CACL0C,KHxFuC,8BGyFvC0E,QAHcpH,ICrGLkT,GAAyB,WAEpC,MAAO,CACL9L,QAFckK,GAAuB,oBAGrC5O,KJT8B,uBIarByQ,GAA8B,SAAAxQ,GAEzC,MAAO,CACLyE,QAFckK,GAAuB,wBAAyB,CAAE3O,WAGhED,KJfmC,4BImB1B0Q,GAA4B,SAAAzQ,GAEvC,MAAO,CACLyE,QAFckK,GAAuB,yBAA0B,CAAE3O,WAGjED,KJHgC,yBIOvB2Q,GAAyB,WAEpC,MAAO,CACLjM,QAFckK,GAAuB,oBAGrC5O,KJ7BgC,yBIiCvB4Q,GAAiC,SAAA3Q,GAE5C,MAAO,CACLyE,QAFckK,GAAuB,2BAA4B,CAAE3O,WAGnED,KJnCsC,+B,WKctChG,IC/BkB6W,YD+BGlX,EAAUK,oBAC/BD,GAAiBJ,EAAUI,eAE/B,SAAS+W,GAAgBrQ,EAAM+F,GAC7B/F,EAAOA,EAAKZ,QAAQ,OAAQ,OAAOA,QAAQ,OAAQ,OACnD,IACIkR,EADQ,IAAIC,OAAO,SAAWvQ,EAAO,aACrBwQ,KAAKzK,GAEzB,OAAmB,OAAZuK,EAAmB,GAAKG,mBAAmBH,EAAQ,I,IAGtDI,G,YACJ,WAAYjS,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,EAAOkS,KAmDfC,iBAAmB,WACjB,OAAO,EAAK5e,OArDc,EAwD5B6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MA1DH,EA8D5BG,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SA/DxB,EAkE5B0U,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GACtBA,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAKG,oBAvEiB,EA4E5BC,WAAa,SAAA9T,GACO,UAAdA,EAAMxB,MACRwB,EAAM+T,iBACN,EAAKN,iBA7EP,EAAKpf,MAAQ,CACXM,MAAO,GACPI,SAAU,GACV6e,WAAW,GAGb,EAAKC,aAAe,EAAKA,aAAaG,KAAlB,iBACpB,EAAKf,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAElB,EAAKC,eAAiBC,KAASC,aAC7B,CACExf,MAAO,iBACPI,SAAU,CAAC,WAAY,SAAW4G,GAAexG,kBAEnD,CACE,iBAAkByG,GAAmBjH,MAAMC,SAC3C,cAAegH,GAAmBjH,MAAME,QACxC,oBAAqB+G,GAAmB7G,SAASH,SACjD,iBAAkBgH,GAAmB7G,SAASI,kBArBxB,E,mFA4B1B,IAAIif,EAAQC,QACuBC,SAASC,gBACpBjhB,OAAOkhB,WAQ7BJ,EAAMb,SAAS,CACbjL,SAAU,YAPZrE,GAAa,SAASW,GACpBwP,EAAMb,SAAS,CACbjL,SAAU1D,S,2CAWhB0P,SAASG,KAAKvT,UAAUG,OAAO,eAC/BiT,SAASG,KAAKvT,UAAUG,OAAO,QAC/BiT,SAASG,KAAKvT,UAAUG,OAAO,iB,qCAqC/B,IAAIqS,EAAOW,KACP1f,EAAQ,KACRI,EAAW,KACXqT,EAAMiM,KAAKhgB,MAAMqgB,UAAYL,KAAKvT,MAAMrN,MAAM2U,IAGlD,GACEiM,KAAKvT,MAAMrN,MAAM2U,IAAIlD,QAAQ,gBAAkB,GAC/CmP,KAAKvT,MAAMrN,MAAMkhB,QACjBN,KAAKvT,MAAMrN,MAAMkhB,OAAOC,MACxBP,KAAKvT,MAAMrN,MAAMkhB,OAAOE,KAExBlgB,EAAQ0f,KAAKvT,MAAMrN,MAAMkhB,OAAOC,KAAKE,OACrC/f,EAAWsf,KAAKvT,MAAMrN,MAAMkhB,OAAOE,KAAKC,YACnC,GACLT,KAAKvT,MAAMrN,MAAM2U,IAAIlD,QAAQ,qBAAuB,GACpDmP,KAAKvT,MAAMrN,MAAMkhB,OAAOhgB,OACxB0f,KAAKvT,MAAMrN,MAAMkhB,OAAOE,MACS,SAAjCR,KAAKvT,MAAMrN,MAAMkhB,OAAOE,KAExBlgB,EAAQ0f,KAAKvT,MAAMrN,MAAMkhB,OAAOhgB,MAAMogB,cAAcD,OACpD/f,EAAWsf,KAAKvT,MAAMrN,MAAMkhB,OAAOE,KAAKC,YACnC,GACLT,KAAKvT,MAAMrN,MAAM2U,IAAIlD,QAAQ,qBAAuB,GACpDmP,KAAKvT,MAAMrN,MAAMkhB,OAAOhgB,OACxB0f,KAAKvT,MAAMrN,MAAMkhB,OAAOE,MACS,SAAjCR,KAAKvT,MAAMrN,MAAMkhB,OAAOE,KAExBlgB,EAAQ0f,KAAKvT,MAAMrN,MAAMkhB,OAAOhgB,MAAMogB,cAAcD,OACpD/f,EAAWsf,KAAKvT,MAAMrN,MAAMkhB,OAAOE,KAAKC,YACnC,GAAI1M,EAAIlD,QAAQ,eAAiB,EAAG,CACzC,IAAI8P,EAASX,KAAKhgB,MAAM2gB,OACpBX,KAAKhgB,MAAM2gB,OACXX,KAAKvT,MAAMvN,SAASyhB,OACpBC,EAAgBvC,GAAgB,UAAWsC,GAC3CE,EAAcxC,GAAgB,QAASsC,GACvCG,EAAazC,GAAgB,OAAQsC,GACrCE,GAAeC,GAA6B,SAAfA,GACrBF,EACVtgB,EAAQugB,EAAYH,cAAcD,OAClC/f,EAAWogB,EAAWL,QACbG,IACCA,EACVtgB,EAAQ0f,KAAKhgB,MAAMM,MAAMogB,cAAcD,OACvC/f,EAAWqK,EAAQiV,KAAKhgB,MAAMU,SAAS+f,cAGzCngB,EAAQ0f,KAAKhgB,MAAMM,MAAMogB,cAAcD,OACvC/f,EAAWqK,EAAQiV,KAAKhgB,MAAMU,SAAS+f,QAGzC,IAEI5V,EAAO,CACTvK,QACAI,WACAuT,SALa+L,KAAKhgB,MAAMiU,UAQ1B+L,KAAKvT,MACJ0Q,gBAAgBtS,GAChBnL,MAAK,SAAAod,GAEJ,GADA5c,QAAQC,IAAI2c,GACRA,EAAS7K,SAA4C,YAAjC6K,EAAS7K,QAAQpH,KAAKkQ,OAAsB,CAChEsE,EAAKH,SAAS,CAAEK,WAAW,IAC3B,IAAMwB,EAAejE,EAAS7K,QAAQpH,KAAKwD,OACvC0S,GAAgBA,EAAanF,QACH,IAAxBmF,EAAa5O,OACfkN,EAAK5S,MAAMuU,QAAQC,KAAK,iBACO,IAAxBF,EAAa5O,OACpBkN,EAAK5S,MAAMuU,QAAQC,KAAK,mCACS,IAAxBF,EAAa5O,OACtBkN,EAAK5S,MAAMuU,QAAQC,KAAK,4BACS,IAAxBF,EAAa5O,QACtBkN,EAAK5S,MAAMuU,QAAQC,KAAK,0BAG9B5B,EAAKH,SAAS,CAAEK,WAAW,EAAO7e,SAAU,QAG7CN,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CACZK,WAAW,EACX7e,SAAU,KAEZR,QAAQC,IAAI,MAAOE,Q,+BAIf,IACAkf,EAAcS,KAAKhgB,MAAnBuf,UACR,OACJ,mCAAQ,yBAAKrS,UAAU,WAEvB,kBAAC,iBAAD,CACUgU,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEZ,yBAAKW,UAAU,cAEnB,yBAAKA,UAAU,cACf,yBAAKA,UAAU,4CACb,wBAAIA,UAAU,WAAd,KAA0B,4BAAQA,UAAU,mBAAlB,WAE5B,yBAAKA,UAAU,WACb,0BAAMA,UAAU,mBAEd,yBAAKA,UAAU,cACb,2BAAOA,UAAU,0BAAjB,SACA,yBAAKA,UAAU,YACf,kBAACmU,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,UAKhC,kBAACyC,GAAA,EAAD,CACE/T,KAAK,QACLgU,YAAY,QACZvT,KAAK,QACLtD,MAAOsV,KAAKhgB,MAAMM,MAClBkhB,SAAUxB,KAAKf,aACfwC,aAAa,QAGhBxU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,aAKtD,yBAAKxU,UAAU,cACb,2BAAOA,UAAU,0BAAjB,YACA,yBAAKA,UAAU,YACf,kBAACmU,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,aAKhC,kBAACyC,GAAA,EAAD,CACE/T,KAAK,WACLgU,YAAY,WACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMU,SAClB8gB,SAAUxB,KAAKf,aACfwC,aAAa,MACbE,WAAY3B,KAAKP,aAGpBxS,EAAc+S,KAAKvT,MAAMiV,sBAAsB,gBAItD,yBAAKxU,UAAU,cACb,2BAAOA,UAAU,aACjB,yBAAKA,UAAU,YACf,kBAAC0U,GAAA,EAAD,CAAMC,GAAG,UAAU3U,UAAU,cAA7B,sBAOF,yBAAKA,UAAU,cACb,2BAAOA,UAAU,aACjB,yBAAKA,UAAU,YACf,kBAACmU,GAAA,EAAD,KACI,kBAACS,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,qBACV8U,SAAUzC,EACV3Q,QAAU2Q,EAAgC,KAApBS,KAAKZ,cAE1BG,EAAY,0BAA4B,YAG7C,kBAACqC,GAAA,EAAD,CAAMK,MAAO,CAACnW,SAAU,WAAWoW,MAAM,OAAOC,OAAQ,SAC8BN,GAAI,CACFO,SAAU,UACVpiB,MAAO,CACLqiB,SAAU,KAJpG,wB,GArQMjE,aAqSpBM,GAAQ4D,KAAWzC,KAAXyC,CAAqB5D,IACd6D,mBACb,MATyB,SAAAC,GACzB,OAAOC,YACL,CAAEtF,mBAAiBG,2BACnBkF,KAKWD,CAGb7D,I,oDEzTEnX,GAAqBL,EAAUK,mBAC/BD,GAAiBJ,EAAUI,eAGzBob,G,YACJ,WAAYjW,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KAuFRkW,SAAW,WACTxG,GAAuB,WAAY,IAChCzc,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKmE,SAAS,CAAE0D,MAAO9F,EAASjS,KAAKwD,YAGxCjO,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,OAhGU,EAoG5B5D,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SArGxB,EAkH5B+U,WAAa,SAAA9T,GACO,UAAdA,EAAMxB,MACRwB,EAAM+T,iBACN,EAAKN,iBArHmB,EAyH5BA,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GAC3B,IAAKA,EAAO,CACEgf,EAAKrf,MAAMM,OACnB+e,EAAKrf,MAAMM,MAAMogB,cAAcD,OAGjCpB,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAKG,oBAlIe,EAuI5BsD,aAAe,SAAAT,GACTA,IAAa,EAAKriB,MAAMmS,QAC1B,EAAK+M,SAAS,CACZle,UAAW,GACXE,SAAU,GACVZ,MAAO,GACPG,YAAa,GACbU,gBAAiB,GACjBC,eAAgB,GAChB2B,UAAW,GACXvB,MAAO,GACPD,IAAK,GACLE,KAAM,KAIV,EAAKyd,SAAS,CACZ/M,OAAoB,GAAZkQ,EAAgB,EAAI,EAC5BA,SAAUA,IAEZ,EAAK5V,MAAMsW,mBACX,EAAKC,kBAAkBX,IA5JG,EA+J5BY,gBAAkB,WAChB,EAAK/D,SAAS,EAAKgE,eA9JnB,EAAKljB,MAAQ,CACXuf,WAAW,EACXve,UAAW,GACXE,SAAU,GACVZ,MAAO,GACPG,YAAa,GACbU,gBAAiB,GACjBC,eAAgB,GAChBwhB,MAAO,GACPzQ,OACE,EAAK1F,MAAMvN,SAASc,OACpB,EAAKyM,MAAMvN,SAASc,MAAMqiB,UACa,IAAvC,EAAK5V,MAAMvN,SAASc,MAAMqiB,SACtB,EACA,EACNA,SACE,EAAK5V,MAAMvN,SAASc,OACpB,EAAKyM,MAAMvN,SAASc,MAAMqiB,UACa,IAAvC,EAAK5V,MAAMvN,SAASc,MAAMqiB,SACtB,EACA,EACNtf,UAAW,GACXogB,QAAQ,EACR1hB,KAAM,GACND,MAAO,GACPD,IAAK,GACL6hB,aAAa,EACbxO,IAAK,IAGP,EAAKsO,aAAe,EAAKljB,MAEzB,EAAKwf,aAAe,EAAKA,aAAaG,KAAlB,iBACpB,EAAKf,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKqD,kBAAoB,EAAKA,kBAAkBrD,KAAvB,iBArCC,E,iMAyC1BK,KAAK2C,WACL3C,KAAKgD,kBACHhD,KAAKvT,MAAMvN,SAASc,OACpBggB,KAAKvT,MAAMvN,SAASc,MAAMqiB,UACa,IAAvCrC,KAAKvT,MAAMvN,SAASc,MAAMqiB,SACtB,EACA,G,gJAINrC,KAAKqD,6B,wCAGW9V,GAChB,IAAI+V,EAAgB,CAClBtiB,UAAW,CAAC,WAAY,SAAWsG,GAAerG,WAClDC,SAAU,CAAC,WAAY,SAAWoG,GAAerG,WACjDX,MAAO,kBAGLijB,EAAgB,CAClB,qBAAsBhc,GAAmBvG,UAAUT,SACnD,kBAAmBgH,GAAmBvG,UAAUC,UAChD,oBAAqBsG,GAAmBrG,SAASX,SACjD,iBAAkBgH,GAAmBrG,SAASD,UAC9C,iBAAkBsG,GAAmBjH,MAAMC,SAC3C,cAAegH,GAAmBjH,MAAME,SAGtC6S,SAAS9F,EAAM,IAGf8F,SAAS9F,EAAM,IAEnByS,KAAKJ,eAAiBC,KAASC,aAAawD,EAAeC,K,yCAI3D,OAAOvD,KAAKhgB,Q,iCAGH8e,GACT,OAAOC,KAAW,CAChB1e,OAAQ2f,KAAKvT,MAAMuS,QAAQF,O,iDAqB7B,IACOkB,KAAKhgB,MAAM+C,UAGdkd,SAASuD,kBAAkB,QAAQ,GAAGvB,MAAMwB,WAAa,SAFzDxD,SAASuD,kBAAkB,QAAQ,GAAGvB,MAAMwB,WAAa,UAI3D,MAAOpjB,O,qCAqDTH,QAAQC,IAAI,gBACZ,IAAIa,EAAYgf,KAAKhgB,MAAMgB,UAAUyf,OACjCvf,EAAW8e,KAAKhgB,MAAMkB,SAASuf,OAC/BngB,EAAQ0f,KAAKhgB,MAAMM,MAAMogB,cAAcD,OACvCtO,EAAS6N,KAAKhgB,MAAMmS,OAEpBkN,EAAOW,KAUT7D,GAAuB,aARZ,CACTnb,YACAE,WACAZ,QACA6R,WAKCzS,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChBsE,EAAK4D,kBACLS,YAAW,WACTrE,EAAK5S,MAAMuU,QAAQC,KAAK,YACvB,MAEH5B,EAAKH,SAAS,CAAEK,WAAW,OAG9Bnf,OAAM,SAAAyiB,GACLxD,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAI0iB,Q,+BAQV,IAAD,OACCtD,EAAcS,KAAKhgB,MAAnBuf,UACR,OACE,yBAAKrS,UAAU,WACX,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACZ,yBAAKA,UAAU,UAEtB,kBAAC,iBAAD,CACEgU,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAGd,yBAAKW,UAAU,iDACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,0BACP,kBAAC0U,GAAA,EAAD,CAAMC,GAAG,SAAS3U,UAAU,gBAC1B,0BAAMA,UAAU,sBAElB,4BAAQA,UAAU,mBAAlB,kBAQN,kBAACyW,GAAA,EAAD,CAAK5B,QAAQ,OAAO6B,UAAkC,GAAvB5D,KAAKhgB,MAAMqiB,SAAgB,EAAI,GAE5D,kBAACwB,GAAA,EAAD,CAASxB,SAAU,EAAGzT,QAASoR,KAAK8C,aAAanD,KAAKK,KAAM,MAA5D,uBAIA,kBAAC6D,GAAA,EAAD,CAASxB,SAAU,EAAGzT,QAASoR,KAAK8C,aAAanD,KAAKK,KAAM,MAA5D,gBAGA,kBAAC6D,GAAA,EAAD,CACIxB,SAAU,EACVzT,QAAS,kBAAM,EAAKnC,MAAMuU,QAAQC,KAAK,eAF3C,eAOF,8BAwBE,kBAACI,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,cACpC,2BAAO3R,UAAU,cAAjB,cAKE,kBAACoU,GAAA,EAAD,CACE/T,KAAK,OACLgU,YAAY,aACZvT,KAAK,YACLtD,MAAOsV,KAAKhgB,MAAMgB,UAClBwgB,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,OAGb7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,eAGlD,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,aACpC,2BAAO3R,UAAU,cAAjB,aAKE,kBAACoU,GAAA,EAAD,CACE/T,KAAK,OACLgU,YAAY,YACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMkB,SAClBsgB,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,OAEb7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,cAGlD,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,UACpC,2BAAO3R,UAAU,cAAjB,SACE,kBAACoU,GAAA,EAAD,CACE/T,KAAK,QACLgU,YAAY,QACZvT,KAAK,QACLtD,MAAOsV,KAAKhgB,MAAMM,MAClBkhB,SAAUxB,KAAKf,aACfwC,aAAa,MACbE,WAAY3B,KAAKP,aAEpBxS,EAAc+S,KAAKvT,MAAMiV,sBAAsB,WAiElD,kBAACL,GAAA,EAAD,KACE,kBAACS,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,qBACV8U,SAAUzC,EACV3Q,QAAU2Q,EAAgC,KAApBS,KAAKZ,cAE1BG,EAAY,iBAAmB,eAvLnC,KADH,W,GA/MSnB,aAmZNsE,GADfA,GAASJ,KAAWzC,KAAXyC,CAAqBI,I,4BCnZ1Bnb,GAAqBL,EAAUK,mBAC/BD,GAAiBJ,EAAUI,eAGzByc,G,YACJ,WAAYtX,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KAyERuX,YAAc,SAAAxW,GACRA,GACF2O,GAAuB,oCAAqC,CAAE3O,WAC3D9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAI3J,EAAW0L,EAASjS,KAAKwD,OAE7B,GADAnO,QAAQC,IAAIiR,GACRA,EAAU,CACZ,IAAIpQ,EAAYoQ,EAASpQ,WAAa,GAClCE,EAAWkQ,EAASlQ,UAAY,GAChCZ,EAAQ8Q,EAAS9Q,OAAS,GAC1B6R,EAA6B,IAApBf,EAASe,OAAe,EAAIf,EAASe,OAC9C8R,EAAgB9R,EACpB,GAAIf,EAASwD,IAAK,CAChB,IAAIrT,EAAMoH,IAAOyI,EAASwD,KAAKsP,OAAO,KAClC1iB,EAAQ2iB,OAAOxb,IAAOyI,EAASwD,KAAKsP,OAAO,MAAQ,EACnDziB,EAAOkH,IAAOyI,EAASwD,KAAKsP,OAAO,QACvChkB,QAAQC,IAAIoB,EAAKC,EAAOC,GACxB,EAAKyd,SAAS,CACZ3d,MACAC,QACAC,SAIA,EAAKzB,MAAM2U,SAAWzN,EAAUkd,UAClC,EAAKpB,kBAAkB7Q,GAEzB,EAAK+M,SAAS,CACZle,YACAE,WACAZ,QACA2jB,gBACA9R,gBAKP/R,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,OAjHQ,EAkL5B5D,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SAnLxB,EAsL5BoY,aAAe,SAAAuB,GACb,IAAIhC,EAAW8B,OAAOE,GAClBhC,IAAa,EAAKriB,MAAMmS,QAAyC,KAA/B,EAAK1F,MAAMvN,SAASyhB,QACxD,EAAKzB,SAAS,CACZle,UAAW,GACXE,SAAU,GACVZ,MAAO,GACPK,YAAa,GACbE,mBAAoB,GACpB4T,YAAY,KAUhB,EAAKyK,SAAS,CACZ/M,OAAQ,EACRkQ,SAAUA,IAEZ,EAAK5V,MAAMsW,mBACX,EAAKC,kBAAkBX,IA9MG,EAiN5BY,gBAAkB,WAChB,EAAK/D,SAAS,EAAKgE,eAlNO,EAqN5BzD,WAAa,SAAA9T,GACO,UAAdA,EAAMxB,MACRwB,EAAM+T,iBACN,EAAKN,iBAxNmB,EA4N5BA,aAAe,WACblf,QAAQC,IAAI,oBACZ,IAAIkf,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GACtBA,GAEDgf,EAAKG,mBAlOe,EAuO5B8E,oBAAsB,SAAAC,GACC,GAAlBA,EAAS7Z,OAKR,EAAKwU,SAAS,CAACsF,kBAAkB,IAMjC,EAAKtF,SAAS,CACduF,QAASF,KAlPb,EAAKvkB,MAAQ,CACXuf,WAAW,EACX/R,OAAQ,GACRxM,UAAW,GACXE,SAAU,GACVZ,MAAO,GACPK,YAAa,GACbE,mBAAoB,GACpBJ,YAAa,GACbU,gBAAiB,GACjBC,eAAgB,GAChBK,KAAM,GACND,MAAO,GACPD,IAAK,GACL4Q,QACE,EAAK1F,MAAMvN,SAASc,OACpB,EAAKyM,MAAMvN,SAASc,MAAMqiB,UAC1B,EAAK5V,MAAMvN,SAASc,MAAMqiB,SACtB,GAENA,SACE,EAAK5V,MAAMvN,SAASc,OACpB,EAAKyM,MAAMvN,SAASc,MAAMqiB,UACa,IAAvC,EAAK5V,MAAMvN,SAASc,MAAMqiB,SACtB,EACA,EACNe,aAAa,EACbzO,OAAQzN,EAAUwd,SAClBT,cAAe,EACfO,kBAAiB,EACjBG,cAAc,IAGhB,EAAKzB,aAAe,EAAKljB,MAEzB,EAAKwf,aAAe,EAAKA,aAAaG,KAAlB,iBACpB,EAAKf,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKqD,kBAAoB,EAAKA,kBAAkBrD,KAAvB,iBAxCC,E,oFA4C1Bzf,QAAQC,IAAI,QACZ6f,KAAKgD,kBACHhD,KAAKvT,MAAMvN,SAASc,OACpBggB,KAAKvT,MAAMvN,SAASc,MAAMqiB,UACa,IAAvCrC,KAAKvT,MAAMvN,SAASc,MAAMqiB,SACtB,EACA,K,0CAKN,GAAIrC,KAAKvT,MAAMvN,SAASyhB,OAAQ,CAC9B,IAAMiE,EAASC,SAAS7E,KAAKvT,MAAMvN,SAASyhB,QACtChM,EAASiQ,EAAOjQ,OAChBnH,EAASoX,EAAOpX,OACtBwS,KAAKd,SAAS,CACZvK,SACAnH,WAEFwS,KAAKgE,YAAYxW,GACjB,IAAIuS,EAAQC,KACZpQ,GAAa,SAASW,GACpBwP,EAAMb,SAAS,CACbjL,SAAU1D,OAIhByP,KAAKjJ,mB,uCA+CU,IAAD,OACdoF,GAAuB,kBACtBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAI4J,EAAe,EAAK3kB,MAAM2kB,cAC9B7H,EAASjS,KAAKwD,OAAOsC,SAAQ,SAAS9F,GAEnC8Z,EAAc1D,KAAK,CAAC6D,MAAOja,EAAK4J,YAAY/J,MAAMG,EAAK2J,eAE1D,EAAK0K,SAAS,CAACyF,cAAeA,QAGlCvkB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,wCAMEtV,GAChBrN,QAAQC,IAAIoN,GACZA,EAAO4W,OAAO5W,GAGd,IAAI+V,EAAgB,CAClBtiB,UAAW,CAAC,WAAY,SAAWsG,GAAerG,WAClDC,SAAU,CAAC,WAAY,SAAWoG,GAAerG,WACjDX,MAAO,kBAMLijB,EAAgB,CAClB,qBAAsBhc,GAAmBvG,UAAUT,SACnD,kBAAmBgH,GAAmBvG,UAAUC,UAChD,oBAAqBsG,GAAmBrG,SAASX,SACjD,iBAAkBgH,GAAmBrG,SAASD,UAC9C,iBAAkBsG,GAAmBjH,MAAMC,SAC3C,cAAegH,GAAmBjH,MAAME,SAQ1Cwf,KAAKJ,eAAiBC,KAASC,aAAawD,EAAeC,K,yCAI3D,OAAOvD,KAAKhgB,Q,iCAGH8e,GACT,OAAOC,KAAW,CAChB1e,OAAQ2f,KAAKvT,MAAMuS,QAAQF,O,qCA2Ef,IAAD,OACT9d,EAAYgf,KAAKhgB,MAAMgB,UAAUyf,OACjCvf,EAAW8e,KAAKhgB,MAAMkB,SAASuf,OAC/BngB,EAAQ0f,KAAKhgB,MAAMM,MAAMogB,cAAcD,OAIvCxM,GADS+L,KAAKhgB,MAAMwN,OACTwS,KAAKhgB,MAAMiU,UAC1B/T,QAAQC,IAAI6f,KAAKhgB,MAAMykB,SACvB,IAAIhQ,EAAcuL,KAAKhgB,MAAMykB,SAAwC,IAA7BzE,KAAKhgB,MAAMykB,QAAQ/Z,MAAasV,KAAKhgB,MAAMykB,QAAQK,MAAO9E,KAAKhgB,MAAMyU,YACzGD,EAAWwL,KAAKhgB,MAAMykB,SAAwC,IAA7BzE,KAAKhgB,MAAMykB,QAAQ/Z,MAAcsV,KAAKhgB,MAAMykB,QAAQ/Z,MAAO,KAE5F2U,EAAOW,KAELnV,EAAO,CACT7J,YACAE,WACAZ,QAMA6R,OAlBS,EAmBTqC,YACAC,cAECjH,OAAO,IAGVtN,QAAQC,IAAI0K,GAEZsR,GAAuB,WAAYtR,GAChCnL,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAChB,GACEsE,EAAKrf,MAAM2U,SAAWzN,EAAU6d,UAChC1F,EAAKrf,MAAM2U,SAAWzN,EAAU8d,UAChC3F,EAAKrf,MAAM2U,SAAWzN,EAAU+d,SAChC,CACA,IAAIC,EAAY,CACd5kB,QACA2T,YAGF,EAAKxH,MACF0Q,gBAAgB+H,GAChBxlB,MAAK,SAAAod,GACJ,GACEA,EAAS7K,SACwB,YAAjC6K,EAAS7K,QAAQpH,KAAKkQ,OACtB,CACAsE,EAAKH,SAAS,CACZK,WAAW,IAEb,IAAMwB,EAAejE,EAAS7K,QAAQpH,KAAKwD,OACvC0S,GAAgBA,EAAanF,OAC3BmF,EAAa5O,WAMtB/R,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CACZK,WAAW,EACX7e,SAAU,KAEZR,QAAQC,IAAI,MAAOE,WAGvBgf,EAAKH,SAAS,CACZK,WAAW,EACXve,UAAW,GACXE,SAAU,GACVZ,MAAO,GACPK,YAAa,GACbE,mBAAoB,KAOtB6iB,YAAW,WACTrE,EAAK5S,MAAMuU,QAAQC,KAAK,YACvB,UAGL5B,EAAKH,SAAS,CAAEK,WAAW,OAG9Bnf,OAAM,SAAAyiB,GACLxD,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAI0iB,Q,iCAKTtV,EAAM7C,GAAQ,IAAD,OAClBsV,KAAKhgB,MAAMmS,SAAWjL,EAAUie,cACrB,SAAT5X,GACFyS,KAAKd,SAAS,CAAEzd,KAAMiJ,IAAS,kBAAM,EAAK0a,cAE/B,UAAT7X,GACFyS,KAAKd,SAAS,CAAE1d,MAAOkJ,IAAS,kBAAM,EAAK0a,cAEhC,QAAT7X,GACFyS,KAAKd,SAAS,CAAE3d,IAAKmJ,IAAS,kBAAM,EAAK0a,eAElCpF,KAAKhgB,MAAMmS,SAAWjL,EAAUme,cAC5B,SAAT9X,GACFyS,KAAKd,SAAS,CAAEzd,KAAMiJ,IAEX,UAAT6C,GACFyS,KAAKd,SAAS,CAAE1d,MAAOkJ,IAEZ,QAAT6C,GACFyS,KAAKd,SAAS,CAAE3d,IAAKmJ,O,iCAMzB,GAAIsV,KAAKhgB,MAAMyB,MAAQue,KAAKhgB,MAAMwB,OAASwe,KAAKhgB,MAAMuB,IAAK,CACzD,IAAIA,EAAMye,KAAKhgB,MAAMuB,IACjBC,EAAQ2iB,OAAOnE,KAAKhgB,MAAMwB,OAC1BC,EAAOue,KAAKhgB,MAAMyB,KAElBsB,EAAY,IAAIuiB,KAAK7jB,EAAMD,EAAOD,GAClCgkB,EAAQ,IAAID,KAEZviB,EAAYwiB,GACd9Z,EAAe,4BAGjB,IAAI+Z,EAAMD,EAAME,cAAgB1iB,EAAU0iB,cAGxCzF,KAAKhgB,MAAM2U,SAAWzN,EAAUkd,UAChCpE,KAAKhgB,MAAM2U,SAAWzN,EAAU6d,UAChC/E,KAAKhgB,MAAM2U,SAAWzN,EAAU8d,UAChChF,KAAKhgB,MAAM2U,SAAWzN,EAAU+d,SAEhCjF,KAAKd,SAAS,CACZkE,aAAa,IAENoC,GAAO,IAChBxF,KAAKd,SAAS,CACZkE,aAAa,IAEfpD,KAAKJ,eAAe8F,MAApB,YAA2C,iBAC3C1F,KAAKJ,eAAe+F,SAAS,wBAC3B,oCACF3F,KAAKJ,eAAe+F,SAAS,qBAC3B,4CAEF3F,KAAKJ,eAAe8F,MAApB,gBACE,kBAAoBpe,GAAerG,UACrC+e,KAAKJ,eAAe+F,SAAS,4BAC3Bpe,GAAmBlG,WAAWd,SAChCyf,KAAKJ,eAAe+F,SAAS,yBAC3Bpe,GAAmBlG,WAAWJ,YAEhC+e,KAAKd,SAAS,CACZkE,aAAa,EACbjiB,gBAAiB,GACjBV,YAAa,KAEfuf,KAAKJ,eAAe8F,MAApB,YAA2C,QAC3C1F,KAAKJ,eAAe+F,SAAS,wBAA0B,GACvD3F,KAAKJ,eAAe+F,SAAS,qBAC3B,4CAEF3F,KAAKJ,eAAe8F,MAApB,gBACE,SAAWpe,GAAerG,UAC5B+e,KAAKJ,eAAe+F,SAAS,4BAA8B,O,+BAMvD,IAAD,OACCpG,EAAcS,KAAKhgB,MAAnBuf,UAYR,OATES,KAAKhgB,MAAM2U,SAAWzN,EAAUkd,UAChCpE,KAAKhgB,MAAM2U,SAAWzN,EAAU6d,UAChC/E,KAAKhgB,MAAM2U,SAAWzN,EAAU8d,UAChChF,KAAKhgB,MAAM2U,SAAWzN,EAAU+d,SAOlC,yBAAK/X,UAAU,WACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACZ,yBAAKA,UAAU,UAElB,kBAAC,iBAAD,CACEgU,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAGd,yBAAKW,UAAU,iDACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,0BACP,kBAAC0U,GAAA,EAAD,CAAMC,GAAG,SAAS3U,UAAU,gBAC1B,0BAAMA,UAAU,sBAElB,4BAAQA,UAAU,mBAAlB,kBAEF,kBAACyW,GAAA,EAAD,CAAK5B,QAAQ,OAAO6B,UAAW,GAC/B,kBAACC,GAAA,EAAD,CACExB,SAAU,EACVzT,QAAS,kBACP,EAAKnC,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,UACVpiB,MAAO,CACLqiB,SAAU,OANlB,uBAaA,kBAACwB,GAAA,EAAD,CACExB,SAAU,EACVzT,QAAS,kBACP,EAAKnC,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,UACVpiB,MAAO,CACLqiB,SAAU,OANlB,gBAaA,kBAACwB,GAAA,EAAD,CACExB,SAAU,GADZ,eAQJ,8BAEE,kBAAChB,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,YACtC,2BAAO3R,UAAU,cAAjB,eAEM,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEA,UAAU,eACVc,KAAK,UACLtD,MAAOsV,KAAKhgB,MAAMykB,QAClBjD,SAAUxB,KAAKsE,oBACfsB,QAAS5F,KAAKhgB,MAAM2kB,cACpBpD,YAAY,oBAIftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,cAGnB,IAAhC1B,KAAKhgB,MAAMwkB,iBAEZ,kBAACnD,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,gBAClC,2BAAO3R,UAAU,cAAjB,gBAEA,kBAACoU,GAAA,EAAD,CACI/T,KAAK,OACLgU,YAAY,eACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMyU,YAClB+M,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,OAGb7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,iBACrC,KAEjB,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,cACpC,2BAAO3R,UAAU,cAAjB,cAEE,kBAACoU,GAAA,EAAD,CACE/T,KAAK,OACLgU,YAAY,aACZvT,KAAK,YACLtD,MAAOsV,KAAKhgB,MAAMgB,UAClBwgB,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,OAGb7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,eAGlD,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,aACpC,2BAAO3R,UAAU,cAAjB,aAEE,kBAACoU,GAAA,EAAD,CACE/T,KAAK,OACLgU,YAAY,YACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMkB,SAClBsgB,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,OAGb7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,cAGlD,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,UACpC,2BAAO3R,UAAU,cAAjB,SAEE,kBAACoU,GAAA,EAAD,CACE/T,KAAK,QACLgU,YAAY,QACZvT,KAAK,QACLtD,MAAOsV,KAAKhgB,MAAMM,MAClBkhB,SAAUxB,KAAKf,aACfwC,aAAa,MACbE,WAAY3B,KAAKP,aAGpBxS,EAAc+S,KAAKvT,MAAMiV,sBAAsB,WAoClD,kBAACL,GAAA,EAAD,KACE,kBAACS,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,qBACV8U,SAAUzC,EACV3Q,QAAU2Q,EAAgC,KAApBS,KAAKZ,cAE1BG,EAAY,iBAAmB,cAzK1C,a,GA1cenB,aAooBvB2F,GAAWzB,KAAWzC,KAAXyC,CAAqByB,IACjBxB,mBACb,MANyB,SAAAC,GACzB,OAAOC,YAAmB,CAAEtF,oBAAmBqF,KAIlCD,CAGbwB,I,uDCnpBExc,GAAqBL,EAAUK,mBAC/BD,GAAiBJ,EAAUI,eAEzB6N,G,YACJ,WAAY1I,GAAQ,IAAD,+BACjB,8CAAMA,KAmDRoZ,aAAe,WACb,EAAK3G,SAAS,CAAE4G,SAAS,IACzB,EAAKrZ,MAAMsZ,mBACXtb,EAAgB,wBAAwB,IAvDvB,EA0DnBgV,WAAa,SAAA9T,GACO,UAAdA,EAAMxB,MACRwB,EAAM+T,iBACN,EAAKsG,sBA7DU,EAiEnBpH,iBAAmB,WACjB,OAAO,EAAK5e,OAlEK,EAqEnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAvEZ,EA2EnBG,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SA5EjC,EA+EnBuY,gBAAkB,WAChB,EAAK/D,SAAS,EAAKgE,eA7EnB,EAAKljB,MAAQ,CACXuf,WAAW,EACX3e,YAAa,GACbD,YAAa,GACbE,mBAAoB,GACpBilB,SAAS,GAGX,EAAK5C,aAAe,EAAKljB,MAEzB,EAAKgmB,kBAAoB,EAAKA,kBAAkBrG,KAAvB,iBACzB,EAAKH,aAAe,EAAKA,aAAaG,KAAlB,iBACpB,EAAKf,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAElB,EAAKC,eAAiBC,KAASC,aAC7B,CACElf,YAAa,WACbD,YAAa,CAAC,WAAY,SAAW2G,GAAexG,iBACpDD,mBAAoB,6BAEtB,CACE,uBAAwB0G,GAAmB7G,SAASE,YACpD,uBAAwB2G,GAAmB7G,SAASC,YACpD,oBAAqB4G,GAAmB7G,SAASI,gBACjD,8BACEyG,GAAmB7G,SAASG,mBAC9B,0BAA2B0G,GAAmB7G,SAASK,OA9B1C,E,mFAqCjB,GADAb,QAAQC,IAAI6f,KAAKvT,OAEfuT,KAAKvT,MAAMvN,UACX8gB,KAAKvT,MAAMvN,SAASc,OACpBggB,KAAKvT,MAAMvN,SAASc,MAAMwgB,KAC1B,CACA,IAAI9f,Eb0Da,SAAAyM,GACrB,IAAI8Y,EAAa9Y,EAAKC,QAAQ,WAAY,KAC1C,OAAOpD,EAASqB,QAAQ4a,EAAY9b,EAAKD,Ga5DtBmB,CAAQ2U,KAAKvT,MAAMvN,SAASc,MAAMwgB,MACjDtgB,QAAQC,IAAIO,GACRA,GACFsf,KAAKd,SAAS,CACZte,YAAaF,O,0CAsCnB,IAAI2e,EAAOW,KACXX,EAAK5S,MAAM6S,UAAS,SAASjf,GACtBA,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAKG,qB,qCAMT,IAAIH,EAAOW,KACPpf,EAAcmK,EAAQiV,KAAKhgB,MAAMY,YAAY6f,QAC7C9f,EAAcoK,EAAQiV,KAAKhgB,MAAMW,YAAY8f,QAOjDtE,GAAuB,iBALZ,CACTvb,cACAD,gBAICjB,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChBsE,EAAK5S,MAAMsZ,mBACX1G,EAAK5S,MAAMkR,6BACX0B,EAAK4D,kBACL5D,EAAKH,SAAS,CAAE4G,SAAS,KAEzBzG,EAAK4D,qBAGR7iB,OAAM,SAAAyiB,GACLxD,EAAK4D,kBACL/iB,QAAQC,IAAI0iB,Q,+BAIR,IAAD,EAC6B7C,KAAKhgB,MAAjCuf,EADD,EACCA,UADD,EACY2G,KADZ,EACkB/G,OAEzB,OACE,kBAACgH,GAAA,EAAD,CACEjZ,UAAU,iBACVgZ,KAAMlG,KAAKhgB,MAAM8lB,QACjBM,OAAQpG,KAAK6F,aACbQ,SAAS,SACTC,UAAU,GAEV,kBAACH,GAAA,EAAMI,KAAP,KACE,yBAAKrZ,UAAU,eACb,0BAAMA,UAAU,qCAEd,kBAACsZ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEtc,IAAI,SACJuc,UAAU,SACVC,QACE,kBAACC,GAAA,EAAD,CAASC,GAAG,UACTtf,GAAmBzG,kBAIxB,0BAAMoM,UAAU,sBAAsB4Z,QAAQ,gBAIlD,yBAAK5Z,UAAU,YACb,0BAAMA,UAAU,wBACd,0BAAMA,UAAU,UAChB,0BAAMA,UAAU,YAGpB,kBAACmU,GAAA,EAAD,KACE,4BAAQnU,UAAU,eAAlB,oBAEF,kBAACmU,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,gBACpC,kBAACkI,GAAA,EAAD,KACE,kBAACA,GAAA,EAAWC,MAAZ,KACE,0BAAM9Z,UAAU,mBAElB,kBAACoU,GAAA,EAAD,CACE/T,KAAK,WACLgU,YAAY,mBACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMY,YAClB4gB,SAAUxB,KAAKf,aACf6E,UAAU,KACVnC,WAAY3B,KAAKP,cAGpBxS,EAAc+S,KAAKvT,MAAMiV,sBAAsB,iBAGlD,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,gBACpC,kBAACkI,GAAA,EAAD,KACE,kBAACA,GAAA,EAAWC,MAAZ,KACE,0BAAM9Z,UAAU,mBAElB,kBAACoU,GAAA,EAAD,CACE/T,KAAK,WACLgU,YAAY,eACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMW,YAClB6gB,SAAUxB,KAAKf,aACf6E,UAAU,KACVnC,WAAY3B,KAAKP,cAGpBxS,EAAc+S,KAAKvT,MAAMiV,sBAAsB,iBAGlD,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,uBACpC,kBAACkI,GAAA,EAAD,KACE,kBAACA,GAAA,EAAWC,MAAZ,KACE,0BAAM9Z,UAAU,mBAElB,kBAACoU,GAAA,EAAD,CACE/T,KAAK,WACLgU,YAAY,uBACZvT,KAAK,qBACLtD,MAAOsV,KAAKhgB,MAAMa,mBAClB2gB,SAAUxB,KAAKf,aACf6E,UAAU,KACVnC,WAAY3B,KAAKP,cAGpBxS,EACC+S,KAAKvT,MAAMiV,sBAAsB,wBAGrC,kBAACL,GAAA,EAAD,CAAWnU,UAAU,eACnB,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,oCACV8U,SAAUzC,EACV3Q,QAAU2Q,EAAqC,KAAzBS,KAAKgG,mBAE1BzG,EAAY,iBAAmB,QACxB,IARZ,WAUE,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UAIR7U,UAAU,mCACV0B,QAASoR,KAAK6F,cANhB,mB,GAhOazH,aAmP7BjJ,GAAiBmN,KAAWzC,KAAXyC,CAAqBnN,IAEtC,IASeoN,eACb,MAVyB,SAAAC,GACzB,OAAOC,YACL,CACE9E,+BAEF6E,KAIWD,CAGbpN,IC/QE5N,GAAqBL,EAAUK,mBAE7B0f,G,YACJ,WAAYxa,GAAQ,IAAD,+BACjB,8CAAMA,KAsBRmS,iBAAmB,WACjB,OAAO,EAAK5e,OAxBK,EA2BnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MA7BZ,EAiCnBG,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SAlCjC,EAqCnB+U,WAAa,SAAA9T,GACO,UAAdA,EAAMxB,MACRwB,EAAM+T,iBACN,EAAKsG,sBArCP,EAAKhmB,MAAQ,CACXuf,WAAW,EACXjf,MAAO,IAGT,EAAK0lB,kBAAoB,EAAKA,kBAAkBrG,KAAvB,iBACzB,EAAKf,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAElB,EAAKC,eAAiBC,KAASC,aAC7B,CACExf,MAAO,kBAET,CACE,iBAAkBiH,GAAmBjH,MAAMC,SAC3C,cAAegH,GAAmBjH,MAAME,UAlB3B,E,mFA6CjB,IAAI6e,EAAOW,KACXX,EAAK5S,MAAM6S,UAAS,SAASjf,GACtBA,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAKG,qB,qCAMT,IAAIH,EAAOW,KACP1f,EAAQ+e,EAAKrf,MAAMM,MAAMogB,cAAcD,OAC3CtE,GAAuB,iBAAkB,CAAE7b,UACxCZ,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChBsE,EAAKH,SAAS,CAAE5e,MAAO,GAAIif,WAAW,IACtCmE,YAAW,WACTrE,EAAK5S,MAAMuU,QAAQC,KAAK,OACvB,MAEH5B,EAAKH,SAAS,CAAEK,WAAW,OAG9Bnf,OAAM,SAAAyiB,GACLxD,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAI0iB,Q,+BAIR,IACAtD,EAAcS,KAAKhgB,MAAnBuf,UACR,OACE,yBAAKrS,UAAU,WACf,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACZ,yBAAKA,UAAU,UAClB,kBAAC,iBAAD,CACEgU,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,yBAAKW,UAAU,eACb,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,qCACd,kBAACmU,GAAA,EAAD,KAQE,yBAAKnU,UAAU,0BACb,kBAAC0U,GAAA,EAAD,CAAMC,GAAG,SAAS3U,UAAU,gBAC1B,0BAAMA,UAAU,sBAElB,4BAAQA,UAAU,mBAAlB,oBAGF,uBAAGA,UAAU,cACX,6IAMJ,kBAACmU,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,UACpC,kBAACkI,GAAA,EAAD,KACE,kBAACA,GAAA,EAAWC,MAAZ,KACE,0BAAM9Z,UAAU,gBAElB,kBAACoU,GAAA,EAAD,CACE/T,KAAK,QACLgU,YAAY,QACZvT,KAAK,QACLtD,MAAOsV,KAAKhgB,MAAMM,MAClBkhB,SAAUxB,KAAKf,aACfwC,aAAa,MACbE,WAAY3B,KAAKP,cAGpBxS,EAAc+S,KAAKvT,MAAMiV,sBAAsB,WAElD,kBAACL,GAAA,EAAD,KACE,kBAACS,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,qBACV8U,SAAUzC,EACV3Q,QAAU2Q,EAAqC,KAAzBS,KAAKgG,mBAE1BzG,EAAY,iBAAmB,aAxDvC,Y,GAjFiBnB,aAuJb6I,GADfA,GAAgB3E,KAAWzC,KAAXyC,CAAqB2E,I,wCCzI/BC,I,MAFeC,0BAAeC,c,YAGlC,WAAY3a,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KAeRyI,OAAS,WACP,EAAKzI,MAAM2Q,mBACX,EAAK3Q,MAAMuU,QAAQC,KAAK,MAlBE,EAqB5BoG,cAAgB,WACd,EAAK5a,MAAMuU,QAAQC,KAAK,YApBxB,EAAKjhB,MAAM,CACTsnB,YAAY,IAHY,E,oFAS1B,IAAI/G,EAAMP,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8T,KACjE,GAAGA,EAAK,CACN,IAAI/S,EAAQ+S,EAAK/S,OACjBwS,KAAKwH,mBAAmBha,M,yCAaTA,GAAQ,IAAD,OACxB2O,GAAuB,oBAAoB,CAAC3O,WAC3C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,EAASjS,MACpB,IAAIyc,EAAcxK,EAASjS,KAAKwD,OAAO,GAEvC,EAAK6Q,SAAS,CAACoI,YAAYA,QAG/BlnB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,+BAMd,OACA,kBAAC4E,GAAA,EAAD,CAAQC,OAAO,GACb,kBAACD,GAAA,EAAOP,OAAR,MASA,kBAACO,GAAA,EAAOE,SAAR,KAYE,yBAAKza,UAAU,cACd8S,KAAKvT,MAAM8T,MAAkC,GAA1BP,KAAKvT,MAAM8T,KAAKpO,OAAc,kBAACsV,GAAA,EAAOG,KAAR,CAAaC,UAAQ,GACrE,kBAACxG,GAAA,EAAD,KACE,0BAAMnU,UAAU,qBAAhB,IAAqC,kBAAC0U,GAAA,EAAD,CAAMC,GAAG,oBAAT,YAGzB,KAChB,kBAAC8B,GAAA,EAAD,CAAKmE,WAAS,GACd,kBAACjE,GAAA,EAAD,SAAU,kBAACjC,GAAA,EAAD,CAAMC,GAAG,iBAAT,aAhCH7B,KAiCAhgB,MAAMsnB,YAAiB,kBAACzD,GAAA,EAAD,SAAU,kBAACjC,GAAA,EAAD,CAAMC,GAAG,mBAAT,eAAuD,KAjCxF7B,KAkCDhgB,MAAMsnB,YACZ,kBAACzD,GAAA,EAAD,SAAU,kBAACjC,GAAA,EAAD,CAAMC,GAAG,mBAAT,eAAuD,KAQ/D,kBAACgC,GAAA,EAAD,CAASjV,QAASoR,KAAK9K,QAAvB,kB,GArFWkJ,cA+GNmE,gBApBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBoB,YAAazS,EAAM+R,KAAKU,gBAID,SAAA+P,GACzB,OAAOC,YACL,CACErF,oBACAK,wBACAC,2BACAC,+BAEF6E,KAIWD,CAGb2E,I,uECxIItB,I,OAAU,CACd,CACElb,MAAOxD,EAAUgB,WACjB4c,MACE,yBAAK5X,UAAU,gBAAf,WACU,0BAAMA,UAAU,qBAI9B,CACExC,MAAOxD,EAAUe,iBACjB6c,MACE,yBAAK5X,UAAU,gBAAf,eACc,0BAAMA,UAAU,uBAIlC,CACExC,MAAOxD,EAAUc,WACjB8c,MACE,yBAAK5X,UAAU,gBAAf,SACQ,0BAAMA,UAAU,kBAI5B,CACExC,MAAOxD,EAAUiB,aACjB2c,MACE,yBAAK5X,UAAU,gBAAf,UACS,0BAAMA,UAAU,oBAyOhB8a,G,YA1Nb,WAAYvb,GAAQ,IAAD,+BACjB,8CAAMA,KAsBRwb,eAAiB,WACf,EAAK/I,SAAS,CAAEgJ,WAAW,EAAOC,YAAa,MAxB9B,EAoDnBC,kBAAoB,SAAAzc,GAClB,IAAM8B,EAAO9B,EAAMwT,OAAOkJ,MAAM,GAC1Bva,EAAWL,EAAKO,KAChBsa,EAAW7a,EAAKF,KACtB,GAAIE,EAAM,CACR,IAAI8a,EAAS,IAAIC,WACjBD,EAAOE,cAAc9c,EAAMwT,OAAOkJ,MAAM,IACxCE,EAAOG,OAAS,SAAA/c,GACd,EAAKuT,SAAS,CACZiJ,YAAaxc,EAAMwT,OAAO9Q,OAC1Bsa,UAAW7a,EACX4B,UAAW4Y,OA/DA,EAgHnBrJ,aAAe,SAAA2J,GACb,GAAIA,EAAgB,CAClB,IAAIC,EAAc,GAAK,EACnBC,EAAWF,EAAele,MAE5Bme,EADEC,IAAa5hB,EAAUgB,WACX,GAAK,EAEL,EAEhB,EAAKgX,SAAS,CAAE0J,iBAAgBE,WAAUD,kBAvH5C,EAAK7oB,MAAQ,CACXkoB,WAAW,EACXa,aAAc,GACdC,cAAe,GACfb,YAAa,GACbQ,UAAW,GACXjZ,UAAW,GACXuZ,UAAW,SACXJ,YAAa,GACbD,eAAgB,CACdle,MAAO,QACPoa,MACE,yBAAK5X,UAAU,gBAAf,WACU,0BAAMA,UAAU,qBAI9B4b,SAAU,IAnBK,E,mFA4BjB,IAAIX,EAAcnI,KAAKvT,MAAM0b,YACzBY,EAAe/I,KAAKvT,MAAMsc,aAC1BC,EAAgBhJ,KAAKvT,MAAMuc,cAC3BtZ,EAAYsQ,KAAKvT,MAAMiD,UACvBiZ,EAAY3I,KAAKvT,MAAMkc,UACvBM,EAAYjJ,KAAKvT,MAAMwc,UACvBJ,EAAc7I,KAAKvT,MAAMoc,YAET,KAAhBV,GACFnI,KAAKd,SAAS,CACZiJ,cACAQ,YACAjZ,YACAqZ,eACAC,gBACAC,YACAJ,gBAGA7I,KAAKvT,MAAMyc,WACblJ,KAAKf,aAAae,KAAKhgB,MAAM4oB,kB,gCAqBvB5W,GACR,IAAImX,EAAkBnJ,KAAKoJ,KAAKC,SAAWrJ,KAAKoJ,KAAKC,QAClDC,iBAAiB,CAChBC,UAAW,OACXC,uBAAuB,EACvBC,sBAAuB,SAExBC,UAAU1J,KAAKhgB,MAAM0P,WAExB,GAAwB,KAApByZ,EAAwB,CAC1B,IAAIQ,EAAe3J,KAAK4J,cACtBT,EACAnJ,KAAKhgB,MAAM2oB,WAEgB,cAAzB3I,KAAKvT,MAAMyc,UACblJ,KAAKvT,MAAMod,mBAAmBF,EAAc3J,KAAKhgB,MAAM8oB,UAEvD9I,KAAKvT,MAAMod,mBAAmBF,GAGhC3J,KAAKd,SAAS,CACZgJ,WAAW,SAGblI,KAAKvT,MAAMod,mBAAmB,M,oCAIpBC,EAASC,GAMrB,IALA,IAAIC,EAAMF,EAAUA,EAAQ/a,MAAM,KAAO+a,EAEvCG,GADOD,EAAI,GAAG5qB,MAAM,WAAW,GACxB8qB,KAAKF,EAAI,KAChBG,EAAIF,EAAKxb,OACT2b,EAAQ,IAAIC,WAAWF,GAClBA,KACLC,EAAMD,GAAKF,EAAKK,WAAWH,GAE7B,IAAII,EAAO,IAAIrc,KAAK,CAACkc,GAAQ,CAAE7c,KAAMyS,KAAKhgB,MAAM0P,YAEhD,OADA6a,EAAKvc,KAAO+b,EACLQ,I,+BAiBC,IAAD,OACC3B,EAAmB5I,KAAKhgB,MAAxB4oB,eACR,OACE,kBAACzC,GAAA,EAAD,CACEqE,OAAQxK,KAAKhgB,MAAMipB,UACnB/C,KAAMlG,KAAKhgB,MAAMkoB,UACjB9B,OAAQpG,KAAKiI,eACb5B,SAAS,SACTC,UAAU,GAEV,kBAACH,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CACExd,UAC2B,cAAzB8S,KAAKvT,MAAMyc,UACP,cACA,wBAGoB,cAAzBlJ,KAAKvT,MAAMyc,UAA4B,YAAc,eAG1D,kBAAC/C,GAAA,EAAMI,KAAP,KACE,kBAAC,KAAD,CACErZ,UAAU,kBACVyd,IAAI,UACJC,gBAAiB5K,KAAKhgB,MAAM+oB,aAC5B8B,iBAAkB7K,KAAKhgB,MAAMgpB,cAC7B8B,IAAK9K,KAAKhgB,MAAMmoB,YAChBlG,MAAO,CAAE8I,OAAQ,IAAKC,MAAO,OAAOC,QAAS,GAC7CpC,YAAa7I,KAAKhgB,MAAM6oB,YACxBqC,QAAQ,EACRC,SAAU,EACVC,YAAY,EACZC,UAAU,EACVC,gBAAgB,EAChBC,kBAAkB,EAClBC,WAAW,EACXC,SAAS,OACTC,SAAS,KAGb,kBAACvF,GAAA,EAAMwF,OAAP,KACE,yBAAKze,UAAU,6CACb,yBAAKA,UAAU,QACa,cAAzB8S,KAAKvT,MAAMyc,UACV,yBAAKhc,UAAU,8BACb,0BAAMA,UAAU,+BAGhB,kBAAC,KAAD,CACEA,UAAU,4BACVqU,YAAY,oBACZ7W,MAAOke,EACPpH,SAAUxB,KAAKf,aACf2G,QAASA,GACTgG,WAAW,KAGb,MAEN,yBAAK1e,UAAU,2BACb,yBAAKA,UAAU,sBACb,2BACEK,KAAK,OACLse,OAAO,UACPnhB,MAAM,GACN8W,SAAUxB,KAAKoI,kBAAkBzI,KAAKK,QAGxC,kBAAC8B,GAAA,EAAD,CAAQgK,OAAO,WAAf,iBAED9L,KAAKvT,MAAMyc,UACV,kBAACpH,GAAA,EAAD,CACEC,QAAQ,UACRnT,QACCmd,KAAEC,UAAS,SAACrgB,GAAD,OAAW,EAAKsgB,cAAa,KACxCjK,UAAU4G,GAJb,SASA,kBAAC9G,GAAA,EAAD,CAAQC,QAAQ,UAAUnT,QAAUmd,KAAEC,UAAS,SAACrgB,GAAD,OAAW,EAAKsgB,cAAa,MAA5E,iB,GA/MW7N,a,oBCkCrB8N,I,YA9BO,kBAAC,EAAD,CAAiBzf,YAAO,GAAKA,QAC7B,kBAAC,EAAD,CAAiBA,YAAO,GAAKA,Q,YA8BxC,WAAYA,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KAqER+S,aAAe,SAAC3U,EAAKmH,GACnB,IAAI2I,EAAS9P,EAAK8P,SAOdwR,EAAQ,CACVxR,WACAC,MARQ,EAAK5a,MAAM4a,MASnBC,YARchQ,EAAK2C,OASnBsN,KARO,EAAK9a,MAAMwN,OASlBuN,OARU/I,EASVsC,UARa,EAAK7H,MAAM8T,KAAK/S,QAWjB,KAAXmN,GAA4B,OAAXA,EAChBwB,GAAuB,eAAegQ,GACrCzsB,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKI,sBAAsB,EAAKnb,MAAM4a,UAOzCxa,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,MAGhB1G,GAAuB,eAAegQ,GACrCzsB,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKI,sBAAsB,EAAKnb,MAAM4a,UAOzCxa,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,OAjHU,EAyH5BuJ,gBAAkB,WAChBntB,OAAOotB,SAAS,IAAK,GAErB,EAAKnN,SAAS,CAAEkN,iBAAkB,EAAKpsB,MAAMosB,mBA5HnB,EA+H5BE,eAAiB,SAAAzhB,GAEf,GAAIA,EAAM,CACR,IAAI2C,EAAS3C,EAAK2C,OACdzL,EAAU8I,EAAK9I,QACff,EAAY6J,EAAK7J,UACjBE,EAAW2J,EAAK3J,SAGhBqrB,EAAU1hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAC/C+L,EAAU3hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAE/CzS,GACDnD,EAAK7J,UAAY6J,EAAK7J,UAAY,IACnC,KACC6J,EAAK3J,SAAW2J,EAAK3J,SAAW,IAC/BurB,EAAe5hB,EAAKoQ,eACpBwR,IACFA,EAAehd,EAAc,SAAUgd,IAEzC,IAAIC,EAAa7hB,EAAK6hB,WAClBA,IACFA,EAAajd,EAAc,WAAYid,IAEzC,IAAI7gB,EAAWhB,EAAKgB,SACpB,EAAKqT,SAAS,CACZsN,UACAzqB,UACAf,YACAE,WACAsM,SACAif,eACAC,aACAH,UACA1gB,WACAmC,WAlKsB,EAwK5B2e,cAAgB,SAAA9hB,GAEf3K,QAAQC,IAAI0K,GACX,IAAI+hB,EAAc/hB,EAAKgiB,aAEnBC,EAAgBjiB,EAAKkiB,oBAEzB,EAAKtgB,MAAMuU,QAAQC,KAAK,CACpBmB,SAAU,UACVpiB,MAAO,CAAE4sB,aAAaA,EAAaE,eAAeA,EAAelT,OAAO/O,EAAK+O,WAjLvD,EAqL5BoT,4BAA8B,SAAAC,GAC5B/sB,QAAQC,IAAI8sB,GACZ,EAAK/N,SAAS,CACZ+N,qBAAsBA,EACtBC,6BAA8B,EAAKltB,MAAMktB,+BAzLjB,EA+L5BC,eAAiB,WACf,IAAI3f,EAAS,EAAKxN,MAAMwN,OACxB,EAAKf,MAAM4Q,6BAA6B7P,IAjMd,EAiN5B4f,eAAiB,WACf,EAAKlO,SAAS,CACZmO,cAAe,EAAKrtB,MAAMqtB,gBAnNF,EAuN5BpO,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SAtNlD,EAAK1K,MAAQ,CACXktB,6BAA6B,EAC7BD,qBAAsB,GAEtBK,SAAS,EACTC,SAAS,EACTC,uBAAwB,GACxBC,oBAAoB,EACpBrc,SAAS,GACTic,cAAc,EACdxhB,SAAU,OACVugB,iBAAiB,EACjBsB,UAAU,EACV1f,KAAM,GACN2f,aAAa,GAhBW,E,oFAsB1B,IAAIpN,EAAMP,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8T,KAE9DA,GACDP,KAAK4N,eAAerN,EAAK/S,U,gDAKHqgB,M,kFAQXrgB,GAAQ,IAAD,OACpB2O,GAAuB,oBAAoB,CAAC3O,WAC3C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,GACZ,IAAIgR,EACJA,EAAiBhR,EAASjS,KAAKwD,OACjC,EAAK6Q,SAAS,CAAC4O,eAAeA,QAI/B1tB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,4CAIMjI,GAAO,IAAD,OAC1BuB,GAAuB,wBAAwB,CAACvB,UAC/Clb,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIyS,EAAwB,EAAKxtB,MAAMwtB,uBACvCA,EAAwB1Q,EAASjS,KAAKwD,OAEtC,EAAK6Q,SAAS,CAACsO,uBAAwBA,QAG3CptB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAmII,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,+BAgBR,IAAIxD,EAAMW,KAClB,OAEA,yBAAK9S,UAAU,WACX,kBAAC,GAAW8S,KAAKvT,OACf,yBAAKS,UAAU,cAGjB,yBAAKA,UAAU,0BAEb,yBAAKA,UAAU,kBAkBZ8S,KAAKhgB,MAAM8tB,gBAAkB9N,KAAKhgB,MAAM8tB,eAAerf,OAAS,EAAIuR,KAAKhgB,MAAM8tB,eAAeC,KAAI,SAASljB,EAAM+H,GAC9G,OAEE,yBACEzI,IAAKyI,EACL1F,UAAU,kBAGV,yBAAKA,UAAU,2CAAf,qDAGA,yBAAKA,UAAU,mDACb,yBAAKA,UAAU,uEACb,yBAAKA,UAAU,UACb,6BAOA,4BACA,6BAGD,yBAAKA,UAAU,UACd,4BACGvE,IAAO0K,SAASxI,EAAKiP,eAAe,KAAKoK,OAAO,aAElDvb,IAAO0K,SAASxI,EAAKkP,aAAa,KAAKmK,OAAO,aAGjD,yBAAKhX,UAAU,+BAEb,4BAAQ0B,QAASyQ,EAAKsN,cAAchN,KAClCN,EACAxU,GAEAqC,UAAU,4BAJZ,cAFF,YAaE,kBAAC8gB,GAAA,EAAD,CACE9gB,UAAU,iBACV/K,MAAO,0BAAM+K,UAAU,gBACvB2Z,GAAG,KAEH,kBAACoH,GAAA,EAAD,KAME,uBAAG/gB,UAAU,oBANf,cASA,kBAAC+gB,GAAA,EAAD,KAGE,uBAAG/gB,UAAU,sBAHf,gBAKA,kBAAC+gB,GAAA,EAAD,KAEE,uBAAG/gB,UAAU,+BAAgC,IAF/C,eAMA,kBAAC+gB,GAAA,EAAD,KAOE,uBAAG/gB,UAAU,sBAPf,mBAyBX,6B,GAzVOkR,cAsYTmE,gBAvBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBkW,UAAWvnB,EAAM+R,KAAKT,kBACtB4c,QAASluB,EAAM0T,YAIQ,SAAA8O,GACzB,OAAOC,YACL,CACEpF,gCACAU,0BACAC,+BACAG,kCACAN,wBACAI,8BAEFuE,KAIWD,CAGb2J,I,4CC5bEiC,GAAiBhH,0BAAeC,cAChC7f,GAAqBL,EAAUK,mBAE7B6mB,G,YACJ,WAAY3hB,GAAQ,IAAD,+BACjB,8CAAMA,KA2FR4hB,oBAAsB,WACpB,EAAKnP,SAAS,CACZoP,gBAAgB,IAElB,EAAK7hB,MAAM8hB,2BAhGM,EAmGnB3P,iBAAmB,WACjB,OAAO,EAAK5e,OApGK,EAuGnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAzGZ,EA6GnBsJ,kBAAoB,SAAAzc,GAClB,EAAKuT,SAAS,CAAEiJ,YAAa,KAC7B,IAAM1a,EAAO9B,EAAMwT,OAAOkJ,MAAM,GAC1Bva,EAAWL,EAAKO,KAChBsa,EAAW7a,EAAKF,KACtB,GAAIE,EAAM,CAER,IAAI8a,EAAS,IAAIC,WACjBD,EAAOE,cAAc9c,EAAMwT,OAAOkJ,MAAM,IACxCE,EAAOG,OAAS,SAAA/c,GACd,EAAKuT,SAAS,CAGZiJ,YAAaxc,EAAMwT,OAAO9Q,OAC1Bsa,UAAW7a,EACX4B,UAAW4Y,EACXtW,OAAQ,OA7HG,EAgJnBiN,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SAjJjC,EAoJnB8jB,cAAgB,SAACC,EAAWC,EAASvkB,GACnC,GAAkB,KAAdskB,GAAgC,KAAZC,EAAgB,CACtC,IAAIC,EAAetb,SAASob,EAAW,IACnCG,EAAavb,SAASqb,EAAS,IACvB,IAARvkB,EACEwkB,EAAeC,GACjB1uB,QAAQC,IAAI,KAAM,EAAKyf,gBACvB,EAAKA,eAAe8F,MAApB,UAAyC,WACzC,EAAK9F,eAAe+F,SAAS,sBAC3B,+CAEFzlB,QAAQC,IAAI,OAAQ,EAAKyf,gBACzB,EAAKA,eAAe8F,MAApB,UAAyC,GACzC,EAAK9F,eAAe+F,SAAS,sBAAwB,IAEtC,IAARxb,IACLwkB,EAAeC,GACjB1uB,QAAQC,IAAI,KAAM,EAAKyf,gBACvB,EAAKA,eAAe8F,MAApB,SAAwC,WACxC,EAAK9F,eAAe+F,SAAS,qBAC3B,6CAEFzlB,QAAQC,IAAI,OAAQ,EAAKyf,gBACzB,EAAKA,eAAe8F,MAApB,SAAwC,GACxC,EAAK9F,eAAe+F,SAAS,qBAAuB,OA5KzC,EAkLnBkJ,cAAgB,SAAAljB,GACd,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,QAClDxK,QAAQC,IAAI,iBACZ,EAAKquB,cAAc,EAAKxuB,MAAM0C,UAAWiJ,EAAMwT,OAAOzU,MAAO,IArL5C,EAwLnBokB,gBAAkB,SAAAnjB,GAChB,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,QAClD,EAAK8jB,cAAc7iB,EAAMwT,OAAOzU,MAAO,EAAK1K,MAAM2C,QAAS,IA1L1C,EA6LnBosB,aAAe,SAAApjB,GACb,IAAIlJ,EAAS,EAAKzC,MAAMgvB,gBACpBC,EACF,EAAKxiB,MAAM8T,MAAQ,EAAK9T,MAAM8T,KAAK3L,IAC/BjM,IAAO,EAAK8D,MAAM8T,KAAK3L,KAAKsP,OAAO,QACnC,GAEN,GACEzhB,GAC6B,IAA7B,EAAKgK,MAAMyiB,eACX7b,SAAS4b,EAAK,IAAM5b,SAAS5Q,EAAQ,IACrC,CACA,IAAI0sB,EAAIlP,SAASmP,eAAe,gBAC5BC,EAAkBpP,SAASmP,eAAe,gBAAgB3gB,OAC9D0gB,EAAEniB,OAAOqiB,EAAkB,GAE7B,EAAKnQ,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,QAClD,EAAK8jB,cAAc,EAAKxuB,MAAMwC,SAAUmJ,EAAMwT,OAAOzU,MAAO,IA9M3C,EAiNnB4kB,eAAiB,SAAA3jB,GACf,IAAInJ,EAAW,EAAKxC,MAAMuvB,kBACtBN,EACF,EAAKxiB,MAAM8T,MAAQ,EAAK9T,MAAM8T,KAAK3L,IAC/BjM,IAAO,EAAK8D,MAAM8T,KAAK3L,KAAKsP,OAAO,QACnC,GAEN,GACE1hB,GAC6B,IAA7B,EAAKiK,MAAMyiB,eACX7b,SAAS4b,EAAK,IAAM5b,SAAS7Q,EAAU,IACvC,CACA,IAAI2sB,EAAIlP,SAASmP,eAAe,kBAC5BC,EAAkBpP,SAASmP,eAAe,kBAAkB3gB,OAChE0gB,EAAEniB,OAAOqiB,EAAkB,GAE7B,EAAKnQ,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,QAClD,EAAK8jB,cAAc7iB,EAAMwT,OAAOzU,MAAO,EAAK1K,MAAMyC,OAAQ,IAlOzC,EAqOnB+sB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eAtOP,EAyOnBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aA1OP,EA6OnButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAEZ,EAAKid,SAAS,CAAEjd,YAAWC,aAnPV,EAsPnBkd,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GACtBA,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IACS,KAAhCF,EAAKrf,MAAM4vB,iBACbvQ,EAAKwQ,yBAELxQ,EAAKG,oBA9PM,EA4XnBsQ,gBAAkB,SAAAC,GAChB7vB,QAAQC,IAAI4vB,GACZ,IAAIllB,EAAO,CACTklB,eAEE1Q,EAAI,gBACJ0Q,GACF5T,GAAuB,kBAAmBtR,GACvCnL,MAAK,SAAAod,GACAA,GAAqC,YAAzBA,EAASjS,KAAKkQ,SAC5BsE,EAAK5S,MAAM8hB,0BACXlP,EAAK5S,MAAMujB,sBAGd5vB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,OA3YD,EAyanBoN,sBAAwB,SAAAvlB,GAEtB,GADAxK,QAAQC,IAAIuK,GACRA,EAAM+D,OAAS,EAAG,CACpB,IAAIyhB,EAAiBxlB,EAAM,GAAGA,MAC1B1I,EAAgB0I,EAAM,GAAGoa,MAC7B5kB,QAAQC,IAAI+vB,EAAgBluB,GAC5B,EAAKkd,SAAS,CACZgR,iBACAluB,oBAjba,EAsbnBmuB,kBAAoB,SAAAzlB,GAClB,EAAKwU,SAAS,CACZld,cAAe0I,KAtbjB,EAAK1K,MAAQ,CACXuf,WAAW,EACX+O,gBAAgB,EAChB4B,eAAgB,GAChBluB,cAAe,GACfH,KAAM,GAGNO,YAAa,GACboL,OAAQ,GACR3B,UAAU,EACVkkB,YAAa,GACbK,iBAAkB,GAClBC,WAAY,GACZ7tB,SAAU,GACVC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACT2tB,oBAAqB,GACrBC,iBAAkB,GAClBX,iBAAkB,GAClBY,UAAW,GACXC,SAAU,GACVtI,YAAa,GACboH,kBAAmB,GACnBP,gBAAiB,IAGnB,EAAKpQ,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKkK,mBAAqB,EAAKA,mBAAmBlK,KAAxB,iBAC1B,EAAKC,eAAiBC,KAASC,aAC7B,CACE9d,cAAe,WACfH,KAAM,WACNa,UAAW,WACXC,QAAS,WACTH,SAAU,WACVC,OAAQ,YAEV,CACE,yBAA0B8E,GAAmBvF,cAAczB,SAC3D,gBAAiBgH,GAAmB1F,KAAKtB,SACzC,qBAAsBgH,GAAmB7E,UAAUnC,SACnD,mBAAoBgH,GAAmB5E,QAAQpC,SAC/C,oBAAqBgH,GAAmB/E,SAASjC,SACjD,kBAAmBgH,GAAmB9E,OAAOlC,WAhDhC,E,iIAmEjB,GARAL,QAAQC,IAAI6f,KAAKvT,MAAMyiB,eACnBlP,KAAKvT,MAAM8T,MACbP,KAAKd,SAAS,CACZ1R,OAAQwS,KAAKvT,MAAM8T,KAAK/S,OACxB3B,SAAUmU,KAAKvT,MAAM8T,KAAK1U,WAI1BmU,KAAKvT,MAAMikB,gBAAiB,CAC9B,IAAI7lB,EAAOmV,KAAKvT,MAAMikB,gBAClBC,EAAqB,KAAd9lB,EAAK8lB,KAAclhB,EAAc,SAAU5E,EAAK8lB,MAAQ,GACnE3Q,KAAKd,SAAS,CACZ6Q,YAAallB,EAAKklB,YAClB/tB,cAAe6I,EAAK+lB,UACpB/uB,KAAMgJ,EAAKhJ,KACXa,UAAWmI,EAAKnI,UAChBC,QAASkI,EAAKlI,QACd4sB,kBAAmB1kB,EAAKrI,SACxBwsB,gBAAiBnkB,EAAKpI,OACtBD,SAAUqI,EAAKrI,SACfC,OAAQoI,EAAKpI,OACbytB,eAAgBrlB,EAAKqlB,eACrBI,oBAAqBK,EACrBJ,iBAAkB1lB,EAAK8lB,KAGvBvuB,YAAayI,EAAKzI,iB,yCA+KLqL,GACbA,GACFuS,KAAKd,SAAS,CACZoR,oBAAqBtQ,KAAKhgB,MAAMmoB,YAChCyH,iBAAkBniB,M,+CAMtB,IAAIG,EAAe3O,OAAO2O,aACtBF,EAAWsS,KAAKhgB,MAAM0N,SACtBF,EAASwS,KAAKhgB,MAAMwN,OACpBqjB,EAAW7Q,KAAKhgB,MAAM4vB,iBACtB9hB,EAAWC,EAAkB8iB,EAAS7iB,MACtCC,EAAU,aAAST,EAAT,YAAmBtG,EAAUmB,kBAA7B,YAAkDyF,GAC5DuR,EAAOW,KAESpS,EAAaM,KAAKC,yBACpCjH,EAAUW,aACV6F,GAGUU,+BACVlH,EAAUO,eACVwG,EACA4iB,GACA,SAACxwB,EAAOgO,GACFA,GACFgR,EAAKH,SACH,CACEqR,iBAAkBtiB,IAEpB,WACEoR,EAAKG,kBAIPnf,GACFH,QAAQC,IAAI,SAAUE,Q,qCAO5B,IAAI6vB,EAAiBlQ,KAAKhgB,MAAMkwB,eAC5BH,EAAc/P,KAAKhgB,MAAM+vB,YACzBviB,EAASwS,KAAKhgB,MAAMwN,OACpBojB,EAAY5Q,KAAKhgB,MAAMgC,cACvBH,EAAOme,KAAKhgB,MAAM6B,KAClBa,EAAYsd,KAAKhgB,MAAM0C,UACvBC,EAAUqd,KAAKhgB,MAAM2C,QACrBH,EAAWwd,KAAKhgB,MAAMwC,SACtBC,EAASud,KAAKhgB,MAAMyC,OAWpBL,EAAc4d,KAAKhgB,MAAMoC,YACzByJ,EAAWmU,KAAKhgB,MAAM6L,SACtB0B,EAAOrG,EAAUuB,WAGjBoC,EAAO,CACTklB,cACAG,iBACA1iB,SACAmjB,KANS3Q,KAAKhgB,MAAMuwB,iBAOpBK,YACA/uB,OACAa,YACAC,UACAH,WACAC,SACAL,cACAyJ,WACA0B,QAGE8R,EAAOW,KACoB,KAA3BA,KAAKhgB,MAAM+vB,YACb5T,GAAuB,eAAgBtR,GACpCnL,MAAK,SAAAod,GACAA,GAAqC,YAAzBA,EAASjS,KAAKkQ,QAC5BsE,EAAK5S,MAAM8hB,0BACXlP,EAAK5S,MAAMujB,kBACX3Q,EAAKH,SAAS,CAAEK,WAAW,KAE3BF,EAAKH,SAAS,CAAEK,WAAW,OAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAI,MAAOE,MAGvB8b,GAAuB,gBAAiBtR,GACrCnL,MAAK,SAAAod,GACAA,GAAqC,YAAzBA,EAASjS,KAAKkQ,QAC5BsE,EAAK5S,MAAM8hB,0BACXlP,EAAK5S,MAAMujB,kBACX3Q,EAAKH,SAAS,CAAEK,WAAW,EAAO+O,gBAAgB,KAElDjP,EAAKH,SAAS,CAAEK,WAAW,OAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAI,MAAOE,Q,yCA0BzB,IAAIgf,EAAOW,KACXA,KAAKvT,MACFyR,yBACAxe,MAAK,SAAAod,GACJ,GAAIA,EAAS7K,SAA4C,YAAjC6K,EAAS7K,QAAQpH,KAAKkQ,OAAsB,CAClE,IAAIrJ,EAAmBoL,EAAS7K,QAAQpH,KAAKwD,OAC7C,GAAIqD,EAAiBjD,OAAS,EAAG,CAC/B,IAAImX,EAAUlU,EAAiBqc,KAAI,SAAS+C,GAC1C,MAAO,CACLpmB,MAAOomB,EAAKZ,eACZpL,MAAOgM,EAAK9iB,SAGhBqR,EAAKH,SAAS,CAAEkR,iBAAkBxK,EAASrG,WAAW,SAEtDF,EAAKH,SAAS,CAAEkR,iBAAkB,GAAI7Q,WAAW,QAItDnf,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,+CAwBhB,IAAMkO,EAAW,GACbvuB,EAAWwd,KAAKhgB,MAAMuvB,kBAEtBN,EACFjP,KAAKvT,MAAM8T,MAAQP,KAAKvT,MAAM8T,KAAK3L,IAC/BjM,IAAOqX,KAAKvT,MAAM8T,KAAK3L,KAAKsP,OAAO,QACnC,GAEM,IAAR+K,GAAqB,OAARA,GAAwB,KAARA,IAE/BA,EADmBtmB,MAASub,OAAO,QAAU,IAG/ChkB,QAAQC,IAAIqC,GACZtC,QAAQC,IAAI8uB,GACZ8B,EAAS9P,KACP,4BAAQvW,MAAM,GAAGP,IAAK,IAAtB,SAMAkJ,SAAS7Q,EAAU,KACnB6Q,SAAS4b,EAAK,KACd5b,SAAS4b,EAAK,IAAM5b,SAAS7Q,EAAU,KACV,IAA7Bwd,KAAKvT,MAAMyiB,eAEX6B,EAAS9P,KACP,4BAAQvW,MAAOlI,EAAU2H,IAAK3H,GAC3BA,IAKP,IAAK,IAAI2M,EAAI8f,EAAK9f,GAAKjI,EAAUzE,OAAQ0M,IACvC4hB,EAAS9P,KACP,4BAAQvW,MAAOyE,EAAGhF,IAAKgF,GACpBA,IAIP,OAAO4hB,I,6CAIP,IAAItuB,EAASud,KAAKhgB,MAAMgvB,gBAElB+B,EAAW,GACb9B,EACFjP,KAAKvT,MAAM8T,MAAQP,KAAKvT,MAAM8T,KAAK3L,IAC/BjM,IAAOqX,KAAKvT,MAAM8T,KAAK3L,KAAKsP,OAAO,QACnC,GAEM,IAAR+K,GAAqB,OAARA,GAAwB,KAARA,IAE/BA,EADmBtmB,MAASub,OAAO,QAAU,IAI/C6M,EAAS9P,KACP,4BAAQvW,MAAM,GAAGP,IAAK,IAAtB,SAMAkJ,SAAS5Q,EAAQ,KACjB4Q,SAAS4b,EAAK,KACd5b,SAAS4b,EAAK,IAAM5b,SAAS5Q,EAAQ,KACR,IAA7Bud,KAAKvT,MAAMyiB,eAEX6B,EAAS9P,KACP,4BAAQvW,MAAOjI,EAAQ0H,IAAK1H,GACzBA,IAKP,IAAK,IAAI0M,EAAI8f,EAAK9f,GAAKjI,EAAUzE,OAAQ0M,IACvC4hB,EAAS9P,KACP,4BAAQvW,MAAOyE,EAAGhF,IAAKgF,GACpBA,IAIP,OAAO4hB,I,4CAIP,IAAMC,EAAa,CACjB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QAEIC,EAAY,GAClBA,EAAUhQ,KACR,4BAAQvW,MAAM,GAAGP,IAAK,IAAtB,UAIF,IAAK,IAAIgF,EAAI,EAAGA,GAAK6hB,EAAWviB,OAAS,EAAGU,IAC1C8hB,EAAUhQ,KACR,4BAAQvW,MAAOsmB,EAAW7hB,GAAIhF,IAAKgF,GAChC6hB,EAAW7hB,KAIlB,OAAO8hB,I,+BA0BC,IACA1R,EAAcS,KAAKhgB,MAAnBuf,UACR,OACE,kBAAC4G,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMsuB,eACjBlI,OAAQpG,KAAKqO,oBACbhI,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAGbyT,KAAKhgB,MAAMmoB,YACV,kBAAC,GAAD,CACEA,YAAanI,KAAKhgB,MAAMmoB,YACxBQ,UAAW3I,KAAKhgB,MAAM2oB,UACtBjZ,UAAWsQ,KAAKhgB,MAAM0P,UACtBmZ,YAAa,EACbI,UAAiC,IAAtBjJ,KAAKhgB,MAAMgS,OAAe,SAAW,QAChD+W,aAAoC,IAAtB/I,KAAKhgB,MAAMgS,OAAe,MAAQ,MAChDgX,cAAqC,IAAtBhJ,KAAKhgB,MAAMgS,OAAe,MAAQ,MACjD6X,mBAAoB7J,KAAK6J,qBAEzB,KACJ,kBAAC1D,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,KACE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC/P,GAAA,EAAD,CACEgQ,UAAU,sBACVnkB,UAAW8S,KAAKnB,WAAW,kBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,aAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,CACEI,UAAW,EACXjS,UAAWS,KAAKhgB,MAAMuf,UACtBkS,SAAU,QACVlQ,YAAY,mBACZmQ,SAAU1R,KAAKoQ,iBAAiBzQ,KAAKK,MACrC4F,QAAS5F,KAAKhgB,MAAMowB,iBACpBpiB,KAAK,gBACLtD,MAAOsV,KAAKhgB,MAAMgC,cAClBwf,SAAUxB,KAAKiQ,sBACf0B,UAAU,EACVC,mBAAmB,mBACnBC,cAAe7R,KAAKmQ,kBACpBE,WAAYrQ,KAAKhgB,MAAMqwB,WACvByB,kBAAmB9R,KAAKhgB,MAAMgC,gBAU/BiL,EACC+S,KAAKvT,MAAMiV,sBAAsB,oBAIvC,kBAACL,GAAA,EAAD,CACEgQ,UAAU,yBACVnkB,UAAW8S,KAAKnB,WAAW,SAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,QAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACE/T,KAAK,OACLgU,YAAY,eACZvT,KAAK,OACLtD,MAAOsV,KAAKhgB,MAAM6B,KAClB2f,SAAUxB,KAAKf,aACfwC,aAAa,QAEdxU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,WAmBpD,kBAACL,GAAA,EAAD,CAAWgQ,UAAU,0BACnB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,SAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACW,GAAA,EAAD,CAAK7kB,UAAU,6BACb,kBAACikB,GAAA,EAAD,CAAKC,GAAI,EAAGlkB,UAAW8S,KAAKnB,WAAW,cACrC,yBAAK3R,UAAU,8BACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACEgQ,eAAe,SACf/P,YAAY,QACZC,SAAUxB,KAAK8O,gBACf9gB,KAAK,YACLtD,MAAOsV,KAAKhgB,MAAM0C,WAEjBsd,KAAKgS,yBAIX/kB,EACC+S,KAAKvT,MAAMiV,sBAAsB,eAIrC,kBAACyP,GAAA,EAAD,CAAKC,GAAI,EAAGlkB,UAAW8S,KAAKnB,WAAW,YACrC,yBAAK3R,UAAU,8BACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACEgQ,eAAe,SACf/P,YAAY,QACZC,SAAUxB,KAAK6O,cACf7gB,KAAK,UACLtD,MAAOsV,KAAKhgB,MAAM2C,SAEjBqd,KAAKgS,yBAIX/kB,EACC+S,KAAKvT,MAAMiV,sBAAsB,aAGrC,kBAACyP,GAAA,EAAD,CAAKC,GAAI,IACNnkB,EACC+S,KAAKvT,MAAMiV,sBAAsB,kBAO3C,kBAACL,GAAA,EAAD,CAAWgQ,UAAU,0BACnB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,gBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACW,GAAA,EAAD,CAAK7kB,UAAU,6BACb,kBAACikB,GAAA,EAAD,CAAKC,GAAI,EAAGlkB,UAAW8S,KAAKnB,WAAW,aACrC,yBAAK3R,UAAU,8BACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACEuF,GAAG,iBACHyK,eAAe,SACf/P,YAAY,OACZC,SAAUxB,KAAKsP,eACf1gB,QAASoR,KAAKiS,gBAEdjkB,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMwC,UAEjBwd,KAAKkS,yBAAyBC,aAIpCllB,EACC+S,KAAKvT,MAAMiV,sBAAsB,cAGrC,kBAACyP,GAAA,EAAD,CAAKC,GAAI,EAAGlkB,UAAW8S,KAAKnB,WAAW,WACrC,yBAAK3R,UAAU,8BACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACEuF,GAAG,eACHyK,eAAe,SACf/P,YAAY,QACZC,SAAUxB,KAAK+O,aACf/gB,KAAK,SACLtD,MAAOsV,KAAKhgB,MAAMyC,QAEjBud,KAAKoS,uBAAuBD,aAIlCllB,EACC+S,KAAKvT,MAAMiV,sBAAsB,YAGrC,kBAACyP,GAAA,EAAD,CAAKC,GAAI,IACNnkB,EACC+S,KAAKvT,MAAMiV,sBAAsB,iBAqE3C,kBAACL,GAAA,EAAD,CAAWgQ,UAAU,0BACnB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,eAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEgQ,eAAe,WACf/P,YAAY,aACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMoC,YAClBof,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,WAKlB,kBAACqN,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,oCACb,2BACEK,KAAK,OACLiU,SAAUxB,KAAKoI,kBAAkBzI,KAAKK,MACtC6L,OAAO,UACPnhB,MAAM,GACNwC,UAAU,sBAEZ,yBAAKA,UAAU,iCACuB,KAAnC8S,KAAKhgB,MAAMswB,oBACV,0BAAMpjB,UAAU,6BAEhB,yBAAK4d,IAAK9K,KAAKhgB,MAAMswB,oBAAqB+B,IAAI,KAEhD,yBAAKnlB,UAAU,iBACb,2BACEK,KAAK,OACLiU,SAAUxB,KAAKoI,kBAAkBzI,KAAKK,MACtC6L,OAAO,UACPnhB,MAAM,GACNwC,UAAU,sBAEZ,0BAAMolB,MAAM,8BAKpB,yBAAKplB,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,yBAAKze,UAAU,6CACb,yBAAKA,UAAU,QACe,KAA3B8S,KAAKhgB,MAAM+vB,YACV,kBAACjO,GAAA,EAAD,CACEC,QAAQ,SACR7U,UAAU,kCACV0B,QAASoR,KAAK8P,gBAAgBnQ,KAC5BK,KACAA,KAAKhgB,MAAM+vB,cALf,oBAWA,IAGJ,yBAAK7iB,UAAU,2BACb,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUzC,EACV3Q,QAAU2Q,EAAgC,KAApBS,KAAKZ,cAE1BG,EAAY,iBAAmB,QAGlC,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKqO,qBAHhB,iB,GAh7BajQ,aAm+B3BgQ,GAAe9L,KAAWzC,KAAXyC,CAAqB8L,IACrB7L,oBAXS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,aAIM,SAAAoR,GACzB,OAAOC,YAAmB,CAAEvE,2BAA0BsE,KAIzCD,CAGb6L,I,8BCn+BE7mB,I,MAAqBL,EAAUK,oBAU7BqO,IATe1O,EAAUI,e,YAU7B,WAAYmF,GAAQ,IAAD,+BACjB,8CAAMA,KAqCR8lB,uBAAyB,SAAAxX,GAEvB,EAAKmE,SAAS,KAxCG,EA+CnBN,iBAAmB,WACjB,OAAO,EAAK5e,OAhDK,EAmDnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MArDZ,EAkEnB0T,kBAAoB,SAAA3nB,GAElB,IAOU,EAPN4nB,EAAW,GACbC,EAAa,GACbC,EAAY,GACZC,EAAS,GACTC,EAAW,GACXC,EAAU,GAERjoB,IAEEA,EAAK5I,YACPwwB,EAAW9pB,IAAOkC,EAAK5I,WAAWiiB,OAAO,KACzCwO,EAAavO,OAAOxb,IAAOkC,EAAK5I,WAAWiiB,OAAO,MAAQ,EAE1DyO,EAAYhqB,IAAOkC,EAAK5I,WAAWiiB,OAAO,SAGxCrZ,EAAK3I,UACP0wB,EAASjqB,IAAOkC,EAAK3I,SAASgiB,OAAO,KACrC2O,EAAW1O,OAAOxb,IAAOkC,EAAK3I,SAASgiB,OAAO,MAAQ,EACtD4O,EAAUnqB,IAAOkC,EAAK3I,SAASgiB,OAAO,SAKxC,EAAKhF,UAAL,GACE1R,OAAO3C,EAAK2C,OACZtK,YAAc2H,EAAK3H,YACnBC,aAAe0H,EAAK1H,aACpB0S,eAAiBhL,EAAKgL,eACtBC,cAAgBjL,EAAKiL,cACrBid,KAAOloB,EAAKkL,oBACZid,SAAWnoB,EAAKmL,wBAChBC,SAAWpL,EAAKoL,SAChBC,aAAerL,EAAKqL,aACpBC,cAAgBtL,EAAKsL,cACrBC,oBAAsBvL,EAAKuL,oBAC3BC,wBAA0BxL,EAAKwL,wBAC/BC,mBAAqBzL,EAAKyL,mBAC1BE,aAAe3L,EAAK2L,cAdtB,uBAeU,IAfV,6BAgBiB3L,EAAK6L,cAhBtB,yBAiBY+b,GAjBZ,2BAkBcC,GAlBd,0BAmBaC,GAnBb,uBAoBUC,GApBV,yBAqBYC,GArBZ,wBAsBWC,GAtBX,4BA0BcjoB,EAAKooB,QA1BnB,MA5Fe,EA4HnBhU,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KAEpB,EAAKkR,SAAL,eACGlR,EAAOtD,KAlIO,EAsInB8kB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eAvIP,EA0InBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aA3IP,EA8InButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BhC,QAAQC,IAAI+B,GACZD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,GAAaC,GACXD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAGd,EAAKid,SAAS,CAAEjd,YAAWC,aAvJV,EAuKnBkd,aAAe,WACb,IAAIC,EAAI,gBACJkG,EAAQ,IAAID,KAEe,GAA3B,EAAKtlB,MAAMkW,cACb,EAAK0J,eAAe8F,MAApB,mBAAkD,CAChD,YAEF,EAAK9F,eAAe+F,SAAS,+BAC3Bpe,GAAmB+O,mBAAmB/V,SAEtC,EAAKqf,eAAe8F,MAApB,aAA4C,CAC1C,YAEF,EAAK9F,eAAe+F,SAAS,yBAC3Bpe,GAAmBiP,aAAajW,SAEhC,EAAKqf,eAAe8F,MAApB,cAA6C,CAC3C,YAEF,EAAK9F,eAAe+F,SAAS,0BAC3Bpe,GAAmB4O,cAAc5V,SAEjC,EAAKqf,eAAe8F,MAApB,oBAAmD,CACjD,YAEF,EAAK9F,eAAe+F,SAAS,gCAC3Bpe,GAAmB6O,oBAAoB7V,SAEvC,EAAKqf,eAAe8F,MAApB,wBAAuD,CACrD,YAEF,EAAK9F,eAAe+F,SAAS,oCAC3Bpe,GAAmB8O,wBAAwB9V,SAG/C8e,EAAKrf,MAAMmzB,SACX9T,EAAKrf,MAAMmzB,QAAU5N,IAErB9Z,EACE,wDAEA4T,EAAKH,SAAS,CACZkU,OAAS,GACTC,QAAU,GACVC,SAAW,GACXH,QAAQ,QAIlB,EAAKvT,eAAe8F,MAApB,mBAAkD,GAClD,EAAK9F,eAAe+F,SAAS,+BAAiC,GAE9D,EAAK/F,eAAe8F,MAApB,aAA4C,GAC5C,EAAK9F,eAAe+F,SAAS,yBAA2B,GAExD,EAAK/F,eAAe8F,MAApB,cAA6C,GAC7C,EAAK9F,eAAe+F,SAAS,0BAA4B,GAEzD,EAAK/F,eAAe8F,MAApB,oBAAmD,GACnD,EAAK9F,eAAe+F,SAAS,gCAAkC,GAE/D,EAAK/F,eAAe8F,MAApB,wBAAuD,GACvD,EAAK9F,eAAe+F,SAAS,oCAAsC,GACnEtG,EAAKH,SAAS,CACZkU,OAAS,GACTC,QAAU,GACVC,SAAW,GACXH,QAAQ,MAIZ,EAAK1mB,MAAM6S,UAAS,SAASjf,GAGtBA,IAEDgf,EAAKrf,MAAMuzB,UACXlU,EAAKrf,MAAMuzB,SAAWhO,GACrBlG,EAAKrf,MAAMizB,QAAU5T,EAAKrf,MAAMizB,OAAS1N,GAE1C9Z,EACE,wDAEF4T,EAAKH,SAAS,CACZyT,UAAW,GACXD,WAAY,GACZD,SAAU,GACVK,QAAS,GACTD,SAAU,GACVD,OAAQ,MAEDvT,EAAKrf,MAAMuzB,UAAYlU,EAAKrf,MAAMuzB,SAAWhO,GACtD9Z,EAAe,+CACf4T,EAAKH,SAAS,CACZyT,UAAW,GACXD,WAAY,GACZD,SAAU,MAEHpT,EAAKrf,MAAMizB,QAAU5T,EAAKrf,MAAMizB,OAAS1N,GAClD9Z,EAAe,6CACf4T,EAAKH,SAAS,CACZ4T,QAAS,GACTD,SAAU,GACVD,OAAQ,MAGc,KAAxBvT,EAAKrf,MAAMuzB,UACW,KAAtBlU,EAAKrf,MAAMizB,QACX5T,EAAKrf,MAAMuzB,SAAWlU,EAAKrf,MAAMizB,QAEjCxnB,EACE,gEAEF4T,EAAKH,SAAS,CACZ4T,QAAS,GACTD,SAAU,GACVD,OAAQ,OAGVvT,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,qBAhSE,EAsSnBgU,gBAAkB,SAACjmB,EAAM7C,GACV,cAAT6C,GACF,EAAK2R,SAAS,CAAEyT,UAAWjoB,IAAS,kBAAM,EAAK+oB,sBAEpC,eAATlmB,GACF,EAAK2R,SAAS,CAAEwT,WAAYhoB,IAAS,kBAAM,EAAK+oB,sBAErC,aAATlmB,GACF,EAAK2R,SAAS,CAAEuT,SAAU,IAAK,kBAAM,EAAKgB,uBA9S3B,EAkTnBC,cAAgB,SAACnmB,EAAM7C,GACR,YAAT6C,GACF,EAAK2R,SAAS,CAAE4T,QAASpoB,IAAS,kBAAM,EAAK+oB,sBAElC,aAATlmB,GACF,EAAK2R,SAAS,CAAE2T,SAAUnoB,IAAS,kBAAM,EAAK+oB,uBAvT/B,EA8TnBE,cAAgB,SAACpmB,EAAM7C,GACR,YAAT6C,GACF,EAAK2R,SAAS,CAAEmU,QAAS3oB,IAAS,kBAAM,EAAKkpB,qBAElC,aAATrmB,GACF,EAAK2R,SAAS,CAAEoU,SAAU5oB,IAAQ,kBAAM,EAAKkpB,qBAElC,WAATrmB,GACF,EAAK2R,SAAS,CAAEkU,OAAQ,KAtUT,EA0UnBQ,gBAAkB,WAChB,IAAIT,EAAU,GACVC,EAAS,EACVC,EAAU,GACVC,EAAW,GAEP,EAAKtzB,MAAMqzB,SAAW,EAAKrzB,MAAMszB,WACpCF,EAAS,EACTE,EAC0B,KAAxB,EAAKtzB,MAAMszB,SAAkBnP,OAAO,EAAKnkB,MAAMszB,UAAY,EAAI,GAC/DD,EAAiC,KAAvB,EAAKrzB,MAAMqzB,QAAiB,EAAKrzB,MAAMqzB,QAAU,GAC3DF,EAAUxqB,IAAO0qB,EAAU,IAAMC,EAAW,IAAMF,IAEtD,EAAKlU,SAAS,CACZiU,aAxVa,EA6VnBM,iBAAmB,WACjB,IAAIF,EAAW,GACXN,EAAS,GACTR,EAAW,EACbE,EAAY,GACZD,EAAa,GACbE,EAAS,EACTC,EAAW,GACXC,EAAU,GAER,EAAK9yB,MAAM2yB,WAAa,EAAK3yB,MAAM0yB,aACrCD,EAAW,EACXC,EAC4B,KAA1B,EAAK1yB,MAAM0yB,WAAoBvO,OAAO,EAAKnkB,MAAM0yB,YAAc,EAAI,GACrEC,EAAqC,KAAzB,EAAK3yB,MAAM2yB,UAAmB,EAAK3yB,MAAM2yB,UAAY,GACjEY,EAAW5qB,IAAOgqB,EAAY,IAAMD,EAAa,IAAMD,IAGrD,EAAKzyB,MAAM8yB,SAAW,EAAK9yB,MAAM6yB,WACnCD,EAAS,EACTC,EAC0B,KAAxB,EAAK7yB,MAAM6yB,SAAkB1O,OAAO,EAAKnkB,MAAM6yB,UAAY,EAAI,GACjEC,EAAiC,KAAvB,EAAK9yB,MAAM8yB,QAAiB,EAAK9yB,MAAM8yB,QAAU,GAC3DG,EAAStqB,IAAOmqB,EAAU,IAAMD,EAAW,IAAMD,IAG/CK,GAAUM,IACRA,EAAS5D,QAAQsD,IACnB/yB,QAAQC,IAAI,MACZ,EAAK+e,SAAS,CACZ0T,OAAQH,EACRI,SAAUH,EAAa,EACvBI,QAASH,EACTY,WACAN,YAGF,EAAK/T,SAAS,CACZqU,WACAN,aApYW,EAifnBY,gBAAkB,WAChB,EAAK3U,SAAS,CACZ4U,aAAc,EAAK9zB,MAAM8zB,eAnfV,EAufnBC,gBAAkB,SAAApoB,GACZA,EAAMwT,OAAO+T,SACf,EAAKtT,eAAe8F,MAApB,OAAsC,GACtC,EAAK9F,eAAe8F,MAApB,SAAwC,GACxC,EAAK9F,eAAe8F,MAApB,QAAuC,GACvC,EAAKxG,SAAS,CACZ+T,OAAQ,GACRe,YAAY,EACZpB,OAAQ,GACRC,SAAU,GACVC,QAAS,GACTjd,gBAAgB,IAGlB,EAAK+J,eAAe8F,MAApB,aAA4C,WAC5C,EAAK9F,eAAe+F,SAAS,yBAC3Bpe,GAAmB2O,aAAa3V,SAEhC,EAAKqf,eAAe8F,MAApB,cAA6C,CAC3C,YAEF,EAAK9F,eAAe+F,SAAS,0BAC3Bpe,GAAmBuO,cAAcvV,SAEjC,EAAKqf,eAAe8F,MAApB,KAAoC,CAClC,YAEF,EAAK9F,eAAe+F,SAAS,iBAC3Bpe,GAAmBwrB,KAAKxyB,SAExB,EAAKqf,eAAe8F,MAApB,SAAwC,CACtC,YAEF,EAAK9F,eAAe+F,SAAS,qBAC3Bpe,GAAmByrB,SAASzyB,WAIpC,EAAKqf,eAAe8F,MAApB,aAA4C,GAC5C,EAAK9F,eAAe+F,SAAS,yBAA2B,GAExD,EAAK/F,eAAe8F,MAApB,cAA6C,GAC7C,EAAK9F,eAAe+F,SAAS,0BAA4B,GAEzD,EAAK/F,eAAe8F,MAApB,KAAoC,GACpC,EAAK9F,eAAe+F,SAAS,iBAAmB,GAEhD,EAAK/F,eAAe8F,MAApB,SAAwC,GACxC,EAAK9F,eAAe+F,SAAS,qBAAuB,GAEpD,EAAK/F,eAAe8F,MAApB,OAAsC,WACtC,EAAK9F,eAAe+F,SAAS,mBAC3Bpe,GAAmBhG,IAAIhB,SAEzB,EAAKqf,eAAe8F,MAApB,SAAwC,WACxC,EAAK9F,eAAe+F,SAAS,qBAC3Bpe,GAAmB/F,MAAMjB,SAE3B,EAAKqf,eAAe8F,MAApB,QAAuC,WACvC,EAAK9F,eAAe+F,SAAS,oBAC3Bpe,GAAmB9F,KAAKlB,SAE1B,EAAK2e,SAAS,CACZ8U,YAAY,EACZlB,QAAS,GACTD,SAAU,GACVD,OAAQ,GACR/c,gBAAgB,MA1jBH,EAgkBnBc,iBAAmB,SAAAhL,GACjB,IAAI+K,EAAc,EAAK1W,MAAM0W,aAAa2I,EAAK,gBAC/ClD,GAAuB,mBAAoB,CAACzF,iBAC3ChX,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAK4U,qBAAqB,QAC1B5U,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,OA3kBG,EA+kBnB4zB,qBAAuB,SAAAlZ,GACrB,EAAKmE,SAAS,CACZgV,iBAAiB,IAGnB,EAAKznB,MAAM0nB,4BAllBX,EAAKn0B,MAAQ,CACXuf,WAAW,EACXtd,UAAW,GACXC,QAAS,GACTkyB,sBAAsB,EACtB5mB,OAAQ,GACRwmB,YAAY,EACZrB,UAAWhqB,MAASub,OAAO,QAC3BwO,WAAY/pB,MAASub,OAAO,KAAO,EACnCuO,SAAU9pB,MAASub,OAAO,KAC1B4O,QAASnqB,MAASub,OAAO,QACzB2O,SAAUlqB,MAASub,OAAO,KAAO,EACjC0O,OAAQjqB,MAASub,OAAO,KACxBmP,QAAS1qB,MAASub,OAAO,QACzBoP,SAAU3qB,MAASub,OAAO,KAAO,EACjCkP,OAAQzqB,MAASub,OAAO,KACxBhhB,YAAY,GACZC,aAAa,GACb+wB,iBAAgB,EAChBxd,aAAa,IAGf,EAAKkI,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,CACE5c,YAAa,WACbC,aAAc,YAEhB,CACE,uBAAwBoE,GAAmBrE,YAAY3C,SACvD,wBAAyBgH,GAAmBpE,aAAa5C,WAjC5C,E,mFA6DjBL,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAM4nB,kBACtDrU,KAAKwS,kBAAkBxS,KAAKvT,MAAM4nB,oB,yCA4FhB,IAAD,OACjBlY,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAwOhB,IAAI3f,EAAc8c,KAAKhgB,MAAMkD,YACzBC,EAAe6c,KAAKhgB,MAAMmD,aAC1B0S,EAAiBmK,KAAKhgB,MAAM6V,eAC5BC,EAAgBkK,KAAKhgB,MAAM8V,cAC3BC,EAAsBiK,KAAKhgB,MAAM+yB,KACjC/c,EAA0BgK,KAAKhgB,MAAMgzB,SACrC/c,EAAW+J,KAAKhgB,MAAMiW,SACtBC,EAAe8J,KAAKhgB,MAAMkW,aAC1BC,EAAgB6J,KAAKhgB,MAAMmW,cAC3BC,EAAsB4J,KAAKhgB,MAAMoW,oBACjCC,EAA0B2J,KAAKhgB,MAAMqW,wBACrCC,EAAqB0J,KAAKhgB,MAAMsW,mBAChCE,EAAewJ,KAAKhgB,MAAMwW,aAC1BhJ,EAAQwS,KAAKvT,MAAM8T,KAAK/S,OACxBkJ,EAAesJ,KAAKhgB,MAAM0W,aAG9BxW,QAAQC,IAAI,0BAA0B6f,KAAKhgB,MAAMyyB,UAEjD,IACIC,EACwB,KAA1B1S,KAAKhgB,MAAM0yB,WAAoBvO,OAAOnE,KAAKhgB,MAAM0yB,YAAc,EAAI,GACjEC,EAAqC,KAAzB3S,KAAKhgB,MAAM2yB,UAAmB3S,KAAKhgB,MAAM2yB,UAAY,GACjEY,EAAW,GACCb,GAAcC,IAC5BY,EAAW5qB,IAAOgqB,EAAY,IAAMD,EAAa,MACjDa,EAAW5qB,IAAO4qB,GAAUtkB,WAG9B,IACI4jB,EACsB,KAAxB7S,KAAKhgB,MAAM6yB,SAAkB1O,OAAOnE,KAAKhgB,MAAM6yB,UAAY,EAAI,GAC7DC,EAAiC,KAAvB9S,KAAKhgB,MAAM8yB,QAAiB9S,KAAKhgB,MAAM8yB,QAAU,GAC3DG,EAAS,GACCJ,GAAYC,IACxBG,EAAStqB,IAAOmqB,EAAU,IAAMD,EAAW,MAC3CI,EAAStqB,IAAOsqB,GAAQhkB,UACxBgkB,EAASjT,KAAKhgB,MAAMg0B,WAAa,GAAKf,GAIxC,IAAIG,EAA+B,KAAtBpT,KAAKhgB,MAAMozB,OAAgBpT,KAAKhgB,MAAMozB,OAAS,GACxDE,EACsB,KAAxBtT,KAAKhgB,MAAMszB,SAAkBnP,OAAOnE,KAAKhgB,MAAMszB,UAAY,EAAI,GAC7DD,EAAiC,KAAvBrT,KAAKhgB,MAAMqzB,QAAiBrT,KAAKhgB,MAAMqzB,QAAU,GAC3DF,EAAU,GACXnT,KAAKhgB,MAAMszB,UAAYtT,KAAKhgB,MAAMozB,QAAUpT,KAAKhgB,MAAMqzB,UACxDF,EAAUxqB,IAAO0qB,EAAU,IAAMC,EAAW,IAAMF,GAClDD,EAAUxqB,IAAOwqB,GAASlkB,WAI5B,IAAIpE,EAAO,CACT6L,eACAlJ,SACAtK,cACAC,eACA0S,iBACAC,gBACAC,sBACAC,0BACAC,WACAC,eACAC,gBACAC,sBACAC,0BACAC,qBACArU,UAAUsxB,EACVrxB,QAAQ+wB,EACR1c,gBAAgB4c,EAChB3c,gBAGE6I,EAAOW,KACX9f,QAAQC,IAAI,8BAA8B6f,KAAKhgB,MAAM0W,cAChDsJ,KAAKhgB,MAAM0W,cAA4C,KAA5BsJ,KAAKhgB,MAAM0W,aAazCyF,GAAuB,iBAAkBtR,GACtCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAK4U,qBAAqB,QAC1B5U,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,gBAAiBtR,GACrCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAK4U,qBAAqB,YAG7B7zB,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BAuHV,IAAD,OAMP,OACE,6BAEE,kBAAC8lB,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMk0B,gBACjB9N,OAAQpG,KAAKiU,qBAAqBtU,KAAKK,KAAM,SAC7CqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBACnB8S,KAAKhgB,MAAMs0B,cAA4C,KAA5BtU,KAAKhgB,MAAMs0B,aAEpC,kBADA,mBAIR,kBAACnO,GAAA,EAAMI,KAAP,KACE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACP,kBAAC/P,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,UAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,qBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,oBACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMkD,YAClBse,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,kBAKpD,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,iBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,sBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,qBACZvT,KAAK,eACLtD,MAAOsV,KAAKhgB,MAAMmD,aAClBqe,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,mBAIpD,kBAACL,GAAA,EAAD,CAAWgQ,UAAU,0BACjB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,kCAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,OAAO,EACPwoB,SACgC,IAA9BlT,KAAKhgB,MAAM6V,eAEb2L,SAAUxB,KAAKf,cAPjB,MAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,OAAO,EACPwoB,SACgC,IAA9BlT,KAAKhgB,MAAM6V,eAEb2L,SAAUxB,KAAKf,cAPjB,KAUE,yBAAK/R,UAAU,WACR,OAKjB,kBAACmU,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,aAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,cAAD,CACE2Z,GAAG,OACH7Y,KAAK,YACLwmB,QAAQ,eACRC,aAAa,OACbC,IAAK/rB,MAASlH,OACd0wB,SAAO,EACPznB,MAAOsV,KAAKhgB,MAAM2yB,UAClBnR,SAAU,SAAA/f,GAAI,OACZ,EAAK+xB,gBAAgB,YAAa/xB,OAIxC,yBAAKyL,UAAU,cACb,kBAAC,eAAD,CACE2Z,GAAG,QACH7Y,KAAK,aACLwmB,QAAQ,eACRC,aAAc,QACdE,OAAK,EACLC,cAAY,EACZnzB,KAAMue,KAAKhgB,MAAM2yB,UACjBjoB,MAAOsV,KAAKhgB,MAAM0yB,WAClBlR,SAAU,SAAAhgB,GAAK,OACb,EAAKgyB,gBAAgB,aAAchyB,UAQ/C,kBAAC6f,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,WAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,cAAD,CACE2Z,GAAG,OACH7Y,KAAK,UACLgU,WAAUhC,KAAKhgB,MAAMg0B,WACrBQ,QAAQ,eACRC,aAAa,OACbC,IAAK/rB,MAASlH,OACd0wB,SAAO,EACPznB,MAAOsV,KAAKhgB,MAAM8yB,QAClBtR,SAAU,SAAA/f,GAAI,OAAI,EAAKiyB,cAAc,UAAWjyB,OAGpD,yBAAKyL,UAAU,cACb,kBAAC,eAAD,CACE2Z,GAAG,QACH7Y,KAAK,WACLgU,WAAUhC,KAAKhgB,MAAMg0B,WACrBQ,QAAQ,eACRC,aAAc,QACdE,OAAK,EACLC,cAAY,EACZnzB,KAAMue,KAAKhgB,MAAM8yB,QACjBpoB,MAAOsV,KAAKhgB,MAAM6yB,SAClBrR,SAAU,SAAAhgB,GAAK,OACb,EAAKkyB,cAAc,WAAYlyB,QAKvC,yBAAK0L,UAAU,cACb,kBAAC2nB,GAAA,EAAD,CACE3nB,UAAU,oBACV0B,QAASoR,KAAK+T,gBAAgBpU,KAAKK,MACnC8U,iBAAgB9U,KAAKhgB,MAAM6V,gBAH7B,2BAME,0BAAM3I,UAAU,eAOG,IAA1B8S,KAAKhgB,MAAMg0B,WAAsB,6BAClC,kBAAC3S,GAAA,EAAD,CAAWgQ,UAAU,0BACjB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,kBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,gBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QAC+B,WAA7BlT,KAAKhgB,MAAM8V,cAEb0L,SAAUxB,KAAKf,cAPjB,SAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,gBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QAC+B,WAA7BlT,KAAKhgB,MAAM8V,cAEb0L,SAAUxB,KAAKf,cAPjB,UAUE,yBAAK/R,UAAU,WACR,MAGZD,EACK+S,KAAKvT,MAAMiV,sBAAsB,mBAI3C,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACrB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,UAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACT,yBAAKlkB,UAAU,OACX,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,OACZvT,KAAK,OACLtD,MAAOsV,KAAKhgB,MAAM+yB,KAClBvR,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,IAAf,YAEEuC,EACC+S,KAAKvT,MAAMiV,sBAAsB,UAGtC,yBAAKxU,UAAU,cACd,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,WACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMgzB,SAClBxR,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEZ,4BAAQpZ,MAAM,IAAd,YACD,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,IAAf,eACA,4BAAQA,MAAO,IAAf,eACA,4BAAQA,MAAO,IAAf,gBAEAuC,EACG+S,KAAKvT,MAAMiV,sBAAsB,kBAOpC,GAEP,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,gBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,kBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEgQ,eAAe,WACf/P,YAAY,mCACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMiW,SAClBuL,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,SAEX7W,EACC+S,KAAKvT,MAAMiV,sBAAsB,mBAKd,IAA1B1B,KAAKhgB,MAAMg0B,WACV,kBAAC3S,GAAA,EAAD,KACE,kBAAC8P,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,iBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACEgQ,eAAe,SACf/P,YAAY,uBACZvT,KAAK,eACLtD,MAAOsV,KAAKhgB,MAAMkW,aAClBsL,SAAUxB,KAAKf,aACfrQ,QAASoR,KAAKf,aACd8V,SAAU,SAAAviB,GACR,EAAKwiB,mBAAqBxiB,IAG7B,4BAAQ9H,MAAM,IAAd,4BACA,4BAAQA,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,qBACA,4BAAQA,MAAO,GAAf,6BAKR,GAC0B,GAA3BsV,KAAKhgB,MAAMkW,aAAoB,6BAC1B,kBAACmL,GAAA,EAAD,CAAWnU,UAAU,gBACtB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,qBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,cAAD,CACE2Z,GAAG,OACH7Y,KAAK,UACLwmB,QAAQ,eACRC,aAAa,OACbC,IAAK/rB,MAASlH,OACd0wB,SAAO,EACPznB,MAAOsV,KAAKhgB,MAAMqzB,QAClB7R,SAAU,SAAA/f,GAAI,OACZ,EAAKkyB,cAAc,UAAWlyB,OAIpC,yBAAKyL,UAAU,cACb,kBAAC,eAAD,CACE2Z,GAAG,QACH7Y,KAAK,WACLwmB,QAAQ,eACRC,aAAc,QACdE,OAAK,EACLC,cAAY,EACZnzB,KAAMue,KAAKhgB,MAAMqzB,QACjB3oB,MAAOsV,KAAKhgB,MAAMszB,SAClB9R,SAAU,SAAAhgB,GAAK,OACb,EAAKmyB,cAAc,UAAWnyB,OAIpC,yBAAK0L,UAAU,cACb,kBAAC,aAAD,CACEunB,aAAa,MACb5N,GAAG,MACH7Y,KAAK,SACLwmB,QAAQ,eACR/yB,KAAMue,KAAKhgB,MAAMqzB,QACjB7xB,MAAOwe,KAAKhgB,MAAMszB,SAClBsB,cAAY,EACZlqB,MAAOsV,KAAKhgB,MAAMozB,OAClB5R,SAAU,SAAAjgB,GAAG,OACX,EAAKoyB,cAAc,SAAUpyB,UAUzC,kBAAC8f,GAAA,EAAD,CAAWgQ,UAAU,0BACjB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,kBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,gBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QAC+B,WAA7BlT,KAAKhgB,MAAMmW,cAEbqL,SAAUxB,KAAKf,cAPjB,SAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,gBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QAC+B,WAA7BlT,KAAKhgB,MAAMmW,cAEbqL,SAAUxB,KAAKf,cAPjB,UAUE,yBAAK/R,UAAU,WACR,KAEVD,EACG+S,KAAKvT,MAAMiV,sBAAsB,oBAK3C,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACrB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,UAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,OACZvT,KAAK,sBACLtD,MAAOsV,KAAKhgB,MAAMoW,oBAClBoL,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEZ,4BAAQpZ,MAAM,IAAd,QACD,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,IAAf,YAEAuC,EACG+S,KAAKvT,MAAMiV,sBAAsB,yBAGrC,yBAAKxU,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,WACZvT,KAAK,0BACLtD,MAAOsV,KAAKhgB,MAAMqW,wBAClBmL,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX,4BAAQpZ,MAAM,IAAd,YACF,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,IAAf,eACA,4BAAQA,MAAO,IAAf,eACA,4BAAQA,MAAO,IAAf,gBAEAuC,EACG+S,KAAKvT,MAAMiV,sBAAsB,gCAQ3C,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,uBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,6BAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,oBACZvT,KAAK,qBACLtD,MAAOsV,KAAKhgB,MAAMsW,mBAClBkL,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,SAGb7W,EACG+S,KAAKvT,MAAMiV,sBAAsB,wBAKvC,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,iBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,uBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,yBACZvT,KAAK,eACLtD,MAAOsV,KAAKhgB,MAAMwW,aAClBgL,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,SAGb7W,EACG+S,KAAKvT,MAAMiV,sBAAsB,mBAGlC,IAEP,yBAAKxU,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKrJ,iBAAiBgJ,KAAKK,OAHtC,UAQA,kBAAC8B,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKiU,qBAAqBtU,KAAKK,KAAM,UAHhD,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GAvrCgBzV,cAgsC5BxI,GAAgB0M,KAAWzC,KAAXyC,CAAqB1M,IAErC,IAMe2M,gBANS,SAAAviB,GACtB,MAAO,KAOP,KAFauiB,CAGb3M,ICvtCErO,GAAqBL,EAAUK,mBAQ7B0tB,IAPe/tB,EAAUI,eAOX,YAId4P,G,YACJ,WAAYzK,GAAQ,IAAD,+BACjB,8CAAMA,KAoCRmS,iBAAmB,WACjB,OAAO,EAAK5e,OAtCK,EAyCnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MA3CZ,EAyEnBoW,eAAiB,SAAArqB,GAEf,IAAI4nB,EAAW,GACbC,EAAa,GACbC,EAAY,GACZC,EAAS,GACTC,EAAW,GACXC,EAAU,GAERjoB,IAEEA,EAAK5I,YACPwwB,EAAW9pB,IAAOkC,EAAK5I,WAAWiiB,OAAO,KACzCwO,EAAavO,OAAOxb,IAAOkC,EAAK5I,WAAWiiB,OAAO,MAAQ,EAE1DyO,EAAYhqB,IAAOkC,EAAK5I,WAAWiiB,OAAO,SAGxCrZ,EAAK3I,SACP0wB,EAASjqB,IAAOkC,EAAK3I,SAASgiB,OAAO,KACrC2O,EAAW1O,OAAOxb,IAAOkC,EAAK3I,SAASgiB,OAAO,MAAQ,EACtD4O,EAAUnqB,IAAOkC,EAAK3I,SAASgiB,OAAO,SAEzB,GAGf,EAAKhF,SAAS,CACZ1R,OAAO3C,EAAK2C,OACZ2J,YAActM,EAAKsM,YACnBC,WAAavM,EAAKuM,WAClBC,eAAiBxM,EAAKwM,eACtBC,gBAAkBzM,EAAKyM,gBACvBlV,YAAcyI,EAAKzI,YACnBoV,UAAY3M,EAAK2M,UACjBib,SAAUA,EACVC,WAAYA,EACZC,UAAWA,EACXC,OAAQA,EACRC,SAAUA,EACVC,QAASA,EAGTkB,YAAYnpB,EAAKooB,WAnHJ,EAyHnBhU,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KAEpB,EAAKkR,SAAL,eACGlR,EAAOtD,KA/HO,EAmInB8kB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eApIP,EAuInBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aAxIP,EA2InButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,GAAaC,GACXD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAGd,EAAKid,SAAS,CAAEjd,YAAWC,aAnJV,EAmKnBkd,aAAe,WACb,IAAIC,EAAI,gBACJkG,EAAQ,IAAID,KAChB,EAAK7Y,MAAM6S,UAAS,SAASjf,GACtBA,IAEDgf,EAAKrf,MAAMuzB,UACXlU,EAAKrf,MAAMuzB,SAAWhO,GACrBlG,EAAKrf,MAAMizB,QAAU5T,EAAKrf,MAAMizB,OAAS1N,GAE1C9Z,EACE,wDAEF4T,EAAKH,SAAS,CACZyT,UAAW,GACXD,WAAY,GACZD,SAAU,GACVK,QAAS,GACTD,SAAU,GACVD,OAAQ,MAEDvT,EAAKrf,MAAMuzB,UAAYlU,EAAKrf,MAAMuzB,SAAWhO,GACtD9Z,EAAe,+CACf4T,EAAKH,SAAS,CACZyT,UAAW,GACXD,WAAY,GACZD,SAAU,MAEHpT,EAAKrf,MAAMizB,QAAU5T,EAAKrf,MAAMizB,OAAS1N,GAClD9Z,EAAe,6CACf4T,EAAKH,SAAS,CACZ4T,QAAS,GACTD,SAAU,GACVD,OAAQ,MAGc,KAAxBvT,EAAKrf,MAAMuzB,UACW,KAAtBlU,EAAKrf,MAAMizB,QACX5T,EAAKrf,MAAMuzB,SAAWlU,EAAKrf,MAAMizB,QAEjCxnB,EACE,gEAEF4T,EAAKH,SAAS,CACZ4T,QAAS,GACTD,SAAU,GACVD,OAAQ,OAGVvT,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,qBArNE,EA2NnBgU,gBAAkB,SAACjmB,EAAM7C,GACV,cAAT6C,GACF,EAAK2R,SAAS,CAAEyT,UAAWjoB,IAAS,kBAAM,EAAK+oB,sBAEpC,eAATlmB,GACF,EAAK2R,SAAS,CAAEwT,WAAYhoB,IAAS,kBAAM,EAAK+oB,sBAErC,aAATlmB,GACF,EAAK2R,SAAS,CAAEuT,SAAU,IAAK,kBAAM,EAAKgB,uBAnO3B,EAuOnBC,cAAgB,SAACnmB,EAAM7C,GACR,YAAT6C,GACF,EAAK2R,SAAS,CAAE4T,QAASpoB,IAAS,kBAAM,EAAK+oB,sBAElC,aAATlmB,GACF,EAAK2R,SAAS,CAAE2T,SAAUnoB,IAAS,kBAAM,EAAK+oB,uBA5O/B,EAmPnBA,iBAAmB,WACjB,IAAIF,EAAW,GACXN,EAAS,GACTR,EAAW,EACbE,EAAY,GACZD,EAAa,GACbE,EAAS,EACTC,EAAW,GACXC,EAAU,GAER,EAAK9yB,MAAM2yB,WAAa,EAAK3yB,MAAM0yB,aACrCD,EAAW,EACXC,EAC4B,KAA1B,EAAK1yB,MAAM0yB,WAAoBvO,OAAO,EAAKnkB,MAAM0yB,YAAc,EAAI,GACrEC,EAAqC,KAAzB,EAAK3yB,MAAM2yB,UAAmB,EAAK3yB,MAAM2yB,UAAY,GACjEY,EAAW5qB,IAAOgqB,EAAY,IAAMD,EAAa,IAAMD,IAGrD,EAAKzyB,MAAM8yB,SAAW,EAAK9yB,MAAM6yB,WACnCD,EAAS,EACTC,EAC0B,KAAxB,EAAK7yB,MAAM6yB,SAAkB1O,OAAO,EAAKnkB,MAAM6yB,UAAY,EAAI,GACjEC,EAAiC,KAAvB,EAAK9yB,MAAM8yB,QAAiB,EAAK9yB,MAAM8yB,QAAU,GAC3DG,EAAStqB,IAAOmqB,EAAU,IAAMD,EAAW,IAAMD,IAG/CK,GAAUM,IACRA,EAAS5D,QAAQsD,GACnB,EAAK/T,SAAS,CACZ0T,OAAQH,EACRI,SAAUH,EAAa,EACvBI,QAASH,EACTY,WACAN,WAGF,EAAK/T,SAAS,CACZqU,WACAN,aAzRW,EA0WnBc,gBAAkB,SAAApoB,GACZA,EAAMwT,OAAO+T,QACf,EAAKhU,SAAS,CACZ8U,YAAY,EACZ9xB,QAAS+yB,GACTrC,OAAQ,GACRC,SAAU,GACVC,QAAS,GACTxb,iBAAiB,IAGnB,EAAK4H,SAAS,CACZ8U,YAAY,EACZlB,QAASnqB,MAASub,OAAO,QACzB2O,SAAUlqB,MAASub,OAAO,KAAO,EACjC0O,OAAQjqB,MAASub,OAAO,KACxB5M,iBAAgB,KA1XH,EAmYnB6d,kBAAoB,SAAApa,GAClB,EAAKmE,SAAS,CACZkW,cAAc,IAGhB,EAAK3oB,MAAM4oB,yBAtYX,EAAKr1B,MAAQ,CACXuf,WAAW,EACXtd,UAAW,GACXC,QAAS,GACTkyB,sBAAsB,EACtB5mB,OAAQ,GACRwmB,YAAY,EACZrB,UAAWhqB,MAASub,OAAO,QAC3BwO,WAAY/pB,MAASub,OAAO,KAAO,EACnCuO,SAAU9pB,MAASub,OAAO,KAC1B4O,QAASnqB,MAASub,OAAO,QACzB2O,SAAUlqB,MAASub,OAAO,KAAO,EACjC0O,OAAQjqB,MAASub,OAAO,KACxBmP,QAAS1qB,MAASub,OAAO,QACzBoP,SAAU3qB,MAASub,OAAO,KAAO,EACjCkP,OAAQzqB,MAASub,OAAO,KACxBhhB,YAAY,GACZC,aAAa,GACbiyB,cAAa,EACb5d,UAAU,GACV8d,cAAe,IAGjB,EAAK1W,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,CACE3I,YAAa,YAEf,CACE,uBAAwB5P,GAAmB4P,YAAY5W,WAhC1C,E,mFAgDjB,IAAIiN,EAAQ,KACTwS,KAAKvT,MAAM8T,OACZ/S,EAASwS,KAAKvT,MAAM8T,KAAK/S,OACzBwS,KAAKd,SAAS,CAAC1R,OAAQA,KAGzBwS,KAAKkV,eAAelV,KAAKvT,MAAM8oB,eAC/BvV,KAAKwV,sBAAsBhoB,K,4CAGPA,GAAQ,IAAD,OAC3B2O,GAAuB,gCAAgC,CAAC3O,WACvD9N,MAAK,SAAAod,GACJ,GAAiC,MAA7BA,EAASjS,KAAK4qB,WAAoB,CACnC,IAAIH,EAAe,EAAKt1B,MAAMs1B,cAC9BA,EAAexY,EAASjS,KAAK6qB,aAAa,GAC1C,EAAKxW,SAAS,CAACoW,cAAeA,QAGlCl1B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAkFI,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAkIhB,IAAI1L,EAAc6I,KAAKhgB,MAAMmX,YACzBC,EAAa4I,KAAKhgB,MAAMoX,WACxBC,EAAiB2I,KAAKhgB,MAAMqX,eAC5BC,EAAkB0I,KAAKhgB,MAAMsX,gBAC7BlV,EAAc4d,KAAKhgB,MAAMoC,YAEzBoL,EAASwS,KAAKvT,MAAM8T,KAAK/S,OACzBgK,EAAYwI,KAAKhgB,MAAMwX,UAE3BtX,QAAQC,IAAI,0BAA0B6f,KAAKhgB,MAAMyyB,UAEjD,IACIC,EACwB,KAA1B1S,KAAKhgB,MAAM0yB,WAAoBvO,OAAOnE,KAAKhgB,MAAM0yB,YAAc,EAAI,GACjEC,EAAqC,KAAzB3S,KAAKhgB,MAAM2yB,UAAmB3S,KAAKhgB,MAAM2yB,UAAY,GACjEY,EAAW,GACCb,GAAcC,IAC5BY,EAAW5qB,IAAOgqB,EAAY,IAAMD,EAAa,MACjDa,EAAW5qB,IAAO4qB,GAAUtkB,WAG9B,IACI4jB,EACsB,KAAxB7S,KAAKhgB,MAAM6yB,SAAkB1O,OAAOnE,KAAKhgB,MAAM6yB,UAAY,EAAI,GAC7DC,EAAiC,KAAvB9S,KAAKhgB,MAAM8yB,QAAiB9S,KAAKhgB,MAAM8yB,QAAU,GAC3DG,EAAS,GACCJ,GAAYC,IACxBG,EAAStqB,IAAOmqB,EAAU,IAAMD,EAAW,MAC3CI,EAAStqB,IAAOsqB,GAAQhkB,UACxBgkB,EAASjT,KAAKhgB,MAAMg0B,WAAa,GAAKf,GAGxC,IAAIpoB,EAAO,CACT2M,YACAhK,SACA2J,cACAC,aACAC,iBACAC,kBACAlV,cACAH,UAAUsxB,EACVrxB,QAAQ+wB,GAGN5T,EAAOW,KAENA,KAAKhgB,MAAMwX,WAAsC,KAAzBwI,KAAKhgB,MAAMwX,UAatC2E,GAAuB,cAAetR,GACnCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SACjBsE,EAAK8V,kBAAkB,QACtB9V,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,aAActR,GAClCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC5BF,EAAK8V,kBAAkB,YAGzB/0B,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BAkDV,IAAD,OAEPH,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAM8oB,eAMtD,OACE,6BAeE,kBAACpP,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMo1B,aACjBhP,OAAQpG,KAAKmV,kBAAkBxV,KAAKK,KAAM,SAC1CqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBACnB8S,KAAKhgB,MAAM21B,WAAsC,KAAzB3V,KAAKhgB,MAAM21B,UAEjC,eADA,gBAIR,kBAACxP,GAAA,EAAMI,KAAP,KACE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACP,kBAAC/P,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,UAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,sBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,gBACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMmX,YAClBqK,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,kBAKpD,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,aAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,cAAD,CACE2Z,GAAG,OACH7Y,KAAK,YACLwmB,QAAQ,eACRC,aAAa,OACbC,IAAK/rB,MAASlH,OACd0wB,SAAO,EACPznB,MAAOsV,KAAKhgB,MAAM2yB,UAClBnR,SAAU,SAAA/f,GAAI,OACZ,EAAK+xB,gBAAgB,YAAa/xB,OAIxC,yBAAKyL,UAAU,cACb,kBAAC,eAAD,CACE2Z,GAAG,QACH7Y,KAAK,aACLwmB,QAAQ,eACRC,aAAc,QACdE,OAAK,EACLC,cAAY,EACZnzB,KAAMue,KAAKhgB,MAAM2yB,UACjBjoB,MAAOsV,KAAKhgB,MAAM0yB,WAClBlR,SAAU,SAAAhgB,GAAK,OACb,EAAKgyB,gBAAgB,aAAchyB,UAS/C,kBAAC6f,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,WAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,cAAD,CACE2Z,GAAG,OACH7Y,KAAK,UACLgU,WAAUhC,KAAKhgB,MAAMg0B,WACrBQ,QAAQ,eACRC,aAAa,OACbC,IAAK/rB,MAASlH,OACd0wB,SAAO,EACPznB,MAAOsV,KAAKhgB,MAAM8yB,QAClBtR,SAAU,SAAA/f,GAAI,OAAI,EAAKiyB,cAAc,UAAWjyB,OAGpD,yBAAKyL,UAAU,cACb,kBAAC,eAAD,CACE2Z,GAAG,QACH7Y,KAAK,WACLgU,WAAUhC,KAAKhgB,MAAMg0B,WACrBQ,QAAQ,eACRC,aAAc,QACdE,OAAK,EACLC,cAAY,EACZnzB,KAAMue,KAAKhgB,MAAM8yB,QACjBpoB,MAAOsV,KAAKhgB,MAAM6yB,SAClBrR,SAAU,SAAAhgB,GAAK,OACb,EAAKkyB,cAAc,WAAYlyB,QAmBvC,yBAAK0L,UAAU,cACb,kBAAC2nB,GAAA,EAAD,CACE3nB,UAAU,oBACV0B,QAASoR,KAAK+T,gBAAgBpU,KAAKK,MACnC8U,iBAAgB9U,KAAKhgB,MAAMsX,iBAH7B,uBAME,0BAAMpK,UAAU,cAqCxB,kBAACmU,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,gBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,qBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEgQ,eAAe,WACf/P,YAAY,cACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMoC,YAClBof,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,SAEX7W,EACC+S,KAAKvT,MAAMiV,sBAAsB,kBAKtC,kBAACL,GAAA,EAAD,CACCgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,UAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,qBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,mBACZvT,KAAK,aACLtD,MAAOsV,KAAKhgB,MAAMoX,WAClBoK,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,kBAKtD,yBAAKxU,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKmV,kBAAkBxV,KAAKK,KAAM,UAH7C,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GAtqBazV,aA+qBzBlH,GAAaoL,KAAWzC,KAAXyC,CAAqBpL,IAElC,IAMeqL,gBANS,SAAAviB,GACtB,MAAO,KAOP,KAFauiB,CAGbrL,ICpsBE3P,GAAqBL,EAAUK,mBAY7BmQ,IAXexQ,EAAUI,e,YAY7B,WAAYmF,GAAQ,IAAD,+BACjB,8CAAMA,KAiERmS,iBAAmB,WACjB,OAAO,EAAK5e,OAnEK,EAsEnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAxEZ,EAsFnB8W,qBAAuB,SAAA/qB,GAClBA,GACD,EAAKqU,SAAS,CACV1R,OAAO3C,EAAK2C,OACZpK,SAAWyH,EAAKzH,SAChBC,eAAiBwH,EAAKxH,eACtBC,KAAOuH,EAAKvH,KACZqU,QAAU9M,EAAK8M,QACfS,UAAWvN,EAAKuN,UAChBR,eAAiB/M,EAAK+M,eACtBC,aAAehN,EAAKgN,aACpBC,eAAiBjN,EAAKiN,eACtBC,qBAAuBlN,EAAKkN,qBAC5BC,yBAA2BnN,EAAKmN,yBAChCC,gBAAkBpN,EAAKoN,gBACvBC,gBAAkBrN,EAAKqN,mBArGZ,EA0GnB+G,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KAEpB,EAAKkR,SAAL,eACGlR,EAAOtD,KAhHO,EAoHnB8kB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eArHP,EAwHnBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aAzHP,EA4HnButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BhC,QAAQC,IAAI+B,GACZD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,GAAaC,GACXD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAGd,EAAKid,SAAS,CAAEjd,YAAWC,aArIV,EAqJnBkd,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GAElBgf,EAAKrf,MAAM61B,cAGfx1B,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,oBA9JI,EAyOnBqU,gBAAkB,WAChB,EAAK3U,SAAS,CACZ4U,aAAc,EAAK9zB,MAAM8zB,eA3OV,EAgPnBgC,qBAAuB,SAAAvR,GACrB,EAAKrF,SAAS,CACZjH,gBAAiBsM,KAlPF,EAsPnBwR,4BAA8B,SAAAxR,GAC5B,EAAKrF,SAAS,CACZhH,gBAAiBqM,KAxPF,EA8PnByR,wBAA0B,SAAAjb,GACxB,EAAKmE,SAAS,CACZ+W,oBAAoB,IAGtB,EAAKxpB,MAAMypB,+BAjQX,EAAKl2B,MAAQ,CACXuf,WAAW,EACXtd,UAAW,GACXC,QAAS,GACTkyB,sBAAsB,EACtB5mB,OAAQ,GACRwmB,YAAY,EACZrB,UAAWhqB,MAASub,OAAO,QAC3BwO,WAAY/pB,MAASub,OAAO,KAAO,EACnCuO,SAAU9pB,MAASub,OAAO,KAC1B4O,QAASnqB,MAASub,OAAO,QACzB2O,SAAUlqB,MAASub,OAAO,KAAO,EACjC0O,OAAQjqB,MAASub,OAAO,KACxBmP,QAAS1qB,MAASub,OAAO,QACzBoP,SAAU3qB,MAASub,OAAO,KAAO,EACjCkP,OAAQzqB,MAASub,OAAO,KACxBhhB,YAAY,GACZC,aAAa,GACb8yB,oBAAmB,EACnB7d,UAAU,GACVkd,cAAe,GACfa,aAAc,CAAC,CACPzrB,MAAO,EACPoa,MAAO,UACP,CACEpa,MAAO,EACPoa,MAAO,UACP,CACEpa,MAAO,EACPoa,MAAO,UAEnBsR,oBAAoB,CAAC,CACnB1rB,MAAO,EACPoa,MAAO,eACP,CACEpa,MAAO,EACPoa,MAAO,MACP,CACEpa,MAAO,EACPoa,MAAO,WAIf,EAAKlG,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,CACE1c,SAAU,WACVC,eAAgB,WAChBC,KAAM,WACN2U,gBAAiB,WACjBC,gBAAiB,YAGnB,CACE,oBAAqB3Q,GAAmBnE,SAAS7C,SAChD,0BAA2BgH,GAAmBlE,eAAe9C,SAC9D,gBAAiBgH,GAAmBjE,KAAK/C,SACzC,2BAA4BgH,GAAmB0Q,gBAAgB1X,SAC/D,2BAA4BgH,GAAmB2Q,gBAAgB3X,WA7DlD,E,mFAgFjBL,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAM4pB,qBACtDrW,KAAK4V,qBAAqB5V,KAAKvT,MAAM4pB,uB,yCAuDnB,IAAD,OACjBla,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAoBjB,IAAIzf,EAAW4c,KAAKhgB,MAAMoD,SACtBC,EAAiB2c,KAAKhgB,MAAMqD,eAC5BC,EAAO0c,KAAKhgB,MAAMsD,KAClBqU,EAAUqI,KAAKhgB,MAAM2X,QAErBC,EAAiBoI,KAAKhgB,MAAM4X,eAC5BC,EAAgBmI,KAAKhgB,MAAM6X,aAC3BC,EAAiBkI,KAAKhgB,MAAM8X,eAC5BC,EAAuBiI,KAAKhgB,MAAM+X,qBAClCC,EAA4BgI,KAAKhgB,MAAMgY,yBACvCC,EAAiB,GACrB+H,KAAKhgB,MAAMiY,gBAAgBtH,SAAQ,SAASmgB,GAC3C7Y,EAAgBgJ,KAAK6P,EAAKhM,UAE3B,IAAI5M,EAAkB,GACtB8H,KAAKhgB,MAAMkY,gBAAgBvH,SAAQ,SAASmgB,GAC3C5Y,EAAgB+I,KAAK6P,EAAKhM,UAG1B,IAAItX,EAASwS,KAAKvT,MAAM8T,KAAK/S,OAIzB3C,EAAO,CACTuN,UAJc4H,KAAKhgB,MAAMoY,UAKzB5K,SACApK,WACAC,iBACAC,OACAqU,UACAC,iBACAC,eACAC,iBACAC,uBACAC,2BACAC,kBACAC,mBAGEmH,EAAOW,KAENA,KAAKhgB,MAAMoY,WAAsC,KAAzB4H,KAAKhgB,MAAMoY,UAatC+D,GAAuB,yBAA0BtR,GAC9CnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAK2W,wBAAwB,QAC7B3W,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,mBAAoBtR,GACxCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAK2W,wBAAwB,YAGhC51B,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BAgDlBH,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAM4pB,qBAMtD,OACE,6BACE,kBAAClQ,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMi2B,mBACjB7P,OAAQpG,KAAKgW,wBAAwBrW,KAAKK,KAAM,SAChDqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBACnB8S,KAAKhgB,MAAMoY,WAAuC,KAA1B4H,KAAKhgB,MAAMs2B,WAEjC,sBADA,uBAIR,kBAACnQ,GAAA,EAAMI,KAAP,KAEE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACR,kBAAC/P,GAAA,EAAD,KACG,kBAAC8P,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,YAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACQgQ,eAAe,SACf/P,YAAY,WACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMoD,SAClBoe,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEd,4BAAQpZ,MAAM,IAAd,YACA,4BAAQA,MAAO,GAAf,OAETuC,EACS+S,KAAKvT,MAAMiV,sBAAsB,gBAK3C,kBAACL,GAAA,EAAD,KACE,kBAAC8P,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,mBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BACtB,kBAACoU,GAAA,EAAD,CACUgQ,eAAe,SACf/P,YAAY,iBACZvT,KAAK,iBACLtD,MAAOsV,KAAKhgB,MAAMqD,eAClBme,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,kBACA,4BAAQA,MAAO,GAAf,sBAGNuC,EACS+S,KAAKvT,MAAMiV,sBAAsB,sBAM3C,kBAACL,GAAA,EAAD,KACE,kBAAC8P,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,QAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BACtB,kBAACoU,GAAA,EAAD,CACUgQ,eAAe,SACf/P,YAAY,OACZvT,KAAK,OACLtD,MAAOsV,KAAKhgB,MAAMsD,KAClBke,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,QACA,4BAAQA,MAAO,GAAf,sBACA,4BAAQA,MAAO,GAAf,aACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cAENuC,EACS+S,KAAKvT,MAAMiV,sBAAsB,YAQ3C,kBAACL,GAAA,EAAD,CAAWgQ,UAAU,0BACjB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,YAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,UACLd,UAAU,gBACVxC,MAAM,YACNwoB,QACyB,cAAvBlT,KAAKhgB,MAAM2X,QAEb6J,SAAUxB,KAAKf,cAPjB,WAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,UACLd,UAAU,gBACVxC,MAAM,SACNwoB,QACyB,gBAAvBlT,KAAKhgB,MAAM2X,QAEb6J,SAAUxB,KAAKf,cAPjB,cAUE,yBAAK/R,UAAU,WACR,OAKd,kBAACmU,GAAA,EAAD,CAAWgQ,UAAU,0BACpB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,mBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,MAAM,OACNwoB,QACgC,SAA9BlT,KAAKhgB,MAAM4X,eAEb4J,SAAUxB,KAAKf,cAPjB,YAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,MAAM,OACNwoB,QACgC,SAA9BlT,KAAKhgB,MAAM4X,eAEb4J,SAAUxB,KAAKf,cAPjB,YAUE,yBAAK/R,UAAU,WACR,OAMf,kBAACmU,GAAA,EAAD,CAAWgQ,UAAU,0BACnB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,mBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,eACLd,UAAU,gBACVxC,MAAM,MACNwoB,QAC8B,QAA5BlT,KAAKhgB,MAAM6X,aAEb2J,SAAUxB,KAAKf,cAPjB,MAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,eACLd,UAAU,gBACVxC,MAAM,QACNwoB,QAC8B,UAA5BlT,KAAKhgB,MAAM6X,aAEb2J,SAAUxB,KAAKf,cAPjB,QAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,eACLd,UAAU,gBACVxC,MAAM,WACNwoB,QAC8B,aAA5BlT,KAAKhgB,MAAM6X,aAEb2J,SAAUxB,KAAKf,cAPjB,WAUE,yBAAK/R,UAAU,WACR,OAKX,kBAACmU,GAAA,EAAD,CAAWgQ,UAAU,0BACvB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,mBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QACgC,WAA9BlT,KAAKhgB,MAAM8X,eAEb0J,SAAUxB,KAAKf,cAPjB,SAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QACgC,WAA9BlT,KAAKhgB,MAAM8X,eAEb0J,SAAUxB,KAAKf,cAPjB,SAUE,yBAAK/R,UAAU,WACR,OAKhB,kBAACmU,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,oBACrC,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,oBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEA,UAAU,eACVqpB,OAAK,EACLvoB,KAAK,kBACLtD,MAAOsV,KAAKhgB,MAAMiY,gBAClBuJ,SAAUxB,KAAK8V,qBACflQ,QAAS5F,KAAKhgB,MAAMm2B,aACpB5U,YAAY,yDAGftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,sBAIpD,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,WACpC,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,oBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEA,UAAU,eACVqpB,OAAK,EACLvoB,KAAK,kBACLtD,MAAOsV,KAAKhgB,MAAMkY,gBAClBsJ,SAAUxB,KAAK+V,4BACfnQ,QAAS5F,KAAKhgB,MAAMo2B,oBACpB7U,YAAY,yDAGftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,uBAMtD,yBAAKxU,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKgW,wBAAwBrW,KAAKK,KAAM,UAHnD,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GAjmBmBzV,cA0mB/B1G,GAAmB4K,KAAWzC,KAAXyC,CAAqB5K,IAExC,IAMe6K,gBANS,SAAAviB,GACtB,MAAO,KAOP,KAFauiB,CAGb7K,ICjoBEnQ,GAAqBL,EAAUK,mBAU7B4uB,IATejvB,EAAUI,eASZ,CACnB,CAACkvB,WAAW,EAAExoB,KAAK,UAAW,CAACwoB,WAAW,EAAExoB,KAAK,UAAU,CAACwoB,WAAW,EAAExoB,KAAK,UAExEyoB,G,YACJ,WAAYhqB,GAAQ,IAAD,+BACjB,8CAAMA,KA+DRmS,iBAAmB,WACjB,OAAO,EAAK5e,OAjEK,EAoEnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAtEZ,EAqHnBoW,eAAiB,SAAArqB,GACXA,GACF,EAAKqU,SAAS,CACV1R,OAAO3C,EAAK2C,OACZ8H,cAAgBzK,EAAKyK,cACrB/S,OAAOsI,EAAKtI,OACZd,KAAMoJ,EAAKmO,iBACXxX,MAAOqJ,EAAKoO,kBACZ/Z,SAAU2L,EAAKqO,gBACf1V,SAAUqH,EAAKrH,SACfD,YAAasH,EAAKtH,aAAesH,EAAKtH,YAAY,IAAMsH,EAAKtH,YAAY,GAAGmzB,iBA/HjE,EAiJnBtX,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GAElBgf,EAAKrf,MAAM61B,cAEfx1B,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,oBAzJI,EAwNnBqU,gBAAkB,WAChB,EAAK3U,SAAS,CACZ4U,aAAc,EAAK9zB,MAAM8zB,eA1NV,EA8NnB7U,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KACpB,EAAKkR,SAAL,eACGlR,EAAOtD,KAnOO,EAuOnBisB,0BAA4B,SAAA5b,GAC1B,EAAKmE,SAAS,CACZ0X,sBAAsB,IAGxB,EAAKnqB,MAAMoqB,iCA1OX,EAAK72B,MAAQ,CACXuf,WAAW,EACXtd,UAAW,GACXC,QAAS,GACTkyB,sBAAsB,EACtB5mB,OAAQ,GACRwmB,YAAY,EACZrB,UAAWhqB,MAASub,OAAO,QAC3BwO,WAAY/pB,MAASub,OAAO,KAAO,EACnCuO,SAAU9pB,MAASub,OAAO,KAC1B4O,QAASnqB,MAASub,OAAO,QACzB2O,SAAUlqB,MAASub,OAAO,KAAO,EACjC0O,OAAQjqB,MAASub,OAAO,KACxBmP,QAAS1qB,MAASub,OAAO,QACzBoP,SAAU3qB,MAASub,OAAO,KAAO,EACjCkP,OAAQzqB,MAASub,OAAO,KACxBhhB,YAAY,GACZC,aAAa,GACbyzB,sBAAqB,EACrBpf,UAAU,GACV8d,cAAe,GACfwB,gBAAgB,IAGlB,EAAKlY,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,CACEvc,YAAa,WACb9B,KAAK,WACLD,MAAM,WACNtC,SAAS,WACTsE,SAAU,YAUZ,CACE,uBAAwB+D,GAAmBhE,YAAYhD,SACvD,gBAAiBgH,GAAmB9F,KAAKlB,SACzC,iBAAkBgH,GAAmB/F,MAAMjB,SAC3C,oBAAqBgH,GAAmBrI,SAASqB,SACjD,oBAAqBgH,GAAmB/D,SAASjD,WAjDpC,E,mFA4EJyf,KAAKvT,MAAM8T,KAAK/S,OAE7BtN,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAM6a,aACtDtH,KAAKkV,eAAelV,KAAKvT,MAAM6a,aAC/BtH,KAAKlJ,uB,2CAkBc,IAAD,OAClBqF,GAAuB,sBACtBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAI+b,EAAiB,EAAK92B,MAAM82B,gBAIhCA,EAAgBha,EAASjS,KAAKwD,OAC9BnO,QAAQC,IAAI22B,GACZ,EAAK5X,SAAS,CAAC4X,gBAAiBA,QAGnC12B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAoBI,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAmBhB,IAAI6T,EAAgB1W,KAAKhgB,MAAMuD,YAC3BA,EAAc,GACduzB,EAAiB9W,KAAKhgB,MAAM82B,gBAC5BlkB,EAAOkkB,EAAgB3jB,WAAU,SAAAC,GAAI,OAAIA,EAAKsjB,eAAiBA,KAEnEnzB,EAAY0d,KAAK6V,EAAgBlkB,IAEjC,IAAIoG,EAAmBgH,KAAKhgB,MAAMyB,KAC9BwX,EAAoB+G,KAAKhgB,MAAMwB,MAC/B0X,EAAkB8G,KAAKhgB,MAAMd,SAC7BsE,EAAWwc,KAAKhgB,MAAMwD,SACtBjB,EAASyd,KAAKhgB,MAAMuC,OACpBiL,EAASwS,KAAKvT,MAAM8T,KAAK/S,OAGzB3C,EAAO,CACTyK,cAHkB0K,KAAKhgB,MAAMsV,cAI7B9H,SACAjK,cACAyV,mBACAC,oBACAC,kBACA1V,WACAjB,SACA4P,OAVW6N,KAAKvT,MAAM8T,KAAKpO,QAazBkN,EAAOW,KAENA,KAAKhgB,MAAMsV,eAA8C,KAA7B0K,KAAKhgB,MAAMsV,cAa1C6G,GAAuB,kBAAmBtR,GACvCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SACjBsE,EAAKsX,0BAA0B,QAC9BtX,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,gBAAiBtR,GACrCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC5BF,EAAKsX,0BAA0B,YAGjCv2B,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BA8ClB,OACE,6BAeE,kBAAC8lB,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAM42B,qBACjBxQ,OAAQpG,KAAK2W,0BAA0BhX,KAAKK,KAAM,SAClDqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBACnB8S,KAAKhgB,MAAMsV,eAA8C,KAA7B0K,KAAKhgB,MAAMsV,cAErC,eADA,gBAIR,kBAAC6Q,GAAA,EAAMI,KAAP,KACE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACT,kBAAC/P,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,gBAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,cACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMuD,YAClBie,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,GAAGsX,UAAQ,GAAzB,YACChC,KAAKhgB,MAAM82B,gBAAgB/I,KAAI,SAACgJ,EAAK5nB,GAAN,OAChC,4BAAQzE,MAAOqsB,EAAIL,eAAgBK,EAAIxzB,iBAGrC0J,EACC+S,KAAKvT,MAAMiV,sBAAsB,uBAS/B,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACjC,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,cAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,OACZvT,KAAK,OACLtD,MAAOsV,KAAKhgB,MAAMyB,KAClB+f,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,GAAGsX,UAAQ,GAAzB,SACA,4BAAQtX,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,aAEEuC,EACC+S,KAAKvT,MAAMiV,sBAAsB,UAGrC,yBAAKxU,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,QACZvT,KAAK,QACLtD,MAAOsV,KAAKhgB,MAAMwB,MAClBggB,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEZ,4BAAQpZ,MAAM,GAAGsX,UAAQ,GAAzB,SACD,4BAAQtX,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,eAIDuC,EAAc+S,KAAKvT,MAAMiV,sBAAsB,YAGrD,6BAEF,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,oBAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,WACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMd,SAClBsiB,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,YACCyrB,GAAapI,KAAI,SAACgJ,EAAK5nB,GAAN,OACf,4BAAQzE,MAAOqsB,EAAIP,YAAaO,EAAI/oB,UAIrCf,EACC+S,KAAKvT,MAAMiV,sBAAsB,wBAS3C,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,gBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,kBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,eACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMwD,SAClBge,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EACC+S,KAAKvT,MAAMiV,sBAAsB,gBAKzC,yBAAKxU,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAK2W,0BAA0BhX,KAAKK,KAAM,UAHrD,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GAvdqBzV,aAgejCqY,GAAqBnU,KAAWzC,KAAXyC,CAAqBmU,IAE1C,IAMelU,gBANS,SAAAviB,GACtB,MAAO,KAOP,KAFauiB,CAGbkU,ICzfElvB,GAAqBL,EAAUK,mBAY7ByvB,IAXe9vB,EAAUI,e,YAY7B,WAAYmF,GAAQ,IAAD,+BACjB,8CAAMA,KAyCRmS,iBAAmB,WACjB,OAAO,EAAK5e,OA3CK,EA8CnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAhDZ,EAmFnBmY,cAAgB,SAAApsB,GACd3K,QAAQC,IAAI0K,GACTA,GACD,EAAKqU,SAAS,CACV1R,OAAO3C,EAAK2C,OACZ0pB,gBAAkBrsB,EAAKtI,OACvB+S,cAAezK,EAAKyK,iBAzFT,EA8FnB2J,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KAEpB,EAAKkR,SAAL,eACGlR,EAAOtD,KApGO,EAwGnB8kB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eAzGP,EA4GnBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aA7GP,EAgHnButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BhC,QAAQC,IAAI+B,GACZD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,GAAaC,GACXD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAGd,EAAKid,SAAS,CAAEjd,YAAWC,aAzHV,EAyInBkd,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GACtBA,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,oBA9II,EAmMnBqU,gBAAkB,WAChB,EAAK3U,SAAS,CACZ4U,aAAc,EAAK9zB,MAAM8zB,eArMV,EA0MnBqD,mBAAqB,SAAA5S,GACnB,EAAKrF,SAAS,CACZ3c,OAAQgiB,KA5MO,EAiNnB6S,iBAAmB,SAAArc,GACjB,EAAKmE,SAAS,CACZmY,aAAa,IAEf,EAAK5qB,MAAM6qB,wBAnNX,EAAKt3B,MAAQ,CACXuf,WAAW,EACX6U,sBAAsB,EACtB5mB,OAAQ,GACR6pB,aAAY,EACZ7d,QAAQ,GACR+d,OAAO,GACPC,WAAW,GACXN,gBAAgB,IAGlB,EAAKtY,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,CACEvd,OAAQ,WACRg1B,OAAQ,YAUV,CACE,kBAAmBhwB,GAAmBhF,OAAOhC,SAC5C,kBAAmBgH,GAAmBgwB,OAAOh3B,WA9BjC,E,mFAqDjB,IAAIiN,EAAQ,KACTwS,KAAKvT,MAAM8T,OACZ/S,EAASwS,KAAKvT,MAAM8T,KAAK/S,OACzBwS,KAAKd,SAAS,CAAC1R,OAAQA,KAEzBwS,KAAKiX,cAAcjX,KAAKvT,MAAMgrB,cAE9BzX,KAAKnJ,qB,uCAGUrJ,GAAQ,IAAD,OACtB2O,GAAuB,oBACtBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIyc,EAAY,EAAKx3B,MAAMw3B,WACvBN,EAAiB,EAAKzqB,MAAMgrB,cAAgB,EAAKhrB,MAAMgrB,aAAal1B,OAAQ,EAAKkK,MAAMgrB,aAAal1B,OAAO,GAC/Gua,EAASjS,KAAKwD,OAAOsC,SAAQ,SAAS9F,IAElB,IADFqsB,EAAgB/jB,WAAU,SAAAC,GAAI,OAAIA,EAAKoG,SAAW3O,EAAK2O,YAEtEge,EAAWvW,KAAK,CAAC6D,MAAOja,EAAK6sB,UAAUhtB,MAAMG,EAAK2O,aAEtDtZ,QAAQC,IAAIq3B,GACX,EAAKtY,SAAS,CAACsY,WAAYA,QAG/Bp3B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCA6CI,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAejB,IAAI0U,EAASvX,KAAKhgB,MAAMu3B,OACpBL,EAAkBlX,KAAKvT,MAAMgrB,aAAal1B,OAC1CA,EAASyd,KAAKhgB,MAAMuC,OACvBrC,QAAQC,IAAI6f,KAAKhgB,MAAMuC,QAEvB20B,EAAgBjW,KAAK,CAAC,QAAU1e,EAAOmI,MAAM,UAAYnI,EAAOuiB,MAAM,OAASyS,IAE/E,IAAI/pB,EAASwS,KAAKvT,MAAM8T,KAAK/S,OAEzB8H,GADU0K,KAAKhgB,MAAMwZ,QACNwG,KAAKvT,MAAMgrB,aAAaniB,cAAe0K,KAAKvT,MAAMgrB,aAAaniB,cAAc,IAEhGpV,QAAQC,IAAI,gBAAgBmV,GAC5B,IAAIzK,EAAO,CACTyK,gBACA9H,SACAjL,OAAO20B,GAGL7X,EAAOW,KAENA,KAAKhgB,MAAMsV,eAA8C,KAA7B0K,KAAKhgB,MAAMsV,cAa1C6G,GAAuB,iBAAkBtR,GACtCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAK+X,iBAAiB,QACtB/X,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,gBAAiBtR,GACrCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAK+X,iBAAiB,YAGzBh3B,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BA4ClB,OACE,6BAeE,kBAAC8lB,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMq3B,YACjBjR,OAAQpG,KAAKoX,iBAAiBzX,KAAKK,KAAM,SACzCqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBACnB8S,KAAKhgB,MAAMoY,WAAuC,KAA1B4H,KAAKhgB,MAAMs2B,WAEjC,sBADA,uBAIR,kBAACnQ,GAAA,EAAMI,KAAP,KAEE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACN,kBAAC/P,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,WACrC,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,cAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEA,UAAU,eACVc,KAAK,SACLtD,MAAOsV,KAAKhgB,MAAMuC,OAClBif,SAAUxB,KAAKmX,mBACfvR,QAAS5F,KAAKhgB,MAAMw3B,WACpBjW,YAAY,kBAGftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,aAItD,kBAACL,GAAA,EAAD,KACI,kBAAC8P,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,QAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BACtB,kBAACoU,GAAA,EAAD,CACUgQ,eAAe,SACf/P,YAAY,SACZvT,KAAK,SACLtD,MAAOsV,KAAKhgB,MAAMu3B,OAClB9C,aAAcphB,SAAS2M,KAAKhgB,MAAMu3B,OAAO,IACzC/V,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,iBACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,MAENuC,EACS+S,KAAKvT,MAAMiV,sBAAsB,eAO7C,yBAAKxU,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKoX,iBAAiBzX,KAAKK,KAAM,UAH5C,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GA/VYzV,cAwWxB4Y,GAAY1U,KAAWzC,KAAXyC,CAAqB0U,IACjC,IAMezU,gBANS,SAAAviB,GACtB,MAAO,KAOP,KAFauiB,CAGbyU,I,oBClXIW,IAZmBzwB,EAAUK,mBACdL,EAAUI,e,YAY7B,WAAYmF,GAAQ,IAAD,+BACjB,8CAAMA,KAmDRwS,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KAEpB,EAAKkR,SAAL,eACGlR,EAAOtD,KA1DO,EA8EnB0U,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GAElBgf,EAAKrf,MAAM61B,cAGfx1B,EAIDgf,EAAKG,gBAHPH,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,oBAvFI,EAgJnBoY,gBAAkB,SAAA7c,GAChB,EAAKmE,SAAS,CACZmY,aAAa,IAGf,EAAK5qB,MAAMorB,uBAnJX,EAAK73B,MAAQ,CACXuf,WAAW,EACX6U,sBAAsB,EACtB5mB,OAAQ,GACRsqB,YAAW,EACXte,QAAQ,GACRue,MAAO,CACLjN,IAAK,2CACLkN,OAAQ,oDAVK,E,0HAuBLC,GACZ/3B,QAAQC,IAAI,oBAAqB83B,GACjCjY,KAAKiY,OAASA,I,kCAGNC,GACRh4B,QAAQC,IAAI,oBAAqB+3B,K,mCAGxBA,GACTh4B,QAAQC,IAAI,oBAAqB+3B,K,wCAGnBA,GACdh4B,QAAQC,IAAI,iBAAkB+3B,K,qCAGnBA,GACXh4B,QAAQC,IAAI,kBAAmB+3B,K,oCAGrBC,EAAMtW,GAChB3hB,QAAQC,IAAR,4BAAiCg4B,EAAjC,eAA4CtW,M,mCAI5C3hB,QAAQC,IAAI,iB,yCAgBM,IAAD,OACjBgc,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAsBjB,IAAI0U,EAASvX,KAAKhgB,MAAMu3B,OAEpBh1B,EAAS,GACbyd,KAAKhgB,MAAMuC,OAAOoO,SAAQ,SAASmgB,GAClCvuB,EAAO0e,KAAK6P,EAAKhM,UAGjB,IACItL,EAAUwG,KAAKhgB,MAAMwZ,QAGrB3O,EAAO,CACT0sB,SACA/pB,OANW,GAOXjL,SACAiX,WAGE6F,EAAOW,KAENA,KAAKhgB,MAAMwZ,SAAkC,KAAvBwG,KAAKhgB,MAAMwZ,QAapC2C,GAAuB,iBAAkBtR,GACtCnL,MAAK,SAAAod,GAC6B,MAA7BA,EAASjS,KAAK4qB,aAChBpW,EAAKuY,gBAAgB,QACrBvY,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,gBAAiBtR,GACrCnL,MAAK,SAAAod,GAC6B,MAA7BA,EAASjS,KAAK4qB,aAChBpW,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAKuY,gBAAgB,YAGxBx3B,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BAgClB,OACE,6BAeE,kBAAC8lB,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAM83B,WACjB1R,OAAQpG,KAAK4X,gBAAgBjY,KAAKK,KAAM,SACxCqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,0BAMzB,kBAACiZ,GAAA,EAAMI,KAAP,KAKR,kBAAC,KAAD,CACkB6R,UAAU,EACVtN,IAAI,iFACJkN,OAAQhY,KAAKhgB,MAAM+3B,MAAMC,OACzBhN,MAAM,MACND,OAAO,MACPsN,QAASrY,KAAKsY,cAAc3Y,KAAKK,MACjCuY,OAAQvY,KAAKwY,YAAY7Y,KAAKK,MAC9ByY,QAASzY,KAAK0Y,aAAa/Y,KAAKK,MAChC2Y,aAAc3Y,KAAK4Y,kBAAkBjZ,KAAKK,MAC1C6Y,UAAW7Y,KAAK8Y,eAAenZ,KAAKK,MACpC+Y,SAAU/Y,KAAKgZ,cAAcrZ,KAAKK,MAClCiZ,MAAOjZ,KAAKkZ,WAAWvZ,KAAKK,SAkBtC,kBAACmG,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAK4X,gBAAgBjY,KAAKK,KAAM,UAH3C,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GAvQoBzV,cCE1BzC,ID8QNgc,GAAoBrV,KAAWzC,KAAXyC,CAAqBqV,IC9Q1B,CACbwB,WAAY,YACZC,QAAS,SACTC,OAAQ,aACRC,YAAa,uBACbC,gBAAiB,6CASbC,G,YACJ,WAAY/sB,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KAyDR6f,eAAiB,SAAAzhB,GAEf,GAAIA,EAAM,CACR,IAAI2C,EAAS3C,EAAK2C,OACdzL,EAAU8I,EAAK9I,QACff,EAAY6J,EAAK7J,UACjBE,EAAW2J,EAAK3J,SAGhBZ,EAAOuK,EAAKvK,MACZisB,EAAU1hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAC/C+L,EAAU3hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAE/CzS,GACDnD,EAAK7J,UAAY6J,EAAK7J,UAAY,IACnC,KACC6J,EAAK3J,SAAW2J,EAAK3J,SAAW,IAC/BurB,EAAe5hB,EAAKoQ,eACpBwR,IACFA,EAAeA,GAEjB,IAAIC,EAAa7hB,EAAK6hB,WAClBA,IACFA,EAAajd,EAAc,WAAYid,IAEzC,IAAI7gB,EAAWhB,EAAKgB,SACpB,EAAKqT,SAAS,CACZsN,UACAzqB,UACAf,YACAE,WACAsM,SACAlN,QACAmsB,eACAC,aACAH,UACA1gB,WACAmC,WA/FsB,EA8K5Bmf,eAAiB,WACf,IAAI3f,EAAS,EAAKxN,MAAMwN,OACxB,EAAKf,MAAM4Q,6BAA6B7P,IAhLd,EAgN5BisB,mBAAqB,SAAA5uB,GACnB3K,QAAQC,IAAI,QAAQ0K,GAChBA,GACF,EAAKqU,SAAS,CACV5J,cAAgBzK,EAAKyK,cACrB/S,OAAOsI,EAAKtI,OACZd,KAAMoJ,EAAKmO,iBACXxX,MAAOqJ,EAAKoO,kBACZ/Z,SAAU2L,EAAKqO,gBACf1V,SAAUqH,EAAKrH,SACf+R,UAAW1K,EAAK0K,UAChBC,WAAW3K,EAAK2K,WAChBjS,YAAasH,EAAKtH,YAAY,GAAGmzB,iBA5Nb,EAkO3BgD,uBAAyB,SAAA/tB,GACxB,EAAKuT,SAAS,CACZwa,wBAAyB,EAAK15B,MAAM05B,yBAElC,EAAK15B,MAAM05B,wBACZ,EAAKxa,SAAS,CAACwR,gBAAmB,QAvOX,EA6O5BiJ,wBAA0B,SAAAhuB,GACxB,EAAKuT,SAAS,CACZya,yBAA0B,EAAK35B,MAAM25B,0BAEnC,EAAK35B,MAAM25B,0BACZ,EAAKza,SAAS,CAACmV,iBAAoB,OACnC,EAAKuF,kBAAkB,EAAK55B,MAAMwN,UAnPX,EAuP5BqsB,oBAAsB,SAAAluB,GACpB,EAAKuT,SAAS,CACZ2a,qBAAsB,EAAK75B,MAAM65B,sBAG/B,EAAK75B,MAAM65B,qBAEZ,EAAKC,cAAc,EAAK95B,MAAMwN,SA9PP,EAkQ5BqsB,oBAAsB,SAAAluB,GACpB,EAAKuT,SAAS,CACZ2a,qBAAsB,EAAK75B,MAAM65B,sBAG/B,EAAK75B,MAAM65B,qBAEZ,EAAKC,cAAc,EAAK95B,MAAMwN,SAzQP,EA6Q5BusB,6BAA+B,SAAApuB,GAC7B,EAAKuT,SAAS,CACZ6a,8BAA+B,EAAK/5B,MAAM+5B,+BAGxC,EAAK/5B,MAAM+5B,8BAEZ,EAAKD,cAAc,EAAK95B,MAAMwN,SApRP,EAwR5BwsB,qBAAuB,SAAAruB,GACrB,EAAKuT,SAAS,CACZ8a,sBAAuB,EAAKh6B,MAAMg6B,uBAGhC,EAAKh6B,MAAMg6B,uBACZ,EAAK9a,SAAS,CAACqW,cAAiB,OAChC,EAAK0E,gBAAgB,EAAKj6B,MAAMwN,UA/RT,EAmS5B0sB,2BAA6B,SAAAvuB,GAC3B,EAAKuT,SAAS,CACZgb,4BAA6B,EAAKl6B,MAAMk6B,6BAGtC,EAAKl6B,MAAMk6B,6BACZ,EAAKhb,SAAS,CAACmX,oBAAuB,OACtC,EAAK8D,qBAAqB,EAAKn6B,MAAMwN,UA1Sd,EA8S5BigB,mBAAqB,SAAA9hB,GACnB,EAAKuT,SAAS,CACZuO,oBAAqB,EAAKztB,MAAMytB,sBAhTR,EAoT5B2M,uBAAyB,SAAA1J,GACvBxwB,QAAQC,IAAIuwB,GACZ,EAAKxR,SAAS,CACZwR,gBAAiBA,EACjBgJ,wBAAyB,EAAK15B,MAAM05B,0BAxTZ,EA4T5BW,wBAA0B,SAAAhG,GACxBn0B,QAAQC,IAAIk0B,GACZ,EAAKnV,SAAS,CACZmV,iBAAkBA,EAClBsF,yBAA0B,EAAK35B,MAAM25B,2BAhUb,EAoU5BW,oBAAsB,SAAA7C,GACpB,EAAKvY,SAAS,CACZuY,aAAcA,EACdoC,qBAAsB,EAAK75B,MAAM65B,uBAvUT,EA2U5BU,qBAAuB,SAAAhF,GACrBr1B,QAAQC,IAAIo1B,GACZ,EAAKrW,SAAS,CACZqW,cAAeA,EACfyE,sBAAuB,EAAKh6B,MAAMg6B,wBA/UV,EAmV5BQ,2BAA6B,SAAAnE,GAC3Bn2B,QAAQC,IAAIk2B,GACZ,EAAKnX,SAAS,CACZmX,oBAAqBA,EACrB6D,4BAA6B,EAAKl6B,MAAMk6B,8BAvVhB,EAwW5B9M,eAAiB,WACf,EAAKlO,SAAS,CACZmO,cAAe,EAAKrtB,MAAMqtB,gBA1WF,EA8W5BpO,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SA/WxB,EAoX5B0hB,gBAAkB,WAChBntB,OAAOotB,SAAS,IAAK,GAErB,EAAKnN,SAAS,CAAEkN,iBAAkB,EAAKpsB,MAAMosB,mBAvXnB,EA0X5BqO,oBAAsB,WACpB,IAAIjO,EAAU,EAAKxsB,MAAMusB,QAAU,EAAKvsB,MAAMusB,QAAU,GACxD,EAAKrN,SAAS,CACZyO,aAAc,EAAK3tB,MAAM2tB,YACzBnB,QAASA,KA9Xe,EAmY5BkO,YAAc,WACZ,IAAIltB,EAAS,EAAKxN,MAAMwN,OACpB+e,EAAU,EAAKvsB,MAAMwsB,QACrB3hB,EAAO,CACT2C,SACA+e,WAGF,EAAK9f,MAAMoR,qBAAqB,CAAE0O,YAClCpQ,GAAuB,oBAAqBtR,GACzCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKmE,SAAS,CAAEyO,aAAa,OAGhCvtB,OAAM,SAAAyiB,GACL,EAAK3D,SAAS,CAAEyO,aAAa,IAC7BztB,QAAQC,IAAI0iB,OApZU,EA2Z5B8X,SAAW,WACI,EAAK36B,MAAMwN,OAAxB,IACIQ,EAAO,EAAKhO,MAAMgO,KAAKyS,OAC3B,GAAIzS,EAAM,CACR,IAAI4sB,EAAW5sB,EAAKe,MAAM,KAAKgf,KAAI,SAAS+C,EAAMle,GAChD,GAAIke,EAAKriB,OAAS,EAChB,OAAOqiB,KAIP9vB,EAAY45B,EAASnsB,OAAS,EAAImsB,EAAS,GAAK,GACpD,GAAIA,EAASnsB,OAAS,EACpB,IAAIvN,EAAW05B,EAASpsB,MAAM,GAAGqsB,KAAK,KAGxC,GAAI75B,GAAaA,EAAUyN,OAAS,GAClChD,EACE,+DAEG,GAAIvK,GAAYA,EAASuN,OAAS,GACvChD,EAAe,6DACV,CAML,EAAKgB,MAAMoR,qBAAqB,CAAE7c,YAAWE,mBAa/C,EAAKge,SAAS,CAAEwO,UAAU,KAncF,EAuc5BoN,iBAAmB,WACjB,IAAI9sB,GACD,EAAKhO,MAAMgB,UAAY,EAAKhB,MAAMgB,UAAY,IAC/C,KACC,EAAKhB,MAAMkB,SAAW,EAAKlB,MAAMkB,SAAW,IAC/C,EAAKge,SAAS,CACZwO,UAAU,EACV1f,KAAMA,KA9ckB,EAme5B+sB,eAAiB,SAAC9sB,EAAYT,GAC1B,IAAIyN,EAAiBhN,EACjBpD,EAAO,CACT2C,SACAyN,kBAEF,EAAKxO,MAAMoR,qBAAqB,CAAE5C,mBAClCkB,GAAuB,qBAAsBtR,IA1erB,EA6e5Bud,kBAAoB,SAACpW,EAAQrG,GACZA,EAAMwT,OAAOkJ,MAAM,GAAGra,KACrCgtB,KACCC,WAAWtvB,EAAMwT,OAAOkJ,MAAM,GAAI1M,IAClCjc,MAAK,SAAAmL,GAEJ,IAAI2C,EAAQ,EAAKxN,MAAMwN,OACnByN,EAAiBpQ,EAAK3L,SACtBg8B,EAAc,CAChB1tB,SACAyN,kBAEF,EAAKxO,MAAMoR,qBAAqB,CAAE5C,mBAClCkB,GAAuB,qBAAsB+e,OA1frB,EAghB5BC,YAAa,SAAAxvB,GACXzL,QAAQC,IAAIwL,EAAMwT,OAAOkJ,MAAM,IAC/B,IAAIva,EAAWnC,EAAMwT,OAAOkJ,MAAM,GAAGra,KACrCgtB,KACCC,WAAWtvB,EAAMwT,OAAOkJ,MAAM,GAAI1M,IAClCjc,MAAK,SAAAmL,GACJ,IAAIuwB,EAAU,CACX9lB,cAAe,EAAKtV,MAAMsV,cAC1B9H,OAAQ,EAAKxN,MAAMwN,OACnB+H,UAAU1K,EAAK3L,SACfsW,WAAY1H,GAEf5N,QAAQC,IAAI0K,GACZsR,GAAuB,YAAYif,GAClC17B,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKyM,mBAAmB,EAAKxnB,MAAMwN,WAGtCpN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,SAGfziB,OAAM,SAAAyiB,GAAG,OAAI3iB,QAAQG,MAAMwiB,OAviBF,EA0iB5BwY,WAAa,SAAA1vB,GACXqvB,KACCM,WAAW,EAAKt7B,MAAMwV,WAAYmG,IAClCjc,MAAK,SAAAod,GAAa5c,QAAQC,IAAI2c,GAC7B,IAAIse,EAAU,CACZ9lB,cAAe,EAAKtV,MAAMsV,cAC1B9H,OAAQ,EAAKxN,MAAMwN,OACnB+H,UAAU,KACVC,WAAY,MAGf2G,GAAuB,YAAYif,GAClC17B,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKyM,mBAAmB,EAAKxnB,MAAMwN,WAGtCpN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,SAGdziB,OAAM,SAAAyiB,GAAG,OAAI3iB,QAAQG,MAAMwiB,OA7jB5B,EAAK7iB,MAAQ,CACX25B,yBAAyB,EACzBE,qBAAqB,EACrBG,sBAAsB,EACtBuB,6BAA6B,EAC7B9N,oBAAmB,EACnBiM,wBAAuB,EACvBhJ,gBAAiB,GACjB2D,iBAAkB,GAClBoD,aAAc,GACdlC,cAAe,GACfc,oBAAqB,GACrB/I,SAAS,EACTC,SAAS,EACTpF,YAAa,GACbqT,mBAAoB,GACpBC,eAAe,GACfC,gBAAgB,GAChBtqB,SAAS,GACTic,cAAc,EACdxhB,SAAU,OACVugB,iBAAiB,EACjBsB,UAAU,EACV1f,KAAM,GACN2f,aAAa,EACbmJ,gBAAgB,GAChBxP,YAAY,IA5BY,E,oFAkC1B,IAAI/G,EAAMP,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8T,KAEjE,GAAGA,EAAK,CACN,IAAI/S,EAAQ+S,EAAK/S,OACjBwS,KAAK4Z,kBAAkBpsB,GACvBwS,KAAK5K,eAAe5H,GACpBwS,KAAK8Z,cAActsB,GACnBwS,KAAKia,gBAAgBzsB,GACrBwS,KAAKma,qBAAqB3sB,GAC1BwS,KAAKwH,mBAAmBha,GACxBwS,KAAKsM,eAAe/L,GACpBP,KAAKd,SAAS,CAAC1R,OAAQA,EAAO+S,KAAKA,IAErCP,KAAK6J,mBAAqB7J,KAAK6J,mBAAmBlK,KAAKK,Q,gDAG/B6N,GACvB7N,KAAKsM,eAAeuB,EAAItN,Q,kFAkDZ/S,GAAQ,IAAD,OACpB2O,GAAuB,iBAAiB,CAAC3O,WACxC9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAI3J,EAAU,EAAKpR,MAAMoR,SACzBA,EAAU0L,EAASjS,KAAKwD,OAAO,GAC/B,EAAK6Q,SAAS,CAAC9N,SAAUA,QAG7BhR,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,wCAIErV,GAAQ,IAAD,OACvB2O,GAAuB,wBAAwB,CAAC3O,WAC/C9N,MAAK,SAAAod,GAEJ,GADA5c,QAAQC,IAAI2c,GACiB,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIygB,EAAoB,EAAKx7B,MAAMw7B,mBACnCA,EAAoB1e,EAASjS,KAAKwD,OAClC,EAAK6Q,SAAS,CAACsc,mBAAoBA,QAGvCp7B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,oCAIFrV,GAAQ,IAAD,OACnB2O,GAAuB,oBAAoB,CAAC3O,WAC3C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,EAASjS,MACpB,IAAI4wB,EAAgB,EAAKz7B,MAAMy7B,eAC3BhE,EAAe3a,EAASjS,KAAKwD,OAAO,GACxCotB,EAAehE,EAAeA,EAAal1B,OAAQ,GACnD,EAAK2c,SAAS,CAACuc,iBAAehE,qBAGlCr3B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,sCAIArV,GAAQ,IAAD,OACrB2O,GAAuB,qBAAqB,CAAC3O,WAC5C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAI2gB,EAAiB,EAAK17B,MAAM07B,gBAChCA,EAAiB5e,EAASjS,KAAKwD,OAC/B,EAAK6Q,SAAS,CAACwc,gBAAiBA,QAGpCt7B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,2CAIKrV,GAAQ,IAAD,OAC1B2O,GAAuB,4BAA4B,CAAC3O,WACnD9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAI4gB,EAAuB,EAAK37B,MAAM27B,sBACtCA,EAAuB7e,EAASjS,KAAKwD,OAAO,GAC5C,EAAK6Q,SAAS,CAACyc,sBAAuBA,QAG1Cv7B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCASGrV,GAAQ,IAAD,OACxB2O,GAAuB,oBAAoB,CAAC3O,WAC3C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CAErC,IAAIuM,EAAcxK,EAASjS,KAAKwD,OAAO,GACxC,GAAGiZ,EAAY,CACb,IAAI/jB,EAAa+jB,EAAY/jB,aAAe+jB,EAAY/jB,YAAY,IAAM+jB,EAAY/jB,YAAY,GAAGA,YACrD+jB,EAAY/jB,YAAY,GAAGA,YAAc,GACrFq4B,EAAYtU,EAAYtO,iBACxBxV,EAAU8jB,EAAY9jB,SACtB0V,EAAiBoO,EAAYpO,gBAC7BxD,EAAY4R,EAAY5R,UAC5B,EAAKwJ,SAAS,CAACoI,YAAYA,EACf/jB,cACAq4B,aACAp4B,WACA0V,kBACAxD,cAEZ,EAAK+jB,mBAAmBnS,QAI7BlnB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCA+II,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAgHCpV,GAAO,IAAD,OACnBD,EAASwS,KAAKhgB,MAAMwN,OAEX,KAATC,GACAutB,KACCC,WAAWxtB,EAAMkO,IACjBjc,MAAK,SAAAmL,GACJ,IAAI4hB,EAAehd,EAAc,SAAU,EAAKzP,MAAM2oB,WAClD,EAAKzJ,SAAS,CAAEuN,aAAcA,EAAca,SAAS,IACrD,EAAKyN,eAAelwB,EAAK3L,SAAUsO,MAExCpN,OAAM,SAAAyiB,GAAG,OAAI3iB,QAAQG,MAAMwiB,Q,+BAmGxB,IAAD,OACP,OACE,yBAAK3V,UAAU,WACf,kBAAC,GAAW8S,KAAKvT,OACjB,yBAAKS,UAAU,cAQb,yBAAKA,UAAU,IACf8S,KAAKhgB,MAAMmoB,YACT,kBAAC,GAAD,CACEA,YAAanI,KAAKhgB,MAAMmoB,YACxBQ,UAAW3I,KAAKhgB,MAAM2oB,UACtBjZ,UAAWsQ,KAAKhgB,MAAM0P,UACtBmZ,YAAmC,IAAtB7I,KAAKhgB,MAAMgS,OAAe,EAAQ,GAAK,EACpDiX,UAAiC,IAAtBjJ,KAAKhgB,MAAMgS,OAAe,SAAW,QAChD+W,aAAoC,IAAtB/I,KAAKhgB,MAAMgS,OAAe,MAAQ,MAChDgX,cAAqC,IAAtBhJ,KAAKhgB,MAAMgS,OAAe,MAAQ,MACjD6X,mBAAoB7J,KAAK6J,qBAEzB,KAIV,yBAAK3c,UAAU,0BAGhB,yBAAKA,UAAU,kBAEb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mCACd,yBAAKA,UAAU,wBAAwB+U,MAAO,CAAC4Z,SAAS,WACxD,yBAAM/Q,IAAK9K,KAAKhgB,MAAMysB,aAAcxK,MAAO,CAAC+I,MAAM,OAAO,gBAAiB,SAAUqH,IAAI,WAExF,yBAAKnlB,UAAU,IACf,yBAAKA,UAAU,IACD,yBAAKA,UAAU,IAC1B,2BAAQK,KAAK,OACEiU,SAAUxB,KAAKoI,kBAAkBzI,KAAKK,KAAM,GAC5C6L,OAAO,UACPnhB,MAAM,KAER,0BAAMwC,UAAU,sBAPhC,MADA,OAWA,yBAAKA,UAAU,gBACf,2BAAG,uBAAGA,UAAU,2DAA8D8S,KAAKhgB,MAAMgB,UAAzF,IAAqGgf,KAAKhgB,MAAMkB,UAC9G,2BAAG,uBAAGgM,UAAU,gEAAmE8S,KAAKhgB,MAAMuD,aAC9F,2BAAG,uBAAG2J,UAAU,2DAAhB,cACA,2BAAG,uBAAGA,UAAU,+DAAkE8S,KAAKhgB,MAAMM,OAC7F,2BAAG,uBAAG4M,UAAU,4DAA+D8S,KAAKhgB,MAAMwD,UAC1F,2BAAG,uBAAG0J,UAAU,gDACH8S,KAAKhgB,MAAMuD,YACM,kBAACue,GAAA,EAAD,CACAC,QAAQ,gCACNnT,QAASoR,KAAK+Z,6BAA6Bpa,KACzCK,OAGH,0BAAM9S,UAAU,gBANjB,mBAUE,kBAAC4U,GAAA,EAAD,CAAQlT,QAASoR,KAAK+Z,6BAA6Bpa,KAChDK,MAEK9S,UAAU,2BAChB,0BAAMA,UAAU,gBAJlB,mBASZ,GADD8S,KAAKhgB,MAAM+5B,6BAER,kBAAC,GAAD,CACElD,8BACE7W,KAAK+Z,6BAEPxZ,KACEP,KAAKhgB,MAAMugB,KAEb+G,YACEtH,KAAKhgB,MAAMsnB,cAIf,OA0C9B,yBAAKpa,UAAU,eACb8S,KAAKhgB,MAAM0V,UAAY,KAEnB,yBAAKxI,UAAU,kDACb,yBAAKA,UAAU,gBACX,kBAAC0U,GAAA,EAAD,CAAMzC,OAAO,SAAS8C,MAAO,CAAC6Z,MAAM,QAASja,GAAG,UAAhD,4BAEJ,yBAAK3U,UAAU,gBACf,wBAAIA,UAAU,MAAK,6BAElB,8BAMP,yBAAKA,UAAU,kDAEX,wBAAIA,UAAU,gBAAd,UAGC,yBAAKA,UAAU,gBACd,wBAAI+U,MAAO,CAAC,aAAc,SAAS,4BACpC,iCAAM,yBAAKA,MAAO,CAAC,eAAgB,UAA7B,IAAwC,2BAAO1U,KAAK,OAAOiU,SAAUxB,KAAKmb,YAAYxb,KAAKK,QAC/F,uBAAG9S,UAAU,sEADf,MAEE,4BACG,2BAAG,2BAAI8S,KAAKhgB,MAAMwV,aADrB,KAHD,OAQF,yBAAKtI,UAAU,gBACb,wBAAIA,UAAU,cAAa,2BACzB8S,KAAKhgB,MAAMuV,UAAa,kBAAC,KAAD,CACRwU,SAAU/J,KAAKhgB,MAAMuV,UACrBwmB,WAAY,iBAAM,mBAFV,oBAKM,KANL,YAOb,2BACX/b,KAAKhgB,MAAMuV,UACE,uBAAG3G,QAASoR,KAAKqb,WAAW1b,KAAKK,OAAjC,iBAA2D,KAC3D,gCAOpB,yBAAK9S,UAAU,kDAEf,yBAAKA,UAAU,gBACH,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,gCACR7U,UAAU,mBAEV0B,QAASoR,KAAK0Z,uBAAuB/Z,KAAKK,OAJ5C,mBAQc,GADfA,KAAKhgB,MAAM05B,uBAEM,kBAAC,GAAD,CACEnL,wBACEvO,KAAK0Z,uBAEPnZ,KACEP,KAAKhgB,MAAMugB,KAEb2O,cACElP,KAAKhgB,MAAM0wB,kBAIjC,IAGA,wBAAIxjB,UAAU,gBAAe,uBAAGA,UAAU,wCAE9C8S,KAAKhgB,MAAMg8B,qCAAuChc,KAAKhgB,MAAMi8B,kBAAkBlO,KAAI,SAACljB,EAAM+H,GAAP,OAC/E,yBAAK1F,UAAU,gBACD,wBAAIA,UAAU,cAAa,4BACzB,uBAAG0B,QAAS,EAAKwrB,uBAAuBza,KAAK,EAAK9U,IAC1C,0BAAMqC,UAAU,gBAG1B,wBAAIA,UAAU,gBAAe,uBAAGA,UAAU,yCACvCvE,IAAO0K,SAASxI,EAAK5I,UAAU,KAAKiiB,OAAO,eAAe,IAD7D,MAEarZ,EAAK3I,QAAS,IAAIyG,IAAO0K,SAASxI,EAAK3I,QAAQ,KAAKgiB,OAAO,eAAe,0BAAMhX,UAAU,2BAAhB,YAEvF,+DAKvB,yBAAKA,UAAU,kDACN,yBAAKA,UAAU,gBACb,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,gCACR7U,UAAU,mBAEV0B,QAASoR,KAAK2Z,wBAAwBha,KAAKK,OAJ7C,oBAQc,GADfA,KAAKhgB,MAAM25B,wBAEM,kBAAC,GAAD,CACExF,yBACEnU,KAAK2Z,wBAEPpZ,KACEP,KAAKhgB,MAAMugB,KAEb8T,iBACErU,KAAKhgB,MAAMq0B,mBAIjC,IAEP,wBAAInnB,UAAU,gBAAe,uBAAGA,UAAU,mDACvC8S,KAAKhgB,MAAMw7B,oBAAsBxb,KAAKhgB,MAAMw7B,mBAAmBzN,KAAI,SAACljB,EAAM+H,GAAP,OAC/D,yBAAK1F,UAAU,gBACD,wBAAIA,UAAU,cAAa,2BAAIrC,EAAK3H,YAAT,MAAyB2H,EAAK1H,cACvD,uBAAGyL,QAAS,EAAKyrB,wBAAwB1a,KAAK,EAAK9U,IAC3C,0BAAMqC,UAAU,gBAG1B,wBAAIA,UAAU,gBAAe,uBAAGA,UAAU,yCACvCvE,IAAO0K,SAASxI,EAAK5I,UAAU,KAAKiiB,OAAO,eAAe,IAD7D,MAEarZ,EAAK3I,QAAS,IAAIyG,IAAO0K,SAASxI,EAAK3I,QAAQ,KAAKgiB,OAAO,eAAe,0BAAMhX,UAAU,2BAAhB,YAEvF,iCAKzB,yBAAKA,UAAU,kDACJ,yBAAKA,UAAU,gBACb,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,gCACR7U,UAAU,mBAEV0B,QAASoR,KAAK6Z,oBAAoBla,KAAKK,OAJzC,mBAOgC,GAAjCA,KAAKhgB,MAAM65B,oBACA,kBAAC,GAAD,CACEvC,qBACEtX,KAAK6Z,oBAEPtZ,KACEP,KAAKhgB,MAAMugB,KAEbkX,aACEzX,KAAKhgB,MAAMy3B,eAIf,IAGnB,wBAAIvqB,UAAU,gBAAe,uBAAGA,UAAU,mDACvC8S,KAAKhgB,MAAMy7B,gBAAkBzb,KAAKhgB,MAAMy7B,eAAe1N,KAAI,SAACljB,EAAM+H,GAAP,OACvD,yBAAK1F,UAAU,gBACD,wBAAIA,UAAU,cAAa,2BAAIrC,EAAK6sB,UAAT,MAAuB7sB,EAAK0sB,QACrD,uBAAG3oB,QAAS,EAAK0rB,oBAAoB3a,KAAK,EAAK9U,IACvC,0BAAMqC,UAAU,gBAG1B,+DAO3B,yBAAKA,UAAU,kDACF,yBAAKA,UAAU,gBACb,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,gCACR7U,UAAU,mBAEV0B,QAASoR,KAAKga,qBAAqBra,KAAKK,OAJ1C,oBAOiC,GAAlCA,KAAKhgB,MAAMg6B,qBACF,kBAAC,GAAD,CACE3E,sBACErV,KAAKga,qBAEPzZ,KACEP,KAAKhgB,MAAMugB,KAEbgV,cACEvV,KAAKhgB,MAAMu1B,gBAIf,IAGjB,wBAAIroB,UAAU,gBACf,uBAAGA,UAAU,mDACT8S,KAAKhgB,MAAM07B,iBAAmB1b,KAAKhgB,MAAM07B,gBAAgB3N,KAAI,SAACljB,EAAM+H,GAAP,OACzD,yBAAK1F,UAAU,gBACD,wBAAIA,UAAU,cAAa,2BAAIrC,EAAKsM,YAAT,MAAyBtM,EAAKwM,gBACvD,uBAAGzI,QAAS,EAAK2rB,qBAAqB5a,KAAK,EAAK9U,IACxC,0BAAMqC,UAAU,gBAG1B,wBAAIA,UAAU,gBAAe,uBAAGA,UAAU,yCACvCvE,IAAO0K,SAASxI,EAAK5I,UAAU,KAAKiiB,OAAO,eAAe,IAD7D,MAEarZ,EAAK3I,QAAS,IAAIyG,IAAO0K,SAASxI,EAAK3I,QAAQ,KAAKgiB,OAAO,eAAe,0BAAMhX,UAAU,2BAAhB,YAEvF,+DAQ3B,yBAAKA,UAAU,gCAAgC+U,MAAO,CAAC,gBAAiB,UAC3D,yBAAK/U,UAAU,gBACd8S,KAAKhgB,MAAM27B,sBAAsB,KAAO,kBAAC7Z,GAAA,EAAD,CACrCC,QAAQ,gCACR7U,UAAU,mBAEV0B,QAASoR,KAAKka,2BAA2Bva,KAAKK,OAJT,mBAQvB,GADjBA,KAAKhgB,MAAMk6B,2BAEQ,kBAAC,GAAD,CACEhE,4BACElW,KAAKka,2BAEP3Z,KACEP,KAAKhgB,MAAMugB,KAEb8V,oBACErW,KAAKhgB,MAAMq2B,sBAIf,IAItB,6BACE,0BAAMpU,MAAO,CAAC,cAAe,IAAI,YAAa,OAAO6Z,MAAO,SAAS,uBAAG5uB,UAAU,mDAE1D,0BAAMolB,MAAM,YAAY4J,SAAS,KAAI,uBAAGttB,QAASoR,KAAKwa,2BAA2B7a,KAAKK,KAAKA,KAAKhgB,MAAM27B,wBACtG,0BAAMzuB,UAAU,iBAI1C,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAa,2BAAI8S,KAAKhgB,MAAM27B,uBAAyB3b,KAAKhgB,MAAM27B,sBAAsB1jB,8B,GAv8BxFmG,aAg/BXmE,gBAvBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBkW,UAAWvnB,EAAM+R,KAAKT,kBACtB4c,QAASluB,EAAM0T,YAIQ,SAAA8O,GACzB,OAAOC,YACL,CACEpF,gCACAU,0BACAC,+BACAG,kCACAN,wBACAI,8BAEFuE,KAIWD,CAGbiX,IC1/BI2C,I,gFACJ,WAAY1vB,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KACDzM,MAAQ,CACXmjB,QAAQ,EACRiZ,aAAa,IAJW,E,oFAU1B,IAAI5uB,EAASwS,KAAKvT,MAAM8T,KAAK/S,OAC7BwS,KAAKd,SAAS,CAAC1R,OAAOA,IACvBwS,KAAK9F,eAAe1M,GACpBwS,KAAKwH,mBAAmBha,K,0CAIvBwS,KAAKqc,uB,yCAGY7uB,GAAQ,IAAD,OACxB2O,GAAuB,oBAAoB,CAAC3O,WAC3C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,EAASjS,MACpB,IAAIyc,EAAcxK,EAASjS,KAAKwD,OAAO,GACxC,EAAK6Q,SAAS,CAACoI,YAAYA,IAE1B,EAAKmS,mBAAmBnS,OAG5BlnB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,2CAMd,IADA,IAAIyZ,EAAgB,GACZntB,EAAE,EAAEA,EAAE,EAAEA,IAAI,CAClB,IAAIotB,EAAO,IAAIjX,KACfiX,EAAKC,QAAQD,EAAKE,UAAYttB,GAE9B,IAAIutB,EAAYH,EAAKE,UAAU,KAAMF,EAAKI,WAAW,GAAI,IAAIJ,EAAK9W,cAElE6W,EAAgBrb,KAAK,CAAC2b,SAASF,EAAUH,KAAO,IAAIjX,KAAK3c,MAASmE,IAAI,OAAQqC,GAAG+U,OAAO,gBAAgBjV,YAE1G+Q,KAAKd,SAAS,CAACod,sB,qCAGF9uB,EAAO+uB,GAAM,IAAD,OAKzBpgB,GAAuB,iBAJd,CACP3O,OAAOA,EACPqM,mBAAmB0iB,IAGpB78B,MAAK,SAAAod,GAEJ,GADA5c,QAAQC,IAAI2c,GACiB,YAAzBA,EAASjS,KAAKkQ,OAAuB,CACtC,IAAIqhB,EAAc,EAAKp8B,MAAMo8B,aAC7BA,EAActf,EAASjS,KAAKwD,OAC5B,EAAK6Q,SAAS,CAACkd,aAAcA,QAGjCh8B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAIDhY,GAAM,IAAD,OACf0xB,EAAOvc,KAAKhgB,MAAM68B,aACtBhyB,EAAK2C,OAASwS,KAAKvT,MAAM8T,KAAK/S,OAC7B2O,GAAuB,aAAatR,GACnCnL,MAAK,SAAAod,GACJ5c,QAAQC,IAAI2c,GACiB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKb,eAAe,EAAKla,MAAMwN,OAAO+uB,MAGzCn8B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,iCAKL0Z,GAIVvc,KAAK9F,eAAe8F,KAAKhgB,MAAMwN,OAAO+uB,GACtCvc,KAAKd,SAAS,CAAC2d,aAAaN,M,+BAKb,IAAIjX,KAAlB,IACIvF,EAAOC,KACX,OACE,yBAAK9S,UAAU,WACd,kBAAC,iBAAD,CACGgU,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEhB,kBAAC,GAAWyT,KAAKvT,OACjB,yBAAKS,UAAU,cACf,yBAAKA,UAAU,IAEd8S,KAAKhgB,MAAMsnB,YACZ,yBAAKpa,UAAU,kBACf,yBAAKA,UAAU,WAAW+U,MAAO,CAAC+I,MAAO,cAAc,cAAe,QAAQ,cAAe,SAC9F,yBAAK9d,UAAU,mCACd,yBAAKA,UAAU,wBAAwB+U,MAAO,CAAC4Z,SAAS,WACxD,yBAAK3uB,UAAU,gBACZ8S,KAAKhgB,MAAMs8B,iBAAmBtc,KAAKhgB,MAAMs8B,gBAAgBvO,KAAI,SAACljB,GAAD,OACjD,2BACI,kBAACiX,GAAA,EAAD,CACaC,QAAQ,gCACNnT,QAASmR,EAAM+c,WAAWnd,KACxBI,EACAlV,EAAK0xB,OAGR,0BAAMrvB,UAAU,gBACfrC,EAAK+xB,iBAdvC,KAoBE,yBAAK1vB,UAAU,cAAc+U,MAAO,CAAC,cAAe,SAClD,yBAAK/U,UAAU,kDAKlB,yBAAKA,UAAU,kBACd,yBAAKA,UAAU,UACb,wBAAIA,UAAU,SAAd,uBACA,uBAAGA,UAAU,YAAb,yCAEF,yBAAKA,UAAU,6CACb,2BAAOA,UAAU,mCACf,+BACE,4BACE,yCACA,uCACA,wBAAIA,UAAU,cAAd,aAGJ,+BACG8S,KAAKhgB,MAAMo8B,aAAarO,KAAI,SAAAljB,GAAI,OAC/B,wBAAIV,IAAKU,EAAK+O,QACZ,4BAAKjR,IAAO0K,SAASxI,EAAKiP,eAAe,KAAKoK,OAAO,aACrD,4BAAKvb,IAAO0K,SAASxI,EAAKkP,aAAa,KAAKmK,OAAO,aACnD,4BAAI,kBAACpC,GAAA,EAAD,CACIC,QAAQ,UACR7U,UAAU,mBACV0B,QAASmR,EAAMgd,eAAepd,KAAKI,EAAOlV,IAH9C,oBAiBR,yBAAKqC,UAAU,0BACb,yBAAKA,UAAU,kBAAf,yC,GA9KQkR,cAgNTmE,gBAjBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnB6c,QAASluB,EAAM0T,YAIQ,SAAA8O,GACzB,OAAOC,YACL,GAGAD,KAIWD,CAGb4Z,ICtMIa,G,YACJ,WAAYvwB,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KACDzM,MAAQ,CACXmjB,QAAQ,EACRlhB,UAAW,IAAIqjB,MAJS,E,oFAc1BrF,SAASG,KAAKvT,UAAUC,IAAI,eAC5BmT,SAASG,KAAKvT,UAAUC,IAAI,kBAC5BmT,SAASG,KAAKvT,UAAUG,OAAO,QAC/BiT,SAASG,KAAKvT,UAAUG,OAAO,iB,gDAGP6gB,M,0CAKxB7N,KAAKid,gB,kCAGKzvB,GAAQ,IAAD,OACjB2O,GAAuB,qBAAqB,CAAC3O,WAC5C9N,MAAK,SAAAod,GACJ,GAAiC,MAA7BA,EAASjS,KAAK4qB,WAAoB,CACnC,IAAIiG,EAAiB,EAAK17B,MAAM07B,gBAChCA,EAAiB5e,EAASjS,KAAK6qB,aAAa,GAC5C,EAAKxW,SAAS,CAACwc,gBAAiBA,QAGpCt7B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,kCAIJqa,GACVh9B,QAAQC,IAAI+8B,GACZ,IAAI7d,EAAMW,KACNnV,EAAK,CACPsyB,UAAWD,EAAKryB,KAAKuyB,UACrBC,QAASH,EAAKryB,KAAKyyB,QACnB9vB,OAAQ,IAEV2O,GAAuB,aAActR,GACpCnL,MAAK,SAAAod,GAC6B,MAA7BA,EAASjS,KAAK4qB,aAChBpW,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAK8V,kBAAkB,YAG1B/0B,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MAGd68B,EAAKK,QAAS,I,+BAMd,OACE,yBAAKrwB,UAAU,gBACd,kBAAC,iBAAD,CACGgU,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEZ,kBAAC,GAAWyT,KAAKvT,OAEzB,6BACQ,6BACE,yBAAKS,UAAU,UAC1B,kBAACmU,GAAA,EAAD,CACmBnU,UAAS,iC,GAnFCkR,aA8GfmE,gBAjBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnB6c,QAASluB,EAAM0T,YAIQ,SAAA8O,GACzB,OAAOC,YACL,GAGAD,KAIWD,CAGbya,I,WC7JI9V,IAFeC,0BAAeC,c,8MAKlClS,OAAS,WACP,EAAKzI,MAAM2Q,mBACX,EAAK3Q,MAAMuU,QAAQC,KAAK,M,0EAIxB,OACA,kBAACwG,GAAA,EAAD,CAAQC,OAAO,GACb,kBAACD,GAAA,EAAOP,OAAR,KACE,4BAAQ3Z,KAAK,SAASL,UAAU,gBAAgBswB,cAAY,YAC1D,0BAAMtwB,UAAU,WAAhB,qBACA,0BAAMA,UAAU,aAChB,0BAAMA,UAAU,aAChB,0BAAMA,UAAU,eAIpB,kBAACua,GAAA,EAAOE,SAAR,KAEE,kBAAChE,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KAAS,uBAAG3W,UAAU,qBACtB,kBAACuwB,GAAA,EAAD,CAAat7B,MAAO,uBAAG+K,UAAU,gBAAkB2Z,GAAG,sBACpD,kBAACoH,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,uBACA,kBAACA,GAAA,EAAD,4BACA,kBAACA,GAAA,EAAD,CAAUyP,SAAO,IACjB,kBAACzP,GAAA,EAAD,yBAGJ,yBAAK/gB,UAAU,cACf,kBAACua,GAAA,EAAOG,KAAR,CAAaC,UAAQ,GACnB,kBAACxG,GAAA,EAAD,KACE,0BAAMnU,UAAU,qBAAoB,uBAAGA,UAAU,kBACjD,kBAACoU,GAAA,EAAD,CAAa/T,KAAK,OAAOgU,YAAY,qBAGzC,kBAACoC,GAAA,EAAD,CAAKmE,WAAS,GACZ,kBAACjE,GAAA,EAAD,SAAU,kBAACjC,GAAA,EAAD,CAAMC,GAAG,mBAAT,eACV,kBAAC4b,GAAA,EAAD,CAAat7B,MAAM,WAAW0kB,GAAG,iBAC/B,kBAACoH,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,uBACA,kBAACA,GAAA,EAAD,4BACA,kBAACA,GAAA,EAAD,CAAUyP,SAAO,IACjB,kBAACzP,GAAA,EAAD,wBAEF,kBAACpK,GAAA,EAAD,CAASjV,QAASoR,KAAK9K,QAAvB,kB,GAhDWkJ,cA0ENmE,gBApBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBoB,YAAazS,EAAM+R,KAAKU,gBAID,SAAA+P,GACzB,OAAOC,YACL,CACErF,oBACAK,wBACAC,2BACAC,+BAEF6E,KAIWD,CAGb2E,I,6CCvDEyW,GAAM1zB,EAAQ,KAkDZ2zB,IA9BO,kBAAC,EAAD,CAAiBnxB,YAAO,GAAKA,QAC7B,kBAAC,EAAD,CAAiBA,YAAO,GAAKA,WA6BflN,UAAUs+B,cAAgBt+B,UAAUu+B,oBAC3Dv+B,UAAUw+B,iBAAmBx+B,UAAUy+B,iBAErCC,G,YACJ,WAAYxxB,EAAOkS,GAAU,IAAD,wBAC1B,8CAAMlS,KAEDzM,MAAQ,CACT+3B,MAAO,CACHjN,IAAK,2CACLkN,OAAQ,mDAEd9K,6BAA6B,EAC7BD,qBAAsB,GAEtBK,SAAS,EACTC,SAAS,EACTC,uBAAwB,GACxBpc,SAAS,GACTic,cAAc,EACdxhB,SAAU,OACVugB,iBAAiB,EACjBsB,UAAU,EACV1f,KAAM,GACN2f,aAAa,EACbuQ,WAAU,GArBc,OAgC1B,EAAK7E,OAAS,aACd,EAAK8E,eAAiB,kDACtB,EAAKhF,WALoBiF,wBAMzB,EAAKC,GAAG,KACR,EAAKC,SAAW,IAAIhZ,KACpB,EAAKiZ,cAAgB,EAAKD,SAASE,UACnC,EAAKC,KAAO,GACZ,EAAKC,eAAiB,GACtB,EAAKC,aAAc,EACnB,EAAKC,KAAO,EACZ,EAAK7U,SAAW,EAAKwU,cAAcvhB,WAAa,QAChD,EAAK6hB,SAAW,GAChB,EAAKC,SAAS,KACd,EAAK7G,OAAO,KAEZ,EAAK8G,iBAAmB,CAEpBhH,OAAO,GAjDe,E,oFAwD1B9X,SAASG,KAAKvT,UAAUC,IAAI,eAC5BmT,SAASG,KAAKvT,UAAUC,IAAI,kBAC5BmT,SAASG,KAAKvT,UAAUG,OAAO,QAC/BiT,SAASG,KAAKvT,UAAUG,OAAO,eAC/BgT,KAAKgf,0B,gDAGmBnR,M,0CAOxB,IAAItN,EAAMP,KAAKvT,MAAM8T,KAAK/S,OAEzB,GADDtN,QAAQC,IAAIogB,GACPqd,GAAJ,CAID,IAAMqB,EAAShf,SAASif,cAAc,UAEtCD,EAAOnU,IAAM,0EACbmU,EAAOE,OAAQ,EAEflf,SAASG,KAAKgf,YAAYH,GACtBjf,KAAKvT,MAAMyhB,QAAQzc,iBACrBvR,QAAQC,IAAI6f,KAAKvT,MAAMyhB,QAAQzc,sBAV/B4tB,MAAM,sF,oCAiBEpH,GACV/3B,QAAQC,IAAI,oBAAqB83B,GACjCjY,KAAKiY,OAASA,I,kCAGNC,GACRh4B,QAAQC,IAAI,oBAAqB+3B,K,mCAGxBA,GACTh4B,QAAQC,IAAI,oBAAqB+3B,K,wCAGnBA,GACdh4B,QAAQC,IAAI,iBAAkB+3B,K,qCAGnBA,GACXh4B,QAAQC,IAAI,kBAAmB+3B,K,oCAGrBC,EAAMtW,GAChB3hB,QAAQC,IAAR,4BAAiCg4B,EAAjC,eAA4CtW,M,mCAI5C3hB,QAAQC,IAAI,iB,8CAOZ,IAAIkf,EAAOW,KACX2d,GAAIhiB,OAAO2jB,OAAO,CACbjG,OAAQ,aACJkG,YAAa,IAAI5B,GAAI6B,2BAA2B,CAC7CrB,eAAgB,kDAChBsB,QAAS,6DACTC,UAAW,mBAKf/B,GAAIhiB,OAAO4jB,YAAYI,KAAI,SAAU9c,GACzCA,EAAK3iB,QAAQC,IAAI0iB,GAChB3iB,QAAQC,IAAIw9B,GAAIhiB,OAAO4jB,gBAU5BlgB,EAAKgf,GAAK,IAAIV,GAAIiC,GAAG,CAACC,OAAO3/B,QAG5B4/B,WAAY,aACTxf,OAAQ,CAACyf,OAAQ,eAUrBxgC,UAAUygC,aAAanC,aAAaxe,EAAK0f,kBACpCr/B,MAAK,SAASugC,GAKXC,KAAE,cAAcC,WAAW,YAI3B9gB,EAAKyf,SAAW,IAAIsB,cAAcH,GASlC5gB,EAAKyf,SAASuB,iBAAiB,iBAAiB,SAASC,GACrD,IAAIC,EAAY,GAIhBlhB,EAAKqf,eAAezd,KAAKqf,EAAEz1B,MAC3B01B,EAAUtf,KAAKqf,EAAEz1B,MAKjB,IAAI0f,EAAO,IAAIrc,KAAKqyB,EAAW,CAC3BhzB,KAAM,eAUwB,GAA9B8R,EAAKqf,eAAejwB,QACfvO,QAAQC,IAAIoqB,EAAKiW,MAGtBnhB,EAAKohB,iBAAiBlW,EAAMlL,EAAK0K,YAMjC1K,EAAKuf,KAAOvf,EAAKuf,KAAO,EACxBvf,EAAKqhB,oBAAoBnW,EAAMlL,EAAKuf,KAAMvf,EAAKwf,SAAUxf,EAAK0K,SAAU1K,EAAK8Z,qB,qCAQlFtS,GAgBX7G,KAAK8e,SAAS6B,MAAM,MACpBzgC,QAAQC,IAAI,aACZ6f,KAAKd,SAAS,CAACgf,WAAU,M,oCAGfrX,GACC7G,KACN8e,SAAS8B,OADH5gB,KAON2e,aAAc,EAPR3e,KASN6gB,mBACLX,KAAE,YAAYY,KAAK,WAAY,YAG/B9gB,KAAKd,SAAS,CAACgf,WAAU,M,qCAGdrX,GACA7G,KACN8e,SAASiC,QACfb,KAAE,aAAac,SAAS,QACvBd,KAAE,cAAce,YAAY,U,sCAIhBpa,GACD7G,KACN8e,SAASoC,SACfhB,KAAE,cAAcc,SAAS,QACxBd,KAAE,aAAae,YAAY,U,uCAGd1W,EAAMR,GACnB,IAAI1K,EAAOW,KACPmhB,EAAY5W,EACZjK,EAAS,CAETyf,OAAQ,YACRqB,IAAKrX,EACLsX,YAAa,aACbC,IAAK,eAWTjiB,EAAKgf,GAAGkD,sBAAsBjhB,GAAQ,SAASuC,EAAKhY,GAC5CgY,EACA3iB,QAAQC,IAAI0iB,EAAKA,EAAI2e,QAErBniB,EAAKwf,SAAWh0B,EAAK42B,SACrBpiB,EAAKuf,KAAO,EACZvf,EAAKqhB,oBAAoBS,EAAW9hB,EAAKuf,KAAMvf,EAAKwf,SAAUxf,EAAK0K,SAAU1K,EAAK8Z,kB,0CAWxEgI,EAAWO,EAAY7C,EAAU10B,EAAKgvB,GACxD,IAAI9Z,EAAOW,KAIPM,EAAS,CACTiG,KAAM4a,EACNpB,OAAQ,YACRqB,IAAKj3B,EACLu3B,WAAYA,EACZD,SAAU5C,GAEd3+B,QAAQC,IAAImgB,GACZjB,EAAKgf,GAAGsD,WAAWrhB,GAAQ,SAASuC,EAAKhY,GACjCgY,EACA3iB,QAAQC,IAAI0iB,EAAKA,EAAI2e,QAOrBniB,EAAKof,KAAKxd,KAAKpW,EAAK+2B,MACI,GAApBviB,EAAKsf,aACLtf,EAAKwiB,4B,4CAWjB,IAAIxiB,EAAOW,KACP8hB,EAAY,GAIhBziB,EAAKof,KAAK9tB,SAAQ,SAAC9F,EAAM+H,GACrB,IAAMmvB,EAAM,CACRH,KAAM/2B,EACN62B,aAAc9uB,GAElBkvB,EAAU7gB,KAAK8gB,MAGnB,IAAIzhB,EAAS,CACTyf,OAAO,YACPqB,IAAK/hB,EAAK0K,SACV0X,SAAUpiB,EAAKwf,SACfmD,gBAAiB,CACbC,MAAOH,IAIfziB,EAAKgf,GAAG6D,wBAAwB5hB,GAAQ,SAASuC,EAAKhY,GAC9CgY,EACA3iB,QAAQC,IAAI0iB,EAAKA,EAAI2e,QAGrBthC,QAAQC,IAAI0K,EAAKs3B,UACjB9iB,EAAK+iB,aAAav3B,EAAKs3B,UAEvB9iB,EAAKof,KAAO,GACZpf,EAAKqf,eAAiB,GACtBrf,EAAKwf,SAAW,GAChBxf,EAAKsf,aAAc,EACnBtf,EAAKwhB,mBAELxB,MAAM,uD,mCAKL3pB,GAAW,IAAD,OACf7K,EAAK,CACH2C,OAAQwS,KAAKvT,MAAM8T,KAAK/S,OAC1BkI,aAGJyG,GAAuB,WAAWtR,GACjCnL,MAAK,SAAAod,GACJ,GAAiC,MAA7BA,EAASjS,KAAK4qB,WAAoB,CACnC,IAAIrkB,EAAU,EAAKpR,MAAMoR,SACzBA,EAAU0L,EAASjS,KAAK6qB,aAAa,GACrCx1B,QAAQC,IAAI2c,EAASjS,KAAK6qB,aAAa,IACvC,EAAKxW,SAAS,CAAC9N,SAAUA,QAG7BhR,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAMdqd,KAAE,iCAAiCY,KAAK,WAAY,c,wCAIpDZ,KAAE,iCAAiCC,WAAW,c,+BAO9C,OACI,yBAAKjzB,UAAU,WACf,kBAAC,GAAW8S,KAAKvT,OACf,yBAAKS,UAAU,cAEjB,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,OACnB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WACb,yBAAKA,UAAU,cAAc2Z,GAAG,aAC9B,4BAAQjY,QAASoR,KAAKqiB,eAAe1iB,KAAKK,OAA1C,gBACG,4BAAQpR,QAASoR,KAAKsiB,cAAc3iB,KAAKK,OAAzC,eACEA,KAAKhgB,MAAMuiC,UAChB,6CAA0B,KAIvBviB,KAAKhgB,MAAMk+B,UAAc,kBAAC,KAAD,CAAQsE,iBAtBnB,CACrBC,WAAY,UAqBoE,kB,GAtbpErkB,aAieLmE,gBAtBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnB6c,QAASluB,EAAM0T,YAIQ,SAAA8O,GACzB,OAAOC,YACL,CACEpF,gCACAU,0BACAC,+BACAG,kCACAN,wBACAI,8BAEFuE,KAIWD,CAGb0b,I,qBCzkBEyE,GAAYx7B,EAAU2B,OAAOC,IAElBD,GADA85B,KAAGD,IC0BHE,G,WA3Bb,aAAe,qBACb5iB,KAAK6iB,OAAS,G,kDAGXl3B,GAAiB,IAAD,uBAANuxB,EAAM,iCAANA,EAAM,kBAInB,OAHIld,KAAK6iB,OAAOl3B,IACdqU,KAAK6iB,OAAOl3B,GAAOgF,SAAQ,SAAAmyB,GAAE,OAAIA,EAAE,WAAF,EAAM5F,MAElCld,O,yBAGNrU,EAAOm3B,GAGR,OAFI9iB,KAAK6iB,OAAOl3B,GAAQqU,KAAK6iB,OAAOl3B,GAAOsV,KAAK6hB,GAC3C9iB,KAAK6iB,OAAOl3B,GAAS,CAACm3B,GACpB9iB,O,0BAGLrU,EAAOm3B,GACT,GAAIn3B,GAASogB,KAAEgX,WAAWD,GAAK,CAC7B,IAAME,EAAYhjB,KAAK6iB,OAAOl3B,GACxBiH,EAAQowB,EAAU7vB,WAAU,SAAA8vB,GAAG,OAAIA,IAAQH,KACjDE,EAAU9vB,OAAON,EAAO,QACnBoN,KAAK6iB,OAAOl3B,GAAS,GAC5B,OAAOqU,S,KCqCIkjB,G,qLArDJ,IAAD,OAuBN,OAdA3jC,UAAUygC,aACPnC,aATiB,CAClB9F,MAAO,CACL0K,WAAY,OACZ1X,OAAQ,CAAEoY,IAAK,IAAKC,MAAO,IAAKC,IAAK,OAEvCC,OAAO,IAKN5jC,MAAK,SAACugC,GACL,EAAKA,OAASA,EACd,EAAKsD,KAAK,SAAUtD,MAErB7/B,OAAM,SAACyiB,GACFA,aAAe2gB,aACjBnE,MAAM,wCAENn/B,QAAQC,IAAI0iB,MAIX7C,O,6BAQFzS,EAAMk2B,GACX,IAAMC,EAAMC,UAAUl1B,OAOtB,OANIuR,KAAKigB,QACPjgB,KAAKigB,OAAL,aAAkB1yB,EAAlB,aAAkCoD,SAAQ,SAACizB,GACzC,IAAM5jC,EAAgB,IAAR0jC,EAAYD,GAAMG,EAAMC,QACtC9X,KAAE+X,IAAIF,EAAO,UAAW5jC,MAGrBggB,O,6BAUP,OAHIA,KAAKigB,QACPjgB,KAAKigB,OAAO8D,YAAYpzB,SAAQ,SAAAizB,GAAK,OAAIA,EAAMhD,UAE1C5gB,S,GArDe4iB,ICF1B3jC,OAAO+kC,MAAQzkC,UAAUw+B,gBACzB,IAAIkG,GAAkB1kC,UAAUw+B,gBAAkB,EAAI1qB,SAAS9T,UAAU2kC,UAAU9kC,MAAO,4BAA6B,IACnH4kC,GAAK/kC,OAAO+kC,IACZ9zB,GAAa,GAET8zB,KACA9zB,GAAW+Q,KAAK,CACZlN,IAAK,uBAGT7D,GAAW+Q,KAAK,CACZlN,IAAK,oCAIRiwB,KACD9zB,GAAW+Q,KAAK,CACZlN,IAAK,iCAGT7D,GAAW+Q,KAAK,CACZlN,IAAK,qCAIRiwB,IAAOC,GAAgB,IACxB/zB,GAAW+Q,KAAK,CACZlN,IAAK,gCACLowB,WAAY,WAIfH,IAAOC,IAAiB,KACzB/zB,GAAW+Q,KAAK,CACZlN,IAAK,0BACLowB,WAAY,QACZC,SAAU,UAGdl0B,GAAW+Q,KAAK,CACZlN,IAAK,8CACLowB,WAAY,SACZC,SAAU,YAItB,IC/CIC,GD+CEC,GAAY,CAAEp0B,WAAYA,IA6FjBq0B,G,YAtFb,WAAYF,GAAW,IAAD,+BACpB,iDACKv0B,GAAK,IAAIC,kBAAkBu0B,IAChC,EAAKx0B,GAAGkB,eAAiB,SAAArF,GAAK,OAAI9C,GAAO06B,KAAK,OAAQ,CACpD1hB,GAAI,EAAKwiB,SACTnzB,UAAWvF,EAAMuF,aAEnB,EAAKpB,GAAG00B,YAAc,SAAA74B,GAAK,OAAI,EAAK43B,KAAK,aAAc53B,EAAMs0B,SAE7D,EAAKwE,YAAc,IAAIvB,GACvB,EAAKmB,SAAWA,EAVI,E,qEAkBhBK,EAAU/oB,GAAS,IAAD,OAUtB,OATAqE,KAAKykB,YACFhB,GAAG,UAAU,SAACxD,GACb,EAAKnwB,GAAG60B,UAAU1E,GAClB,EAAKsD,KAAK,cAAetD,GACrByE,EAAU77B,GAAO06B,KAAK,UAAW,CAAE1hB,GAAI,EAAKwiB,WAC3C,EAAK5zB,iBAEXkwB,MAAMhlB,GAEFqE,O,2BAOJ4kB,GAMH,OALIA,GAAW/7B,GAAO06B,KAAK,MAAO,CAAE1hB,GAAI7B,KAAKqkB,WAC7CrkB,KAAKykB,YAAY7D,OACjB5gB,KAAKlQ,GAAG+0B,QACR7kB,KAAKlQ,GAAK,KACVkQ,KAAK8kB,MACE9kB,O,oCAOP,OAHAA,KAAKlQ,GAAGW,cACL/Q,KAAKsgB,KAAK+kB,eAAeplB,KAAKK,OAC9B5f,OAAM,SAAAyiB,GAAG,OAAI3iB,QAAQC,IAAI0iB,MACrB7C,O,qCAOP,OAHAA,KAAKlQ,GAAGk1B,eACLtlC,KAAKsgB,KAAK+kB,eAAeplB,KAAKK,OAC9B5f,OAAM,SAAAyiB,GAAG,OAAI3iB,QAAQC,IAAI0iB,MACrB7C,O,qCAGMilB,GAIb,OAHA/kC,QAAQC,IAAI,YAAY8kC,GACxBjlB,KAAKlQ,GAAGgB,oBAAoBm0B,GAC5Bp8B,GAAO06B,KAAK,OAAQ,CAAE1hB,GAAI7B,KAAKqkB,SAAU3zB,IAAKu0B,IACvCjlB,O,2CAMYtP,GACnB,IAAMw0B,EAAS,IAAIC,sBAAsBz0B,GAEzC,OADAsP,KAAKlQ,GAAGs1B,qBAAqBF,GACtBllB,O,sCAMO9O,GACd,GAAIA,EAAW,CACb,IAAMm0B,EAAe,IAAIC,gBAAgBp0B,GACzC8O,KAAKlQ,GAAGy1B,gBAAgBF,GAE1B,OAAOrlB,S,GAvFkB4iB,ICYd4C,I,kMAtDCzN,GAAQ,IACZ0N,EAAczlB,KAAKvT,MAAnBg5B,UACF9pB,EAAS,CAAE2nB,OAAO,EAAMvL,SAC9B,OAAO,kBAAM0N,GAAU,EAAMpB,GAAU1oB,M,+BAG/B,IACA+pB,EAAa1lB,KAAKvT,MAAlBi5B,SAER,OADAzlB,SAAS9d,MAAT,UAAoBujC,EAApB,gBAEE,yBAAKx4B,UAAU,yBACb,6BACE,6CAEE,2BACEK,KAAK,OACLL,UAAU,eACVunB,aAAciR,EACdC,UAAQ,KAGZ,sEAEF,6BACE,2BACEp4B,KAAK,OACLL,UAAU,eACV04B,YAAY,EACZrkB,YAAY,iBACZC,SAAU,SAAA7V,GAAK,OAAI04B,GAAW14B,EAAMwT,OAAOzU,SAE7C,6BACE,4BACE6C,KAAK,SACLL,UAAU,gCACV0B,QAASoR,KAAK6lB,eAAc,Y,GAxCjBznB,cCInB0nB,G,YACJ,WAAYr5B,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,EAAOkS,KACR3e,MAAL,aACEi+B,OAAO,EACP8H,OAAO,GAFT,QAGS,CAACC,kBAAiB,IAG3B,EAAKC,KAAO,CACV,CAAE14B,KAAM,QAAS24B,KAAM,mBACvB,CAAE34B,KAAM,QAAS24B,KAAM,kBAVC,E,mFAkB1BlmB,KAAKmmB,mB,gDAGmBC,GAGxB,IAFkCpmB,KAAKvT,MAA/BkP,QAEcyqB,EAAUzqB,OAAQ,CAAC,IAC/BA,EAAwByqB,EAAxBzqB,OAAQ8oB,EAAgB2B,EAAhB3B,YAChB1Y,KAAEpb,QAAQgL,GAAQ,SAAC0qB,EAAM94B,GAAP,OAAgBk3B,EAAY6B,OAAOva,KAAEwa,WAAWh5B,GAAO84B,MAEzErmB,KAAKd,SAAS,CACZ+e,MAAOtiB,EAAOoc,MACdgO,MAAOpqB,EAAO2nB,W,2CAMlBtjB,KAAKmmB,mB,uCAGW,IAAD,EACenmB,KAAKvT,MAA3B+5B,EADO,EACPA,QAASC,EADF,EACEA,SACbzmB,KAAK0mB,WAAaF,IAASxmB,KAAK0mB,UAAUC,UAAYH,GACtDxmB,KAAK4mB,YAAcH,IAAUzmB,KAAK4mB,WAAWD,UAAYF,K,wCAO7CI,GAAa,IACrBpC,EAAgBzkB,KAAKvT,MAArBg4B,YACFqC,EAAc/a,KAAE4T,IAAI3f,KAAKhgB,MAAO6mC,GACtC7mB,KAAKd,SAAL,eAAiB2nB,GAAcC,IAC/BrC,EAAY6B,OAAOO,K,6CAGG,IAAD,OAKrB,OAAO7mB,KAAKimB,KAAKlY,KAAI,SAAAgZ,GAAG,OACtB,4BACE58B,IAAG,aAAQ48B,EAAIx5B,MACfA,KAAK,SACLL,WARcg5B,EAQMa,EAAIb,KARJ34B,EAQUw5B,EAAIx5B,KARLwR,KAAW,iBAAD,OAAkBmnB,GAAQ,CACnEc,SAAUjb,KAAE4T,IAAI,EAAK3/B,MAAOuN,MAQ1BqB,QAAS,kBAAM,EAAKq4B,kBAAkBF,EAAIx5B,SAT7B,IAAC24B,EAAM34B,O,+BAchB,IAAD,SAC0CyS,KAAKvT,MAA9CsO,EADD,EACCA,OAAQmsB,EADT,EACSA,QAAQC,EADjB,EACiBA,qBACxB,OACE,yBAAKj6B,UAAW6R,KAAW,cAAehE,IACxC,2BAAO8L,GAAG,YAAY8D,IAAK,SAAAyc,GAAE,OAAI,EAAKV,UAAYU,GAAIC,UAAQ,IADhE,OAUE,2BAAOxgB,GAAG,aAAa8D,IAAK,SAAAyc,GAAE,OAAI,EAAKR,WAAaQ,GAAIC,UAAQ,EAACC,OAAK,IACtE,yBAAKp6B,UAAU,iBACZ8S,KAAKunB,uBACN,4BACEh6B,KAAK,SACLL,UAAU,gCACV0B,QAAS,kBAAMs4B,GAAQ,MAE9BlnB,KAAKvT,MAAM8T,MAAkC,GAA1BP,KAAKvT,MAAM8T,KAAKpO,OAC7B,4BACC5E,KAAK,SACLL,UAAU,iCACV0B,QAAS,kBAAMu4B,GAAqB,MAC1B,W,GAlGG/oB,aA2HVmE,gBANS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,YAMnB,KAFamR,CAGbujB,IC7Fa0B,OArCf,YAAiE,IAA5CzsB,EAA2C,EAA3CA,OAAQ0sB,EAAmC,EAAnCA,SAAUhC,EAAyB,EAAzBA,UAAWiC,EAAc,EAAdA,WAMhD,OACE,yBAAKx6B,UAAW6R,KAAW,aAAchE,IACvC,2BACE,0BAAM7N,UAAU,UAAhB,UAA6Bu6B,EAA7B,iBAEF,4BACEl6B,KAAK,SACLL,UAAU,gCACV0B,QAbkB,SAACmpB,GACvB,IAAMpc,EAAS,CAAE2nB,OAAO,EAAMvL,SAC9B,OAAO,kBAAM0N,GAAU,EAAOgC,EAAU9rB,IAW3BgsB,EAAgB,KAO3B,4BACEp6B,KAAK,SACLL,UAAU,iCACV0B,QAAS84B,M,qBCAXxgB,IAFeC,0BAAeC,c,8MAKlClS,OAAS,WACP,EAAKzI,MAAM2Q,mBACX,EAAK3Q,MAAMuU,QAAQC,KAAK,M,EAG1BoG,cAAgB,WACd,EAAK5a,MAAMuU,QAAQC,KAAK,Y,0EAIxB,OACA,kBAACwG,GAAA,EAAD,CAAQC,OAAO,GACb,kBAACD,GAAA,EAAOP,OAAR,KACE,4BAAQ3Z,KAAK,SAASL,UAAU,gBAAgBswB,cAAY,YAC1D,0BAAMtwB,UAAU,WAAhB,qBACA,0BAAMA,UAAU,aAChB,0BAAMA,UAAU,aAChB,0BAAMA,UAAU,eAIpB,kBAACua,GAAA,EAAOE,SAAR,KAEE,kBAAChE,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KAAS,uBAAG3W,UAAU,qBACtB,kBAACuwB,GAAA,EAAD,CAAat7B,MAAO,uBAAG+K,UAAU,gBAAkB2Z,GAAG,sBACpD,kBAACoH,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,uBACA,kBAACA,GAAA,EAAD,4BACA,kBAACA,GAAA,EAAD,CAAUyP,SAAO,IACjB,kBAACzP,GAAA,EAAD,yBAGJ,yBAAK/gB,UAAU,cACf,kBAACua,GAAA,EAAOG,KAAR,CAAaC,UAAQ,GACnB,kBAACxG,GAAA,EAAD,KACE,0BAAMnU,UAAU,qBAAoB,uBAAGA,UAAU,kBACjD,kBAACoU,GAAA,EAAD,CAAa/T,KAAK,OAAOgU,YAAY,qBAGzC,kBAACoC,GAAA,EAAD,CAAKmE,WAAS,GACZ,kBAACjE,GAAA,EAAD,SAAU,kBAACjC,GAAA,EAAD,CAAMC,GAAG,mBAAT,eACX,kBAACgC,GAAA,EAAD,CAASjV,QAASoR,KAAKqH,eAAvB,eACC,kBAACoW,GAAA,EAAD,CAAat7B,MAAM,WAAW0kB,GAAG,iBAC/B,kBAACoH,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,uBACA,kBAACA,GAAA,EAAD,4BACA,kBAACA,GAAA,EAAD,CAAUyP,SAAO,IACjB,kBAACzP,GAAA,EAAD,wBAEF,kBAACpK,GAAA,EAAD,CAASjV,QAASoR,KAAK9K,QAAvB,kB,GArDWkJ,cA+ENmE,gBApBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBoB,YAAazS,EAAM+R,KAAKU,gBAID,SAAA+P,GACzB,OAAOC,YACL,CACErF,oBACAK,wBACAC,2BACAC,+BAEF6E,KAIWD,CAGb2E,IC7FI0W,MAAqBr+B,UAAUs+B,cAAgBt+B,UAAUu+B,oBACvCv+B,UAAUw+B,iBAAmBx+B,UAAUy+B,gBAI3DL,GAAM1zB,EAAQ,KAUZ29B,G,YACJ,WAAYn7B,GAAQ,IAAD,wBACjB,8CAAMA,KACDzM,MAAQ,CACX0lC,SAAU,GACVmC,WAAY,GACZC,UAAW,GACXL,SAAU,GACVhB,SAAU,KACVD,QAAS,KACTuB,YAAa,MATE,OAoBjB,EAAK1O,OAAS,aACd,EAAK8E,eAAiB,kDACtB,EAAKhF,WALoBiF,wBAMzB,EAAKC,GAAG,GACR,EAAKC,SAAW,IAAIhZ,KACpB,EAAKiZ,cAAgB,EAAKD,SAASE,UACnC,EAAKC,KAAO,GACZ,EAAKC,eAAiB,GACtB,EAAKC,aAAc,EACnB,EAAKC,KAAO,EACZ,EAAK7U,SAAW,EAAKwU,cAAcvhB,WAAa,QAChD,EAAK6hB,SAAW,GAChB,EAAKC,SAAS,GACd,EAAKkJ,oBAAoB,GACzB,EAAK/P,OAAO,GACZ,EAAKgQ,YAAY,GAEjB,EAAKlJ,iBAAL,aACIuE,OAAO,EACPvL,OAAO,GAFX,QAGW,CAACiO,kBAAiB,IAE7B,EAAKl2B,GAAK,GACV,EAAK6L,OAAS,KACd,EAAKusB,iBAAmB,EAAKzC,UAAU9lB,KAAf,iBACxB,EAAKwoB,uBAAyB,EAAKhB,qBAAqBxnB,KAA1B,iBAE9B,EAAKyoB,eAAiB,EAAKlB,QAAQvnB,KAAb,iBACtB,EAAK0oB,kBAAoB,EAAKX,WAAW/nB,KAAhB,iBACzB,EAAK2oB,iBAAmB,EAAKA,iBAAiB3oB,KAAtB,iBAjDP,E,mFAoDE,IAAD,OACdsf,EAAShf,SAASif,cAAc,UAEpCD,EAAOnU,IAAM,wBACbmU,EAAOE,OAAQ,EAEflf,SAASG,KAAKgf,YAAYH,GAGtBrB,IAKJ19B,QAAQC,IAAI6f,KAAKvT,MAAMvN,SAASc,OAEhCggB,KAAKd,SAAS,CAACtF,OAAQoG,KAAKvT,MAAMvN,SAASc,MAAM4Z,SAGjD/Q,GACG46B,GAAG,QAAQ,SAAA54B,GAAI,OAAI,EAAKqU,SAAS,CAAEwmB,SAAU,EAAKj5B,MAAMvN,SAASc,MAAM4sB,kBACvE6W,GAAG,WAAW,SAAA54B,GACb3K,QAAQC,IAAI0K,GACb,EAAKqU,SAAS,CAAE4oB,UAAW,SAAUL,SAAU58B,EAAKstB,UAEpDsL,GAAG,QAAQ,SAAC54B,GACPA,EAAK6F,KACP,EAAKZ,GAAGs1B,qBAAqBv6B,EAAK6F,KACZ,UAAlB7F,EAAK6F,IAAInD,MAAkB,EAAKuC,GAAGk1B,gBAClC,EAAKl1B,GAAGy1B,gBAAgB16B,EAAKqG,cAErCuyB,GAAG,MAAOzjB,KAAKknB,QAAQvnB,KAAKK,MAAM,IAClCujB,KAAK,OAAOvjB,KAAKvT,MAAMvN,SAASc,MAAM4sB,eAtBvCyS,MAAM,sF,2CA2BNrf,KAAKgf,0B,yCAIL9+B,QAAQC,IAAI,sB,8CAaZw9B,GAAIhiB,OAAO2jB,OAAO,CACbjG,OAAQ,aACJkG,YAAa,IAAI5B,GAAI6B,2BAA2B,CAC7CrB,eAAgB,kDAChBsB,QAAS,6DACTC,UAAW,mBAKf/B,GAAIhiB,OAAO4jB,YAAYI,KAAI,SAAU9c,GACzCA,EAAK3iB,QAAQC,IAAI0iB,GAChB3iB,QAAQC,IAAIw9B,GAAIhiB,OAAO4jB,gBAbjBvf,KAgBNqe,GAAK,IAAIV,GAAIiC,GAAG,CAACC,OAAO3/B,QAG5B4/B,WAAY,aACTxf,OAAQ,CAACyf,OAAQ,iB,qCAoHVlZ,GAGb7G,KAAK8e,SAAS6B,MAAM,KACpBzgC,QAAQC,IAAI,aACZ6f,KAAKd,SAAS,CAACgf,WAAU,M,oCAGfrX,GACC7G,KACN8e,SAAS8B,OADH5gB,KAEN2e,aAAc,EAOnB3e,KAAKd,SAAS,CAACgf,WAAU,M,qCAGdrX,GACA7G,KACN8e,SAASiC,QACfb,KAAE,aAAac,SAAS,QACvBd,KAAE,cAAce,YAAY,U,sCAIhBpa,GACD7G,KACN8e,SAASoC,SACfhB,KAAE,cAAcc,SAAS,QACxBd,KAAE,aAAae,YAAY,U,uCAGd1W,EAAMR,GACnB,IAAI1K,EAAOW,KACPmhB,EAAY5W,EACZjK,EAAS,CAETyf,OAAQ,YACRqB,IAAKrX,EACLsX,YAAa,aACbC,IAAK,eAETjiB,EAAKgf,GAAGkD,sBAAsBjhB,GAAQ,SAASuC,EAAKhY,GAC5CgY,EACA3iB,QAAQC,IAAI0iB,EAAKA,EAAI2e,QAErBniB,EAAKwf,SAAWh0B,EAAK42B,SACrBpiB,EAAKuf,KAAO,EACZvf,EAAKqhB,oBAAoBS,EAAW9hB,EAAKuf,KAAMvf,EAAKwf,SAAUxf,EAAK0K,SAAU1K,EAAK8Z,kB,0CAWxEgI,EAAWO,EAAY7C,EAAU10B,EAAKgvB,GACxD,IAAI9Z,EAAOW,KAIPM,EAAS,CACTiG,KAAM4a,EACNpB,OAAQ,YACRqB,IAAKj3B,EACLu3B,WAAYA,EACZD,SAAU5C,GAEd3+B,QAAQC,IAAImgB,GACZjB,EAAKgf,GAAGsD,WAAWrhB,GAAQ,SAASuC,EAAKhY,GACjCgY,EACA3iB,QAAQC,IAAI0iB,EAAKA,EAAI2e,QAOrBniB,EAAKof,KAAKxd,KAAKpW,EAAK+2B,MACI,GAApBviB,EAAKsf,aACLtf,EAAKwiB,4B,4CAWjB,IAAIxiB,EAAOW,KACP8hB,EAAY,GAIhBziB,EAAKof,KAAK9tB,SAAQ,SAAC9F,EAAM+H,GACrB,IAAMmvB,EAAM,CACRH,KAAM/2B,EACN62B,aAAc9uB,GAElBkvB,EAAU7gB,KAAK8gB,MAGnB,IAAIzhB,EAAS,CACTyf,OAAO,YACPqB,IAAK/hB,EAAK0K,SACV0X,SAAUpiB,EAAKwf,SACfmD,gBAAiB,CACbC,MAAOH,IAIfziB,EAAKgf,GAAG6D,wBAAwB5hB,GAAQ,SAASuC,EAAKhY,GAC9CgY,EACA3iB,QAAQC,IAAI0iB,EAAKA,EAAI2e,QAGrBniB,EAAK+iB,aAAav3B,EAAKs3B,UAEvB9iB,EAAKof,KAAO,GACZpf,EAAKqf,eAAiB,GACtBrf,EAAKwf,SAAW,GAChBxf,EAAKsf,aAAc,EAGnBU,MAAM,uD,mCAKL3pB,GACX,IAAI7K,EAAK,CACH+O,OAAQoG,KAAKhgB,MAAM4Z,OACnBpM,OAAQwS,KAAKvT,MAAM8T,KAAK/S,OACxB+M,cAAe7E,GAGrByG,GAAuB,eAAetR,GACrCnL,MAAK,SAAAod,GACAA,EAASjS,KAAKkQ,UAInB3a,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,6CAKZ3iB,QAAQC,IAAI,kBACZ6f,KAAKgoB,oBAAoB3F,mB,gCAGjBqC,EAAUL,EAAU1oB,GAAS,IAAD,OACpCqE,KAAKrE,OAASA,EAAO,IAAI0D,EAAKW,KAwGL,GAA1BA,KAAKvT,MAAM8T,KAAKpO,OACX6N,KAAKlQ,GAAK,IAAIy0B,GAAevkB,KAAKvT,MAAMvN,SAASc,MAAM8sB,gBACtD2W,GAAG,eAAe,SAAC3Y,GAClB,IAAMyd,EAAW,CAAEV,WAAY,SAAUpB,SAAU3b,GACnD5qB,QAAQC,IAAI2qB,GACZ,EAAKmd,YAAand,EAGb4Z,IAAU6D,EAAST,UAAY,IACpC,EAAK5oB,SAASqpB,MAGf9E,GAAG,cAAc,SAAA3Y,GAEd,EAAKkd,oBAAsBQ,KAAU,CAAC,EAAKP,YAAYnd,GAAM,CAE1Dvd,KAAM,QACNk7B,SAAU,YAEVC,aAAcF,KAAUG,oBAGxBC,aAAa,EAIbC,UAAW,KAIXC,gBAAiB,SAASxI,GAO5BjhB,EAAKqf,eAAezd,KAAKqf,GAJT,GAKNrf,KAAKqf,GAiCf,IAAIE,EAAOnhB,EAAK0pB,YAAYzI,EAAEE,MAC9BtgC,QAAQC,IAAI,QAAQqgC,GACrBtgC,QAAQC,IAAI,qBAAqBkf,EAAKqf,gBAEH,GAA9Brf,EAAKqf,eAAejwB,QAEfvO,QAAQC,IAAI,wBAEjBkf,EAAKohB,iBAAiBH,EAAGjhB,EAAK0K,YAM/B7pB,QAAQC,IAAI,2BAEXkf,EAAKuf,KAAOvf,EAAKuf,KAAO,EACxBvf,EAAKqhB,oBAAoBJ,EAAGjhB,EAAKuf,KAAMvf,EAAKwf,SAAUxf,EAAK0K,SAAU1K,EAAK8Z,cAM5E6P,wBAAwB,EAGxBC,YAAa,SAASC,KAGtBC,cAAe,MAIfC,cAAe,SAASnJ,GACpB//B,QAAQC,IAAI8/B,IAIhBoJ,aAAc,wBAGnB,EAAKnqB,SAAS,CAAEsnB,QAAS1b,OAE1B6V,MAAM+D,EAAU/oB,GAGjBqE,KAAKlQ,GAAK,IAAIy0B,GAAevkB,KAAKvT,MAAMvN,SAASc,MAAM8sB,gBAC9C2W,GAAG,eAAe,SAAC3Y,GAClB,IAAMyd,EAAW,CAAEV,WAAY,SAAUpB,SAAU3b,GAC9C4Z,IAAU6D,EAAST,UAAY,IACpC,EAAK5oB,SAASqpB,MAEf9E,GAAG,cAAc,SAAA3Y,GAChB,EAAK5L,SAAS,CAAEsnB,QAAS1b,OAE1B6V,MAAM+D,EAAU/oB,K,kCAInB2tB,GAGV,GAAc,IAAVA,EAAa,MAAO,UACxB,IAAIn6B,EAAIkE,SAAShE,KAAKC,MAAMD,KAAKlP,IAAImpC,GAASj6B,KAAKlP,IAH3C,MAGoD,IAC5D,OAAQmpC,EAAQj6B,KAAKk6B,IAJb,IAIoBp6B,IAAIq6B,YAAY,GAAK,IAHrC,CAAC,QAAS,KAAM,KAAM,KAAM,MAGqBr6B,K,mCAGjD,IACJs4B,EAAaznB,KAAKhgB,MAAlBynC,SACR5+B,GAAO06B,KAAK,MAAO,CAAE1hB,GAAI4lB,IACzBznB,KAAKd,SAAS,CAAE4oB,UAAW,O,8BAGrBlD,GACqB,GAA1B5kB,KAAKvT,MAAM8T,KAAKpO,QACjB6N,KAAKgoB,oBAAoB1F,gBACrBvW,KAAEgX,WAAW/iB,KAAKlQ,GAAG8wB,OAAO5gB,KAAKlQ,GAAG8wB,KAAKgE,GAC7C5kB,KAAKlQ,GAAK,GACVkQ,KAAKrE,OAAS,KACdqE,KAAKd,SAAS,CACZ2oB,WAAY,GACZpB,SAAU,KACVD,QAAS,OAMXxmB,KAAK2e,aAAc,I,+BAwBX,IAAD,EACkE3e,KAAKhgB,MAAtE0lC,EADD,EACCA,SAAU+B,EADX,EACWA,SAAUK,EADrB,EACqBA,UAAWD,EADhC,EACgCA,WAAYpB,EAD5C,EAC4CA,SAAUD,EADtD,EACsDA,QAC7D,OACE,6BACE,kBAAC,GAAWxmB,KAAKvT,OACjB,kBAAC,GAAD,CACEi5B,SAAUA,EACVD,UAAWzlB,KAAKkoB,mBAGlB,kBAAC,GAAD,CACEntB,OAAQ8sB,EACRpB,SAAUA,EACVD,QAASA,EACT7qB,OAAQqE,KAAKrE,OACb8oB,YAAazkB,KAAKlQ,GAAG20B,YACrByC,QAASlnB,KAAKooB,eACd7nB,KAAMP,KAAKvT,MAAM8T,KACjB4mB,qBAAsBnnB,KAAKmoB,yBAE7B,kBAAC,GAAD,CACEptB,OAAQ+sB,EACRrC,UAAWzlB,KAAKkoB,iBAChBR,WAAY1nB,KAAKqoB,kBACjBZ,SAAUA,S,GA3sBFrpB,aAytBHmE,gBANS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,YAMnB,KAFamR,CAGbqlB,IChuBI1gB,IAFeC,0BAAeC,c,YAGlC,WAAY3a,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KAwCRyI,OAAS,WACP,EAAKzI,MAAM2Q,mBACX,EAAK3Q,MAAMuU,QAAQC,KAAK,MAzCxB,EAAKjhB,MAAM,CACTsnB,YAAY,IAHY,E,kFAQT9Z,GAAQ,IAAD,OACxB2O,GAAuB,oBAAoB,CAAC3O,WAC3C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,EAASjS,MACpB,IAAIyc,EAAcxK,EAASjS,KAAKwD,OAAO,GACnC9K,EAAa+jB,EAAY/jB,YAAY,GAAGA,YACxCq4B,EAAYtU,EAAYtO,iBACxBxV,EAAU8jB,EAAY9jB,SACtB0V,EAAiBoO,EAAYpO,gBAC7BxD,EAAY4R,EAAY5R,UAC5B,EAAKwJ,SAAS,CAACoI,YAAYA,EAChB/jB,cACAq4B,aACAp4B,WACA0V,kBACAxD,kBAIftV,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,2CAKd,IAAItC,EAAMP,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8T,KACjE,GAAGA,EAAK,CACN,IAAI/S,EAAQ+S,EAAK/S,OACjBwS,KAAKwH,mBAAmBha,M,+BAU1B,OACA,kBAACia,GAAA,EAAD,CAAQC,OAAO,GAUb,kBAACD,GAAA,EAAOE,SAAR,KAYE,yBAAKza,UAAU,cAOf,kBAACyW,GAAA,EAAD,CAAKmE,WAAS,GACd,kBAACjE,GAAA,EAAD,SAAU,kBAACjC,GAAA,EAAD,CAAMC,GAAG,mCAAT,aACT7B,KAAKhgB,MAAMsnB,YAAkB,kBAACzD,GAAA,EAAD,SAAU,kBAACjC,GAAA,EAAD,CAAMC,GAAG,0BAAT,eAA8D,KACrG7B,KAAKhgB,MAAMsnB,YAAmB,kBAACzD,GAAA,EAAD,SAAU,kBAACjC,GAAA,EAAD,CAAMC,GAAG,0BAAT,eAAgE,KAQvG,kBAACgC,GAAA,EAAD,CAASjV,QAASoR,KAAK9K,QAAvB,kB,GAzFWkJ,cAmHNmE,gBApBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBoB,YAAazS,EAAM+R,KAAKU,gBAID,SAAA+P,GACzB,OAAOC,YACL,CACErF,oBACAK,wBACAC,2BACAC,+BAEF6E,KAIWD,CAGb2E,I,gECxGIiV,G,YACH,WAAY1vB,GAAQ,IAAD,+BACd,+CAASk3B,aA8Ef1kB,aAAe,SAAAsd,GACbr8B,QAAQC,IAAIo8B,GACZ,EAAKrd,SAAS,CACZjd,UAAWs6B,KAhFb,EAAKv8B,MAAQ,CACXmjB,QAAQ,EACRlhB,UAAW,IAAIqjB,KACfmkB,SAAS,IALO,E,mFAWlB,IAAIlpB,EAAMP,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8T,KACjE,GAAGA,EAAK,CACN,IAAI/S,EAAQ+S,EAAK/S,OACjBwS,KAAKd,SAAS,CAAC1R,OAAQA,EAAO+S,KAAKA,IACnCP,KAAKwH,mBAAmBha,GACxBwS,KAAK4N,eAAepgB,M,yCAILA,GAAQ,IAAD,OACxB2O,GAAuB,oBAAoB,CAAC3O,WAC3C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,EAASjS,MACpB,IAAIyc,EAAcxK,EAASjS,KAAKwD,OAAO,GACxC,EAAK6Q,SAAS,CAACoI,YAAYA,QAI9BlnB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAIDrV,GAAQ,IAAD,OAEpB2O,GAAuB,2BAA2B,CAACnC,cADhCxM,IAElB9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,GACZ,IAAI2sB,EAAW,GACf3sB,EAASjS,KAAKwD,OAAOsC,SAAQ,SAASmgB,EAAKle,GACzC,IAAI82B,EAAa,IAAIpkB,KAAKwL,EAAKhX,gBAC3BvY,EAAMmoC,EAAWC,aACjBnoC,EAAQkoC,EAAW/M,WACnBl7B,EAAOioC,EAAWjkB,cAClB0d,EAAMuG,EAAWE,aACjBC,EAAOH,EAAWI,WAElB7nC,EAAW,IAAIqjB,KAAK7jB,EAAKD,EAAMD,EAAIsoC,EAAK1G,GAG3C5hC,GADAmoC,EAAa,IAAIpkB,KAAKwL,EAAK/W,eACV4vB,aACjBnoC,EAAQkoC,EAAW/M,WACnBl7B,EAAOioC,EAAWjkB,cAClB0d,EAAMuG,EAAWE,aACjBC,EAAOH,EAAWI,WAEnB,IAAI5nC,EAAS,IAAIojB,KAAK7jB,EAAKD,EAAMD,EAAIsoC,EAAK1G,GAE1CsG,EAASxoB,KAAK,CACVrH,OAAQkX,EAAKlX,OACbzM,KAAM,aACNK,OAASsjB,EAAKtjB,OACd4vB,UAAWn7B,EACXq7B,QAASp7B,EACT6nC,MAAOjZ,EAAKtjB,OAAS,UAAW,eAGxC,EAAK0R,SAAS,CAACuqB,SAASA,QAIzBrpC,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,kCAWJqa,GAGT,GAFDh9B,QAAQC,IAAI+8B,GAERv0B,IAAOu0B,EAAKryB,KAAKuyB,WAAWnuB,UAAatG,MAASsG,UAGpD,OAFAiuB,EAAKK,QAAS,EACd9xB,EAAe,qDACR,EAGRvL,QAAQC,IAAI+8B,EAAKryB,KAAKuyB,WACvB,IAAI/d,EAAMW,KACN/d,EAAW,IAAIqjB,KAAK4X,EAAKryB,KAAKuyB,WAE9Bl7B,EAAS,IAAIojB,KAAK4X,EAAKryB,KAAKyyB,SAE/Bp9B,QAAQC,IAAIwI,IAAOu0B,EAAKryB,KAAKuyB,YAE9B,IAAIvyB,EAAK,CACPgP,mBAAmB,IAAIyL,KAAK3c,IAAOu0B,EAAKryB,KAAKuyB,WAAWlZ,OAAO,gBAAgBjV,UAC/E6K,eAAgBnR,IAAO1G,GAAWgN,UAClC8K,aAAcpR,IAAOzG,GAAS+M,UAC9B+K,cAAegG,KAAKhgB,MAAMwN,QAE7B,GAAI0vB,EAAKryB,KAAK+O,OAYR,CACH,IAAIA,EAAQsjB,EAAKryB,KAAK+O,OACtB1Z,QAAQC,IAAI+8B,EAAKryB,MAEjBsR,GAAuB,8BAA8B,CAACvC,WACrDla,MAAK,SAAAod,GACuB,YAAvBA,EAASjS,KAAKkQ,SACdsE,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAKuO,eAAevO,EAAKrf,MAAMwN,YAGpCpN,OAAM,SAAAC,GAELH,QAAQC,IAAIE,WAxBd8b,GAAuB,aAActR,GACpCnL,MAAK,SAAAod,GACuB,YAAvBA,EAASjS,KAAKkQ,SACdsE,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAKuO,eAAevO,EAAKrf,MAAMwN,YAGpCpN,OAAM,SAAAC,GAELH,QAAQC,IAAIE,MAkBhB68B,EAAKK,QAAS,I,+BAMN,IAAD,OACP,OACE,yBAAKrwB,UAAU,WACd,kBAAC,iBAAD,CACGgU,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC,GAAWyT,KAAKvT,OACf,yBAAKS,UAAU,cACd,yBAAKA,UAAU,0BACd8S,KAAKhgB,MAAMsnB,YACT,kBAAC,KAAD,CAAmB0D,MAAM,OAAOD,OAAO,QACrCJ,IAAK,SAAAqf,GAAQ,OAAI,EAAKC,YAAcD,GACpCE,UAAWlqB,KAAKmqB,YAAYxqB,KAAKK,MAAOoqB,eAAe,EAEvD5oB,SAAUxB,KAAKf,aAAaU,KAAKK,MAAOqqB,cAAe,CAAEC,WAAYtqB,KAAKhgB,MAAMypC,WAE1E,kBAAC,KAAD,KACA,kBAAC,KAAD,CAAec,OAAO,MAAMC,UAAU,QAAQC,QAAQ,UAClD,kBAAC,KAAD,CAAeF,OAAO,SACtB,kBAAC,KAAD,CAAeA,OAAO,YAE1B,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAmBzrB,MAAM,SAAS3c,MAAM,OAAO6L,KAAK,OAAO08B,eAAe,EAAOC,UAAU,OAAOL,WAAYtqB,KAAKhgB,MAAMypC,SAAUmB,QAAQ,KAAKC,WAAW,WAG/J,kBAAC,KAAD,CAASC,SAAU,CAACC,KAAKC,SAE/B,yBAAK99B,UAAU,kBAAf,wC,GA9KQkR,aAiMTmE,gBATS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBkW,UAAWvnB,EAAM+R,KAAKT,kBACtB4c,QAASluB,EAAM0T,WAMjB,KAFa6O,CAGb4Z,IC1JIjQ,IA9BO,kBAAC,EAAD,CAAiBzf,YAAO,GAAKA,QAC7B,kBAAC,EAAD,CAAiBA,YAAO,GAAKA,Q,YA8BxC,WAAYA,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KAsER+S,aAAe,SAAC3U,EAAKmH,GACnB,IAAI2I,EAAS9P,EAAK8P,SAOdwR,EAAQ,CACVxR,WACAC,MARQ,EAAK5a,MAAM4a,MASnBC,YARchQ,EAAK2C,OASnBsN,KARO,EAAK9a,MAAMwN,OASlBuN,OARU/I,EASVsC,UARa,EAAK7H,MAAM8T,KAAK/S,QAWjB,KAAXmN,GAA4B,OAAXA,EAChBwB,GAAuB,eAAegQ,GACrCzsB,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKI,sBAAsB,EAAKnb,MAAM4a,UAOzCxa,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,MAGhB1G,GAAuB,eAAegQ,GACrCzsB,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKI,sBAAsB,EAAKnb,MAAM4a,UAOzCxa,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,OAlHU,EA0H5BuJ,gBAAkB,WAChBntB,OAAOotB,SAAS,IAAK,GAErB,EAAKnN,SAAS,CAAEkN,iBAAkB,EAAKpsB,MAAMosB,mBA7HnB,EAgI5BE,eAAiB,SAAAzhB,GAEf,GAAIA,EAAM,CACR,IAAI2C,EAAS3C,EAAK2C,OACdzL,EAAU8I,EAAK9I,QACff,EAAY6J,EAAK7J,UACjBE,EAAW2J,EAAK3J,SAGhBqrB,EAAU1hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAC/C+L,EAAU3hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAE/CzS,GACDnD,EAAK7J,UAAY6J,EAAK7J,UAAY,IACnC,KACC6J,EAAK3J,SAAW2J,EAAK3J,SAAW,IAC/BurB,EAAe5hB,EAAKoQ,eACpBwR,IACFA,EAAehd,EAAc,SAAUgd,IAEzC,IAAIC,EAAa7hB,EAAK6hB,WAClBA,IACFA,EAAajd,EAAc,WAAYid,IAEzC,IAAI7gB,EAAWhB,EAAKgB,SACpB,EAAKqT,SAAS,CACZsN,UACAzqB,UACAf,YACAE,WACAsM,SACAif,eACAC,aACAH,UACA1gB,WACAmC,WAnKsB,EAyK5B2e,cAAgB,SAAA9hB,GACd3K,QAAQC,IAAI0K,GAEZ,IAAIiiB,EAAgBjiB,EAAKgiB,aAErBD,EAAc/hB,EAAKkiB,oBAEvB,EAAKtgB,MAAMuU,QAAQC,KAAK,CACpBmB,SAAU,UACVpiB,MAAO,CAAE4sB,aAAaA,EAAaE,eAAeA,EAAelT,OAAO/O,EAAK+O,WAlLvD,EAsL5BoT,4BAA8B,SAAAC,GAC5B/sB,QAAQC,IAAI8sB,GACZ,EAAK/N,SAAS,CACZ+N,qBAAsBA,EACtBC,6BAA8B,EAAKltB,MAAMktB,+BA1LjB,EAgM5BC,eAAiB,WACf,IAAI3f,EAAS,EAAKxN,MAAMwN,OACxB,EAAKf,MAAM4Q,6BAA6B7P,IAlMd,EAkN5B4f,eAAiB,WACf,EAAKlO,SAAS,CACZmO,cAAe,EAAKrtB,MAAMqtB,gBApNF,EAwN5BpO,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SAvNlD,EAAK1K,MAAQ,CACXktB,6BAA6B,EAC7BD,qBAAsB,GAEtBK,SAAS,EACTC,SAAS,EACTC,uBAAwB,GACxBC,oBAAoB,EACpBrc,SAAS,GACTic,cAAc,EACdxhB,SAAU,OACVugB,iBAAiB,EACjBsB,UAAU,EACV1f,KAAM,GACN2f,aAAa,GAhBW,E,oFAsB1B,IAAIpN,EAAMP,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8T,KAE9DA,GACDP,KAAK4N,eAAerN,EAAK/S,U,gDAKHqgB,M,kFAQXrgB,GAAQ,IAAD,OAEpB2O,GAAuB,2BAA2B,CAACnC,cADhCxM,IAElB9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,GACZ,IAAIgR,EACJA,EAAiBhR,EAASjS,KAAKwD,OACjC,EAAK6Q,SAAS,CAAC4O,eAAeA,QAI/B1tB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,4CAIMjI,GAAO,IAAD,OAC1BuB,GAAuB,wBAAwB,CAACvB,UAC/Clb,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIyS,EAAwB,EAAKxtB,MAAMwtB,uBACvCA,EAAwB1Q,EAASjS,KAAKwD,OAEtC,EAAK6Q,SAAS,CAACsO,uBAAwBA,QAG3CptB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAmII,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,+BAgBR,IAAIxD,EAAMW,KAClB,OAEA,yBAAK9S,UAAU,WACd,kBAAC,iBAAD,CACKgU,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC,GAAWyT,KAAKvT,OACf,yBAAKS,UAAU,cAGjB,yBAAKA,UAAU,0BAEb,yBAAKA,UAAU,kBAkBZ8S,KAAKhgB,MAAM8tB,gBAAkB9N,KAAKhgB,MAAM8tB,eAAeC,KAAI,SAASljB,EAAM+H,GACvE,OAEE,yBACEzI,IAAKyI,EACL1F,UAAU,kBAGV,yBAAKA,UAAU,2CAAf,qDAGA,yBAAKA,UAAU,mDACb,yBAAKA,UAAU,uEACb,yBAAKA,UAAU,UACb,6BAOA,4BACA,6BAGD,yBAAKA,UAAU,UACd,4BACGvE,IAAO0K,SAASxI,EAAKiP,eAAe,KAAKoK,OAAO,aAElDvb,IAAO0K,SAASxI,EAAKkP,aAAa,KAAKmK,OAAO,aAGjD,yBAAKhX,UAAU,+BAEb,4BAAQ0B,QAASyQ,EAAKsN,cAAchN,KAClCN,EACAxU,GAEAqC,UAAU,4BAJZ,cAFF,YAyBE,kBAAC8gB,GAAA,EAAD,CACE9gB,UAAU,iBACV/K,MAAO,0BAAM+K,UAAU,gBACvB2Z,GAAG,KAEH,kBAACoH,GAAA,EAAD,KAME,uBAAG/gB,UAAU,oBANf,cASA,kBAAC+gB,GAAA,EAAD,CACEgd,SAAU,kBACR5rB,EAAK5S,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,eACVpiB,MAAO,CAAEkrC,YAAargC,OAI1B,uBAAGqC,UAAU,sBARf,gBAUA,kBAAC+gB,GAAA,EAAD,CACEgd,SAAU,kBACR5rB,EAAK5S,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,sBACVpiB,MAAO,CAAEmrC,aAActgC,EAAK2C,YAIhC,uBAAGN,UAAU,+BAAgC,IAR/C,uBAYA,kBAAC+gB,GAAA,EAAD,KAOE,uBAAG/gB,UAAU,sBAPf,2B,GA9VJkR,cAmaTmE,gBAvBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBkW,UAAWvnB,EAAM+R,KAAKT,kBACtB4c,QAASluB,EAAM0T,YAIQ,SAAA8O,GACzB,OAAOC,YACL,CACEpF,gCACAU,0BACAC,+BACAG,kCACAN,wBACAI,8BAEFuE,KAIWD,CAGb2J,IC1dEiC,GAAiBhH,0BAAeC,cAChC7f,GAAqBL,EAAUK,mBAE7B6mB,G,YACJ,WAAY3hB,GAAQ,IAAD,+BACjB,8CAAMA,KA2FR4hB,oBAAsB,WACpB,EAAKnP,SAAS,CACZoP,gBAAgB,IAElB,EAAK7hB,MAAM8hB,2BAhGM,EAmGnB3P,iBAAmB,WACjB,OAAO,EAAK5e,OApGK,EAuGnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAzGZ,EA6GnBsJ,kBAAoB,SAAAzc,GAClB,EAAKuT,SAAS,CAAEiJ,YAAa,KAC7B,IAAM1a,EAAO9B,EAAMwT,OAAOkJ,MAAM,GAC1Bva,EAAWL,EAAKO,KAChBsa,EAAW7a,EAAKF,KACtB,GAAIE,EAAM,CAER,IAAI8a,EAAS,IAAIC,WACjBD,EAAOE,cAAc9c,EAAMwT,OAAOkJ,MAAM,IACxCE,EAAOG,OAAS,SAAA/c,GACd,EAAKuT,SAAS,CAGZiJ,YAAaxc,EAAMwT,OAAO9Q,OAC1Bsa,UAAW7a,EACX4B,UAAW4Y,EACXtW,OAAQ,OA7HG,EAgJnBiN,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SAjJjC,EAoJnB8jB,cAAgB,SAACC,EAAWC,EAASvkB,GACnC,GAAkB,KAAdskB,GAAgC,KAAZC,EAAgB,CACtC,IAAIC,EAAetb,SAASob,EAAW,IACnCG,EAAavb,SAASqb,EAAS,IACvB,IAARvkB,EACEwkB,EAAeC,GACjB1uB,QAAQC,IAAI,KAAM,EAAKyf,gBACvB,EAAKA,eAAe8F,MAApB,UAAyC,WACzC,EAAK9F,eAAe+F,SAAS,sBAC3B,+CAEFzlB,QAAQC,IAAI,OAAQ,EAAKyf,gBACzB,EAAKA,eAAe8F,MAApB,UAAyC,GACzC,EAAK9F,eAAe+F,SAAS,sBAAwB,IAEtC,IAARxb,IACLwkB,EAAeC,GACjB1uB,QAAQC,IAAI,KAAM,EAAKyf,gBACvB,EAAKA,eAAe8F,MAApB,SAAwC,WACxC,EAAK9F,eAAe+F,SAAS,qBAC3B,6CAEFzlB,QAAQC,IAAI,OAAQ,EAAKyf,gBACzB,EAAKA,eAAe8F,MAApB,SAAwC,GACxC,EAAK9F,eAAe+F,SAAS,qBAAuB,OA5KzC,EAkLnBkJ,cAAgB,SAAAljB,GACd,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,QAClDxK,QAAQC,IAAI,iBACZ,EAAKquB,cAAc,EAAKxuB,MAAM0C,UAAWiJ,EAAMwT,OAAOzU,MAAO,IArL5C,EAwLnBokB,gBAAkB,SAAAnjB,GAChB,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,QAClD,EAAK8jB,cAAc7iB,EAAMwT,OAAOzU,MAAO,EAAK1K,MAAM2C,QAAS,IA1L1C,EA6LnBosB,aAAe,SAAApjB,GACb,IAAIlJ,EAAS,EAAKzC,MAAMgvB,gBACpBC,EACF,EAAKxiB,MAAM8T,MAAQ,EAAK9T,MAAM8T,KAAK3L,IAC/BjM,IAAO,EAAK8D,MAAM8T,KAAK3L,KAAKsP,OAAO,QACnC,GAEN,GACEzhB,GAC6B,IAA7B,EAAKgK,MAAMyiB,eACX7b,SAAS4b,EAAK,IAAM5b,SAAS5Q,EAAQ,IACrC,CACA,IAAI0sB,EAAIlP,SAASmP,eAAe,gBAC5BC,EAAkBpP,SAASmP,eAAe,gBAAgB3gB,OAC9D0gB,EAAEniB,OAAOqiB,EAAkB,GAE7B,EAAKnQ,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,QAClD,EAAK8jB,cAAc,EAAKxuB,MAAMwC,SAAUmJ,EAAMwT,OAAOzU,MAAO,IA9M3C,EAiNnB4kB,eAAiB,SAAA3jB,GACf,IAAInJ,EAAW,EAAKxC,MAAMuvB,kBACtBN,EACF,EAAKxiB,MAAM8T,MAAQ,EAAK9T,MAAM8T,KAAK3L,IAC/BjM,IAAO,EAAK8D,MAAM8T,KAAK3L,KAAKsP,OAAO,QACnC,GAEN,GACE1hB,GAC6B,IAA7B,EAAKiK,MAAMyiB,eACX7b,SAAS4b,EAAK,IAAM5b,SAAS7Q,EAAU,IACvC,CACA,IAAI2sB,EAAIlP,SAASmP,eAAe,kBAC5BC,EAAkBpP,SAASmP,eAAe,kBAAkB3gB,OAChE0gB,EAAEniB,OAAOqiB,EAAkB,GAE7B,EAAKnQ,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,QAClD,EAAK8jB,cAAc7iB,EAAMwT,OAAOzU,MAAO,EAAK1K,MAAMyC,OAAQ,IAlOzC,EAqOnB+sB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eAtOP,EAyOnBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aA1OP,EA6OnButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAEZ,EAAKid,SAAS,CAAEjd,YAAWC,aAnPV,EAsPnBkd,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GACtBA,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IACS,KAAhCF,EAAKrf,MAAM4vB,iBACbvQ,EAAKwQ,yBAELxQ,EAAKG,oBA9PM,EA4XnBsQ,gBAAkB,SAAAC,GAChB7vB,QAAQC,IAAI4vB,GACZ,IAAIllB,EAAO,CACTklB,eAEE1Q,EAAI,gBACJ0Q,GACF5T,GAAuB,kBAAmBtR,GACvCnL,MAAK,SAAAod,GACAA,GAAqC,YAAzBA,EAASjS,KAAKkQ,SAC5BsE,EAAK5S,MAAM8hB,0BACXlP,EAAK5S,MAAMujB,sBAGd5vB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,OA3YD,EAyanBoN,sBAAwB,SAAAvlB,GAEtB,GADAxK,QAAQC,IAAIuK,GACRA,EAAM+D,OAAS,EAAG,CACpB,IAAIyhB,EAAiBxlB,EAAM,GAAGA,MAC1B1I,EAAgB0I,EAAM,GAAGoa,MAC7B5kB,QAAQC,IAAI+vB,EAAgBluB,GAC5B,EAAKkd,SAAS,CACZgR,iBACAluB,oBAjba,EAsbnBmuB,kBAAoB,SAAAzlB,GAClB,EAAKwU,SAAS,CACZld,cAAe0I,KAtbjB,EAAK1K,MAAQ,CACXuf,WAAW,EACX+O,gBAAgB,EAChB4B,eAAgB,GAChBluB,cAAe,GACfH,KAAM,GAGNO,YAAa,GACboL,OAAQ,GACR3B,UAAU,EACVkkB,YAAa,GACbK,iBAAkB,GAClBC,WAAY,GACZ7tB,SAAU,GACVC,OAAQ,GACRC,UAAW,GACXC,QAAS,GACT2tB,oBAAqB,GACrBC,iBAAkB,GAClBX,iBAAkB,GAClBY,UAAW,GACXC,SAAU,GACVtI,YAAa,GACboH,kBAAmB,GACnBP,gBAAiB,IAGnB,EAAKpQ,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKkK,mBAAqB,EAAKA,mBAAmBlK,KAAxB,iBAC1B,EAAKC,eAAiBC,KAASC,aAC7B,CACE9d,cAAe,WACfH,KAAM,WACNa,UAAW,WACXC,QAAS,WACTH,SAAU,WACVC,OAAQ,YAEV,CACE,yBAA0B8E,GAAmBvF,cAAczB,SAC3D,gBAAiBgH,GAAmB1F,KAAKtB,SACzC,qBAAsBgH,GAAmB7E,UAAUnC,SACnD,mBAAoBgH,GAAmB5E,QAAQpC,SAC/C,oBAAqBgH,GAAmB/E,SAASjC,SACjD,kBAAmBgH,GAAmB9E,OAAOlC,WAhDhC,E,iIAmEjB,GARAL,QAAQC,IAAI6f,KAAKvT,MAAMyiB,eACnBlP,KAAKvT,MAAM8T,MACbP,KAAKd,SAAS,CACZ1R,OAAQwS,KAAKvT,MAAM8T,KAAK/S,OACxB3B,SAAUmU,KAAKvT,MAAM8T,KAAK1U,WAI1BmU,KAAKvT,MAAMikB,gBAAiB,CAC9B,IAAI7lB,EAAOmV,KAAKvT,MAAMikB,gBAClBC,EAAqB,KAAd9lB,EAAK8lB,KAAclhB,EAAc,SAAU5E,EAAK8lB,MAAQ,GACnE3Q,KAAKd,SAAS,CACZ6Q,YAAallB,EAAKklB,YAClB/tB,cAAe6I,EAAK+lB,UACpB/uB,KAAMgJ,EAAKhJ,KACXa,UAAWmI,EAAKnI,UAChBC,QAASkI,EAAKlI,QACd4sB,kBAAmB1kB,EAAKrI,SACxBwsB,gBAAiBnkB,EAAKpI,OACtBD,SAAUqI,EAAKrI,SACfC,OAAQoI,EAAKpI,OACbytB,eAAgBrlB,EAAKqlB,eACrBI,oBAAqBK,EACrBJ,iBAAkB1lB,EAAK8lB,KAGvBvuB,YAAayI,EAAKzI,iB,yCA+KLqL,GACbA,GACFuS,KAAKd,SAAS,CACZoR,oBAAqBtQ,KAAKhgB,MAAMmoB,YAChCyH,iBAAkBniB,M,+CAMtB,IAAIG,EAAe3O,OAAO2O,aACtBF,EAAWsS,KAAKhgB,MAAM0N,SACtBF,EAASwS,KAAKhgB,MAAMwN,OACpBqjB,EAAW7Q,KAAKhgB,MAAM4vB,iBACtB9hB,EAAWC,EAAkB8iB,EAAS7iB,MACtCC,EAAU,aAAST,EAAT,YAAmBtG,EAAUmB,kBAA7B,YAAkDyF,GAC5DuR,EAAOW,KAESpS,EAAaM,KAAKC,yBACpCjH,EAAUW,aACV6F,GAGUU,+BACVlH,EAAUO,eACVwG,EACA4iB,GACA,SAACxwB,EAAOgO,GACFA,GACFgR,EAAKH,SACH,CACEqR,iBAAkBtiB,IAEpB,WACEoR,EAAKG,kBAIPnf,GACFH,QAAQC,IAAI,SAAUE,Q,qCAO5B,IAAI6vB,EAAiBlQ,KAAKhgB,MAAMkwB,eAC5BH,EAAc/P,KAAKhgB,MAAM+vB,YACzBviB,EAASwS,KAAKhgB,MAAMwN,OACpBojB,EAAY5Q,KAAKhgB,MAAMgC,cACvBH,EAAOme,KAAKhgB,MAAM6B,KAClBa,EAAYsd,KAAKhgB,MAAM0C,UACvBC,EAAUqd,KAAKhgB,MAAM2C,QACrBH,EAAWwd,KAAKhgB,MAAMwC,SACtBC,EAASud,KAAKhgB,MAAMyC,OAWpBL,EAAc4d,KAAKhgB,MAAMoC,YACzByJ,EAAWmU,KAAKhgB,MAAM6L,SACtB0B,EAAOrG,EAAUuB,WAGjBoC,EAAO,CACTklB,cACAG,iBACA1iB,SACAmjB,KANS3Q,KAAKhgB,MAAMuwB,iBAOpBK,YACA/uB,OACAa,YACAC,UACAH,WACAC,SACAL,cACAyJ,WACA0B,QAGE8R,EAAOW,KACoB,KAA3BA,KAAKhgB,MAAM+vB,YACb5T,GAAuB,eAAgBtR,GACpCnL,MAAK,SAAAod,GACAA,GAAqC,YAAzBA,EAASjS,KAAKkQ,QAC5BsE,EAAK5S,MAAM8hB,0BACXlP,EAAK5S,MAAMujB,kBACX3Q,EAAKH,SAAS,CAAEK,WAAW,KAE3BF,EAAKH,SAAS,CAAEK,WAAW,OAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAI,MAAOE,MAGvB8b,GAAuB,gBAAiBtR,GACrCnL,MAAK,SAAAod,GACAA,GAAqC,YAAzBA,EAASjS,KAAKkQ,QAC5BsE,EAAK5S,MAAM8hB,0BACXlP,EAAK5S,MAAMujB,kBACX3Q,EAAKH,SAAS,CAAEK,WAAW,EAAO+O,gBAAgB,KAElDjP,EAAKH,SAAS,CAAEK,WAAW,OAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAI,MAAOE,Q,yCA0BzB,IAAIgf,EAAOW,KACXA,KAAKvT,MACFyR,yBACAxe,MAAK,SAAAod,GACJ,GAAIA,EAAS7K,SAA4C,YAAjC6K,EAAS7K,QAAQpH,KAAKkQ,OAAsB,CAClE,IAAIrJ,EAAmBoL,EAAS7K,QAAQpH,KAAKwD,OAC7C,GAAIqD,EAAiBjD,OAAS,EAAG,CAC/B,IAAImX,EAAUlU,EAAiBqc,KAAI,SAAS+C,GAC1C,MAAO,CACLpmB,MAAOomB,EAAKZ,eACZpL,MAAOgM,EAAK9iB,SAGhBqR,EAAKH,SAAS,CAAEkR,iBAAkBxK,EAASrG,WAAW,SAEtDF,EAAKH,SAAS,CAAEkR,iBAAkB,GAAI7Q,WAAW,QAItDnf,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,+CAwBhB,IAAMkO,EAAW,GACbvuB,EAAWwd,KAAKhgB,MAAMuvB,kBAEtBN,EACFjP,KAAKvT,MAAM8T,MAAQP,KAAKvT,MAAM8T,KAAK3L,IAC/BjM,IAAOqX,KAAKvT,MAAM8T,KAAK3L,KAAKsP,OAAO,QACnC,GAEM,IAAR+K,GAAqB,OAARA,GAAwB,KAARA,IAE/BA,EADmBtmB,MAASub,OAAO,QAAU,IAG/ChkB,QAAQC,IAAIqC,GACZtC,QAAQC,IAAI8uB,GACZ8B,EAAS9P,KACP,4BAAQvW,MAAM,GAAGP,IAAK,IAAtB,SAMAkJ,SAAS7Q,EAAU,KACnB6Q,SAAS4b,EAAK,KACd5b,SAAS4b,EAAK,IAAM5b,SAAS7Q,EAAU,KACV,IAA7Bwd,KAAKvT,MAAMyiB,eAEX6B,EAAS9P,KACP,4BAAQvW,MAAOlI,EAAU2H,IAAK3H,GAC3BA,IAKP,IAAK,IAAI2M,EAAI8f,EAAK9f,GAAKjI,EAAUzE,OAAQ0M,IACvC4hB,EAAS9P,KACP,4BAAQvW,MAAOyE,EAAGhF,IAAKgF,GACpBA,IAIP,OAAO4hB,I,6CAIP,IAAItuB,EAASud,KAAKhgB,MAAMgvB,gBAElB+B,EAAW,GACb9B,EACFjP,KAAKvT,MAAM8T,MAAQP,KAAKvT,MAAM8T,KAAK3L,IAC/BjM,IAAOqX,KAAKvT,MAAM8T,KAAK3L,KAAKsP,OAAO,QACnC,GAEM,IAAR+K,GAAqB,OAARA,GAAwB,KAARA,IAE/BA,EADmBtmB,MAASub,OAAO,QAAU,IAI/C6M,EAAS9P,KACP,4BAAQvW,MAAM,GAAGP,IAAK,IAAtB,SAMAkJ,SAAS5Q,EAAQ,KACjB4Q,SAAS4b,EAAK,KACd5b,SAAS4b,EAAK,IAAM5b,SAAS5Q,EAAQ,KACR,IAA7Bud,KAAKvT,MAAMyiB,eAEX6B,EAAS9P,KACP,4BAAQvW,MAAOjI,EAAQ0H,IAAK1H,GACzBA,IAKP,IAAK,IAAI0M,EAAI8f,EAAK9f,GAAKjI,EAAUzE,OAAQ0M,IACvC4hB,EAAS9P,KACP,4BAAQvW,MAAOyE,EAAGhF,IAAKgF,GACpBA,IAIP,OAAO4hB,I,4CAIP,IAAMC,EAAa,CACjB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QAEIC,EAAY,GAClBA,EAAUhQ,KACR,4BAAQvW,MAAM,GAAGP,IAAK,IAAtB,UAIF,IAAK,IAAIgF,EAAI,EAAGA,GAAK6hB,EAAWviB,OAAS,EAAGU,IAC1C8hB,EAAUhQ,KACR,4BAAQvW,MAAOsmB,EAAW7hB,GAAIhF,IAAKgF,GAChC6hB,EAAW7hB,KAIlB,OAAO8hB,I,+BA0BC,IACA1R,EAAcS,KAAKhgB,MAAnBuf,UACR,OACE,kBAAC4G,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMsuB,eACjBlI,OAAQpG,KAAKqO,oBACbhI,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAGbyT,KAAKhgB,MAAMmoB,YACV,kBAAC,GAAD,CACEA,YAAanI,KAAKhgB,MAAMmoB,YACxBQ,UAAW3I,KAAKhgB,MAAM2oB,UACtBjZ,UAAWsQ,KAAKhgB,MAAM0P,UACtBmZ,YAAa,EACbI,UAAiC,IAAtBjJ,KAAKhgB,MAAMgS,OAAe,SAAW,QAChD+W,aAAoC,IAAtB/I,KAAKhgB,MAAMgS,OAAe,MAAQ,MAChDgX,cAAqC,IAAtBhJ,KAAKhgB,MAAMgS,OAAe,MAAQ,MACjD6X,mBAAoB7J,KAAK6J,qBAEzB,KACJ,kBAAC1D,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,KACE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC/P,GAAA,EAAD,CACEgQ,UAAU,sBACVnkB,UAAW8S,KAAKnB,WAAW,kBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,aAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,CACEI,UAAW,EACXjS,UAAWS,KAAKhgB,MAAMuf,UACtBkS,SAAU,QACVlQ,YAAY,mBACZmQ,SAAU1R,KAAKoQ,iBAAiBzQ,KAAKK,MACrC4F,QAAS5F,KAAKhgB,MAAMowB,iBACpBpiB,KAAK,gBACLtD,MAAOsV,KAAKhgB,MAAMgC,cAClBwf,SAAUxB,KAAKiQ,sBACf0B,UAAU,EACVC,mBAAmB,mBACnBC,cAAe7R,KAAKmQ,kBACpBE,WAAYrQ,KAAKhgB,MAAMqwB,WACvByB,kBAAmB9R,KAAKhgB,MAAMgC,gBAU/BiL,EACC+S,KAAKvT,MAAMiV,sBAAsB,oBAIvC,kBAACL,GAAA,EAAD,CACEgQ,UAAU,yBACVnkB,UAAW8S,KAAKnB,WAAW,SAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,QAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACE/T,KAAK,OACLgU,YAAY,eACZvT,KAAK,OACLtD,MAAOsV,KAAKhgB,MAAM6B,KAClB2f,SAAUxB,KAAKf,aACfwC,aAAa,QAEdxU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,WAmBpD,kBAACL,GAAA,EAAD,CAAWgQ,UAAU,0BACnB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,SAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACW,GAAA,EAAD,CAAK7kB,UAAU,6BACb,kBAACikB,GAAA,EAAD,CAAKC,GAAI,EAAGlkB,UAAW8S,KAAKnB,WAAW,cACrC,yBAAK3R,UAAU,8BACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACEgQ,eAAe,SACf/P,YAAY,QACZC,SAAUxB,KAAK8O,gBACf9gB,KAAK,YACLtD,MAAOsV,KAAKhgB,MAAM0C,WAEjBsd,KAAKgS,yBAIX/kB,EACC+S,KAAKvT,MAAMiV,sBAAsB,eAIrC,kBAACyP,GAAA,EAAD,CAAKC,GAAI,EAAGlkB,UAAW8S,KAAKnB,WAAW,YACrC,yBAAK3R,UAAU,8BACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACEgQ,eAAe,SACf/P,YAAY,QACZC,SAAUxB,KAAK6O,cACf7gB,KAAK,UACLtD,MAAOsV,KAAKhgB,MAAM2C,SAEjBqd,KAAKgS,yBAIX/kB,EACC+S,KAAKvT,MAAMiV,sBAAsB,aAGrC,kBAACyP,GAAA,EAAD,CAAKC,GAAI,IACNnkB,EACC+S,KAAKvT,MAAMiV,sBAAsB,kBAO3C,kBAACL,GAAA,EAAD,CAAWgQ,UAAU,0BACnB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,gBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAACW,GAAA,EAAD,CAAK7kB,UAAU,6BACb,kBAACikB,GAAA,EAAD,CAAKC,GAAI,EAAGlkB,UAAW8S,KAAKnB,WAAW,aACrC,yBAAK3R,UAAU,8BACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACEuF,GAAG,iBACHyK,eAAe,SACf/P,YAAY,OACZC,SAAUxB,KAAKsP,eACf1gB,QAASoR,KAAKiS,gBAEdjkB,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMwC,UAEjBwd,KAAKkS,yBAAyBC,aAIpCllB,EACC+S,KAAKvT,MAAMiV,sBAAsB,cAGrC,kBAACyP,GAAA,EAAD,CAAKC,GAAI,EAAGlkB,UAAW8S,KAAKnB,WAAW,WACrC,yBAAK3R,UAAU,8BACb,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACEuF,GAAG,eACHyK,eAAe,SACf/P,YAAY,QACZC,SAAUxB,KAAK+O,aACf/gB,KAAK,SACLtD,MAAOsV,KAAKhgB,MAAMyC,QAEjBud,KAAKoS,uBAAuBD,aAIlCllB,EACC+S,KAAKvT,MAAMiV,sBAAsB,YAGrC,kBAACyP,GAAA,EAAD,CAAKC,GAAI,IACNnkB,EACC+S,KAAKvT,MAAMiV,sBAAsB,iBAqE3C,kBAACL,GAAA,EAAD,CAAWgQ,UAAU,0BACnB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,eAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEgQ,eAAe,WACf/P,YAAY,aACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMoC,YAClBof,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,WAKlB,kBAACqN,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,oCACb,2BACEK,KAAK,OACLiU,SAAUxB,KAAKoI,kBAAkBzI,KAAKK,MACtC6L,OAAO,UACPnhB,MAAM,GACNwC,UAAU,sBAEZ,yBAAKA,UAAU,iCACuB,KAAnC8S,KAAKhgB,MAAMswB,oBACV,0BAAMpjB,UAAU,6BAEhB,yBAAK4d,IAAK9K,KAAKhgB,MAAMswB,oBAAqB+B,IAAI,KAEhD,yBAAKnlB,UAAU,iBACb,2BACEK,KAAK,OACLiU,SAAUxB,KAAKoI,kBAAkBzI,KAAKK,MACtC6L,OAAO,UACPnhB,MAAM,GACNwC,UAAU,sBAEZ,0BAAMolB,MAAM,8BAKpB,yBAAKplB,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,yBAAKze,UAAU,6CACb,yBAAKA,UAAU,QACe,KAA3B8S,KAAKhgB,MAAM+vB,YACV,kBAACjO,GAAA,EAAD,CACEC,QAAQ,SACR7U,UAAU,kCACV0B,QAASoR,KAAK8P,gBAAgBnQ,KAC5BK,KACAA,KAAKhgB,MAAM+vB,cALf,oBAWA,IAGJ,yBAAK7iB,UAAU,2BACb,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUzC,EACV3Q,QAAU2Q,EAAgC,KAApBS,KAAKZ,cAE1BG,EAAY,iBAAmB,QAGlC,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKqO,qBAHhB,iB,GAh7BajQ,aAm+B3BgQ,GAAe9L,KAAWzC,KAAXyC,CAAqB8L,IACrB7L,oBAXS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,aAIM,SAAAoR,GACzB,OAAOC,YAAmB,CAAEvE,2BAA0BsE,KAIzCD,CAGb6L,ICn+BE7mB,GAAqBL,EAAUK,mBAU7BqO,IATe1O,EAAUI,e,YAU7B,WAAYmF,GAAQ,IAAD,+BACjB,8CAAMA,KAqCR8lB,uBAAyB,SAAAxX,GAEvB,EAAKmE,SAAS,KAxCG,EA+CnBN,iBAAmB,WACjB,OAAO,EAAK5e,OAhDK,EAmDnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MArDZ,EAkEnB0T,kBAAoB,SAAA3nB,GAElB,IAOU,EAPN4nB,EAAW,GACbC,EAAa,GACbC,EAAY,GACZC,EAAS,GACTC,EAAW,GACXC,EAAU,GAERjoB,IAEEA,EAAK5I,YACPwwB,EAAW9pB,IAAOkC,EAAK5I,WAAWiiB,OAAO,KACzCwO,EAAavO,OAAOxb,IAAOkC,EAAK5I,WAAWiiB,OAAO,MAAQ,EAE1DyO,EAAYhqB,IAAOkC,EAAK5I,WAAWiiB,OAAO,SAGxCrZ,EAAK3I,UACP0wB,EAASjqB,IAAOkC,EAAK3I,SAASgiB,OAAO,KACrC2O,EAAW1O,OAAOxb,IAAOkC,EAAK3I,SAASgiB,OAAO,MAAQ,EACtD4O,EAAUnqB,IAAOkC,EAAK3I,SAASgiB,OAAO,SAKxC,EAAKhF,UAAL,GACE1R,OAAO3C,EAAK2C,OACZtK,YAAc2H,EAAK3H,YACnBC,aAAe0H,EAAK1H,aACpB0S,eAAiBhL,EAAKgL,eACtBC,cAAgBjL,EAAKiL,cACrBid,KAAOloB,EAAKkL,oBACZid,SAAWnoB,EAAKmL,wBAChBC,SAAWpL,EAAKoL,SAChBC,aAAerL,EAAKqL,aACpBC,cAAgBtL,EAAKsL,cACrBC,oBAAsBvL,EAAKuL,oBAC3BC,wBAA0BxL,EAAKwL,wBAC/BC,mBAAqBzL,EAAKyL,mBAC1BE,aAAe3L,EAAK2L,cAdtB,uBAeU,IAfV,6BAgBiB3L,EAAK6L,cAhBtB,yBAiBY+b,GAjBZ,2BAkBcC,GAlBd,0BAmBaC,GAnBb,uBAoBUC,GApBV,yBAqBYC,GArBZ,wBAsBWC,GAtBX,4BA0BcjoB,EAAKooB,QA1BnB,MA5Fe,EA4HnBhU,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KAEpB,EAAKkR,SAAL,eACGlR,EAAOtD,KAlIO,EAsInB8kB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eAvIP,EA0InBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aA3IP,EA8InButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BhC,QAAQC,IAAI+B,GACZD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,GAAaC,GACXD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAGd,EAAKid,SAAS,CAAEjd,YAAWC,aAvJV,EAuKnBkd,aAAe,WACb,IAAIC,EAAI,gBACJkG,EAAQ,IAAID,KAEe,GAA3B,EAAKtlB,MAAMkW,cACb,EAAK0J,eAAe8F,MAApB,mBAAkD,CAChD,YAEF,EAAK9F,eAAe+F,SAAS,+BAC3Bpe,GAAmB+O,mBAAmB/V,SAEtC,EAAKqf,eAAe8F,MAApB,aAA4C,CAC1C,YAEF,EAAK9F,eAAe+F,SAAS,yBAC3Bpe,GAAmBiP,aAAajW,SAEhC,EAAKqf,eAAe8F,MAApB,cAA6C,CAC3C,YAEF,EAAK9F,eAAe+F,SAAS,0BAC3Bpe,GAAmB4O,cAAc5V,SAEjC,EAAKqf,eAAe8F,MAApB,oBAAmD,CACjD,YAEF,EAAK9F,eAAe+F,SAAS,gCAC3Bpe,GAAmB6O,oBAAoB7V,SAEvC,EAAKqf,eAAe8F,MAApB,wBAAuD,CACrD,YAEF,EAAK9F,eAAe+F,SAAS,oCAC3Bpe,GAAmB8O,wBAAwB9V,SAG/C8e,EAAKrf,MAAMmzB,SACX9T,EAAKrf,MAAMmzB,QAAU5N,IAErB9Z,EACE,wDAEA4T,EAAKH,SAAS,CACZkU,OAAS,GACTC,QAAU,GACVC,SAAW,GACXH,QAAQ,QAIlB,EAAKvT,eAAe8F,MAApB,mBAAkD,GAClD,EAAK9F,eAAe+F,SAAS,+BAAiC,GAE9D,EAAK/F,eAAe8F,MAApB,aAA4C,GAC5C,EAAK9F,eAAe+F,SAAS,yBAA2B,GAExD,EAAK/F,eAAe8F,MAApB,cAA6C,GAC7C,EAAK9F,eAAe+F,SAAS,0BAA4B,GAEzD,EAAK/F,eAAe8F,MAApB,oBAAmD,GACnD,EAAK9F,eAAe+F,SAAS,gCAAkC,GAE/D,EAAK/F,eAAe8F,MAApB,wBAAuD,GACvD,EAAK9F,eAAe+F,SAAS,oCAAsC,GACnEtG,EAAKH,SAAS,CACZkU,OAAS,GACTC,QAAU,GACVC,SAAW,GACXH,QAAQ,MAIZ,EAAK1mB,MAAM6S,UAAS,SAASjf,GAGtBA,IAEDgf,EAAKrf,MAAMuzB,UACXlU,EAAKrf,MAAMuzB,SAAWhO,GACrBlG,EAAKrf,MAAMizB,QAAU5T,EAAKrf,MAAMizB,OAAS1N,GAE1C9Z,EACE,wDAEF4T,EAAKH,SAAS,CACZyT,UAAW,GACXD,WAAY,GACZD,SAAU,GACVK,QAAS,GACTD,SAAU,GACVD,OAAQ,MAEDvT,EAAKrf,MAAMuzB,UAAYlU,EAAKrf,MAAMuzB,SAAWhO,GACtD9Z,EAAe,+CACf4T,EAAKH,SAAS,CACZyT,UAAW,GACXD,WAAY,GACZD,SAAU,MAEHpT,EAAKrf,MAAMizB,QAAU5T,EAAKrf,MAAMizB,OAAS1N,GAClD9Z,EAAe,6CACf4T,EAAKH,SAAS,CACZ4T,QAAS,GACTD,SAAU,GACVD,OAAQ,MAGc,KAAxBvT,EAAKrf,MAAMuzB,UACW,KAAtBlU,EAAKrf,MAAMizB,QACX5T,EAAKrf,MAAMuzB,SAAWlU,EAAKrf,MAAMizB,QAEjCxnB,EACE,gEAEF4T,EAAKH,SAAS,CACZ4T,QAAS,GACTD,SAAU,GACVD,OAAQ,OAGVvT,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,qBAhSE,EAsSnBgU,gBAAkB,SAACjmB,EAAM7C,GACV,cAAT6C,GACF,EAAK2R,SAAS,CAAEyT,UAAWjoB,IAAS,kBAAM,EAAK+oB,sBAEpC,eAATlmB,GACF,EAAK2R,SAAS,CAAEwT,WAAYhoB,IAAS,kBAAM,EAAK+oB,sBAErC,aAATlmB,GACF,EAAK2R,SAAS,CAAEuT,SAAU,IAAK,kBAAM,EAAKgB,uBA9S3B,EAkTnBC,cAAgB,SAACnmB,EAAM7C,GACR,YAAT6C,GACF,EAAK2R,SAAS,CAAE4T,QAASpoB,IAAS,kBAAM,EAAK+oB,sBAElC,aAATlmB,GACF,EAAK2R,SAAS,CAAE2T,SAAUnoB,IAAS,kBAAM,EAAK+oB,uBAvT/B,EA8TnBE,cAAgB,SAACpmB,EAAM7C,GACR,YAAT6C,GACF,EAAK2R,SAAS,CAAEmU,QAAS3oB,IAAS,kBAAM,EAAKkpB,qBAElC,aAATrmB,GACF,EAAK2R,SAAS,CAAEoU,SAAU5oB,IAAQ,kBAAM,EAAKkpB,qBAElC,WAATrmB,GACF,EAAK2R,SAAS,CAAEkU,OAAQ,KAtUT,EA0UnBQ,gBAAkB,WAChB,IAAIT,EAAU,GACVC,EAAS,EACVC,EAAU,GACVC,EAAW,GAEP,EAAKtzB,MAAMqzB,SAAW,EAAKrzB,MAAMszB,WACpCF,EAAS,EACTE,EAC0B,KAAxB,EAAKtzB,MAAMszB,SAAkBnP,OAAO,EAAKnkB,MAAMszB,UAAY,EAAI,GAC/DD,EAAiC,KAAvB,EAAKrzB,MAAMqzB,QAAiB,EAAKrzB,MAAMqzB,QAAU,GAC3DF,EAAUxqB,IAAO0qB,EAAU,IAAMC,EAAW,IAAMF,IAEtD,EAAKlU,SAAS,CACZiU,aAxVa,EA6VnBM,iBAAmB,WACjB,IAAIF,EAAW,GACXN,EAAS,GACTR,EAAW,EACbE,EAAY,GACZD,EAAa,GACbE,EAAS,EACTC,EAAW,GACXC,EAAU,GAER,EAAK9yB,MAAM2yB,WAAa,EAAK3yB,MAAM0yB,aACrCD,EAAW,EACXC,EAC4B,KAA1B,EAAK1yB,MAAM0yB,WAAoBvO,OAAO,EAAKnkB,MAAM0yB,YAAc,EAAI,GACrEC,EAAqC,KAAzB,EAAK3yB,MAAM2yB,UAAmB,EAAK3yB,MAAM2yB,UAAY,GACjEY,EAAW5qB,IAAOgqB,EAAY,IAAMD,EAAa,IAAMD,IAGrD,EAAKzyB,MAAM8yB,SAAW,EAAK9yB,MAAM6yB,WACnCD,EAAS,EACTC,EAC0B,KAAxB,EAAK7yB,MAAM6yB,SAAkB1O,OAAO,EAAKnkB,MAAM6yB,UAAY,EAAI,GACjEC,EAAiC,KAAvB,EAAK9yB,MAAM8yB,QAAiB,EAAK9yB,MAAM8yB,QAAU,GAC3DG,EAAStqB,IAAOmqB,EAAU,IAAMD,EAAW,IAAMD,IAG/CK,GAAUM,IACRA,EAAS5D,QAAQsD,IACnB/yB,QAAQC,IAAI,MACZ,EAAK+e,SAAS,CACZ0T,OAAQH,EACRI,SAAUH,EAAa,EACvBI,QAASH,EACTY,WACAN,YAGF,EAAK/T,SAAS,CACZqU,WACAN,aApYW,EAifnBY,gBAAkB,WAChB,EAAK3U,SAAS,CACZ4U,aAAc,EAAK9zB,MAAM8zB,eAnfV,EAufnBC,gBAAkB,SAAApoB,GACZA,EAAMwT,OAAO+T,SACf,EAAKtT,eAAe8F,MAApB,OAAsC,GACtC,EAAK9F,eAAe8F,MAApB,SAAwC,GACxC,EAAK9F,eAAe8F,MAApB,QAAuC,GACvC,EAAKxG,SAAS,CACZ+T,OAAQ,GACRe,YAAY,EACZpB,OAAQ,GACRC,SAAU,GACVC,QAAS,GACTjd,gBAAgB,IAGlB,EAAK+J,eAAe8F,MAApB,aAA4C,WAC5C,EAAK9F,eAAe+F,SAAS,yBAC3Bpe,GAAmB2O,aAAa3V,SAEhC,EAAKqf,eAAe8F,MAApB,cAA6C,CAC3C,YAEF,EAAK9F,eAAe+F,SAAS,0BAC3Bpe,GAAmBuO,cAAcvV,SAEjC,EAAKqf,eAAe8F,MAApB,KAAoC,CAClC,YAEF,EAAK9F,eAAe+F,SAAS,iBAC3Bpe,GAAmBwrB,KAAKxyB,SAExB,EAAKqf,eAAe8F,MAApB,SAAwC,CACtC,YAEF,EAAK9F,eAAe+F,SAAS,qBAC3Bpe,GAAmByrB,SAASzyB,WAIpC,EAAKqf,eAAe8F,MAApB,aAA4C,GAC5C,EAAK9F,eAAe+F,SAAS,yBAA2B,GAExD,EAAK/F,eAAe8F,MAApB,cAA6C,GAC7C,EAAK9F,eAAe+F,SAAS,0BAA4B,GAEzD,EAAK/F,eAAe8F,MAApB,KAAoC,GACpC,EAAK9F,eAAe+F,SAAS,iBAAmB,GAEhD,EAAK/F,eAAe8F,MAApB,SAAwC,GACxC,EAAK9F,eAAe+F,SAAS,qBAAuB,GAEpD,EAAK/F,eAAe8F,MAApB,OAAsC,WACtC,EAAK9F,eAAe+F,SAAS,mBAC3Bpe,GAAmBhG,IAAIhB,SAEzB,EAAKqf,eAAe8F,MAApB,SAAwC,WACxC,EAAK9F,eAAe+F,SAAS,qBAC3Bpe,GAAmB/F,MAAMjB,SAE3B,EAAKqf,eAAe8F,MAApB,QAAuC,WACvC,EAAK9F,eAAe+F,SAAS,oBAC3Bpe,GAAmB9F,KAAKlB,SAE1B,EAAK2e,SAAS,CACZ8U,YAAY,EACZlB,QAAS,GACTD,SAAU,GACVD,OAAQ,GACR/c,gBAAgB,MA1jBH,EAgkBnBc,iBAAmB,SAAAhL,GACjB,IAAI+K,EAAc,EAAK1W,MAAM0W,aAAa2I,EAAK,gBAC/ClD,GAAuB,mBAAoB,CAACzF,iBAC3ChX,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAK4U,qBAAqB,QAC1B5U,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,OA3kBG,EA+kBnB4zB,qBAAuB,SAAAlZ,GACrB,EAAKmE,SAAS,CACZgV,iBAAiB,IAGnB,EAAKznB,MAAM0nB,4BAllBX,EAAKn0B,MAAQ,CACXuf,WAAW,EACXtd,UAAW,GACXC,QAAS,GACTkyB,sBAAsB,EACtB5mB,OAAQ,GACRwmB,YAAY,EACZrB,UAAWhqB,MAASub,OAAO,QAC3BwO,WAAY/pB,MAASub,OAAO,KAAO,EACnCuO,SAAU9pB,MAASub,OAAO,KAC1B4O,QAASnqB,MAASub,OAAO,QACzB2O,SAAUlqB,MAASub,OAAO,KAAO,EACjC0O,OAAQjqB,MAASub,OAAO,KACxBmP,QAAS1qB,MAASub,OAAO,QACzBoP,SAAU3qB,MAASub,OAAO,KAAO,EACjCkP,OAAQzqB,MAASub,OAAO,KACxBhhB,YAAY,GACZC,aAAa,GACb+wB,iBAAgB,EAChBxd,aAAa,IAGf,EAAKkI,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,CACE5c,YAAa,WACbC,aAAc,YAEhB,CACE,uBAAwBoE,GAAmBrE,YAAY3C,SACvD,wBAAyBgH,GAAmBpE,aAAa5C,WAjC5C,E,mFA6DjBL,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAM4nB,kBACtDrU,KAAKwS,kBAAkBxS,KAAKvT,MAAM4nB,oB,yCA4FhB,IAAD,OACjBlY,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAwOhB,IAAI3f,EAAc8c,KAAKhgB,MAAMkD,YACzBC,EAAe6c,KAAKhgB,MAAMmD,aAC1B0S,EAAiBmK,KAAKhgB,MAAM6V,eAC5BC,EAAgBkK,KAAKhgB,MAAM8V,cAC3BC,EAAsBiK,KAAKhgB,MAAM+yB,KACjC/c,EAA0BgK,KAAKhgB,MAAMgzB,SACrC/c,EAAW+J,KAAKhgB,MAAMiW,SACtBC,EAAe8J,KAAKhgB,MAAMkW,aAC1BC,EAAgB6J,KAAKhgB,MAAMmW,cAC3BC,EAAsB4J,KAAKhgB,MAAMoW,oBACjCC,EAA0B2J,KAAKhgB,MAAMqW,wBACrCC,EAAqB0J,KAAKhgB,MAAMsW,mBAChCE,EAAewJ,KAAKhgB,MAAMwW,aAC1BhJ,EAAQwS,KAAKvT,MAAM8T,KAAK/S,OACxBkJ,EAAesJ,KAAKhgB,MAAM0W,aAG9BxW,QAAQC,IAAI,0BAA0B6f,KAAKhgB,MAAMyyB,UAEjD,IACIC,EACwB,KAA1B1S,KAAKhgB,MAAM0yB,WAAoBvO,OAAOnE,KAAKhgB,MAAM0yB,YAAc,EAAI,GACjEC,EAAqC,KAAzB3S,KAAKhgB,MAAM2yB,UAAmB3S,KAAKhgB,MAAM2yB,UAAY,GACjEY,EAAW,GACCb,GAAcC,IAC5BY,EAAW5qB,IAAOgqB,EAAY,IAAMD,EAAa,MACjDa,EAAW5qB,IAAO4qB,GAAUtkB,WAG9B,IACI4jB,EACsB,KAAxB7S,KAAKhgB,MAAM6yB,SAAkB1O,OAAOnE,KAAKhgB,MAAM6yB,UAAY,EAAI,GAC7DC,EAAiC,KAAvB9S,KAAKhgB,MAAM8yB,QAAiB9S,KAAKhgB,MAAM8yB,QAAU,GAC3DG,EAAS,GACCJ,GAAYC,IACxBG,EAAStqB,IAAOmqB,EAAU,IAAMD,EAAW,MAC3CI,EAAStqB,IAAOsqB,GAAQhkB,UACxBgkB,EAASjT,KAAKhgB,MAAMg0B,WAAa,GAAKf,GAIxC,IAAIG,EAA+B,KAAtBpT,KAAKhgB,MAAMozB,OAAgBpT,KAAKhgB,MAAMozB,OAAS,GACxDE,EACsB,KAAxBtT,KAAKhgB,MAAMszB,SAAkBnP,OAAOnE,KAAKhgB,MAAMszB,UAAY,EAAI,GAC7DD,EAAiC,KAAvBrT,KAAKhgB,MAAMqzB,QAAiBrT,KAAKhgB,MAAMqzB,QAAU,GAC3DF,EAAU,GACXnT,KAAKhgB,MAAMszB,UAAYtT,KAAKhgB,MAAMozB,QAAUpT,KAAKhgB,MAAMqzB,UACxDF,EAAUxqB,IAAO0qB,EAAU,IAAMC,EAAW,IAAMF,GAClDD,EAAUxqB,IAAOwqB,GAASlkB,WAI5B,IAAIpE,EAAO,CACT6L,eACAlJ,SACAtK,cACAC,eACA0S,iBACAC,gBACAC,sBACAC,0BACAC,WACAC,eACAC,gBACAC,sBACAC,0BACAC,qBACArU,UAAUsxB,EACVrxB,QAAQ+wB,EACR1c,gBAAgB4c,EAChB3c,gBAGE6I,EAAOW,KACX9f,QAAQC,IAAI,8BAA8B6f,KAAKhgB,MAAM0W,cAChDsJ,KAAKhgB,MAAM0W,cAA4C,KAA5BsJ,KAAKhgB,MAAM0W,aAazCyF,GAAuB,iBAAkBtR,GACtCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAK4U,qBAAqB,QAC1B5U,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,gBAAiBtR,GACrCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAK4U,qBAAqB,YAG7B7zB,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BAuHV,IAAD,OAMP,OACE,6BAEE,kBAAC8lB,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMk0B,gBACjB9N,OAAQpG,KAAKiU,qBAAqBtU,KAAKK,KAAM,SAC7CqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBACnB8S,KAAKhgB,MAAMs0B,cAA4C,KAA5BtU,KAAKhgB,MAAMs0B,aAEpC,kBADA,mBAIR,kBAACnO,GAAA,EAAMI,KAAP,KACE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACP,kBAAC/P,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,UAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,qBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,oBACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMkD,YAClBse,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,kBAKpD,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,iBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,sBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,qBACZvT,KAAK,eACLtD,MAAOsV,KAAKhgB,MAAMmD,aAClBqe,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,mBAIpD,kBAACL,GAAA,EAAD,CAAWgQ,UAAU,0BACjB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,kCAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,OAAO,EACPwoB,SACgC,IAA9BlT,KAAKhgB,MAAM6V,eAEb2L,SAAUxB,KAAKf,cAPjB,MAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,OAAO,EACPwoB,SACgC,IAA9BlT,KAAKhgB,MAAM6V,eAEb2L,SAAUxB,KAAKf,cAPjB,KAUE,yBAAK/R,UAAU,WACR,OAKjB,kBAACmU,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,aAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,cAAD,CACE2Z,GAAG,OACH7Y,KAAK,YACLwmB,QAAQ,eACRC,aAAa,OACbC,IAAK/rB,MAASlH,OACd0wB,SAAO,EACPznB,MAAOsV,KAAKhgB,MAAM2yB,UAClBnR,SAAU,SAAA/f,GAAI,OACZ,EAAK+xB,gBAAgB,YAAa/xB,OAIxC,yBAAKyL,UAAU,cACb,kBAAC,eAAD,CACE2Z,GAAG,QACH7Y,KAAK,aACLwmB,QAAQ,eACRC,aAAc,QACdE,OAAK,EACLC,cAAY,EACZnzB,KAAMue,KAAKhgB,MAAM2yB,UACjBjoB,MAAOsV,KAAKhgB,MAAM0yB,WAClBlR,SAAU,SAAAhgB,GAAK,OACb,EAAKgyB,gBAAgB,aAAchyB,UAQ/C,kBAAC6f,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,WAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,cAAD,CACE2Z,GAAG,OACH7Y,KAAK,UACLgU,WAAUhC,KAAKhgB,MAAMg0B,WACrBQ,QAAQ,eACRC,aAAa,OACbC,IAAK/rB,MAASlH,OACd0wB,SAAO,EACPznB,MAAOsV,KAAKhgB,MAAM8yB,QAClBtR,SAAU,SAAA/f,GAAI,OAAI,EAAKiyB,cAAc,UAAWjyB,OAGpD,yBAAKyL,UAAU,cACb,kBAAC,eAAD,CACE2Z,GAAG,QACH7Y,KAAK,WACLgU,WAAUhC,KAAKhgB,MAAMg0B,WACrBQ,QAAQ,eACRC,aAAc,QACdE,OAAK,EACLC,cAAY,EACZnzB,KAAMue,KAAKhgB,MAAM8yB,QACjBpoB,MAAOsV,KAAKhgB,MAAM6yB,SAClBrR,SAAU,SAAAhgB,GAAK,OACb,EAAKkyB,cAAc,WAAYlyB,QAKvC,yBAAK0L,UAAU,cACb,kBAAC2nB,GAAA,EAAD,CACE3nB,UAAU,oBACV0B,QAASoR,KAAK+T,gBAAgBpU,KAAKK,MACnC8U,iBAAgB9U,KAAKhgB,MAAM6V,gBAH7B,2BAME,0BAAM3I,UAAU,eAOG,IAA1B8S,KAAKhgB,MAAMg0B,WAAsB,6BAClC,kBAAC3S,GAAA,EAAD,CAAWgQ,UAAU,0BACjB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,kBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,gBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QAC+B,WAA7BlT,KAAKhgB,MAAM8V,cAEb0L,SAAUxB,KAAKf,cAPjB,SAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,gBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QAC+B,WAA7BlT,KAAKhgB,MAAM8V,cAEb0L,SAAUxB,KAAKf,cAPjB,UAUE,yBAAK/R,UAAU,WACR,MAGZD,EACK+S,KAAKvT,MAAMiV,sBAAsB,mBAI3C,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACrB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,UAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACT,yBAAKlkB,UAAU,OACX,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,OACZvT,KAAK,OACLtD,MAAOsV,KAAKhgB,MAAM+yB,KAClBvR,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,IAAf,YAEEuC,EACC+S,KAAKvT,MAAMiV,sBAAsB,UAGtC,yBAAKxU,UAAU,cACd,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,WACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMgzB,SAClBxR,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEZ,4BAAQpZ,MAAM,IAAd,YACD,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,IAAf,eACA,4BAAQA,MAAO,IAAf,eACA,4BAAQA,MAAO,IAAf,gBAEAuC,EACG+S,KAAKvT,MAAMiV,sBAAsB,kBAOpC,GAEP,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,gBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,kBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEgQ,eAAe,WACf/P,YAAY,mCACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMiW,SAClBuL,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,SAEX7W,EACC+S,KAAKvT,MAAMiV,sBAAsB,mBAKd,IAA1B1B,KAAKhgB,MAAMg0B,WACV,kBAAC3S,GAAA,EAAD,KACE,kBAAC8P,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,iBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACEgQ,eAAe,SACf/P,YAAY,uBACZvT,KAAK,eACLtD,MAAOsV,KAAKhgB,MAAMkW,aAClBsL,SAAUxB,KAAKf,aACfrQ,QAASoR,KAAKf,aACd8V,SAAU,SAAAviB,GACR,EAAKwiB,mBAAqBxiB,IAG7B,4BAAQ9H,MAAM,IAAd,4BACA,4BAAQA,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,qBACA,4BAAQA,MAAO,GAAf,6BAKR,GAC0B,GAA3BsV,KAAKhgB,MAAMkW,aAAoB,6BAC1B,kBAACmL,GAAA,EAAD,CAAWnU,UAAU,gBACtB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,qBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,cAAD,CACE2Z,GAAG,OACH7Y,KAAK,UACLwmB,QAAQ,eACRC,aAAa,OACbC,IAAK/rB,MAASlH,OACd0wB,SAAO,EACPznB,MAAOsV,KAAKhgB,MAAMqzB,QAClB7R,SAAU,SAAA/f,GAAI,OACZ,EAAKkyB,cAAc,UAAWlyB,OAIpC,yBAAKyL,UAAU,cACb,kBAAC,eAAD,CACE2Z,GAAG,QACH7Y,KAAK,WACLwmB,QAAQ,eACRC,aAAc,QACdE,OAAK,EACLC,cAAY,EACZnzB,KAAMue,KAAKhgB,MAAMqzB,QACjB3oB,MAAOsV,KAAKhgB,MAAMszB,SAClB9R,SAAU,SAAAhgB,GAAK,OACb,EAAKmyB,cAAc,UAAWnyB,OAIpC,yBAAK0L,UAAU,cACb,kBAAC,aAAD,CACEunB,aAAa,MACb5N,GAAG,MACH7Y,KAAK,SACLwmB,QAAQ,eACR/yB,KAAMue,KAAKhgB,MAAMqzB,QACjB7xB,MAAOwe,KAAKhgB,MAAMszB,SAClBsB,cAAY,EACZlqB,MAAOsV,KAAKhgB,MAAMozB,OAClB5R,SAAU,SAAAjgB,GAAG,OACX,EAAKoyB,cAAc,SAAUpyB,UAUzC,kBAAC8f,GAAA,EAAD,CAAWgQ,UAAU,0BACjB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,kBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,gBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QAC+B,WAA7BlT,KAAKhgB,MAAMmW,cAEbqL,SAAUxB,KAAKf,cAPjB,SAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,gBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QAC+B,WAA7BlT,KAAKhgB,MAAMmW,cAEbqL,SAAUxB,KAAKf,cAPjB,UAUE,yBAAK/R,UAAU,WACR,KAEVD,EACG+S,KAAKvT,MAAMiV,sBAAsB,oBAK3C,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACrB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,UAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,OACZvT,KAAK,sBACLtD,MAAOsV,KAAKhgB,MAAMoW,oBAClBoL,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEZ,4BAAQpZ,MAAM,IAAd,QACD,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,IAAf,WACA,4BAAQA,MAAO,IAAf,YAEAuC,EACG+S,KAAKvT,MAAMiV,sBAAsB,yBAGrC,yBAAKxU,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,WACZvT,KAAK,0BACLtD,MAAOsV,KAAKhgB,MAAMqW,wBAClBmL,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX,4BAAQpZ,MAAM,IAAd,YACF,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,IAAf,eACA,4BAAQA,MAAO,IAAf,eACA,4BAAQA,MAAO,IAAf,gBAEAuC,EACG+S,KAAKvT,MAAMiV,sBAAsB,gCAQ3C,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,uBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,6BAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,oBACZvT,KAAK,qBACLtD,MAAOsV,KAAKhgB,MAAMsW,mBAClBkL,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,SAGb7W,EACG+S,KAAKvT,MAAMiV,sBAAsB,wBAKvC,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,iBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,uBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,yBACZvT,KAAK,eACLtD,MAAOsV,KAAKhgB,MAAMwW,aAClBgL,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,SAGb7W,EACG+S,KAAKvT,MAAMiV,sBAAsB,mBAGlC,IAEP,yBAAKxU,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKrJ,iBAAiBgJ,KAAKK,OAHtC,UAQA,kBAAC8B,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKiU,qBAAqBtU,KAAKK,KAAM,UAHhD,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GAvrCgBzV,cAgsC5BxI,GAAgB0M,KAAWzC,KAAXyC,CAAqB1M,IAErC,IAMe2M,gBANS,SAAAviB,GACtB,MAAO,KAOP,KAFauiB,CAGb3M,ICvtCErO,GAAqBL,EAAUK,mBAQ7B0tB,IAPe/tB,EAAUI,eAOX,YAId4P,G,YACJ,WAAYzK,GAAQ,IAAD,+BACjB,8CAAMA,KAoCRmS,iBAAmB,WACjB,OAAO,EAAK5e,OAtCK,EAyCnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MA3CZ,EAyEnBoW,eAAiB,SAAArqB,GAEf,IAAI4nB,EAAW,GACbC,EAAa,GACbC,EAAY,GACZC,EAAS,GACTC,EAAW,GACXC,EAAU,GAERjoB,IAEEA,EAAK5I,YACPwwB,EAAW9pB,IAAOkC,EAAK5I,WAAWiiB,OAAO,KACzCwO,EAAavO,OAAOxb,IAAOkC,EAAK5I,WAAWiiB,OAAO,MAAQ,EAE1DyO,EAAYhqB,IAAOkC,EAAK5I,WAAWiiB,OAAO,SAGxCrZ,EAAK3I,SACP0wB,EAASjqB,IAAOkC,EAAK3I,SAASgiB,OAAO,KACrC2O,EAAW1O,OAAOxb,IAAOkC,EAAK3I,SAASgiB,OAAO,MAAQ,EACtD4O,EAAUnqB,IAAOkC,EAAK3I,SAASgiB,OAAO,SAEzB,GAGf,EAAKhF,SAAS,CACZ1R,OAAO3C,EAAK2C,OACZ2J,YAActM,EAAKsM,YACnBC,WAAavM,EAAKuM,WAClBC,eAAiBxM,EAAKwM,eACtBC,gBAAkBzM,EAAKyM,gBACvBlV,YAAcyI,EAAKzI,YACnBoV,UAAY3M,EAAK2M,UACjBib,SAAUA,EACVC,WAAYA,EACZC,UAAWA,EACXC,OAAQA,EACRC,SAAUA,EACVC,QAASA,EAGTkB,YAAYnpB,EAAKooB,WAnHJ,EAyHnBhU,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KAEpB,EAAKkR,SAAL,eACGlR,EAAOtD,KA/HO,EAmInB8kB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eApIP,EAuInBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aAxIP,EA2InButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,GAAaC,GACXD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAGd,EAAKid,SAAS,CAAEjd,YAAWC,aAnJV,EAmKnBkd,aAAe,WACb,IAAIC,EAAI,gBACJkG,EAAQ,IAAID,KAChB,EAAK7Y,MAAM6S,UAAS,SAASjf,GACtBA,IAEDgf,EAAKrf,MAAMuzB,UACXlU,EAAKrf,MAAMuzB,SAAWhO,GACrBlG,EAAKrf,MAAMizB,QAAU5T,EAAKrf,MAAMizB,OAAS1N,GAE1C9Z,EACE,wDAEF4T,EAAKH,SAAS,CACZyT,UAAW,GACXD,WAAY,GACZD,SAAU,GACVK,QAAS,GACTD,SAAU,GACVD,OAAQ,MAEDvT,EAAKrf,MAAMuzB,UAAYlU,EAAKrf,MAAMuzB,SAAWhO,GACtD9Z,EAAe,+CACf4T,EAAKH,SAAS,CACZyT,UAAW,GACXD,WAAY,GACZD,SAAU,MAEHpT,EAAKrf,MAAMizB,QAAU5T,EAAKrf,MAAMizB,OAAS1N,GAClD9Z,EAAe,6CACf4T,EAAKH,SAAS,CACZ4T,QAAS,GACTD,SAAU,GACVD,OAAQ,MAGc,KAAxBvT,EAAKrf,MAAMuzB,UACW,KAAtBlU,EAAKrf,MAAMizB,QACX5T,EAAKrf,MAAMuzB,SAAWlU,EAAKrf,MAAMizB,QAEjCxnB,EACE,gEAEF4T,EAAKH,SAAS,CACZ4T,QAAS,GACTD,SAAU,GACVD,OAAQ,OAGVvT,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,qBArNE,EA2NnBgU,gBAAkB,SAACjmB,EAAM7C,GACV,cAAT6C,GACF,EAAK2R,SAAS,CAAEyT,UAAWjoB,IAAS,kBAAM,EAAK+oB,sBAEpC,eAATlmB,GACF,EAAK2R,SAAS,CAAEwT,WAAYhoB,IAAS,kBAAM,EAAK+oB,sBAErC,aAATlmB,GACF,EAAK2R,SAAS,CAAEuT,SAAU,IAAK,kBAAM,EAAKgB,uBAnO3B,EAuOnBC,cAAgB,SAACnmB,EAAM7C,GACR,YAAT6C,GACF,EAAK2R,SAAS,CAAE4T,QAASpoB,IAAS,kBAAM,EAAK+oB,sBAElC,aAATlmB,GACF,EAAK2R,SAAS,CAAE2T,SAAUnoB,IAAS,kBAAM,EAAK+oB,uBA5O/B,EAmPnBA,iBAAmB,WACjB,IAAIF,EAAW,GACXN,EAAS,GACTR,EAAW,EACbE,EAAY,GACZD,EAAa,GACbE,EAAS,EACTC,EAAW,GACXC,EAAU,GAER,EAAK9yB,MAAM2yB,WAAa,EAAK3yB,MAAM0yB,aACrCD,EAAW,EACXC,EAC4B,KAA1B,EAAK1yB,MAAM0yB,WAAoBvO,OAAO,EAAKnkB,MAAM0yB,YAAc,EAAI,GACrEC,EAAqC,KAAzB,EAAK3yB,MAAM2yB,UAAmB,EAAK3yB,MAAM2yB,UAAY,GACjEY,EAAW5qB,IAAOgqB,EAAY,IAAMD,EAAa,IAAMD,IAGrD,EAAKzyB,MAAM8yB,SAAW,EAAK9yB,MAAM6yB,WACnCD,EAAS,EACTC,EAC0B,KAAxB,EAAK7yB,MAAM6yB,SAAkB1O,OAAO,EAAKnkB,MAAM6yB,UAAY,EAAI,GACjEC,EAAiC,KAAvB,EAAK9yB,MAAM8yB,QAAiB,EAAK9yB,MAAM8yB,QAAU,GAC3DG,EAAStqB,IAAOmqB,EAAU,IAAMD,EAAW,IAAMD,IAG/CK,GAAUM,IACRA,EAAS5D,QAAQsD,GACnB,EAAK/T,SAAS,CACZ0T,OAAQH,EACRI,SAAUH,EAAa,EACvBI,QAASH,EACTY,WACAN,WAGF,EAAK/T,SAAS,CACZqU,WACAN,aAzRW,EA0WnBc,gBAAkB,SAAApoB,GACZA,EAAMwT,OAAO+T,QACf,EAAKhU,SAAS,CACZ8U,YAAY,EACZ9xB,QAAS+yB,GACTrC,OAAQ,GACRC,SAAU,GACVC,QAAS,GACTxb,iBAAiB,IAGnB,EAAK4H,SAAS,CACZ8U,YAAY,EACZlB,QAASnqB,MAASub,OAAO,QACzB2O,SAAUlqB,MAASub,OAAO,KAAO,EACjC0O,OAAQjqB,MAASub,OAAO,KACxB5M,iBAAgB,KA1XH,EAmYnB6d,kBAAoB,SAAApa,GAClB,EAAKmE,SAAS,CACZkW,cAAc,IAGhB,EAAK3oB,MAAM4oB,yBAtYX,EAAKr1B,MAAQ,CACXuf,WAAW,EACXtd,UAAW,GACXC,QAAS,GACTkyB,sBAAsB,EACtB5mB,OAAQ,GACRwmB,YAAY,EACZrB,UAAWhqB,MAASub,OAAO,QAC3BwO,WAAY/pB,MAASub,OAAO,KAAO,EACnCuO,SAAU9pB,MAASub,OAAO,KAC1B4O,QAASnqB,MAASub,OAAO,QACzB2O,SAAUlqB,MAASub,OAAO,KAAO,EACjC0O,OAAQjqB,MAASub,OAAO,KACxBmP,QAAS1qB,MAASub,OAAO,QACzBoP,SAAU3qB,MAASub,OAAO,KAAO,EACjCkP,OAAQzqB,MAASub,OAAO,KACxBhhB,YAAY,GACZC,aAAa,GACbiyB,cAAa,EACb5d,UAAU,GACV8d,cAAe,IAGjB,EAAK1W,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,CACE3I,YAAa,YAEf,CACE,uBAAwB5P,GAAmB4P,YAAY5W,WAhC1C,E,mFAgDjB,IAAIiN,EAAQ,KACTwS,KAAKvT,MAAM8T,OACZ/S,EAASwS,KAAKvT,MAAM8T,KAAK/S,OACzBwS,KAAKd,SAAS,CAAC1R,OAAQA,KAGzBwS,KAAKkV,eAAelV,KAAKvT,MAAM8oB,eAC/BvV,KAAKwV,sBAAsBhoB,K,4CAGPA,GAAQ,IAAD,OAC3B2O,GAAuB,gCAAgC,CAAC3O,WACvD9N,MAAK,SAAAod,GACJ,GAAiC,MAA7BA,EAASjS,KAAK4qB,WAAoB,CACnC,IAAIH,EAAe,EAAKt1B,MAAMs1B,cAC9BA,EAAexY,EAASjS,KAAK6qB,aAAa,GAC1C,EAAKxW,SAAS,CAACoW,cAAeA,QAGlCl1B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAkFI,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAkIhB,IAAI1L,EAAc6I,KAAKhgB,MAAMmX,YACzBC,EAAa4I,KAAKhgB,MAAMoX,WACxBC,EAAiB2I,KAAKhgB,MAAMqX,eAC5BC,EAAkB0I,KAAKhgB,MAAMsX,gBAC7BlV,EAAc4d,KAAKhgB,MAAMoC,YAEzBoL,EAASwS,KAAKvT,MAAM8T,KAAK/S,OACzBgK,EAAYwI,KAAKhgB,MAAMwX,UAE3BtX,QAAQC,IAAI,0BAA0B6f,KAAKhgB,MAAMyyB,UAEjD,IACIC,EACwB,KAA1B1S,KAAKhgB,MAAM0yB,WAAoBvO,OAAOnE,KAAKhgB,MAAM0yB,YAAc,EAAI,GACjEC,EAAqC,KAAzB3S,KAAKhgB,MAAM2yB,UAAmB3S,KAAKhgB,MAAM2yB,UAAY,GACjEY,EAAW,GACCb,GAAcC,IAC5BY,EAAW5qB,IAAOgqB,EAAY,IAAMD,EAAa,MACjDa,EAAW5qB,IAAO4qB,GAAUtkB,WAG9B,IACI4jB,EACsB,KAAxB7S,KAAKhgB,MAAM6yB,SAAkB1O,OAAOnE,KAAKhgB,MAAM6yB,UAAY,EAAI,GAC7DC,EAAiC,KAAvB9S,KAAKhgB,MAAM8yB,QAAiB9S,KAAKhgB,MAAM8yB,QAAU,GAC3DG,EAAS,GACCJ,GAAYC,IACxBG,EAAStqB,IAAOmqB,EAAU,IAAMD,EAAW,MAC3CI,EAAStqB,IAAOsqB,GAAQhkB,UACxBgkB,EAASjT,KAAKhgB,MAAMg0B,WAAa,GAAKf,GAGxC,IAAIpoB,EAAO,CACT2M,YACAhK,SACA2J,cACAC,aACAC,iBACAC,kBACAlV,cACAH,UAAUsxB,EACVrxB,QAAQ+wB,GAGN5T,EAAOW,KAENA,KAAKhgB,MAAMwX,WAAsC,KAAzBwI,KAAKhgB,MAAMwX,UAatC2E,GAAuB,cAAetR,GACnCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SACjBsE,EAAK8V,kBAAkB,QACtB9V,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,aAActR,GAClCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC5BF,EAAK8V,kBAAkB,YAGzB/0B,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BAkDV,IAAD,OAEPH,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAM8oB,eAMtD,OACE,6BAeE,kBAACpP,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMo1B,aACjBhP,OAAQpG,KAAKmV,kBAAkBxV,KAAKK,KAAM,SAC1CqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBACnB8S,KAAKhgB,MAAM21B,WAAsC,KAAzB3V,KAAKhgB,MAAM21B,UAEjC,eADA,gBAIR,kBAACxP,GAAA,EAAMI,KAAP,KACE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACP,kBAAC/P,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,UAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,sBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,gBACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMmX,YAClBqK,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,kBAKpD,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,aAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,cAAD,CACE2Z,GAAG,OACH7Y,KAAK,YACLwmB,QAAQ,eACRC,aAAa,OACbC,IAAK/rB,MAASlH,OACd0wB,SAAO,EACPznB,MAAOsV,KAAKhgB,MAAM2yB,UAClBnR,SAAU,SAAA/f,GAAI,OACZ,EAAK+xB,gBAAgB,YAAa/xB,OAIxC,yBAAKyL,UAAU,cACb,kBAAC,eAAD,CACE2Z,GAAG,QACH7Y,KAAK,aACLwmB,QAAQ,eACRC,aAAc,QACdE,OAAK,EACLC,cAAY,EACZnzB,KAAMue,KAAKhgB,MAAM2yB,UACjBjoB,MAAOsV,KAAKhgB,MAAM0yB,WAClBlR,SAAU,SAAAhgB,GAAK,OACb,EAAKgyB,gBAAgB,aAAchyB,UAS/C,kBAAC6f,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,WAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,cAAD,CACE2Z,GAAG,OACH7Y,KAAK,UACLgU,WAAUhC,KAAKhgB,MAAMg0B,WACrBQ,QAAQ,eACRC,aAAa,OACbC,IAAK/rB,MAASlH,OACd0wB,SAAO,EACPznB,MAAOsV,KAAKhgB,MAAM8yB,QAClBtR,SAAU,SAAA/f,GAAI,OAAI,EAAKiyB,cAAc,UAAWjyB,OAGpD,yBAAKyL,UAAU,cACb,kBAAC,eAAD,CACE2Z,GAAG,QACH7Y,KAAK,WACLgU,WAAUhC,KAAKhgB,MAAMg0B,WACrBQ,QAAQ,eACRC,aAAc,QACdE,OAAK,EACLC,cAAY,EACZnzB,KAAMue,KAAKhgB,MAAM8yB,QACjBpoB,MAAOsV,KAAKhgB,MAAM6yB,SAClBrR,SAAU,SAAAhgB,GAAK,OACb,EAAKkyB,cAAc,WAAYlyB,QAmBvC,yBAAK0L,UAAU,cACb,kBAAC2nB,GAAA,EAAD,CACE3nB,UAAU,oBACV0B,QAASoR,KAAK+T,gBAAgBpU,KAAKK,MACnC8U,iBAAgB9U,KAAKhgB,MAAMsX,iBAH7B,uBAME,0BAAMpK,UAAU,cAqCxB,kBAACmU,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,gBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,qBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEgQ,eAAe,WACf/P,YAAY,cACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMoC,YAClBof,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,SAEX7W,EACC+S,KAAKvT,MAAMiV,sBAAsB,kBAKtC,kBAACL,GAAA,EAAD,CACCgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,UAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,qBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,mBACZvT,KAAK,aACLtD,MAAOsV,KAAKhgB,MAAMoX,WAClBoK,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,kBAKtD,yBAAKxU,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKmV,kBAAkBxV,KAAKK,KAAM,UAH7C,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GAtqBazV,aA+qBzBlH,GAAaoL,KAAWzC,KAAXyC,CAAqBpL,IAElC,IAMeqL,gBANS,SAAAviB,GACtB,MAAO,KAOP,KAFauiB,CAGbrL,ICpsBE3P,GAAqBL,EAAUK,mBAY7BmQ,IAXexQ,EAAUI,e,YAY7B,WAAYmF,GAAQ,IAAD,+BACjB,8CAAMA,KAiERmS,iBAAmB,WACjB,OAAO,EAAK5e,OAnEK,EAsEnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAxEZ,EAsFnB8W,qBAAuB,SAAA/qB,GAClBA,GACD,EAAKqU,SAAS,CACV1R,OAAO3C,EAAK2C,OACZpK,SAAWyH,EAAKzH,SAChBC,eAAiBwH,EAAKxH,eACtBC,KAAOuH,EAAKvH,KACZqU,QAAU9M,EAAK8M,QACfS,UAAWvN,EAAKuN,UAChBR,eAAiB/M,EAAK+M,eACtBC,aAAehN,EAAKgN,aACpBC,eAAiBjN,EAAKiN,eACtBC,qBAAuBlN,EAAKkN,qBAC5BC,yBAA2BnN,EAAKmN,yBAChCC,gBAAkBpN,EAAKoN,gBACvBC,gBAAkBrN,EAAKqN,mBArGZ,EA0GnB+G,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KAEpB,EAAKkR,SAAL,eACGlR,EAAOtD,KAhHO,EAoHnB8kB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eArHP,EAwHnBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aAzHP,EA4HnButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BhC,QAAQC,IAAI+B,GACZD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,GAAaC,GACXD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAGd,EAAKid,SAAS,CAAEjd,YAAWC,aArIV,EAqJnBkd,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GAElBgf,EAAKrf,MAAM61B,cAGfx1B,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,oBA9JI,EAyOnBqU,gBAAkB,WAChB,EAAK3U,SAAS,CACZ4U,aAAc,EAAK9zB,MAAM8zB,eA3OV,EAgPnBgC,qBAAuB,SAAAvR,GACrB,EAAKrF,SAAS,CACZjH,gBAAiBsM,KAlPF,EAsPnBwR,4BAA8B,SAAAxR,GAC5B,EAAKrF,SAAS,CACZhH,gBAAiBqM,KAxPF,EA8PnByR,wBAA0B,SAAAjb,GACxB,EAAKmE,SAAS,CACZ+W,oBAAoB,IAGtB,EAAKxpB,MAAMypB,+BAjQX,EAAKl2B,MAAQ,CACXuf,WAAW,EACXtd,UAAW,GACXC,QAAS,GACTkyB,sBAAsB,EACtB5mB,OAAQ,GACRwmB,YAAY,EACZrB,UAAWhqB,MAASub,OAAO,QAC3BwO,WAAY/pB,MAASub,OAAO,KAAO,EACnCuO,SAAU9pB,MAASub,OAAO,KAC1B4O,QAASnqB,MAASub,OAAO,QACzB2O,SAAUlqB,MAASub,OAAO,KAAO,EACjC0O,OAAQjqB,MAASub,OAAO,KACxBmP,QAAS1qB,MAASub,OAAO,QACzBoP,SAAU3qB,MAASub,OAAO,KAAO,EACjCkP,OAAQzqB,MAASub,OAAO,KACxBhhB,YAAY,GACZC,aAAa,GACb8yB,oBAAmB,EACnB7d,UAAU,GACVkd,cAAe,GACfa,aAAc,CAAC,CACPzrB,MAAO,EACPoa,MAAO,UACP,CACEpa,MAAO,EACPoa,MAAO,UACP,CACEpa,MAAO,EACPoa,MAAO,UAEnBsR,oBAAoB,CAAC,CACnB1rB,MAAO,EACPoa,MAAO,eACP,CACEpa,MAAO,EACPoa,MAAO,MACP,CACEpa,MAAO,EACPoa,MAAO,WAIf,EAAKlG,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,CACE1c,SAAU,WACVC,eAAgB,WAChBC,KAAM,WACN2U,gBAAiB,WACjBC,gBAAiB,YAGnB,CACE,oBAAqB3Q,GAAmBnE,SAAS7C,SAChD,0BAA2BgH,GAAmBlE,eAAe9C,SAC9D,gBAAiBgH,GAAmBjE,KAAK/C,SACzC,2BAA4BgH,GAAmB0Q,gBAAgB1X,SAC/D,2BAA4BgH,GAAmB2Q,gBAAgB3X,WA7DlD,E,mFAgFjBL,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAM4pB,qBACtDrW,KAAK4V,qBAAqB5V,KAAKvT,MAAM4pB,uB,yCAuDnB,IAAD,OACjBla,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAoBjB,IAAIzf,EAAW4c,KAAKhgB,MAAMoD,SACtBC,EAAiB2c,KAAKhgB,MAAMqD,eAC5BC,EAAO0c,KAAKhgB,MAAMsD,KAClBqU,EAAUqI,KAAKhgB,MAAM2X,QAErBC,EAAiBoI,KAAKhgB,MAAM4X,eAC5BC,EAAgBmI,KAAKhgB,MAAM6X,aAC3BC,EAAiBkI,KAAKhgB,MAAM8X,eAC5BC,EAAuBiI,KAAKhgB,MAAM+X,qBAClCC,EAA4BgI,KAAKhgB,MAAMgY,yBACvCC,EAAiB,GACrB+H,KAAKhgB,MAAMiY,gBAAgBtH,SAAQ,SAASmgB,GAC3C7Y,EAAgBgJ,KAAK6P,EAAKhM,UAE3B,IAAI5M,EAAkB,GACtB8H,KAAKhgB,MAAMkY,gBAAgBvH,SAAQ,SAASmgB,GAC3C5Y,EAAgB+I,KAAK6P,EAAKhM,UAG1B,IAAItX,EAASwS,KAAKvT,MAAM8T,KAAK/S,OAIzB3C,EAAO,CACTuN,UAJc4H,KAAKhgB,MAAMoY,UAKzB5K,SACApK,WACAC,iBACAC,OACAqU,UACAC,iBACAC,eACAC,iBACAC,uBACAC,2BACAC,kBACAC,mBAGEmH,EAAOW,KAENA,KAAKhgB,MAAMoY,WAAsC,KAAzB4H,KAAKhgB,MAAMoY,UAatC+D,GAAuB,yBAA0BtR,GAC9CnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAK2W,wBAAwB,QAC7B3W,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,mBAAoBtR,GACxCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAK2W,wBAAwB,YAGhC51B,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BAgDlBH,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAM4pB,qBAMtD,OACE,6BACE,kBAAClQ,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMi2B,mBACjB7P,OAAQpG,KAAKgW,wBAAwBrW,KAAKK,KAAM,SAChDqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBACnB8S,KAAKhgB,MAAMoY,WAAuC,KAA1B4H,KAAKhgB,MAAMs2B,WAEjC,sBADA,uBAIR,kBAACnQ,GAAA,EAAMI,KAAP,KAEE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACR,kBAAC/P,GAAA,EAAD,KACG,kBAAC8P,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,YAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAACoU,GAAA,EAAD,CACQgQ,eAAe,SACf/P,YAAY,WACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMoD,SAClBoe,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEd,4BAAQpZ,MAAM,IAAd,YACA,4BAAQA,MAAO,GAAf,OAETuC,EACS+S,KAAKvT,MAAMiV,sBAAsB,gBAK3C,kBAACL,GAAA,EAAD,KACE,kBAAC8P,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,mBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BACtB,kBAACoU,GAAA,EAAD,CACUgQ,eAAe,SACf/P,YAAY,iBACZvT,KAAK,iBACLtD,MAAOsV,KAAKhgB,MAAMqD,eAClBme,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,kBACA,4BAAQA,MAAO,GAAf,sBAGNuC,EACS+S,KAAKvT,MAAMiV,sBAAsB,sBAM3C,kBAACL,GAAA,EAAD,KACE,kBAAC8P,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,QAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BACtB,kBAACoU,GAAA,EAAD,CACUgQ,eAAe,SACf/P,YAAY,OACZvT,KAAK,OACLtD,MAAOsV,KAAKhgB,MAAMsD,KAClBke,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,QACA,4BAAQA,MAAO,GAAf,sBACA,4BAAQA,MAAO,GAAf,aACA,4BAAQA,MAAO,GAAf,cACA,4BAAQA,MAAO,GAAf,cAENuC,EACS+S,KAAKvT,MAAMiV,sBAAsB,YAQ3C,kBAACL,GAAA,EAAD,CAAWgQ,UAAU,0BACjB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,YAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,UACLd,UAAU,gBACVxC,MAAM,YACNwoB,QACyB,cAAvBlT,KAAKhgB,MAAM2X,QAEb6J,SAAUxB,KAAKf,cAPjB,WAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,UACLd,UAAU,gBACVxC,MAAM,SACNwoB,QACyB,gBAAvBlT,KAAKhgB,MAAM2X,QAEb6J,SAAUxB,KAAKf,cAPjB,cAUE,yBAAK/R,UAAU,WACR,OAKd,kBAACmU,GAAA,EAAD,CAAWgQ,UAAU,0BACpB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,mBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,MAAM,OACNwoB,QACgC,SAA9BlT,KAAKhgB,MAAM4X,eAEb4J,SAAUxB,KAAKf,cAPjB,YAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,MAAM,OACNwoB,QACgC,SAA9BlT,KAAKhgB,MAAM4X,eAEb4J,SAAUxB,KAAKf,cAPjB,YAUE,yBAAK/R,UAAU,WACR,OAMf,kBAACmU,GAAA,EAAD,CAAWgQ,UAAU,0BACnB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,mBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,eACLd,UAAU,gBACVxC,MAAM,MACNwoB,QAC8B,QAA5BlT,KAAKhgB,MAAM6X,aAEb2J,SAAUxB,KAAKf,cAPjB,MAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,eACLd,UAAU,gBACVxC,MAAM,QACNwoB,QAC8B,UAA5BlT,KAAKhgB,MAAM6X,aAEb2J,SAAUxB,KAAKf,cAPjB,QAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,eACLd,UAAU,gBACVxC,MAAM,WACNwoB,QAC8B,aAA5BlT,KAAKhgB,MAAM6X,aAEb2J,SAAUxB,KAAKf,cAPjB,WAUE,yBAAK/R,UAAU,WACR,OAKX,kBAACmU,GAAA,EAAD,CAAWgQ,UAAU,0BACvB,kBAACF,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,mBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,QACb,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QACgC,WAA9BlT,KAAKhgB,MAAM8X,eAEb0J,SAAUxB,KAAKf,cAPjB,SAUE,yBAAK/R,UAAU,WACR,IACT,kBAACqnB,GAAA,EAAD,CACEvmB,KAAK,iBACLd,UAAU,gBACVxC,MAAM,SACNwoB,QACgC,WAA9BlT,KAAKhgB,MAAM8X,eAEb0J,SAAUxB,KAAKf,cAPjB,SAUE,yBAAK/R,UAAU,WACR,OAKhB,kBAACmU,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,oBACrC,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,oBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEA,UAAU,eACVqpB,OAAK,EACLvoB,KAAK,kBACLtD,MAAOsV,KAAKhgB,MAAMiY,gBAClBuJ,SAAUxB,KAAK8V,qBACflQ,QAAS5F,KAAKhgB,MAAMm2B,aACpB5U,YAAY,yDAGftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,sBAIpD,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,WACpC,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,oBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEA,UAAU,eACVqpB,OAAK,EACLvoB,KAAK,kBACLtD,MAAOsV,KAAKhgB,MAAMkY,gBAClBsJ,SAAUxB,KAAK+V,4BACfnQ,QAAS5F,KAAKhgB,MAAMo2B,oBACpB7U,YAAY,yDAGftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,uBAMtD,yBAAKxU,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKgW,wBAAwBrW,KAAKK,KAAM,UAHnD,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GAjmBmBzV,cA0mB/B1G,GAAmB4K,KAAWzC,KAAXyC,CAAqB5K,IAExC,IAMe6K,gBANS,SAAAviB,GACtB,MAAO,KAOP,KAFauiB,CAGb7K,ICjoBEnQ,GAAqBL,EAAUK,mBAU7B4uB,IATejvB,EAAUI,eASZ,CACnB,CAACkvB,WAAW,EAAExoB,KAAK,UAAW,CAACwoB,WAAW,EAAExoB,KAAK,UAAU,CAACwoB,WAAW,EAAExoB,KAAK,UAExEyoB,G,YACJ,WAAYhqB,GAAQ,IAAD,+BACjB,8CAAMA,KA+DRmS,iBAAmB,WACjB,OAAO,EAAK5e,OAjEK,EAoEnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAtEZ,EAqHnBoW,eAAiB,SAAArqB,GACXA,GACF,EAAKqU,SAAS,CACV1R,OAAO3C,EAAK2C,OACZ8H,cAAgBzK,EAAKyK,cACrB/S,OAAOsI,EAAKtI,OACZd,KAAMoJ,EAAKmO,iBACXxX,MAAOqJ,EAAKoO,kBACZ/Z,SAAU2L,EAAKqO,gBACf1V,SAAUqH,EAAKrH,SACfD,YAAasH,EAAKtH,aAAesH,EAAKtH,YAAY,IAAMsH,EAAKtH,YAAY,GAAGmzB,iBA/HjE,EAiJnBtX,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GAElBgf,EAAKrf,MAAM61B,cAEfx1B,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,oBAzJI,EAwNnBqU,gBAAkB,WAChB,EAAK3U,SAAS,CACZ4U,aAAc,EAAK9zB,MAAM8zB,eA1NV,EA8NnB7U,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KACpB,EAAKkR,SAAL,eACGlR,EAAOtD,KAnOO,EAuOnBisB,0BAA4B,SAAA5b,GAC1B,EAAKmE,SAAS,CACZ0X,sBAAsB,IAGxB,EAAKnqB,MAAMoqB,iCA1OX,EAAK72B,MAAQ,CACXuf,WAAW,EACXtd,UAAW,GACXC,QAAS,GACTkyB,sBAAsB,EACtB5mB,OAAQ,GACRwmB,YAAY,EACZrB,UAAWhqB,MAASub,OAAO,QAC3BwO,WAAY/pB,MAASub,OAAO,KAAO,EACnCuO,SAAU9pB,MAASub,OAAO,KAC1B4O,QAASnqB,MAASub,OAAO,QACzB2O,SAAUlqB,MAASub,OAAO,KAAO,EACjC0O,OAAQjqB,MAASub,OAAO,KACxBmP,QAAS1qB,MAASub,OAAO,QACzBoP,SAAU3qB,MAASub,OAAO,KAAO,EACjCkP,OAAQzqB,MAASub,OAAO,KACxBhhB,YAAY,GACZC,aAAa,GACbyzB,sBAAqB,EACrBpf,UAAU,GACV8d,cAAe,GACfwB,gBAAgB,IAGlB,EAAKlY,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,CACEvc,YAAa,WACb9B,KAAK,WACLD,MAAM,WACNtC,SAAS,WACTsE,SAAU,YAUZ,CACE,uBAAwB+D,GAAmBhE,YAAYhD,SACvD,gBAAiBgH,GAAmB9F,KAAKlB,SACzC,iBAAkBgH,GAAmB/F,MAAMjB,SAC3C,oBAAqBgH,GAAmBrI,SAASqB,SACjD,oBAAqBgH,GAAmB/D,SAASjD,WAjDpC,E,mFA4EJyf,KAAKvT,MAAM8T,KAAK/S,OAE7BtN,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAM6a,aACtDtH,KAAKkV,eAAelV,KAAKvT,MAAM6a,aAC/BtH,KAAKlJ,uB,2CAkBc,IAAD,OAClBqF,GAAuB,sBACtBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAI+b,EAAiB,EAAK92B,MAAM82B,gBAIhCA,EAAgBha,EAASjS,KAAKwD,OAC9BnO,QAAQC,IAAI22B,GACZ,EAAK5X,SAAS,CAAC4X,gBAAiBA,QAGnC12B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAoBI,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAmBhB,IAAI6T,EAAgB1W,KAAKhgB,MAAMuD,YAC3BA,EAAc,GACduzB,EAAiB9W,KAAKhgB,MAAM82B,gBAC5BlkB,EAAOkkB,EAAgB3jB,WAAU,SAAAC,GAAI,OAAIA,EAAKsjB,eAAiBA,KAEnEnzB,EAAY0d,KAAK6V,EAAgBlkB,IAEjC,IAAIoG,EAAmBgH,KAAKhgB,MAAMyB,KAC9BwX,EAAoB+G,KAAKhgB,MAAMwB,MAC/B0X,EAAkB8G,KAAKhgB,MAAMd,SAC7BsE,EAAWwc,KAAKhgB,MAAMwD,SACtBjB,EAASyd,KAAKhgB,MAAMuC,OACpBiL,EAASwS,KAAKvT,MAAM8T,KAAK/S,OAGzB3C,EAAO,CACTyK,cAHkB0K,KAAKhgB,MAAMsV,cAI7B9H,SACAjK,cACAyV,mBACAC,oBACAC,kBACA1V,WACAjB,SACA4P,OAVW6N,KAAKvT,MAAM8T,KAAKpO,QAazBkN,EAAOW,KAENA,KAAKhgB,MAAMsV,eAA8C,KAA7B0K,KAAKhgB,MAAMsV,cAa1C6G,GAAuB,kBAAmBtR,GACvCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SACjBsE,EAAKsX,0BAA0B,QAC9BtX,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,gBAAiBtR,GACrCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC5BF,EAAKsX,0BAA0B,YAGjCv2B,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BA8ClB,OACE,6BAeE,kBAAC8lB,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAM42B,qBACjBxQ,OAAQpG,KAAK2W,0BAA0BhX,KAAKK,KAAM,SAClDqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBACnB8S,KAAKhgB,MAAMsV,eAA8C,KAA7B0K,KAAKhgB,MAAMsV,cAErC,eADA,gBAIR,kBAAC6Q,GAAA,EAAMI,KAAP,KACE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACT,kBAAC/P,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,gBAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,cACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMuD,YAClBie,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,GAAGsX,UAAQ,GAAzB,YACChC,KAAKhgB,MAAM82B,gBAAgB/I,KAAI,SAACgJ,EAAK5nB,GAAN,OAChC,4BAAQzE,MAAOqsB,EAAIL,eAAgBK,EAAIxzB,iBAGrC0J,EACC+S,KAAKvT,MAAMiV,sBAAsB,uBAS/B,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACjC,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,cAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,OACZvT,KAAK,OACLtD,MAAOsV,KAAKhgB,MAAMyB,KAClB+f,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,GAAGsX,UAAQ,GAAzB,SACA,4BAAQtX,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,aAEEuC,EACC+S,KAAKvT,MAAMiV,sBAAsB,UAGrC,yBAAKxU,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,QACZvT,KAAK,QACLtD,MAAOsV,KAAKhgB,MAAMwB,MAClBggB,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEZ,4BAAQpZ,MAAM,GAAGsX,UAAQ,GAAzB,SACD,4BAAQtX,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,GAAf,WACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,YACA,4BAAQA,MAAO,IAAf,eAIDuC,EAAc+S,KAAKvT,MAAMiV,sBAAsB,YAGrD,6BAEF,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,oBAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,WACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMd,SAClBsiB,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,YACCyrB,GAAapI,KAAI,SAACgJ,EAAK5nB,GAAN,OACf,4BAAQzE,MAAOqsB,EAAIP,YAAaO,EAAI/oB,UAIrCf,EACC+S,KAAKvT,MAAMiV,sBAAsB,wBAS3C,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,gBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,kBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,eACZvT,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMwD,SAClBge,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EACC+S,KAAKvT,MAAMiV,sBAAsB,gBAKzC,yBAAKxU,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAK2W,0BAA0BhX,KAAKK,KAAM,UAHrD,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GAvdqBzV,aAgejCqY,GAAqBnU,KAAWzC,KAAXyC,CAAqBmU,IAE1C,IAMelU,gBANS,SAAAviB,GACtB,MAAO,KAOP,KAFauiB,CAGbkU,ICzfElvB,GAAqBL,EAAUK,mBAY7ByvB,IAXe9vB,EAAUI,e,YAY7B,WAAYmF,GAAQ,IAAD,+BACjB,8CAAMA,KAyCRmS,iBAAmB,WACjB,OAAO,EAAK5e,OA3CK,EA8CnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAhDZ,EAmFnBmY,cAAgB,SAAApsB,GACd3K,QAAQC,IAAI0K,GACTA,GACD,EAAKqU,SAAS,CACV1R,OAAO3C,EAAK2C,OACZ0pB,gBAAkBrsB,EAAKtI,OACvB+S,cAAezK,EAAKyK,iBAzFT,EA8FnB2J,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KAEpB,EAAKkR,SAAL,eACGlR,EAAOtD,KApGO,EAwGnB8kB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eAzGP,EA4GnBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aA7GP,EAgHnButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BhC,QAAQC,IAAI+B,GACZD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,GAAaC,GACXD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAGd,EAAKid,SAAS,CAAEjd,YAAWC,aAzHV,EAyInBkd,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GACtBA,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,oBA9II,EAmMnBqU,gBAAkB,WAChB,EAAK3U,SAAS,CACZ4U,aAAc,EAAK9zB,MAAM8zB,eArMV,EA0MnBqD,mBAAqB,SAAA5S,GACnB,EAAKrF,SAAS,CACZ3c,OAAQgiB,KA5MO,EAiNnB6S,iBAAmB,SAAArc,GACjB,EAAKmE,SAAS,CACZmY,aAAa,IAEf,EAAK5qB,MAAM6qB,wBAnNX,EAAKt3B,MAAQ,CACXuf,WAAW,EACX6U,sBAAsB,EACtB5mB,OAAQ,GACR6pB,aAAY,EACZ7d,QAAQ,GACR+d,OAAO,GACPC,WAAW,GACXN,gBAAgB,IAGlB,EAAKtY,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,CACEvd,OAAQ,WACRg1B,OAAQ,YAUV,CACE,kBAAmBhwB,GAAmBhF,OAAOhC,SAC5C,kBAAmBgH,GAAmBgwB,OAAOh3B,WA9BjC,E,mFAqDjB,IAAIiN,EAAQ,KACTwS,KAAKvT,MAAM8T,OACZ/S,EAASwS,KAAKvT,MAAM8T,KAAK/S,OACzBwS,KAAKd,SAAS,CAAC1R,OAAQA,KAEzBwS,KAAKiX,cAAcjX,KAAKvT,MAAMgrB,cAE9BzX,KAAKnJ,qB,uCAGUrJ,GAAQ,IAAD,OACtB2O,GAAuB,oBACtBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIyc,EAAY,EAAKx3B,MAAMw3B,WACvBN,EAAiB,EAAKzqB,MAAMgrB,cAAgB,EAAKhrB,MAAMgrB,aAAal1B,OAAQ,EAAKkK,MAAMgrB,aAAal1B,OAAO,GAC/Gua,EAASjS,KAAKwD,OAAOsC,SAAQ,SAAS9F,IAElB,IADFqsB,EAAgB/jB,WAAU,SAAAC,GAAI,OAAIA,EAAKoG,SAAW3O,EAAK2O,YAEtEge,EAAWvW,KAAK,CAAC6D,MAAOja,EAAK6sB,UAAUhtB,MAAMG,EAAK2O,aAEtDtZ,QAAQC,IAAIq3B,GACX,EAAKtY,SAAS,CAACsY,WAAYA,QAG/Bp3B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCA6CI,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAejB,IAAI0U,EAASvX,KAAKhgB,MAAMu3B,OACpBL,EAAkBlX,KAAKvT,MAAMgrB,aAAal1B,OAC1CA,EAASyd,KAAKhgB,MAAMuC,OACvBrC,QAAQC,IAAI6f,KAAKhgB,MAAMuC,QAEvB20B,EAAgBjW,KAAK,CAAC,QAAU1e,EAAOmI,MAAM,UAAYnI,EAAOuiB,MAAM,OAASyS,IAE/E,IAAI/pB,EAASwS,KAAKvT,MAAM8T,KAAK/S,OAEzB8H,GADU0K,KAAKhgB,MAAMwZ,QACNwG,KAAKvT,MAAMgrB,aAAaniB,cAAe0K,KAAKvT,MAAMgrB,aAAaniB,cAAc,IAEhGpV,QAAQC,IAAI,gBAAgBmV,GAC5B,IAAIzK,EAAO,CACTyK,gBACA9H,SACAjL,OAAO20B,GAGL7X,EAAOW,KAENA,KAAKhgB,MAAMsV,eAA8C,KAA7B0K,KAAKhgB,MAAMsV,cAa1C6G,GAAuB,iBAAkBtR,GACtCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAK+X,iBAAiB,QACtB/X,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MArBhB8b,GAAuB,gBAAiBtR,GACrCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAK+X,iBAAiB,YAGzBh3B,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BA4ClB,OACE,6BAeE,kBAAC8lB,GAAA,EAAD,CACEqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMq3B,YACjBjR,OAAQpG,KAAKoX,iBAAiBzX,KAAKK,KAAM,SACzCqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBACnB8S,KAAKhgB,MAAMoY,WAAuC,KAA1B4H,KAAKhgB,MAAMs2B,WAEjC,sBADA,uBAIR,kBAACnQ,GAAA,EAAMI,KAAP,KAEE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACN,kBAAC/P,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,WACrC,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,cAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEA,UAAU,eACVc,KAAK,SACLtD,MAAOsV,KAAKhgB,MAAMuC,OAClBif,SAAUxB,KAAKmX,mBACfvR,QAAS5F,KAAKhgB,MAAMw3B,WACpBjW,YAAY,kBAGftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,aAItD,kBAACL,GAAA,EAAD,KACI,kBAAC8P,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,QAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BACtB,kBAACoU,GAAA,EAAD,CACUgQ,eAAe,SACf/P,YAAY,SACZvT,KAAK,SACLtD,MAAOsV,KAAKhgB,MAAMu3B,OAClB9C,aAAcphB,SAAS2M,KAAKhgB,MAAMu3B,OAAO,IACzC/V,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,iBACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,MAENuC,EACS+S,KAAKvT,MAAMiV,sBAAsB,eAO7C,yBAAKxU,UAAU,0DAGnB,kBAACiZ,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKoX,iBAAiBzX,KAAKK,KAAM,UAH5C,WAUJ,kBAACmG,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAM8zB,YACjB1N,OAAQpG,KAAK6T,iBAEb,kBAAC1N,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,mBAIF,kBAACiZ,GAAA,EAAMI,KAAP,MAEA,kBAACJ,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CAAQgK,OAAO,mBAAmBld,QAASoR,KAAK6T,iBAAhD,gB,GA/VYzV,cAwWxB4Y,GAAY1U,KAAWzC,KAAXyC,CAAqB0U,IACjC,IAMezU,gBANS,SAAAviB,GACtB,MAAO,KAOP,KAFauiB,CAGbyU,ICjXIrb,GAAS,CACbwd,WAAY,YACZC,QAAS,SACTC,OAAQ,aACRC,YAAa,uBACbC,gBAAiB,4CASbC,G,YACJ,WAAY/sB,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KAwDR6f,eAAiB,SAAAzhB,GAEf,GAAIA,EAAM,CACR,IAAI2C,EAAS3C,EAAK2C,OACdzL,EAAU8I,EAAK9I,QACff,EAAY6J,EAAK7J,UACjBE,EAAW2J,EAAK3J,SAGhBZ,EAAOuK,EAAKvK,MACZisB,EAAU1hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAC/C+L,EAAU3hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAE/CzS,GACDnD,EAAK7J,UAAY6J,EAAK7J,UAAY,IACnC,KACC6J,EAAK3J,SAAW2J,EAAK3J,SAAW,IAC/BurB,EAAe5hB,EAAKoQ,eACpBwR,IACFA,EAAeA,GAEjB,IAAIC,EAAa7hB,EAAK6hB,WAClBA,IACFA,EAAajd,EAAc,WAAYid,IAEzC,IAAI7gB,EAAWhB,EAAKgB,SACpB,EAAKqT,SAAS,CACZsN,UACAzqB,UACAf,YACAE,WACAsM,SACAlN,QACAmsB,eACAC,aACAH,UACA1gB,WACAmC,WA9FsB,EA8K5Bmf,eAAiB,WACf,IAAI3f,EAAS,EAAKxN,MAAMwN,OACxB,EAAKf,MAAM4Q,6BAA6B7P,IAhLd,EA6M5BisB,mBAAqB,SAAA5uB,GACnB3K,QAAQC,IAAI,QAAQ0K,GAChBA,GACF,EAAKqU,SAAS,CACV5J,cAAgBzK,EAAKyK,cACrB/S,OAAOsI,EAAKtI,OACZd,KAAMoJ,EAAKmO,iBACXxX,MAAOqJ,EAAKoO,kBACZ/Z,SAAU2L,EAAKqO,gBACf1V,SAAUqH,EAAKrH,SACf+R,UAAW1K,EAAK0K,UAChBC,WAAW3K,EAAK2K,WAChBjS,YAAasH,EAAKtH,YAAY,GAAGmzB,iBAzNb,EA+N3BgD,uBAAyB,SAAA/tB,GACxB,EAAKuT,SAAS,CACZwa,wBAAyB,EAAK15B,MAAM05B,yBAElC,EAAK15B,MAAM05B,wBACZ,EAAKxa,SAAS,CAACwR,gBAAmB,QApOX,EA0O5BiJ,wBAA0B,SAAAhuB,GACxB,EAAKuT,SAAS,CACZya,yBAA0B,EAAK35B,MAAM25B,0BAEnC,EAAK35B,MAAM25B,0BACZ,EAAKza,SAAS,CAACmV,iBAAoB,OACnC,EAAKuF,kBAAkB,EAAK55B,MAAMwN,UAhPX,EAoP5BqsB,oBAAsB,SAAAluB,GACpB,EAAKuT,SAAS,CACZ2a,qBAAsB,EAAK75B,MAAM65B,sBAG/B,EAAK75B,MAAM65B,qBAEZ,EAAKC,cAAc,EAAK95B,MAAMwN,SA3PP,EA+P5BqsB,oBAAsB,SAAAluB,GACpB,EAAKuT,SAAS,CACZ2a,qBAAsB,EAAK75B,MAAM65B,sBAG/B,EAAK75B,MAAM65B,qBAEZ,EAAKC,cAAc,EAAK95B,MAAMwN,SAtQP,EA0Q5BusB,6BAA+B,SAAApuB,GAC7B,EAAKuT,SAAS,CACZ6a,8BAA+B,EAAK/5B,MAAM+5B,+BAGxC,EAAK/5B,MAAM+5B,8BAEZ,EAAKD,cAAc,EAAK95B,MAAMwN,SAjRP,EAqR5BwsB,qBAAuB,SAAAruB,GACrB,EAAKuT,SAAS,CACZ8a,sBAAuB,EAAKh6B,MAAMg6B,uBAGhC,EAAKh6B,MAAMg6B,uBACZ,EAAK9a,SAAS,CAACqW,cAAiB,OAChC,EAAK0E,gBAAgB,EAAKj6B,MAAMwN,UA5RT,EAgS5B0sB,2BAA6B,SAAAvuB,GAC3B,EAAKuT,SAAS,CACZgb,4BAA6B,EAAKl6B,MAAMk6B,6BAGtC,EAAKl6B,MAAMk6B,6BACZ,EAAKhb,SAAS,CAACmX,oBAAuB,OACtC,EAAK8D,qBAAqB,EAAKn6B,MAAMwN,UAvSd,EA4S5B4sB,uBAAyB,SAAA1J,GACvBxwB,QAAQC,IAAIuwB,GACZ,EAAKxR,SAAS,CACZwR,gBAAiBA,EACjBgJ,wBAAyB,EAAK15B,MAAM05B,0BAhTZ,EAoT5BW,wBAA0B,SAAAhG,GACxBn0B,QAAQC,IAAIk0B,GACZ,EAAKnV,SAAS,CACZmV,iBAAkBA,EAClBsF,yBAA0B,EAAK35B,MAAM25B,2BAxTb,EA4T5BW,oBAAsB,SAAA7C,GACpB,EAAKvY,SAAS,CACZuY,aAAcA,EACdoC,qBAAsB,EAAK75B,MAAM65B,uBA/TT,EAmU5BU,qBAAuB,SAAAhF,GACrBr1B,QAAQC,IAAIo1B,GACZ,EAAKrW,SAAS,CACZqW,cAAeA,EACfyE,sBAAuB,EAAKh6B,MAAMg6B,wBAvUV,EA2U5BQ,2BAA6B,SAAAnE,GAC3Bn2B,QAAQC,IAAIk2B,GACZ,EAAKnX,SAAS,CACZmX,oBAAqBA,EACrB6D,4BAA6B,EAAKl6B,MAAMk6B,8BA/UhB,EAgW5B9M,eAAiB,WACf,EAAKlO,SAAS,CACZmO,cAAe,EAAKrtB,MAAMqtB,gBAlWF,EAsW5BpO,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SAvWxB,EA4W5B0hB,gBAAkB,WAChBntB,OAAOotB,SAAS,IAAK,GAErB,EAAKnN,SAAS,CAAEkN,iBAAkB,EAAKpsB,MAAMosB,mBA/WnB,EAkX5BqO,oBAAsB,WACpB,IAAIjO,EAAU,EAAKxsB,MAAMusB,QAAU,EAAKvsB,MAAMusB,QAAU,GACxD,EAAKrN,SAAS,CACZyO,aAAc,EAAK3tB,MAAM2tB,YACzBnB,QAASA,KAtXe,EA2X5BkO,YAAc,WACZ,IAAIltB,EAAS,EAAKxN,MAAMwN,OACpB+e,EAAU,EAAKvsB,MAAMwsB,QACrB3hB,EAAO,CACT2C,SACA+e,WAGF,EAAK9f,MAAMoR,qBAAqB,CAAE0O,YAClCpQ,GAAuB,oBAAqBtR,GACzCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKmE,SAAS,CAAEyO,aAAa,OAGhCvtB,OAAM,SAAAyiB,GACL,EAAK3D,SAAS,CAAEyO,aAAa,IAC7BztB,QAAQC,IAAI0iB,OA5YU,EAmZ5B8X,SAAW,WACI,EAAK36B,MAAMwN,OAAxB,IACIQ,EAAO,EAAKhO,MAAMgO,KAAKyS,OAC3B,GAAIzS,EAAM,CACR,IAAI4sB,EAAW5sB,EAAKe,MAAM,KAAKgf,KAAI,SAAS+C,EAAMle,GAChD,GAAIke,EAAKriB,OAAS,EAChB,OAAOqiB,KAIP9vB,EAAY45B,EAASnsB,OAAS,EAAImsB,EAAS,GAAK,GACpD,GAAIA,EAASnsB,OAAS,EACpB,IAAIvN,EAAW05B,EAASpsB,MAAM,GAAGqsB,KAAK,KAGxC,GAAI75B,GAAaA,EAAUyN,OAAS,GAClChD,EACE,+DAEG,GAAIvK,GAAYA,EAASuN,OAAS,GACvChD,EAAe,6DACV,CAML,EAAKgB,MAAMoR,qBAAqB,CAAE7c,YAAWE,mBAa/C,EAAKge,SAAS,CAAEwO,UAAU,KA3bF,EA+b5BoN,iBAAmB,WACjB,IAAI9sB,GACD,EAAKhO,MAAMgB,UAAY,EAAKhB,MAAMgB,UAAY,IAC/C,KACC,EAAKhB,MAAMkB,SAAW,EAAKlB,MAAMkB,SAAW,IAC/C,EAAKge,SAAS,CACZwO,UAAU,EACV1f,KAAMA,KAtckB,EA2d5B+sB,eAAiB,SAAC9sB,EAAYT,GAC1B,IAAIyN,EAAiBhN,EACjBpD,EAAO,CACT2C,SACAyN,kBAEF,EAAKxO,MAAMoR,qBAAqB,CAAE5C,mBAClCkB,GAAuB,qBAAsBtR,IAlerB,EAqe5Bud,kBAAoB,SAACpW,EAAQrG,GACZA,EAAMwT,OAAOkJ,MAAM,GAAGra,KACrCgtB,KACCC,WAAWtvB,EAAMwT,OAAOkJ,MAAM,GAAI1M,IAClCjc,MAAK,SAAAmL,GAEJ,IAAI2C,EAAQ,EAAKxN,MAAMwN,OACnByN,EAAiBpQ,EAAK3L,SACtBg8B,EAAc,CAChB1tB,SACAyN,kBAEF,EAAKxO,MAAMoR,qBAAqB,CAAE5C,mBAClCkB,GAAuB,qBAAsB+e,OAlfrB,EAwgB5BC,YAAa,SAAAxvB,GACXzL,QAAQC,IAAIwL,EAAMwT,OAAOkJ,MAAM,IAC/B,IAAIva,EAAWnC,EAAMwT,OAAOkJ,MAAM,GAAGra,KACrCgtB,KACCC,WAAWtvB,EAAMwT,OAAOkJ,MAAM,GAAI1M,IAClCjc,MAAK,SAAAmL,GACJ,IAAIuwB,EAAU,CACX9lB,cAAe,EAAKtV,MAAMsV,cAC1B9H,OAAQ,EAAKxN,MAAMwN,OACnB+H,UAAU1K,EAAK3L,SACfsW,WAAY1H,GAEf5N,QAAQC,IAAI0K,GACZsR,GAAuB,YAAYif,GAClC17B,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKyM,mBAAmB,EAAKxnB,MAAMwN,WAGtCpN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,SAGfziB,OAAM,SAAAyiB,GAAG,OAAI3iB,QAAQG,MAAMwiB,OA/hBF,EAkiB5BwY,WAAa,SAAA1vB,GACXqvB,KACCM,WAAW,EAAKt7B,MAAMwV,WAAYmG,IAClCjc,MAAK,SAAAod,GAAa5c,QAAQC,IAAI2c,GAC7B,IAAIse,EAAU,CACZ9lB,cAAe,EAAKtV,MAAMsV,cAC1B9H,OAAQ,EAAKxN,MAAMwN,OACnB+H,UAAU,KACVC,WAAY,MAGf2G,GAAuB,YAAYif,GAClC17B,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKyM,mBAAmB,EAAKxnB,MAAMwN,WAGtCpN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,SAGdziB,OAAM,SAAAyiB,GAAG,OAAI3iB,QAAQG,MAAMwiB,OArjB5B,EAAK7iB,MAAQ,CACX25B,yBAAyB,EACzBE,qBAAqB,EACrBG,sBAAsB,EACtBuB,6BAA6B,EAC7B7B,wBAAuB,EACvBhJ,gBAAiB,GACjB2D,iBAAkB,GAClBoD,aAAc,GACdlC,cAAe,GACfc,oBAAqB,GACrB/I,SAAS,EACTC,SAAS,EACTpF,YAAa,GACbqT,mBAAoB,GACpBC,eAAe,GACfC,gBAAgB,GAChBtqB,SAAS,GACTic,cAAc,EACdxhB,SAAU,OACVugB,iBAAiB,EACjBsB,UAAU,EACV1f,KAAM,GACN2f,aAAa,EACbmJ,gBAAgB,GAChBxP,YAAY,IA3BY,E,oFAiC1B,IAAI/G,EAAMP,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8T,KAEjE,GAAGA,EAAK,CACN,IAAI/S,EAAQ+S,EAAK/S,OACjBwS,KAAK4Z,kBAAkBpsB,GACvBwS,KAAK5K,eAAe5H,GACpBwS,KAAK8Z,cAActsB,GACnBwS,KAAKia,gBAAgBzsB,GACrBwS,KAAKma,qBAAqB3sB,GAC1BwS,KAAKwH,mBAAmBha,GACxBwS,KAAKsM,eAAe/L,GACpBP,KAAKd,SAAS,CAAC1R,OAAQA,EAAO+S,KAAKA,IAErCP,KAAK6J,mBAAqB7J,KAAK6J,mBAAmBlK,KAAKK,Q,gDAG/B6N,GACvB7N,KAAKsM,eAAeuB,EAAItN,Q,kFAkDZ/S,GAAQ,IAAD,OACpB2O,GAAuB,iBAAiB,CAAC3O,WACxC9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAI3J,EAAU,EAAKpR,MAAMoR,SACzBA,EAAU0L,EAASjS,KAAKwD,OAAO,GAC/B,EAAK6Q,SAAS,CAAC9N,SAAUA,QAG7BhR,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,wCAIErV,GAAQ,IAAD,OACvB2O,GAAuB,wBAAwB,CAAC3O,WAC/C9N,MAAK,SAAAod,GAEJ,GADA5c,QAAQC,IAAI2c,GACiB,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIygB,EAAoB,EAAKx7B,MAAMw7B,mBACnCA,EAAoB1e,EAASjS,KAAKwD,OAClC,EAAK6Q,SAAS,CAACsc,mBAAoBA,QAGvCp7B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,oCAIFrV,GAAQ,IAAD,OACnB2O,GAAuB,oBAAoB,CAAC3O,WAC3C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,EAASjS,MACpB,IAAI4wB,EAAgB,EAAKz7B,MAAMy7B,eAC3BhE,EAAe3a,EAASjS,KAAKwD,OAAO,GACxCnO,QAAQC,IAAI,eAAes3B,GAC3BgE,EAAgBhE,EAAal1B,OAC7B,EAAK2c,SAAS,CAACuc,iBAAehE,qBAGlCr3B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,sCAIArV,GAAQ,IAAD,OACrB2O,GAAuB,qBAAqB,CAAC3O,WAC5C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAI2gB,EAAiB,EAAK17B,MAAM07B,gBAChCA,EAAiB5e,EAASjS,KAAKwD,OAC/B,EAAK6Q,SAAS,CAACwc,gBAAiBA,QAGpCt7B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,2CAIKrV,GAAQ,IAAD,OAC1B2O,GAAuB,4BAA4B,CAAC3O,WACnD9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAI4gB,EAAuB,EAAK37B,MAAM27B,sBACtCA,EAAuB7e,EAASjS,KAAKwD,OAAO,GAC5C,EAAK6Q,SAAS,CAACyc,sBAAuBA,QAG1Cv7B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCASGrV,GAAQ,IAAD,OACxB2O,GAAuB,oBAAoB,CAAC3O,WAC3C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,EAASjS,MACpB,IAAIyc,EAAcxK,EAASjS,KAAKwD,OAAO,GACnC9K,EAAa+jB,EAAY/jB,YAAY,GAAGA,YACxCq4B,EAAYtU,EAAYtO,iBACxBxV,EAAU8jB,EAAY9jB,SACtB0V,EAAiBoO,EAAYpO,gBAC7BxD,EAAY4R,EAAY5R,UAC5B,EAAKwJ,SAAS,CAACoI,YAAYA,EAChB/jB,cACAq4B,aACAp4B,WACA0V,kBACAxD,cAEX,EAAK+jB,mBAAmBnS,OAG5BlnB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCA0II,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAgHCpV,GAAO,IAAD,OACnBD,EAASwS,KAAKhgB,MAAMwN,OAEX,KAATC,GACAutB,KACCC,WAAWxtB,EAAMkO,IACjBjc,MAAK,SAAAmL,GACJ,IAAI4hB,EAAehd,EAAc,SAAU,EAAKzP,MAAM2oB,WAClD,EAAKzJ,SAAS,CAAEuN,aAAcA,EAAca,SAAS,IACrD,EAAKyN,eAAelwB,EAAK3L,SAAUsO,MAExCpN,OAAM,SAAAyiB,GAAG,OAAI3iB,QAAQG,MAAMwiB,Q,+BAmGxB,IAAD,OACP,OACE,yBAAK3V,UAAU,WACf,kBAAC,GAAW8S,KAAKvT,OACjB,yBAAKS,UAAU,cAQb,yBAAKA,UAAU,IACf8S,KAAKhgB,MAAMmoB,YACT,kBAAC,GAAD,CACEA,YAAanI,KAAKhgB,MAAMmoB,YACxBQ,UAAW3I,KAAKhgB,MAAM2oB,UACtBjZ,UAAWsQ,KAAKhgB,MAAM0P,UACtBmZ,YAAmC,IAAtB7I,KAAKhgB,MAAMgS,OAAe,EAAQ,GAAK,EACpDiX,UAAiC,IAAtBjJ,KAAKhgB,MAAMgS,OAAe,SAAW,QAChD+W,aAAoC,IAAtB/I,KAAKhgB,MAAMgS,OAAe,MAAQ,MAChDgX,cAAqC,IAAtBhJ,KAAKhgB,MAAMgS,OAAe,MAAQ,MACjD6X,mBAAoB7J,KAAK6J,qBAEzB,KAIV,yBAAK3c,UAAU,0BAGhB,yBAAKA,UAAU,kBAEb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,mCACd,yBAAKA,UAAU,wBAAwB+U,MAAO,CAAC4Z,SAAS,WACxD,yBAAM/Q,IAAK9K,KAAKhgB,MAAMysB,aAAcxK,MAAO,CAAC+I,MAAM,OAAO,gBAAiB,SAAUqH,IAAI,WAExF,yBAAKnlB,UAAU,IACf,yBAAKA,UAAU,IACD,yBAAKA,UAAU,IAC1B,2BAAQK,KAAK,OACEiU,SAAUxB,KAAKoI,kBAAkBzI,KAAKK,KAAM,GAC5C6L,OAAO,UACPnhB,MAAM,KAER,0BAAMwC,UAAU,sBAPhC,MADA,OAWA,yBAAKA,UAAU,gBACf,2BAAG,uBAAGA,UAAU,2DAA8D8S,KAAKhgB,MAAMgB,UAAzF,IAAqGgf,KAAKhgB,MAAMkB,UAC9G,2BAAG,uBAAGgM,UAAU,gEAAmE8S,KAAKhgB,MAAMuD,aAC9F,2BAAG,uBAAG2J,UAAU,2DAAhB,cACA,2BAAG,uBAAGA,UAAU,+DAAkE8S,KAAKhgB,MAAMM,OAC7F,2BAAG,uBAAG4M,UAAU,4DAA+D8S,KAAKhgB,MAAMwD,UAC1F,2BAAG,uBAAG0J,UAAU,gDACH8S,KAAKhgB,MAAMuD,YACM,kBAACue,GAAA,EAAD,CACAC,QAAQ,gCACNnT,QAASoR,KAAK+Z,6BAA6Bpa,KACzCK,OAGH,0BAAM9S,UAAU,gBANjB,mBAUE,kBAAC4U,GAAA,EAAD,CAAQlT,QAASoR,KAAK+Z,6BAA6Bpa,KAChDK,MAEK9S,UAAU,2BAChB,0BAAMA,UAAU,gBAJlB,mBASZ,GADD8S,KAAKhgB,MAAM+5B,6BAER,kBAAC,GAAD,CACElD,8BACE7W,KAAK+Z,6BAEPxZ,KACEP,KAAKhgB,MAAMugB,KAEb+G,YACEtH,KAAKhgB,MAAMsnB,cAIf,OA0C9B,yBAAKpa,UAAU,eAEb,yBAAKA,UAAU,kDAEX,wBAAIA,UAAU,gBAAd,UAGC,yBAAKA,UAAU,gBACd,wBAAI+U,MAAO,CAAC,aAAc,SAAS,4BACpC,iCAAM,yBAAKA,MAAO,CAAC,eAAgB,UAA7B,IAAwC,2BAAO1U,KAAK,OAAOiU,SAAUxB,KAAKmb,YAAYxb,KAAKK,QAC/F,uBAAG9S,UAAU,sEADf,MAEE,4BACG,2BAAG,2BAAI8S,KAAKhgB,MAAMwV,aADrB,KAHD,OAQF,yBAAKtI,UAAU,gBACb,wBAAIA,UAAU,cAAa,2BACzB8S,KAAKhgB,MAAMuV,UAAa,kBAAC,KAAD,CACRwU,SAAU/J,KAAKhgB,MAAMuV,UACrBwmB,WAAY,iBAAM,mBAFV,oBAKM,KANL,YAOb,2BACX/b,KAAKhgB,MAAMuV,UACE,uBAAG3G,QAASoR,KAAKqb,WAAW1b,KAAKK,OAAjC,iBAA2D,KAC3D,gCAOpB,yBAAK9S,UAAU,kDACf,wBAAIA,UAAU,gBAAd,aACU,yBAAKA,UAAU,gBACb,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,gCACR7U,UAAU,mBAEV0B,QAASoR,KAAK0Z,uBAAuB/Z,KAAKK,OAJ5C,mBAQc,GADfA,KAAKhgB,MAAM05B,uBAEM,kBAAC,GAAD,CACEnL,wBACEvO,KAAK0Z,uBAEPnZ,KACEP,KAAKhgB,MAAMugB,KAEb2O,cACElP,KAAKhgB,MAAM0wB,kBAIjC,IAGJ1Q,KAAKhgB,MAAMg8B,qCAAuChc,KAAKhgB,MAAMi8B,kBAAkBlO,KAAI,SAACljB,EAAM+H,GAAP,OAC/E,yBAAK1F,UAAU,gBACD,wBAAIA,UAAU,cAAa,4BACzB,uBAAG0B,QAAS,EAAKwrB,uBAAuBza,KAAK,EAAK9U,IAC1C,0BAAMqC,UAAU,gBAG1B,wBAAIA,UAAU,gBAAe,uBAAGA,UAAU,yCACvCvE,IAAO0K,SAASxI,EAAK5I,UAAU,KAAKiiB,OAAO,eAAe,IAD7D,MAEarZ,EAAK3I,QAAS,IAAIyG,IAAO0K,SAASxI,EAAK3I,QAAQ,KAAKgiB,OAAO,eAAe,0BAAMhX,UAAU,2BAAhB,YAEvF,+DAKvB,yBAAKA,UAAU,kDACN,yBAAKA,UAAU,gBACb,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,gCACR7U,UAAU,mBAEV0B,QAASoR,KAAK2Z,wBAAwBha,KAAKK,OAJ7C,oBAQc,GADfA,KAAKhgB,MAAM25B,wBAEM,kBAAC,GAAD,CACExF,yBACEnU,KAAK2Z,wBAEPpZ,KACEP,KAAKhgB,MAAMugB,KAEb8T,iBACErU,KAAKhgB,MAAMq0B,mBAIjC,IAER,wBAAInnB,UAAU,gBAAd,mBACI8S,KAAKhgB,MAAMw7B,oBAAsBxb,KAAKhgB,MAAMw7B,mBAAmBzN,KAAI,SAACljB,EAAM+H,GAAP,OAC/D,yBAAK1F,UAAU,gBACD,wBAAIA,UAAU,cAAa,2BAAIrC,EAAK3H,YAAT,MAAyB2H,EAAK1H,cACvD,uBAAGyL,QAAS,EAAKyrB,wBAAwB1a,KAAK,EAAK9U,IAC3C,0BAAMqC,UAAU,gBAG1B,wBAAIA,UAAU,gBAAe,uBAAGA,UAAU,yCACvCvE,IAAO0K,SAASxI,EAAK5I,UAAU,KAAKiiB,OAAO,eAAe,IAD7D,MAEarZ,EAAK3I,QAAS,IAAIyG,IAAO0K,SAASxI,EAAK3I,QAAQ,KAAKgiB,OAAO,eAAe,0BAAMhX,UAAU,2BAAhB,YAEvF,iCAKzB,yBAAKA,UAAU,kDACJ,yBAAKA,UAAU,gBACb,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,gCACR7U,UAAU,mBAEV0B,QAASoR,KAAK6Z,oBAAoBla,KAAKK,OAJzC,mBAOgC,GAAjCA,KAAKhgB,MAAM65B,oBACA,kBAAC,GAAD,CACEvC,qBACEtX,KAAK6Z,oBAEPtZ,KACEP,KAAKhgB,MAAMugB,KAEbkX,aACEzX,KAAKhgB,MAAMy3B,eAIf,IAGpB,wBAAIvqB,UAAU,gBAAe,uBAAGA,UAAU,kDAA1C,UACI8S,KAAKhgB,MAAMy7B,gBAAkBzb,KAAKhgB,MAAMy7B,eAAe1N,KAAI,SAACljB,EAAM+H,GAAP,OACvD,yBAAK1F,UAAU,gBACD,wBAAIA,UAAU,cAAa,2BAAIrC,EAAK6sB,UAAT,MAAuB7sB,EAAK0sB,QACrD,uBAAG3oB,QAAS,EAAK0rB,oBAAoB3a,KAAK,EAAK9U,IACvC,0BAAMqC,UAAU,gBAG1B,+DAO3B,yBAAKA,UAAU,kDACF,yBAAKA,UAAU,gBACb,kBAAC4U,GAAA,EAAD,CACEC,QAAQ,gCACR7U,UAAU,mBAEV0B,QAASoR,KAAKga,qBAAqBra,KAAKK,OAJ1C,oBAOiC,GAAlCA,KAAKhgB,MAAMg6B,qBACF,kBAAC,GAAD,CACE3E,sBACErV,KAAKga,qBAEPzZ,KACEP,KAAKhgB,MAAMugB,KAEbgV,cACEvV,KAAKhgB,MAAMu1B,gBAIf,IAGlB,wBAAIroB,UAAU,gBAAe,uBAAGA,UAAU,kDAA1C,WACI8S,KAAKhgB,MAAM07B,iBAAmB1b,KAAKhgB,MAAM07B,gBAAgB3N,KAAI,SAACljB,EAAM+H,GAAP,OACzD,yBAAK1F,UAAU,gBACD,wBAAIA,UAAU,cAAa,2BAAIrC,EAAKsM,YAAT,MAAyBtM,EAAKwM,gBACvD,uBAAGzI,QAAS,EAAK2rB,qBAAqB5a,KAAK,EAAK9U,IACxC,0BAAMqC,UAAU,gBAG1B,wBAAIA,UAAU,gBAAe,uBAAGA,UAAU,yCACvCvE,IAAO0K,SAASxI,EAAK5I,UAAU,KAAKiiB,OAAO,eAAe,IAD7D,MAEarZ,EAAK3I,QAAS,IAAIyG,IAAO0K,SAASxI,EAAK3I,QAAQ,KAAKgiB,OAAO,eAAe,0BAAMhX,UAAU,2BAAhB,YAEvF,+DAQ3B,yBAAKA,UAAU,gCAAgC+U,MAAO,CAAC,gBAAiB,UAC3D,yBAAK/U,UAAU,gBACd8S,KAAKhgB,MAAM27B,sBAAsB,KAAO,kBAAC7Z,GAAA,EAAD,CACrCC,QAAQ,gCACR7U,UAAU,mBAEV0B,QAASoR,KAAKka,2BAA2Bva,KAAKK,OAJT,mBAQvB,GADjBA,KAAKhgB,MAAMk6B,2BAEQ,kBAAC,GAAD,CACEhE,4BACElW,KAAKka,2BAEP3Z,KACEP,KAAKhgB,MAAMugB,KAEb8V,oBACErW,KAAKhgB,MAAMq2B,sBAIf,IAItB,6BAAM,0BAAMpU,MAAO,CAAC,cAAe,IAAI,YAAa,OAAO6Z,MAAO,SAAS,uBAAG5uB,UAAU,kDAAlF,0BACoB,0BAAMolB,MAAM,YAAY4J,SAAS,KAAI,uBAAGttB,QAASoR,KAAKwa,2BAA2B7a,KAAKK,KAAKA,KAAKhgB,MAAM27B,wBACtG,0BAAMzuB,UAAU,iBAI1C,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAa,2BAAI8S,KAAKhgB,MAAM27B,uBAAyB3b,KAAKhgB,MAAM27B,sBAAsB1jB,8B,GA56BxFmG,aAq9BXmE,gBAvBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBkW,UAAWvnB,EAAM+R,KAAKT,kBACtB4c,QAASluB,EAAM0T,YAIQ,SAAA8O,GACzB,OAAOC,YACL,CACEpF,gCACAU,0BACAC,+BACAG,kCACAN,wBACAI,8BAEFuE,KAIWD,CAGbiX,IC7/BItS,IAFeC,0BAAeC,c,8MAIlClS,OAAS,WACP,EAAKzI,MAAM2Q,mBACX,EAAK3Q,MAAMuU,QAAQC,KAAK,M,0EAIxB,OACA,kBAACwG,GAAA,EAAD,CAAQC,OAAO,GAUb,kBAACD,GAAA,EAAOE,SAAR,KAYE,yBAAKza,UAAU,cACd8S,KAAKvT,MAAM8T,MAAkC,GAA1BP,KAAKvT,MAAM8T,KAAKpO,OAAc,kBAACsV,GAAA,EAAOG,KAAR,CAAaC,UAAQ,GACrE,kBAACxG,GAAA,EAAD,KACE,0BAAMnU,UAAU,qBAAhB,IAAqC,kBAAC0U,GAAA,EAAD,CAAMC,GAAG,oBAAT,YAEzB,KAChB,kBAAC8B,GAAA,EAAD,CAAKmE,WAAS,GASZ,kBAACjE,GAAA,EAAD,CAASjV,QAASoR,KAAK9K,QAAvB,kB,GA9CWkJ,cAwENmE,gBApBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBoB,YAAazS,EAAM+R,KAAKU,gBAID,SAAA+P,GACzB,OAAOC,YACL,CACErF,oBACAK,wBACAC,2BACAC,+BAEF6E,KAIWD,CAGb2E,IChDIkkB,IChDgBhtB,YDoCGlX,EAAUK,mBACdL,EAAUI,e,YAY7B,WAAYmF,GAAQ,IAAD,+BACjB,8CAAMA,KAkDR4+B,oBAAsB,SAAAtwB,GACpB,EAAKmE,SAAS,CACZosB,gBAAgB,IAGlB,EAAK7+B,MAAM8+B,2BAtDX,EAAKvrC,MAAQ,CAKTsrC,gBAAe,GAPF,E,oFAYfprC,QAAQC,WAAW6f,KAAKvT,MAAM++B,UAC9BtrC,QAAQC,IAAI6f,KAAKvT,MAAMe,QACRwS,KAAKvT,MAAM++B,SAC3BxrB,KAAKd,SAAS,CAACssB,SAASxrB,KAAKvT,MAAM++B,a,oCAI1BvT,GACV/3B,QAAQC,IAAI,oBAAqB83B,GACjCjY,KAAKiY,OAASA,I,kCAGNC,GACRh4B,QAAQC,IAAI,oBAAqB+3B,K,mCAGxBA,GACTh4B,QAAQC,IAAI,oBAAqB+3B,K,wCAGnBA,GACdh4B,QAAQC,IAAI,iBAAkB+3B,K,qCAGnBA,GACXh4B,QAAQC,IAAI,kBAAmB+3B,K,oCAGrBC,EAAMtW,GAChB3hB,QAAQC,IAAR,4BAAiCg4B,EAAjC,eAA4CtW,M,mCAI5C3hB,QAAQC,IAAI,iB,+BAgBU6f,KAAKhgB,MAAnBuf,UAGR,OAFCrf,QAAQC,IAFE6f,KAEOvT,MAAM++B,UAGtB,kBAACrlB,GAAA,EAAD,CACAqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMsrC,eACjBllB,OAAQpG,KAAKqrB,oBAAoB1rB,KAAKK,KAAM,SAC5CqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,UAIF,kBAACiZ,GAAA,EAAMI,KAAP,KACIvG,KAAKhgB,MAAMwrC,SAAe,kBAAC,KAAD,CACZpT,UAAU,EACVtN,IAAK9K,KAAKhgB,MAAMwrC,SAEhBxgB,MAAM,MACND,OAAO,MACPxd,KAAK,aACL8qB,QAASrY,KAAKsY,cAAc3Y,KAAKK,MACjCuY,OAAQvY,KAAKwY,YAAY7Y,KAAKK,MAC9ByY,QAASzY,KAAK0Y,aAAa/Y,KAAKK,MAChC2Y,aAAc3Y,KAAK4Y,kBAAkBjZ,KAAKK,MAC1C6Y,UAAW7Y,KAAK8Y,eAAenZ,KAAKK,MACpC+Y,SAAU/Y,KAAKgZ,cAAcrZ,KAAKK,MAClCiZ,MAAOjZ,KAAKkZ,WAAWvZ,KAAKK,QAC3B,0BAEf,kBAACmG,GAAA,EAAMwF,OAAP,W,GArGcvN,cA+GxBgtB,GAAY9oB,KAAWzC,KAAXyC,CAAqB8oB,IACjC,IAgBe7oB,gBAhBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,eAII,SAAAmR,GACzB,OAAOC,YACL,CAAElF,wBAAsBD,2BACxBkF,KAMWD,CAGb6oB,IE5FIK,IA9BO,kBAAC,EAAD,CAAiBh/B,YAAO,GAAKA,QAC7B,kBAAC,EAAD,CAAiBA,YAAO,GAAKA,Q,YA8BxC,WAAYA,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KA8ER+S,aAAe,SAAC3U,EAAKmH,GACnB,IAAI2I,EAAS9P,EAAK8P,SAOdwR,EAAQ,CACVxR,WACAC,MARQ,EAAK5a,MAAM4a,MASnBC,YARchQ,EAAK2C,OASnBsN,KARO,EAAK9a,MAAMwN,OASlBuN,OARU/I,EASVsC,UARa,EAAK7H,MAAM8T,KAAK/S,QAWjB,KAAXmN,GAA4B,OAAXA,EAChBwB,GAAuB,eAAegQ,GACrCzsB,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKI,sBAAsB,EAAKnb,MAAM4a,UAOzCxa,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,MAGhB1G,GAAuB,eAAegQ,GACrCzsB,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,QAChB,EAAKI,sBAAsB,EAAKnb,MAAM4a,UAOzCxa,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,OA1HU,EAkI5BuJ,gBAAkB,WAChBntB,OAAOotB,SAAS,IAAK,GAErB,EAAKnN,SAAS,CAAEkN,iBAAkB,EAAKpsB,MAAMosB,mBArInB,EAwI5BE,eAAiB,SAAAzhB,GAEf,GAAIA,EAAM,CACR,IAAI2C,EAAS3C,EAAK2C,OACdzL,EAAU8I,EAAK9I,QACff,EAAY6J,EAAK7J,UACjBE,EAAW2J,EAAK3J,SAGhBqrB,EAAU1hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAC/C+L,EAAU3hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAE/CzS,GACDnD,EAAK7J,UAAY6J,EAAK7J,UAAY,IACnC,KACC6J,EAAK3J,SAAW2J,EAAK3J,SAAW,IAC/BurB,EAAe5hB,EAAKoQ,eACpBwR,IACFA,EAAehd,EAAc,SAAUgd,IAEzC,IAAIC,EAAa7hB,EAAK6hB,WAClBA,IACFA,EAAajd,EAAc,WAAYid,IAEzC,IAAI7gB,EAAWhB,EAAKgB,SACpB,EAAKqT,SAAS,CACZsN,UACAzqB,UACAf,YACAE,WACAsM,SACAif,eACAC,aACAH,UACA1gB,WACAmC,WA3KsB,EAiL5Byf,mBAAqB,SAAA7a,GACnB,IAAI4a,EAAwB,EAAKxtB,MAAMwtB,uBACpCA,EAAuB5a,KACzB4a,EAAuB5a,GAAvB,oBAAqD4a,EAAuB5a,GAAvB,qBAAuD4a,EAAuB5a,GAAvB,oBAC7G,EAAKsM,SAAS,CACZsO,uBAAwB,EAAKxtB,MAAMwtB,0BAtLX,EA0L5BR,4BAA8B,SAAAC,GAC5B/sB,QAAQC,IAAI8sB,GACZ,EAAK/N,SAAS,CACZ+N,qBAAsBA,EACtBC,6BAA8B,EAAKltB,MAAMktB,+BA9LjB,EAoM5BC,eAAiB,WACf,IAAI3f,EAAS,EAAKxN,MAAMwN,OACxB,EAAKf,MAAM4Q,6BAA6B7P,IAtMd,EAsN5B4f,eAAiB,WACf,EAAKlO,SAAS,CACZmO,cAAe,EAAKrtB,MAAMqtB,gBAxNF,EA4N5BpO,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SA7NxB,EAiO5BghC,iBAAmB,SAAA7gC,GACjB,EAAK4B,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,0BACVpiB,MAAO,CACLwN,OAAQ3C,EAAK2C,WAnOjB,EAAKxN,MAAQ,CACXktB,6BAA6B,EAC7BD,qBAAsB,GAEtBK,SAAS,EACTC,SAAS,EACTC,uBAAwB,GACxBC,oBAAoB,EACpBrc,SAAS,GACTic,cAAc,EACdxhB,SAAU,OACVugB,iBAAiB,EACjBsB,UAAU,EACV1f,KAAM,GACN2f,aAAa,GAhBW,E,oFAsB1B,IAAIpN,EAAMP,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8T,KACjE,GAAGA,EAAK,CACN,IAAI/S,EAAQ+S,EAAK/S,OACjBwS,KAAKd,SAAS,CAAC1R,OAAQA,EAAO+S,KAAKA,EAAKpO,OAAOoO,EAAKpO,SAEtD,IAAIw5B,EAAW3rB,KAAKvT,MAAMvN,SAASc,MAAM2rC,UACzCzrC,QAAQC,IAAIwrC,GACTA,IAC4B,GAA1B3rB,KAAKvT,MAAM8T,KAAKpO,OACjB6N,KAAK7E,sBAAsBwwB,EAAUhzB,WAErCqH,KAAK5E,iBAAiBuwB,EAAUhzB,WAElCqH,KAAK4rB,sBAAsBD,M,4CAITE,GACnB7rB,KAAKd,SAAS,CACb2sB,eAAeA,EACfzpC,YAAaypC,EAAezpC,YAC5BD,MAAO0pC,EAAe1pC,MACtByY,MAAMixB,EAAelzB,c,4CAKHiC,GAAO,IAAD,OAC1BuB,GAAuB,wBAAwB,CAACvB,UAC/Clb,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIyS,EAAwB,EAAKxtB,MAAMwtB,uBACvCA,EAAwB1Q,EAASjS,KAAKwD,OAEtC,EAAK6Q,SAAS,CAACsO,uBAAwBA,QAG3CptB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,uCAICjI,GAAO,IAAD,OACrBuB,GAAuB,mBAAmB,CAACvB,UAC1Clb,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIyS,EAAwB,EAAKxtB,MAAMwtB,uBACvCA,EAAwB1Q,EAASjS,KAAKwD,OAEtC,EAAK6Q,SAAS,CAACsO,uBAAwBA,QAG3CptB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCA8HI,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,+BAyBR,IAAIxD,EAAMW,KAClB,OA+LA,yBAAK9S,UAAU,WACd,kBAAC,iBAAD,CACGgU,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEZ,kBAAC,GAAWyT,KAAKvT,OACf,yBAAKS,UAAU,cAGjB,yBAAKA,UAAU,0BAEb,yBAAKA,UAAU,kBAkBZ8S,KAAKhgB,MAAMwtB,wBAA0BxN,KAAKhgB,MAAMwtB,uBAAuBO,KAAI,SAASljB,EAAM+H,GACvF,OACE,yBACEzI,IAAKyI,EACL1F,UAAU,iBACV2Z,GAAI,WAAahc,EAAK2C,QAEtB,yBAAKN,UAAU,2CACZrC,EAAKoQ,eACJ,yBACE6P,IAAKjgB,EAAKoQ,eACVoX,IAAI,GACJnlB,UAAU,mBAGZ,yBAAKA,UAAU,cACb,0BAAMA,UAAU,yBAItB,yBAAKA,UAAU,mDACb,yBAAKA,UAAU,uEACb,yBAAKA,UAAU,UACb,4BACGrC,EAAK7J,UACF6J,EAAK7J,UACL,KACC6J,EAAK3J,SAAW2J,EAAK3J,SAAW,IACjC,MAEN,2BAAI2J,EAAKvK,OACT,2BAAIuK,EAAK+wB,aAGV,yBAAK1uB,UAAU,UACd,4BACGrC,EAAKtH,YAAY,IAAMsH,EAAKtH,YAAY,GAAGA,YAAcsH,EAAKtH,YAAY,GAAGA,YAAa,MAE5FsH,EAAKtI,QAAUsI,EAAKtI,OAAOwrB,KAAI,SAAA+C,GAAI,OAAM,uBAAG5jB,UAAU,2BACGoB,EAAewiB,EAAK4G,UAAU,QAG1F,yBAAKxqB,UAAU,+BACY,GAA1BmS,EAAK5S,MAAM8T,KAAKpO,OACb,4BAAQvD,QAASyQ,EAAKG,aAAaG,KAC3BN,EACAxU,EACA,MAENqC,UAAU,4BALZ,OAWF,4BAAQ0B,QAASyQ,EAAKoO,mBAAmB9N,KACvCN,EACAzM,GAEA1F,UAAU,4BAJZ,SAUI,GADHrC,EAAK4iB,mBAEA,kBAAC,GAAD,CACE8d,wBACElsB,EAAKoO,mBAEP+d,SACE3gC,EAAK2gC,SAEPh+B,OAAQ3C,EAAK2C,SAGf,GAlCR,YAsCE,4BAAQoB,QAASyQ,EAAKqsB,iBAAiB/rB,KACrCN,EACAxU,GAEAqC,UAAU,4BAJZ,WAUA,kBAAC8gB,GAAA,EAAD,CACE9gB,UAAU,iBACV/K,MAAO,0BAAM+K,UAAU,gBACvB2Z,GAAG,KAEH,kBAACoH,GAAA,EAAD,KAME,uBAAG/gB,UAAU,oBANf,cASA,kBAAC+gB,GAAA,EAAD,CACEgd,SAAU,kBACR5rB,EAAK5S,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,eACVpiB,MAAO,CAAEkrC,YAAargC,OAI1B,uBAAGqC,UAAU,sBARf,gBAUA,kBAAC+gB,GAAA,EAAD,CACEgd,SAAU,kBACR5rB,EAAK5S,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,sBACVpiB,MAAO,CAAEmrC,aAActgC,EAAK2C,YAIhC,uBAAGN,UAAU,+BAAgC,IAR/C,uBAYA,kBAAC+gB,GAAA,EAAD,KAOE,uBAAG/gB,UAAU,sBAPf,2B,GAzkBFkR,cA8oBXmE,gBAvBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBkW,UAAWvnB,EAAM+R,KAAKT,kBACtB4c,QAASluB,EAAM0T,YAIQ,SAAA8O,GACzB,OAAOC,YACL,CACEpF,gCACAU,0BACAC,+BACAG,kCACAN,wBACAI,8BAEFuE,KAIWD,CAGbkpB,ICxrBIK,IAZmB5kC,EAAUK,mBACdL,EAAUI,e,YAY7B,WAAYmF,GAAQ,IAAD,+BACjB,8CAAMA,KAmGR6f,eAAiB,SAAAzhB,GAEf,GAAIA,EAAM,CACR,IAAI2C,EAAS3C,EAAK2C,OACdzL,EAAU8I,EAAK9I,QACff,EAAY6J,EAAK7J,UACjBE,EAAW2J,EAAK3J,SAGhBqrB,EAAU1hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAC/C+L,EAAU3hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAE/CzS,GACDnD,EAAK7J,UAAY6J,EAAK7J,UAAY,IACnC,KACC6J,EAAK3J,SAAW2J,EAAK3J,SAAW,IAC/BurB,EAAe5hB,EAAKoQ,eACpBwR,IACFA,EAAgBA,GAElB,IAAIC,EAAa7hB,EAAK6hB,WAClBA,IACFA,EAAcA,GAEhB,IAAI7gB,EAAWhB,EAAKgB,SACpB,EAAKqT,SAAS,CACZsN,UACAzqB,UACAf,YACAE,WACAsM,SACAif,eACAC,aACAH,UACA1gB,WACAmC,WAvIa,EA4InBukB,uBAAyB,SAAAxX,GAEvB,EAAKmE,SAAS,KA9IG,EAmJnBN,iBAAmB,WACjB,OAAO,EAAK5e,OApJK,EAuJnB6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAzJZ,EAsLnB8sB,sBAAwB,SAAA/gC,GACnBA,GACD,EAAKqU,SAAS,CACTpG,YAAYjO,EAAKiO,YACjB3W,MAAQ0I,EAAK1I,MACbqS,UAAU3J,EAAK2J,UACfpS,YAAcyI,EAAKzI,YACnBmW,aAAe1N,EAAK0N,aACpBC,cAAgB3N,EAAK2N,cACrBC,cAAgB5N,EAAK4N,cACrBvZ,SAAU2L,EAAK3L,SACfqD,OAAOsI,EAAKtI,OACZmW,SAAS7N,EAAK6N,SACdC,UAAU9N,EAAK8N,aAnML,EAwMnBsG,aAAe,SAAAtT,GACb,IAAMwT,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAC7DsD,EAAOmR,EAAOnR,KAEpB,EAAKkR,SAAL,eACGlR,EAAOtD,KA9MO,EAkNnB8kB,kBAAoB,SAAAvtB,GAClB,EAAKwtB,iBAAiB,CAAExtB,eAnNP,EAsNnBytB,gBAAkB,SAAAxtB,GAChB,EAAKutB,iBAAiB,CAAEvtB,aAvNP,EA0NnButB,iBAAmB,YAA6B,IAA1BxtB,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC/BhC,QAAQC,IAAI+B,GACZD,EAAYA,GAAa,EAAKjC,MAAMiC,UACpCC,EAAUA,GAAW,EAAKlC,MAAMkC,QAC5BD,GAAaC,GACXD,EAAU0tB,QAAQztB,KACpBA,EAAUD,GAGd,EAAKid,SAAS,CAAEjd,YAAWC,aAnOV,EAmPnBkd,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GAElBgf,EAAKrf,MAAM61B,cAGfx1B,EAIDgf,EAAKG,gBAHPH,EAAKH,SAAS,CAAEK,WAAW,IACvBF,EAAKG,oBA5PI,EAqUnBqU,gBAAkB,WAChB,EAAK3U,SAAS,CACZ4U,aAAc,EAAK9zB,MAAM8zB,eAvUV,EA4UnBiY,wBAA0B,SAAAxnB,GACrBA,EAASO,OAAS5d,EAAU0B,MAC3B,EAAKsW,SAAS,CAAC8sB,mBAAmB,IAEpC,EAAK9sB,SAAS,CAAC8sB,mBAAmB,IAEpC,EAAK9sB,SAAS,CACZ3b,YAAaghB,KAnVE,EAwVnBuR,qBAAuB,SAAAvR,GACrB,EAAKrF,SAAS,CACZhgB,SAAUqlB,KA1VK,EA8VnB4S,mBAAqB,SAAA5S,GACnB,EAAKrF,SAAS,CACZ3c,OAAQgiB,KAhWO,EAqWnB0nB,yBAA2B,SAAAlxB,GACzB,EAAKmE,SAAS,CACZgtB,qBAAqB,IAGvB,EAAKz/B,MAAM0/B,gCAxWX,EAAKnsC,MAAQ,CACXuf,WAAW,EACXtd,UAAW,GACXC,QAAS,GACTkyB,sBAAsB,EACtB5mB,OAAQ,GACRwmB,YAAY,EACZ/G,qBAAsB,GACtBO,uBAAwB,GACxBtqB,YAAY,GACZC,aAAa,GACb2zB,gBAAgB,GAChBkV,mBAAkB,EAClBE,qBAAoB,EACpBvzB,UAAU,GACV2c,cAAe,GACfkC,WAAW,GACXrB,aAAc,CAAC,CACPzrB,MAAO,EACPoa,MAAO,UACP,CACEpa,MAAO,EACPoa,MAAO,UACP,CACEpa,MAAO,EACPoa,MAAO,WAKrB,EAAKlG,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKC,eAAiBC,KAASC,aAC7B,GAYA,IAaF,EAAKjJ,mBACL,EAAKC,qBA7DY,E,oFAiEE,IAAD,OAClBqF,GAAuB,sBACtBzc,MAAK,SAAAod,GAEJ,GADA5c,QAAQC,IAAI2c,GACiB,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAI+b,EAAiB,EAAK92B,MAAM82B,gBAChCha,EAASjS,KAAKwD,OAAOsC,SAAQ,SAAS9F,GACnCisB,EAAgB7V,KAAK,CAAC6D,MAAOja,EAAKtH,YAAYmH,MAAMG,EAAK6rB,mBAG5D,EAAKxX,SAAS,CAAC4X,gBAAiBA,QAGnC12B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAIG,IAAD,OAChB1G,GAAuB,oBACtBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIyc,EAAY,EAAKx3B,MAAMw3B,WAC3B1a,EAASjS,KAAKwD,OAAOsC,SAAQ,SAAS9F,GACnC2sB,EAAWvW,KAAK,CAAC6D,MAAOja,EAAK6sB,UAAUhtB,MAAMG,EAAK2O,aAGrD,EAAK0F,SAAS,CAACsY,WAAYA,QAG/Bp3B,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,0CA+Db,IAAIrV,EAASwS,KAAKvT,MAAM2E,SAAS5D,OACjCwS,KAAKd,SAAS,CAAC1R,OAAOA,IAEvBtN,QAAQC,IAAI,+BAA+B6f,KAAKvT,MAAMwgB,sBACtDjN,KAAK4rB,sBAAsB5rB,KAAKvT,MAAMwgB,sBACtCjN,KAAKnJ,mBACLmJ,KAAKosB,yBAAyB5+B,K,+CAGPA,GAAQ,IAAD,OAC9B2O,GAAuB,2BAA2B,CAAC3O,WAClD9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIyS,EAAwB,EAAKxtB,MAAMwtB,uBACvCA,EAAwB1Q,EAASjS,KAAKwD,OAAO,GAC7C,EAAK6Q,SAAS,CAACsO,uBAAwBA,QAG3CptB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAoDI,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCAqBjB,IAAIzgB,EAAc4d,KAAKhgB,MAAMoC,YACzBmW,EAAelF,SAAS2M,KAAKhgB,MAAMuY,aAAa,IAChDC,EAAgBnF,SAAS2M,KAAKhgB,MAAMwY,cAAc,IAClDC,EAAgBpF,SAAS2M,KAAKhgB,MAAMyY,cAAc,IAClDvZ,EAAU,GACd8gB,KAAKhgB,MAAMd,SAASyR,SAAQ,SAASmgB,GACpC5xB,EAAS+hB,KAAK6P,EAAKhM,UAEpB,IAAIviB,EAAS,GACbyd,KAAKhgB,MAAMuC,OAAOoO,SAAQ,SAASmgB,GAClCvuB,EAAO0e,KAAK,CAACzH,QAAQsX,EAAKpmB,MAAMgtB,UAAU5G,EAAKhM,WAGhD,IAAI3iB,EAAQ6d,KAAKhgB,MAAMuD,aAAeyc,KAAKhgB,MAAMuD,YAAYuhB,QAAU5d,EAAU0B,MAAOoX,KAAKhgB,MAAMuD,YAAYuhB,MAAO9E,KAAKhgB,MAAMmC,MAC7HmW,EAAS0H,KAAKhgB,MAAMuD,aAAeyc,KAAKhgB,MAAMuD,YAAYuhB,QAAU5d,EAAU0B,MAAQoX,KAAKhgB,MAAMuD,YAAYmH,MAAO,KAEnH8C,EAASwS,KAAKhgB,MAAMwN,OACpBkL,EAAWsH,KAAKvT,MAAM8T,KAAK/S,OAI3B3C,EAAO,CACT1I,QACAmW,UACA9K,SACApL,cACAuW,UARcqH,KAAKhgB,MAAM2Y,UASzBJ,eACAC,gBACAC,gBACAvZ,WACAwZ,WACAnW,UAGE8c,EAAOW,KAENA,KAAKhgB,MAAM2Y,WAAsC,KAAzBqH,KAAKhgB,MAAM2Y,UActCwD,GAAuB,2BAA4BtR,GAChDnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAK4sB,yBAAyB,QAC9B5sB,EAAKH,SAAS,CAAEK,WAAW,QAG9Bnf,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,MAtBhB8b,GAAuB,oBAAqBtR,GACzCnL,MAAK,SAAAod,GACyB,YAAzBA,EAASjS,KAAKkQ,SAChBsE,EAAKH,SAAS,CAAEK,WAAW,IAC3BnT,EAAiB,yBACjBiT,EAAK4sB,yBAAyB,YAGjC7rC,OAAM,SAAAC,GACLgf,EAAKH,SAAS,CAAEK,WAAW,IAC3Brf,QAAQC,IAAIE,Q,+BA2DI2f,KAAKhgB,MAAnBuf,UAMCS,KAAKhgB,MAAMqsC,eACRrsB,KAAKwB,SAoCjB,OACE,kBAAC2E,GAAA,EAAD,CACAqE,OAAO,QACPtE,KAAMlG,KAAKhgB,MAAMksC,oBACjB9lB,OAAQpG,KAAKisB,yBAAyBtsB,KAAKK,KAAM,SACjDqG,SAAS,SACTC,UAAU,GAEV,kBAAC,iBAAD,CACEpF,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,wBAIF,kBAACiZ,GAAA,EAAMI,KAAP,KACA,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACnB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IAER,kBAAC/P,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,gBACnC,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,gBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEA,UAAU,eACVc,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMuD,YAClBie,SAAUxB,KAAK+rB,wBACfnmB,QAAS5F,KAAKhgB,MAAM82B,gBACpBvV,YAAY,yDAGftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,kBAGrB,GAAhC1B,KAAKhgB,MAAMgsC,kBACR,kBAAC3qB,GAAA,EAAD,CACIgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,UAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,eAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,cACZvT,KAAK,QACLtD,MAAOsV,KAAKhgB,MAAMmC,MAClBqf,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,WAGxD,KACA,kBAACL,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,gBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,qBAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEgQ,eAAe,WACf/P,YAAY,oBACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMoC,YAClBof,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,kBAIpD,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,WACpC,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,UAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEqpB,OAAK,EACLrpB,UAAU,eACVc,KAAK,SACLtD,MAAOsV,KAAKhgB,MAAMuC,OAClBif,SAAUxB,KAAKmX,mBACfvR,QAAS5F,KAAKhgB,MAAMw3B,WACpBjW,YAAY,kBAGftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,aAInD,kBAACL,GAAA,EAAD,CAAWnU,UAAW8S,KAAKnB,WAAW,aACrC,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,oBAGA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEA,UAAU,eACVqpB,OAAK,EACLvoB,KAAK,WACLtD,MAAOsV,KAAKhgB,MAAMd,SAClBsiB,SAAUxB,KAAK8V,qBACflQ,QAAS5F,KAAKhgB,MAAMm2B,aACpB5U,YAAY,yDAGftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,eAItD,kBAACL,GAAA,EAAD,CAAWnU,UAAU,gBACnB,kBAACikB,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GAAvC,cAGE,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,yBAAKlkB,UAAU,OACb,yBAAKA,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,gBACZvT,KAAK,gBACLtD,MAAOsV,KAAKhgB,MAAMwY,cAClBgJ,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEb,4BAAQpZ,MAAM,IAAd,WACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,OAEEuC,EACC+S,KAAKvT,MAAMiV,sBAAsB,0BAGrC,yBAAKxU,UAAU,cACf,kBAACoU,GAAA,EAAD,CACIgQ,eAAe,SACf/P,YAAY,gBACZvT,KAAK,gBACLtD,MAAOsV,KAAKhgB,MAAMyY,cAClB+I,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEZ,4BAAQpZ,MAAM,IAAd,WACD,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,GAAf,KACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,MACA,4BAAQA,MAAO,IAAf,WASP,kBAAC2W,GAAA,EAAD,CACEgQ,UAAU,uBACVnkB,UAAW8S,KAAKnB,WAAW,iBAE3B,kBAACsS,GAAA,EAAD,CAAKG,eAAgBC,KAAcH,GAAI,GACrC,kBAACG,GAAA,EAAD,+BAEF,kBAACJ,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACEC,YAAY,mBACZvT,KAAK,eACLtD,MAAOsV,KAAKhgB,MAAMuY,aAClBiJ,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,QAEX7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,oBA3L9D,WAiMI,kBAACyE,GAAA,EAAMwF,OAAP,KAEE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV8U,SAAUhC,KAAKhgB,MAAMuf,UACrB3Q,QAAUoR,KAAKhgB,MAAMuf,UAAgC,KAApBS,KAAKZ,cAErCY,KAAKhgB,MAAMuf,UAAY,iBAAmB,QAE7C,kBAACuC,GAAA,EAAD,CACEC,QAAQ,UACR7U,UAAU,mBACV0B,QAASoR,KAAKisB,yBAAyBtsB,KAAKK,KAAM,UAHpD,e,GA1nBoB5B,cAyoBhC0tB,GAAoBxpB,KAAWzC,KAAXyC,CAAqBwpB,IACzC,IAgBevpB,gBAhBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,eAII,SAAAmR,GACzB,OAAOC,YACL,CAAElF,wBAAsBD,2BACxBkF,KAMWD,CAGbupB,ICznBIQ,IA9BO,kBAAC,EAAD,CAAiB7/B,YAAO,GAAKA,QAC7B,kBAAC,EAAD,CAAiBA,YAAO,GAAKA,Q,YA8BxC,WAAYA,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,KA6CR2f,gBAAkB,WAChBntB,OAAOotB,SAAS,IAAK,GAErB,EAAKnN,SAAS,CAAEkN,iBAAkB,EAAKpsB,MAAMosB,mBAjDnB,EAoD5BE,eAAiB,SAAAzhB,GAEf,GAAIA,EAAM,CACR,IAAI2C,EAAS3C,EAAK2C,OACdzL,EAAU8I,EAAK9I,QACff,EAAY6J,EAAK7J,UACjBE,EAAW2J,EAAK3J,SAGhBqrB,EAAU1hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAC/C+L,EAAU3hB,EAAK0hB,QAAU1hB,EAAK0hB,QAAQ9L,OAAS,KAE/CzS,GACDnD,EAAK7J,UAAY6J,EAAK7J,UAAY,IACnC,KACC6J,EAAK3J,SAAW2J,EAAK3J,SAAW,IAC/BurB,EAAe5hB,EAAKoQ,eACpBwR,IACFA,EAAehd,EAAc,SAAUgd,IAEzC,IAAIC,EAAa7hB,EAAK6hB,WAClBA,IACFA,EAAajd,EAAc,WAAYid,IAEzC,IAAI7gB,EAAWhB,EAAKgB,SACpB,EAAKqT,SAAS,CACZsN,UACAzqB,UACAf,YACAE,WACAsM,SACAif,eACAC,aACAH,UACA1gB,WACAmC,WAvFsB,EA6F5Bkf,4BAA8B,SAAAvhB,GAC5B,EAAKuT,SAAS,CACZgO,6BAA8B,EAAKltB,MAAMktB,8BAGvC,EAAKltB,MAAMktB,8BACZ,EAAKhO,SAAS,CAAC+N,qBAAwB,OACvC,EAAKmf,yBAAyB,EAAKpsC,MAAMwN,UApGlB,EAwG5Bwf,4BAA8B,SAAAC,GAC5B/sB,QAAQC,IAAI8sB,GACZ,EAAK/N,SAAS,CACZ+N,qBAAsBA,EACtBC,6BAA8B,EAAKltB,MAAMktB,+BA5GjB,EAmH5BC,eAAiB,WACf,IAAI3f,EAAS,EAAKxN,MAAMwN,OACxB,EAAKf,MAAM4Q,6BAA6B7P,IArHd,EAqI5B4f,eAAiB,WACf,EAAKlO,SAAS,CACZmO,cAAe,EAAKrtB,MAAMqtB,gBAvIF,EA2I5BpO,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SA5IxB,EAgJ5B6hC,cAAgB,SAAA1hC,GACb,EAAK4B,MAAMuU,QAAQC,KAAK,CACvBmB,SAAU,yBACVpiB,MAAO,CACL2rC,UAAW9gC,MAlJf,EAAK7K,MAAQ,CACXktB,6BAA6B,EAC7BD,qBAAsB,GAEtBK,SAAS,EACTC,SAAS,EACTC,uBAAwB,GACxBpc,SAAS,GACTic,cAAc,EACdxhB,SAAU,OACVugB,iBAAiB,EACjBsB,UAAU,EACV1f,KAAM,GACN2f,aAAa,GAfW,E,oFAqB1B,IAAIpN,EAAMP,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8a,UAAWvH,KAAKvT,MAAM8T,KACjE,GAAGA,EAAK,CACN,IAAI/S,EAAQ+S,EAAK/S,OACjBwS,KAAKd,SAAS,CAAC1R,OAAQA,EAAO+S,KAAKA,EAAKpO,OAAQoO,EAAKpO,SACrD6N,KAAKosB,yBAAyB5+B,M,+CAITA,GAAQ,IAAD,OAC9B2O,GAAuB,2BAA2B,CAAC3O,WAClD9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAIyS,EAAwB,EAAKxtB,MAAMwtB,uBACvCA,EAAwB1Q,EAASjS,KAAKwD,OAEtC,EAAK6Q,SAAS,CAACsO,uBAAwBA,QAG3CptB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAgFI,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,+BAyBR,IAAD,OACP,OACE,yBAAK3V,UAAU,WACd,kBAAC,GAAW8S,KAAKvT,OAChB,yBAAKS,UAAU,cACb,yBAAKA,UAAU,0BAEN,yBAAK+U,MAAO,CAAC,gBAAiB,OAAOnW,SAAU,WAAYoW,MAAO,QAAQ,cAAe,SACxF,uBAAItT,QAASoR,KAAKkN,4BAA4BvN,KACtCK,MAEF9S,UACI,2CAEJ+U,MAAO,CAAEuqB,OAAQ,YAChB,IACD,0BAAMt/B,UAAU,cARtB,yBAYU,GADH8S,KAAKhgB,MAAMktB,4BAEN,kBAAC,GAAD,CACEif,6BACEnsB,KAAKkN,4BAEPD,qBACEjN,KAAKhgB,MAAMitB,qBAEb7b,SAAU4O,KAAKhgB,MAAMugB,OAGvB,GAIhC,yBAAKrT,UAAU,QACP,yBAAKA,UAAU,UACb,wBAAIA,UAAU,SAAd,wBACA,uBAAGA,UAAU,cAEf,yBAAKA,UAAU,6CACb,2BAAOA,UAAU,mCACf,+BACE,4BACE,oCACA,wCACA,wBAAIA,UAAU,cAAd,kBACA,wBAAIA,UAAU,cAAd,cACA,wBAAIA,UAAU,cAAd,aAGJ,+BACC8S,KAAKhgB,MAAMwtB,wBAA0BxN,KAAKhgB,MAAMwtB,uBAAuBO,KAAI,SAACljB,EAAM+H,GAAP,OACxE,4BACE,4BAAK/H,EAAK1I,OACV,4BAAK0I,EAAK3L,SAAS,IACnB,wBAAIgO,UAAU,cAAcrC,EAAK0N,cACjC,wBAAIrL,UAAU,cAAcrC,EAAK4N,eACjC,wBAAIvL,UAAU,cACd,kBAAC4U,GAAA,EAAD,CAAQlT,QAAS,EAAK29B,cAAc5sB,KAAK,EAAK9U,IACb,GAAxB,EAAK4B,MAAM8T,KAAKpO,OAAY,aAAe,2BA1DhE,U,GA7JuBiM,cA6PdmE,gBAvBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBkW,UAAWvnB,EAAM+R,KAAKT,kBACtB4c,QAASluB,EAAM0T,YAIQ,SAAA8O,GACzB,OAAOC,YACL,CACEpF,gCACAU,0BACAC,+BACAG,kCACAN,wBACAI,8BAEFuE,KAIWD,CAGb+pB,ICtQI1O,IA9BO,kBAAC,EAAD,CAAiBnxB,YAAO,GAAKA,QAC7B,kBAAC,EAAD,CAAiBA,YAAO,GAAKA,WA6BflN,UAAUs+B,cAAgBt+B,UAAUu+B,oBAC3Dv+B,UAAUw+B,iBAAmBx+B,UAAUy+B,iBAErCyO,G,YACJ,WAAYhgC,EAAOkS,GAAU,IAAD,wBAC1B,8CAAMlS,KAEDzM,MAAQ,CACT+3B,MAAO,CACHjN,IAAK,2CACLkN,OAAQ,mDAEd9K,6BAA6B,EAC7BD,qBAAsB,GAEtBK,SAAS,EACTC,SAAS,EACTC,uBAAwB,GACxBpc,SAAS,GACTic,cAAc,EACdxhB,SAAU,OACVugB,iBAAiB,EACjBsB,UAAU,EACV1f,KAAM,GACN2f,aAAa,EACbuQ,WAAU,GArBc,OAgC1B,EAAK7E,OAAS,aACd,EAAK8E,eAAiB,kDACtB,EAAKhF,WALoBiF,wBAMzB,EAAKC,GAAG,KACR,EAAKC,SAAW,IAAIhZ,KACpB,EAAKiZ,cAAgB,EAAKD,SAASE,UACnC,EAAKC,KAAO,GACZ,EAAKC,eAAiB,GACtB,EAAKC,aAAc,EACnB,EAAKC,KAAO,EACZ,EAAK7U,SAAW,EAAKwU,cAAcvhB,WAAa,QAChD,EAAK6hB,SAAW,GAChB,EAAKC,SAAS,KACd,EAAK7G,OAAO,KAEZ,EAAK8G,iBAAmB,CAEpBhH,OAAO,GAjDe,E,oFAyD1B9X,SAASG,KAAKvT,UAAUC,IAAI,eAC5BmT,SAASG,KAAKvT,UAAUC,IAAI,kBAC5BmT,SAASG,KAAKvT,UAAUG,OAAO,QAC/BiT,SAASG,KAAKvT,UAAUG,OAAO,eAC/B9M,QAAQC,IAAI6f,KAAKvT,MAAMvN,UACvB8gB,KAAK4N,eAAe5N,KAAKvT,MAAMvN,SAASc,MAAMwN,U,qCAIjCA,GAAQ,IAAD,OACpB2O,GAAuB,oBAAoB,CAAC3O,WAC3C9N,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC7a,QAAQC,IAAI2c,GACZ,IAAI4vB,EAAgB5vB,EAASjS,KAAKwD,OAAO,GACrCs+B,EAAsBD,EAAcE,yBACpCC,EAAeH,EAAcI,kBAGnC,EAAK5tB,SAAS,CAACytB,uBAAqBE,sBAIrCzsC,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,gDAIUgL,M,0CAMvB,GAAI+P,GAAJ,CAID,IAAMqB,EAAShf,SAASif,cAAc,UAEtCD,EAAOnU,IAAM,0EACbmU,EAAOE,OAAQ,EAEflf,SAASG,KAAKgf,YAAYH,GACtBjf,KAAKvT,MAAMyhB,QAAQzc,iBACrBvR,QAAQC,IAAI6f,KAAKvT,MAAMyhB,QAAQzc,sBAV/B4tB,MAAM,sF,oCAiBIpH,GACZ/3B,QAAQC,IAAI,oBAAqB83B,GACjCjY,KAAKiY,OAASA,I,kCAGNC,GACRh4B,QAAQC,IAAI,oBAAqB+3B,K,mCAGxBA,GACTh4B,QAAQC,IAAI,oBAAqB+3B,K,wCAGnBA,GACdh4B,QAAQC,IAAI,iBAAkB+3B,K,qCAGnBA,GACXh4B,QAAQC,IAAI,kBAAmB+3B,K,oCAGrBC,EAAMtW,GAChB3hB,QAAQC,IAAR,4BAAiCg4B,EAAjC,eAA4CtW,M,mCAI5C3hB,QAAQC,IAAI,iB,+BASZ,OACI,yBAAK+M,UAAU,WACf,kBAAC,GAAW8S,KAAKvT,OACf,yBAAKS,UAAU,cACjB,6BACU,kBAAC,KAAD,CACEkrB,UAAU,EACVtN,IAAK9K,KAAKhgB,MAAM2sC,qBAChB3U,OAAQhY,KAAKhgB,MAAM+3B,MAAMC,OACzBhN,MAAM,MACND,OAAO,MACPsN,QAASrY,KAAKsY,cAAc3Y,KAAKK,MACjCuY,OAAQvY,KAAKwY,YAAY7Y,KAAKK,MAC9ByY,QAASzY,KAAK0Y,aAAa/Y,KAAKK,MAChC2Y,aAAc3Y,KAAK4Y,kBAAkBjZ,KAAKK,MAC1C6Y,UAAW7Y,KAAK8Y,eAAenZ,KAAKK,MACpC+Y,SAAU/Y,KAAKgZ,cAAcrZ,KAAKK,MAClCiZ,MAAOjZ,KAAKkZ,WAAWvZ,KAAKK,QAG9B,kBAAC,KAAD,CACEoY,UAAU,EACVtN,IAAK9K,KAAKhgB,MAAM8sC,kBAChB9U,OAAQhY,KAAKhgB,MAAM+3B,MAAMC,OACzBhN,MAAM,MACND,OAAO,MACPsN,QAASrY,KAAKsY,cAAc3Y,KAAKK,MACjCuY,OAAQvY,KAAKwY,YAAY7Y,KAAKK,MAC9ByY,QAASzY,KAAK0Y,aAAa/Y,KAAKK,MAChC2Y,aAAc3Y,KAAK4Y,kBAAkBjZ,KAAKK,MAC1C6Y,UAAW7Y,KAAK8Y,eAAenZ,KAAKK,MACpC+Y,SAAU/Y,KAAKgZ,cAAcrZ,KAAKK,MAClCiZ,MAAOjZ,KAAKkZ,WAAWvZ,KAAKK,e,GAjLrB5B,aAiNZmE,gBAtBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnB6c,QAASluB,EAAM0T,YAIQ,SAAA8O,GACzB,OAAOC,YACL,CACEpF,gCACAU,0BACAC,+BACAG,kCACAN,wBACAI,8BAEFuE,KAIWD,CAGbkqB,I,UChRIvlB,I,OAFeC,0BAAeC,c,8MAIlClS,OAAS,WACP,EAAKzI,MAAM2Q,mBACX,EAAK3Q,MAAMuU,QAAQC,KAAK,M,0EAIxB,OACA,kBAACwG,GAAA,EAAD,CAAQC,OAAO,GAUb,kBAACD,GAAA,EAAOE,SAAR,KAYE,yBAAKza,UAAU,cAOf,kBAACyW,GAAA,EAAD,CAAKmE,WAAS,GAEZ,kBAACjE,GAAA,EAAD,WAAY,kBAACjC,GAAA,EAAD,CAAMC,GAAG,oBAAT,SAAZ,KAEA,kBAACgC,GAAA,EAAD,WAAY,kBAACjC,GAAA,EAAD,CAAMC,GAAG,iBAAT,OAAZ,KAUA,kBAACgC,GAAA,EAAD,CAASjV,QAASoR,KAAK9K,QAAvB,kB,GApDWkJ,cA8ENmE,gBApBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBoB,YAAazS,EAAM+R,KAAKU,gBAID,SAAA+P,GACzB,OAAOC,YACL,CACErF,oBACAK,wBACAC,2BACAC,+BAEF6E,KAIWD,CAGb2E,ICnFE3f,GAAqBL,EAAUK,mBAC/BD,GAAiBJ,EAAUI,eAEzBylC,G,YACJ,WAAYtgC,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,EAAOkS,KAsDfC,iBAAmB,WACjB,OAAO,EAAK5e,OAxDc,EA2D5B6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MA7DH,EAiE5BM,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GAC3BH,QAAQC,IAAI,QAASE,GAChBA,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAKG,oBAvEiB,EA4E5BP,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SA7ExB,EAgF5B+U,WAAa,SAAA9T,GACO,UAAdA,EAAMxB,MACRwB,EAAM+T,iBACN,EAAKN,iBAnFmB,EAoG5B4tB,UAAY,SAAArhC,GACK,EAAK3L,MAAMugB,KAAK5N,SACT,EAAK3S,MAAMitC,gBACzB,gBAER,GAA2B,KAAvBthC,EAAMwT,OAAOzU,MAAc,OAAO,GAvGtC,EAAK1K,MAAQ,CACXgB,UAAW,GACXE,SAAU,GACVqe,WAAW,EACX0tB,gBAAiB,CAAC,CAAE3sC,MAAO,KAC3B+rC,eAAgB,GAChBa,eAAgB,GAChBrrC,KAAM,GACN7B,MAAO,GACP8B,QAAS,GACTqrC,QAAS,IAEX,EAAK3tB,aAAe,EAAKA,aAAaG,KAAlB,iBAEpB,EAAKH,aAAe,EAAKA,aAAaG,KAAlB,iBACpB,EAAKf,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKytB,mBAAqB,EAAKA,mBAAmBztB,KAAxB,iBAC1B,EAAKC,eAAiBC,KAASC,aAC7B,CACE9e,UAAW,CAAC,WAAY,SAAWsG,GAAerG,WAClDC,SAAU,CAAC,SAAWoG,GAAerG,WACrCX,MAAO,kBAET,CACE,qBAAsBiH,GAAmBvG,UAAUT,SACnD,kBAAmBgH,GAAmBvG,UAAUC,UAChD,iBAAkBsG,GAAmBrG,SAASD,UAC9C,iBAAkBsG,GAAmBjH,MAAMC,SAC3C,cAAegH,GAAmBjH,MAAME,UA/BlB,E,mFAwC1B,GAHIwf,KAAKvT,MAAMsb,SACb/H,KAAKvT,MAAMsb,OAAX,MAA6B/H,KAAKvT,MAAM8T,KAAX,OAE3BP,KAAKvT,MAAM8T,KAAM,CACnB,IAAIA,EAAOP,KAAKvT,MAAMsb,OAAS/H,KAAKvT,MAAMsb,OAAS/H,KAAKvT,MAAM8T,KAC9DP,KAAKd,SAAS,CACZqB,KAAMA,EACNpf,gBAAiBof,EAAKvf,UACtBI,eAAgBmf,EAAKrf,WAEnB8e,KAAKvT,MAAM8T,MACbP,KAAKd,SAAS,CACZmuB,gBAAiBrtB,KAAKvT,MAAM4gC,qB,qCA8DlC,IAAIhuB,EAAOW,KACP1L,EAAY0L,KAAKhgB,MAAMugB,KAAK/S,OAE5BxM,EAAYgf,KAAKhgB,MAAMgB,UACvBE,EAAW8e,KAAKhgB,MAAMkB,SAEtBZ,GADW0f,KAAKhgB,MAAMugB,KAAK1U,SACpBmU,KAAKhgB,MAAMM,OACtBJ,QAAQC,IAAI,SAAU6f,KAAKhgB,OAU3Bmc,GAAuB,aATZ,CACT3O,OAAO,GACPxM,YACAE,WACAZ,QACA6R,OAXW,EAYXmC,cAIC5U,MAAK,SAAA4tC,GACAjuB,EAAKH,SAAS,CAAEK,WAAW,OAEhCnf,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,2CAKhB7C,KAAKd,SAAS,CAAEmuB,gBAAiBrtB,KAAKhgB,MAAMqtC,kBAC5CrtB,KAAKvT,MAAM8gC,yB,+BAIX,IACQhuB,EAAcS,KAAKhgB,MAAnBuf,UAMCS,KAAKhgB,MAAMqsC,eACRrsB,KAAKwB,SAgCjB,OACE,6BACE,kBAAC2E,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAMqtC,gBACjBjnB,OAAQpG,KAAKotB,mBACb/mB,SAAS,SACTC,UAAU,GAEV,kBAACH,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,sBAIF,kBAACiZ,GAAA,EAAMI,KAAP,KACE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IACP,kBAAC/P,GAAA,EAAD,CACEnU,UAAS,6BAAwB8S,KAAKnB,WACpC,eAGF,kBAACsS,GAAA,EAAD,CAAKC,GAAI,GAAT,cACA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACE/T,KAAK,OACLS,KAAK,YACLuT,YAAY,aACZ7W,MAAOsV,KAAKhgB,MAAMgB,UAElBwgB,SAtEPxB,KAsEsBf,aAAaU,KAtEnCK,MAuEOyB,aAAa,MACbqC,UAAU,OAGX7W,EACC+S,KAAKvT,MAAMiV,sBAAsB,gBAIvC,kBAACL,GAAA,EAAD,CACEnU,UAAS,6BAAwB8S,KAAKnB,WACpC,cAGF,kBAACsS,GAAA,EAAD,CAAKC,GAAI,GAAT,aACA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACE/T,KAAK,OACLS,KAAK,WACLuT,YAAY,YACZ7W,MAAOsV,KAAKhgB,MAAMkB,SAElBsgB,SA7FPxB,KA6FsBf,aAAaU,KA7FnCK,MA8FOyB,aAAa,MACbqC,UAAU,OAEX7W,EACC+S,KAAKvT,MAAMiV,sBAAsB,eAIvC,kBAACL,GAAA,EAAD,CACEnU,UAAS,6BAAwB8S,KAAKnB,WAAW,WAEjD,kBAACsS,GAAA,EAAD,CAAKC,GAAI,GAAT,SACA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACE/T,KAAK,QACLS,KAAK,QACLuT,YAAY,SACZ7W,MAAOsV,KAAKhgB,MAAMM,MAClBktC,OAhHPxtB,KAgHoBgtB,UAAUrtB,KAhH9BK,MAiHOwB,SAjHPxB,KAiHsBf,aAAaU,KAjHnCK,MAkHOyB,aAAa,QAEdxU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,eAM1D,kBAACyE,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,gCACR7U,UAAU,mBACV8U,SAAUzC,EACV3Q,QAAU2Q,EAAgC,KAApBS,KAAKZ,cAE1BG,EAAY,aAAe,QAE9B,kBAACuC,GAAA,EAAD,CACEC,QAAQ,2BACR7U,UAAU,mBACV0B,QAASoR,KAAKotB,oBAHhB,gB,GAnRiBhvB,aA+S7B2uB,GAAiBzqB,KAAWzC,KAAXyC,CAAqByqB,IAEvBxqB,oBAhBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,eAII,SAAAmR,GACzB,OAAOC,YACL,CAAElF,wBAAsBD,2BACxBkF,KAMWD,CAGbwqB,ICxTIU,I,mBACJ,WAAYhhC,GAAQ,IAAD,+BACjB,8CAAMA,KAgDR6f,eAAiB,SAAAzhB,GACf,GAAIA,EAAM,CACR,IAAI2C,EAAS3C,EAAK2C,OAEdxM,EAAY6J,EAAK7J,UACjBE,EAAW2J,EAAK3J,SAEhBurB,EAAe5hB,EAAKoQ,eACpBwR,IACFA,EAAeA,GAEjB,IAAIC,EAAa7hB,EAAK6hB,WAClBA,IACFA,EAAajd,EAAc,WAAYid,IAEzC,EAAKxN,SAAS,CACZle,YACAE,WACAsM,SACAif,eACAC,iBArEa,EAqGnBghB,mBAAqB,SAAAp8B,GACnBA,EAAiB,MAAY,EAAK7E,MAAM8T,KAAX,MAC7B,IAAIotB,EAAyB,CACzBr8B,kBAAmBA,GAEvB,EAAK7E,MAAM6Q,uBAAuBqwB,GAClC,EAAKlhC,MAAMuU,QAAQC,KAAK,kBA3GP,EA8GnBhC,aAAe,SAAAtT,GACb,IAAI0T,EAAI,gBACJuuB,EAAcvuB,EAAKrf,MAAM4tC,YACvBzuB,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAE/DmjC,EADS1uB,EAAOnR,KACCe,MAAM,KAEvB++B,GADMD,EAAU,GACVA,EAAU,IAGhBhjC,EAAO,CACTgB,SAAUnB,EACV8C,OAHWqgC,EAAU,GAIrBj7B,MAAOk7B,GAGT3xB,GAAuB,mBAAoBtR,GACxCnL,MAAK,SAAAod,GACAA,GAAqC,YAAzBA,EAASjS,KAAKkQ,QAC5BsE,EAAK5S,MAAM+Q,4BAA4B3S,MAG1CzK,OAAM,SAAAC,OACTutC,EAAYE,GAAKjiC,UAAY+hC,EAAYE,GAAKjiC,SAC9CwT,EAAKH,SAAS,CACZrT,UAAU,EACVkiC,WAAYH,KAzIG,EA6InBxlB,kBAAoB,SAACpW,EAAQrG,GAC3B,EAAKuT,SAAS,CAAEiJ,YAAa,KAC7B,IAAM1a,EAAO9B,EAAMwT,OAAOkJ,MAAM,GAC1Bva,EAAWL,EAAKO,KAChBsa,EAAW7a,EAAKF,KACtB,GAAIE,EAAM,CACR,EAAKugC,mBACL,IAAIzlB,EAAS,IAAIC,WACjBD,EAAOE,cAAc9c,EAAMwT,OAAOkJ,MAAM,IACxCE,EAAOG,OAAS,SAAA/c,GACd,EAAKuT,SAAS,CACZiJ,YAAaxc,EAAMwT,OAAO9Q,OAC1Bsa,UAAW7a,EACX4B,UAAW4Y,EACXtW,OAAQA,OA3JG,EAuNnB+oB,eAAiB,SAACxtB,EAAMU,EAAYT,GAClC,GAAa,IAATD,EAAY,CACd,IAAI0N,EAAiBhN,EACjBpD,EAAO,CACT2C,SACAyN,kBAEF,EAAKxO,MAAMqR,uBAAuB,CAAE7C,mBACpCkB,GAAuB,qBAAsBtR,GAG/C,GAAa,IAAT0C,EAAY,CACd,IAAImf,EAAaze,EACbpD,EAAO,CACT2C,SACAkf,cAEF,EAAKjgB,MAAMqR,uBAAuB,CAAE4O,eACpCvQ,GAAuB,mBAAoBtR,KAzO5B,EA+PnBojC,cAAgB,SAACpjC,EAAM+H,GACrB,IAAImN,EAAK,gBACTmuB,wBAAa,CACXC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACE,yBAAKlhC,UAAU,aACb,6CACA,+DACA,4BAAQ0B,QAASw/B,GAAjB,MACA,4BACEx/B,QAAS,WACP,IAAIpB,EAAS3C,EAAK2C,OAEd4D,EAAW,CACb5D,SACA6gC,YAHe,GAMjBlyB,GAAuB,oBAAqB/K,GAAU1R,MAAK,SAAAod,GACtDA,GAAYA,EAASjS,MAAgC,WAAxBiS,EAASjS,KAAKkQ,QAC5CgF,EAAMtT,MAAMmR,oBAAoBxM,GAC/Bg9B,IACDruB,EAAMuuB,iBAAiB9gC,IAEvB4gC,OAEDhuC,OAAM,SAAAC,GACPH,QAAQC,IAAI,MAAOE,QAlBzB,wBAxQS,EA+SnBkuC,kBAAoB,WAClB,EAAKrvB,SAAS,CACZsvB,aAAc,EAAKxuC,MAAMwuC,eAjTV,EAqTnBC,cAAgB,SAACC,EAAWC,GAC1B,GAAID,GAAaC,EAAU,CACzB,IAAI5uB,EAAK,gBACTmuB,wBAAa,CACXC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACE,yBAAKlhC,UAAU,aACb,4EACA,4BAAQ0B,QAASw/B,GAAjB,MACA,4BACEx/B,QAAS,WAKPuN,GAAuB,oBAJR,CACbuyB,YACAC,aAEoDjvC,MAAK,SAAAod,GACzD,GAAGA,GAAYA,EAASjS,MAAgC,WAAxBiS,EAASjS,KAAKkQ,OAAoB,CAChE,IAAI3J,EAAW,CACb5D,OAAQkhC,EACRC,YAEF5uB,EAAMtT,MAAMmR,oBAAoBxM,GAC/Bg9B,IACDruB,EAAMuuB,iBAAiBI,QAEvBN,OAEDhuC,OAAM,SAAAC,GACPH,QAAQC,IAAI,MAAOE,QAnBzB,yBA5TV,EAAKL,MAAQ,CACX0N,SAAU,GACV4f,SAAS,EACTC,SAAS,EACTpF,YAAa,GACbQ,UAAW,GACXjZ,UAAW,GACX29B,iBAAiB,EACjBuB,gBAAgB,EAChBF,UAAW,IAGb,EAAKhB,mBAAqB,EAAKA,mBAAmB/tB,KAAxB,iBAC1B,EAAKkK,mBAAqB,EAAKA,mBAAmBlK,KAAxB,iBAC1B,EAAK0tB,gBAAkB,EAAKA,gBAAgB1tB,KAArB,iBACvB,EAAKivB,eAAiB,EAAKA,eAAejvB,KAApB,iBACtBlV,EACE,WACA,EAAKgC,MAAMsb,OAAS,EAAKtb,MAAMsb,OAAS,EAAKtb,MAAM8T,MApBpC,E,oFAyBjBN,SAASG,KAAKvT,UAAUC,IAAI,eAC5BmT,SAASG,KAAKvT,UAAUC,IAAI,oB,0CAI5B,GAAIkT,KAAKvT,MAAM8T,KAAM,CACnBP,KAAKd,SAAS,CACZqB,KAAMP,KAAKvT,MAAM8T,OAGnB,IAAIqtB,EACF5tB,KAAKvT,MAAMsb,QAAU/H,KAAKvT,MAAMsb,OAAOpV,SACnCqN,KAAKvT,MAAMsb,OAAOpV,SAClBqN,KAAKvT,MAAM8T,KAAK5N,UAAY,GAElCqN,KAAKsM,eAAetM,KAAKvT,MAAM8T,MAC/BP,KAAK6uB,eAAejB,M,gDAIExH,GACxBpmB,KAAK8uB,qBAAqB1I,EAAUre,U,qCA6BvB6lB,GAAc,IAAD,OAGpBpgC,EAASwS,KAAKvT,MAAM8T,KAAK/S,OAE7B2O,GAAuB,mBAAoB,CAAE3O,WAC1C9N,MAAK,SAAAod,GAEJ,GADE5c,QAAQC,IAAI2c,GAEZA,GACyB,YAAzBA,EAASjS,KAAKkQ,QACd+B,EAASjS,KAAKwD,OAAOI,OAAS,EAC9B,CACDvO,QAAQC,IAAI2c,GACG,EAAK9c,MAAM4tC,YAEzBA,EAAc9wB,EAASjS,KAAKwD,OAC5B,EAAK6Q,SAAS,CAAE0uB,YAAaA,QAGhCxtC,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAiEA,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAICpV,GAAO,IAAD,OACnBD,EAASwS,KAAKhgB,MAAMwN,OACpBD,EAAOyS,KAAKhgB,MAAMgS,OAClBtE,EAAWsS,KAAKhgB,MAAM0N,SAEb,KAATD,IACO,IAATF,EACIyS,KAAKd,SAAS,CAAEoO,SAAS,EAAMb,aAAc,KAC7CzM,KAAKd,SAAS,CAAEqO,SAAS,EAAMb,WAAY,KAC/Cpf,EACEC,EACAC,EACAC,EACAC,GACA,SAACrN,EAAOgO,EAAQJ,GACd,IAAI5N,GAGAgO,EAAQ,CACV,GAAa,IAATd,EAAY,CACd,IAAIkf,EAAY,UAAMvlB,EAAUW,aAAhB,YACdX,EAAUO,eADI,YAEZwG,GACJ,EAAKiR,SAAS,CAAEuN,aAAcA,EAAca,SAAS,IAGvD,GAAa,IAAT/f,EAAY,CACd,IAAImf,EAAU,UAAMxlB,EAAUW,aAAhB,YACZX,EAAUO,eADE,YAEVwG,GAEJ,EAAKiR,SAAS,CAAEwN,WAAYA,EAAYa,SAAS,IAEnD,EAAKwN,eAAextB,EAAMU,EAAYT,GACtCtN,QAAQC,IAAI,uBAAwB8N,U,wCA8B5C+R,KAAKd,SAAS,CAAEmuB,iBAAkBrtB,KAAKhgB,MAAMqtC,kBAC7C,IAAIO,EACF5tB,KAAKvT,MAAMsb,QAAU/H,KAAKvT,MAAMsb,OAAOpV,SACnCqN,KAAKvT,MAAMsb,OAAOpV,SAClBqN,KAAKvT,MAAM8T,KAAK5N,UAAY,GAElCqN,KAAK6uB,eAAejB,K,qCAGPc,GACbxuC,QAAQC,IAAIuuC,GACZ1uB,KAAKd,SAAS,CACZ0vB,gBAAiB5uB,KAAKhgB,MAAM4uC,eAC5BF,gB,uCA2CalhC,GACf,IAAIogC,EAAc5tB,KAAKhgB,MAAM4tC,aAAe,GAC5CA,EAAY16B,OACV06B,EAAYz6B,WAAU,SAAAC,GAAI,OAAIA,EAAK5F,SAAW6F,SAAS7F,EAAQ,OAC/D,GAEFwS,KAAKd,SAAS,CAAE0uB,YAAaA,M,+BAmD7B,IAAIvuB,EAAOW,KACX,OACE,yBAAK9S,UAAU,WACb,kBAAC,GAAW8S,KAAKvT,OACf,yBAAKS,UAAU,cAGjB,yBAAKA,UAAU,0BAEb,yBAAKA,UAAU,kBAGb,yBAAKA,UAAU,6EAcb,4BACEA,UAAU,yCACV0B,QAASoR,KAAKqtB,iBAEd,0BAAMngC,UAAU,cAJlB,aAQD8S,KAAKhgB,MAAM4tC,aACV5tB,KAAKhgB,MAAM4tC,YAAY7f,KAAI,SAASljB,EAAM+H,GACxC,OACE,yBACEzI,IAAKyI,EACL1F,UAAU,iBACV2Z,GAAI,WAAahc,EAAK2C,QAEtB,yBAAKN,UAAU,2CACZrC,EAAKoQ,eACJ,yBACE6P,IAAKjgB,EAAKoQ,eACVoX,IAAI,GACJnlB,UAAU,mBAGZ,yBAAKA,UAAU,cACb,0BAAMA,UAAU,yBAItB,yBAAKA,UAAU,mDACb,yBAAKA,UAAU,uEACb,yBAAKA,UAAU,UACb,4BACGrC,EAAK7J,UACF6J,EAAK7J,UACL,KACC6J,EAAK3J,SAAW2J,EAAK3J,SAAW,IACjC,MAEN,2BAAI2J,EAAKvK,QAGX,yBAAK4M,UAAU,+BAEb,yBACEA,UACErC,EAAKgB,SACD,uBACA,iBAGN,2BAAOkjC,QAAQ,KAAf,UACA,yBAAK7hC,UAAU,QACb,2BACEK,KAAK,WACLS,KAAI,mBAAcnD,EAAK2C,OAAnB,YAA6BoF,GACjC4O,SAAUnC,EAAKJ,aACfiU,UAASroB,EAAKgB,SACdgb,GAAE,8BAAyBjU,KAE7B,yBAAK1F,UAAU,UACb,2BAAO6hC,QAAO,8BAAyBn8B,IACrC,gCAKR,4BACE1F,UAAU,2BACV0B,QAASyQ,EAAKquB,mBAAmB/tB,KAAKN,EAAMxU,IAF9C,iBAzBF,YAiCE,kBAACmjB,GAAA,EAAD,CACE9gB,UAAU,iBACV/K,MAAO,0BAAM+K,UAAU,gBACvB2Z,GAAG,KAEH,kBAACoH,GAAA,EAAD,CACEgd,SAAU5rB,EAAKuvB,eAAejvB,KAC5BK,KACAnV,EAAK2C,SAGP,uBAAGN,UAAU,oBANf,cASA,kBAAC+gB,GAAA,EAAD,CACEgd,SAAU,kBACR5rB,EAAK5S,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,eACVpiB,MAAO,CAAEkrC,YAAargC,OAI1B,uBAAGqC,UAAU,sBARf,gBAUA,kBAAC+gB,GAAA,EAAD,CACEgd,SAAU,kBACR5rB,EAAK5S,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,sBACVpiB,MAAO,CAAEmrC,aAActgC,EAAK2C,YAIhC,uBAAGN,UAAU,+BAAgC,IAR/C,uBAYA,kBAAC+gB,GAAA,EAAD,KAOE,uBAAG/gB,UAAU,sBAPf,cAaN,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,sBAAf,mBACkB,8BAAOrC,EAAKmkC,iBAK9B,yBAAK9hC,UAAU,aAAf,kBACiB,8BAAOrC,EAAKhI,wBAQ1Cmd,KAAKhgB,MAAMqtC,gBACV,kBAAC,GAAD,CACEA,gBAAiBrtB,KAAKhgB,MAAMqtC,gBAC5BE,qBAAsBvtB,KAAKqtB,kBAE3B,Y,GA3gBUjvB,cAuiBTmE,gBArBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBoB,YAAazS,EAAM+R,KAAKU,gBAID,SAAA+P,GACzB,OAAOC,YACL,CACEnF,0BACAD,gCACAG,+BACAI,uBACAE,2BAEF0E,KAIWD,CAGbkrB,ICtiBElmC,GAAqBL,EAAUK,mBAC/BD,GAAiBJ,EAAUI,eAEzBylC,G,YACJ,WAAYtgC,EAAOkS,GAAU,IAAD,+BAC1B,8CAAMlS,EAAOkS,KAyEf2F,oBAAsB,SAAAC,GACC,GAAlBA,EAAS7Z,OAKR,EAAKwU,SAAS,CAACsF,kBAAkB,IAMjC,EAAKtF,SAAS,CACduF,QAASF,KAvFa,EA4F5B3F,iBAAmB,WACjB,OAAO,EAAK5e,OA7Fc,EAgG5B6e,WAAa,SAAAC,GACX,OAAOC,KAAW,CAChB1e,OAAQ,EAAKoM,MAAMuS,QAAQF,MAlGH,EAsG5BM,aAAe,WACb,IAAIC,EAAI,gBACR,EAAK5S,MAAM6S,UAAS,SAASjf,GAC3BH,QAAQC,IAAI,QAASE,GAChBA,IACHgf,EAAKH,SAAS,CAAEK,WAAW,IAC3BF,EAAKG,oBA5GiB,EAiH5BP,aAAe,SAAAtT,GACb,EAAKuT,SAAL,eAAiBvT,EAAMwT,OAAOnR,KAAOrC,EAAMwT,OAAOzU,SAlHxB,EAqH5B+U,WAAa,SAAA9T,GACO,UAAdA,EAAMxB,MACRwB,EAAM+T,iBACN,EAAKN,iBAxHmB,EAyI5B4tB,UAAY,SAAArhC,GACK,EAAK3L,MAAMugB,KAAK5N,SACT,EAAK3S,MAAMitC,gBACzB,gBAER,GAA2B,KAAvBthC,EAAMwT,OAAOzU,MAAc,OAAO,GA5ItC,EAAK1K,MAAQ,CACXgB,UAAW,GACXE,SAAU,GACVqe,WAAW,EACX0tB,gBAAiB,CAAC,CAAE3sC,MAAO,KAC3B+rC,eAAgB,GAChBa,eAAgB,GAChBrrC,KAAM,GACN7B,MAAO,GACP8B,QAAS,GACTqrC,QAAS,GACTxoB,cAAc,IAEhB,EAAKnF,aAAe,EAAKA,aAAaG,KAAlB,iBAEpB,EAAKH,aAAe,EAAKA,aAAaG,KAAlB,iBACpB,EAAKf,iBAAmB,EAAKA,iBAAiBe,KAAtB,iBACxB,EAAKd,WAAa,EAAKA,WAAWc,KAAhB,iBAClB,EAAKytB,mBAAqB,EAAKA,mBAAmBztB,KAAxB,iBAC1B,EAAKC,eAAiBC,KAASC,aAC7B,CACE9e,UAAW,CAAC,WAAY,SAAWsG,GAAerG,WAClDC,SAAU,CAAC,SAAWoG,GAAerG,WACrCX,MAAO,kBAET,CACE,qBAAsBiH,GAAmBvG,UAAUT,SACnD,kBAAmBgH,GAAmBvG,UAAUC,UAChD,iBAAkBsG,GAAmBrG,SAASD,UAC9C,iBAAkBsG,GAAmBjH,MAAMC,SAC3C,cAAegH,GAAmBjH,MAAME,UAhClB,E,mFAyC1B,GAHIwf,KAAKvT,MAAMsb,SACb/H,KAAKvT,MAAMsb,OAAX,MAA6B/H,KAAKvT,MAAM8T,KAAX,OAE3BP,KAAKvT,MAAM8T,KAAM,CACnB,IAAIA,EAAOP,KAAKvT,MAAMsb,OAAS/H,KAAKvT,MAAMsb,OAAS/H,KAAKvT,MAAM8T,KAC9DP,KAAKd,SAAS,CACZqB,KAAMA,EACNpf,gBAAiBof,EAAKvf,UACtBI,eAAgBmf,EAAKrf,WAEnB8e,KAAKvT,MAAM8T,MACbP,KAAKd,SAAS,CACZmuB,gBAAiBrtB,KAAKvT,MAAM4gC,kBAIlCrtB,KAAKjJ,mB,uCAGU,IAAD,OACdoF,GAAuB,kBACtBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACrC,IAAI4J,EAAe,EAAK3kB,MAAM2kB,cAC9B7H,EAASjS,KAAKwD,OAAOsC,SAAQ,SAAS9F,GAEnC8Z,EAAc1D,KAAK,CAAC6D,MAAOja,EAAK4J,YAAY/J,MAAMG,EAAK2J,eAE1D,EAAK0K,SAAS,CAACyF,cAAeA,QAGlCvkB,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,qCA8Ed,IAAIxD,EAAOW,KACP1L,EAAY0L,KAAKhgB,MAAMugB,KAAK/S,OAE5BxM,EAAYgf,KAAKhgB,MAAMgB,UACvBE,EAAW8e,KAAKhgB,MAAMkB,SAEtBZ,GADW0f,KAAKhgB,MAAMugB,KAAK1U,SACpBmU,KAAKhgB,MAAMM,OAClBmU,EAAcuL,KAAKhgB,MAAMykB,SAAwC,IAA7BzE,KAAKhgB,MAAMykB,QAAQ/Z,MAAasV,KAAKhgB,MAAMykB,QAAQK,MAAO9E,KAAKhgB,MAAMyU,YACzGD,EAAWwL,KAAKhgB,MAAMykB,SAAwC,IAA7BzE,KAAKhgB,MAAMykB,QAAQ/Z,MAAcsV,KAAKhgB,MAAMykB,QAAQ/Z,MAAO,KAChGxK,QAAQC,IAAI,SAAU6f,KAAKhgB,OAY3Bmc,GAAuB,WAXZ,CACT3O,OAAO,GACPxM,YACAE,WACAZ,QACA6R,OAbW,EAcXqC,YACAC,cACAH,cAIC5U,MAAK,SAAA4tC,GACAjuB,EAAKH,SAAS,CAAEK,WAAW,OAGhCnf,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,2CAKhB7C,KAAKd,SAAS,CAAEmuB,gBAAiBrtB,KAAKhgB,MAAMqtC,kBAC5CrtB,KAAKvT,MAAM8gC,yB,+BAIX,IACQhuB,EAAcS,KAAKhgB,MAAnBuf,UAMCS,KAAKhgB,MAAMqsC,eACRrsB,KAAKwB,SAgCjB,OACE,6BACG,kBAAC,iBAAD,CACCN,UAAW,IACXhU,UAAU,0BACViU,eAAe,oBACfC,WAAY7U,IAEd,kBAAC4Z,GAAA,EAAD,CAEED,KAAMlG,KAAKhgB,MAAMqtC,gBACjBjnB,OAAQpG,KAAKotB,mBACb/mB,SAAS,SACTC,UAAU,GAEV,kBAACH,GAAA,EAAMe,OAAP,CAAcuD,aAAW,GACvB,kBAACtE,GAAA,EAAMuE,MAAP,CAAaxd,UAAU,wBAAvB,sBAIF,kBAACiZ,GAAA,EAAMI,KAAP,KACE,kBAACqB,GAAA,EAAD,CAAMsJ,YAAU,EAAChkB,UAAU,eACzB,kBAACikB,GAAA,EAAD,CAAKC,GAAI,IAEP,kBAAC/P,GAAA,EAAD,CAAWnU,UAAS,6BAAwB8S,KAAKnB,WAAW,aAC9D,2BAAO3R,UAAU,cAAjB,eAEM,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,+BAChB,kBAAC,KAAD,CACEA,UAAU,eACVc,KAAK,UACLtD,MAAOsV,KAAKhgB,MAAMykB,QAClBjD,SAAUxB,KAAKsE,oBACfsB,QAAS5F,KAAKhgB,MAAM2kB,cACpBpD,YAAY,oBAIftU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,cAGnB,IAAhC1B,KAAKhgB,MAAMwkB,iBAEZ,kBAACnD,GAAA,EAAD,CAAWnU,UAAS,6BAAwB8S,KAAKnB,WAAW,iBACxD,2BAAO3R,UAAU,cAAjB,gBAEA,kBAACoU,GAAA,EAAD,CACI/T,KAAK,OACLgU,YAAY,eACZvT,KAAK,cACLtD,MAAOsV,KAAKhgB,MAAMyU,YAClB+M,SAAUxB,KAAKf,aACfwC,aAAa,MACbqC,UAAU,OAGb7W,EAAc+S,KAAKvT,MAAMiV,sBAAsB,iBACrC,KAEf,kBAACL,GAAA,EAAD,CACEnU,UAAS,6BAAwB8S,KAAKnB,WACpC,eAGF,kBAACsS,GAAA,EAAD,CAAKC,GAAI,GAAT,cACA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACE/T,KAAK,OACLS,KAAK,YACLuT,YAAY,aACZ7W,MAAOsV,KAAKhgB,MAAMgB,UAElBwgB,SAjHPxB,KAiHsBf,aAAaU,KAjHnCK,MAkHOyB,aAAa,MACbqC,UAAU,OAGX7W,EACC+S,KAAKvT,MAAMiV,sBAAsB,gBAIvC,kBAACL,GAAA,EAAD,CACEnU,UAAS,6BAAwB8S,KAAKnB,WACpC,cAGF,kBAACsS,GAAA,EAAD,CAAKC,GAAI,GAAT,aACA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACE/T,KAAK,OACLS,KAAK,WACLuT,YAAY,YACZ7W,MAAOsV,KAAKhgB,MAAMkB,SAElBsgB,SAxIPxB,KAwIsBf,aAAaU,KAxInCK,MAyIOyB,aAAa,MACbqC,UAAU,OAEX7W,EACC+S,KAAKvT,MAAMiV,sBAAsB,eAIvC,kBAACL,GAAA,EAAD,CACEnU,UAAS,6BAAwB8S,KAAKnB,WAAW,WAEjD,kBAACsS,GAAA,EAAD,CAAKC,GAAI,GAAT,SACA,kBAACD,GAAA,EAAD,CAAKC,GAAI,GACP,kBAAC9P,GAAA,EAAD,CACE/T,KAAK,QACLS,KAAK,QACLuT,YAAY,SACZ7W,MAAOsV,KAAKhgB,MAAMM,MAClBktC,OA3JPxtB,KA2JoBgtB,UAAUrtB,KA3J9BK,MA4JOwB,SA5JPxB,KA4JsBf,aAAaU,KA5JnCK,MA6JOyB,aAAa,QAEdxU,EAAc+S,KAAKvT,MAAMiV,sBAAsB,eAM1D,kBAACyE,GAAA,EAAMwF,OAAP,KACE,kBAAC7J,GAAA,EAAD,CACEC,QAAQ,gCACR7U,UAAU,mBACV8U,SAAUzC,EACV3Q,QAAU2Q,EAAgC,KAApBS,KAAKZ,cAE1BG,EAAY,aAAe,QAE9B,kBAACuC,GAAA,EAAD,CACEC,QAAQ,2BACR7U,UAAU,mBACV0B,QAASoR,KAAKotB,oBAHhB,gB,GAxWiBhvB,aAoY7B2uB,GAAiBzqB,KAAWzC,KAAXyC,CAAqByqB,IAEvBxqB,oBAhBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,eAII,SAAAmR,GACzB,OAAOC,YACL,CAAElF,wBAAsBD,2BACxBkF,KAMWD,CAGbwqB,IChZIkC,G,YACJ,WAAYxiC,GAAQ,IAAD,+BACjB,8CAAMA,KAgDR6f,eAAiB,SAAAzhB,GACf,GAAIA,EAAM,CACR,IAAI2C,EAAS3C,EAAK2C,OAEdxM,EAAY6J,EAAK7J,UACjBE,EAAW2J,EAAK3J,SAEhBurB,EAAe5hB,EAAKoQ,eACpBwR,IACFA,EAAeA,GAEjB,IAAIC,EAAa7hB,EAAK6hB,WAClBA,IACFA,EAAajd,EAAc,WAAYid,IAEzC,EAAKxN,SAAS,CACZle,YACAE,WACAsM,SACAif,eACAC,iBArEa,EAoGnBghB,mBAAqB,SAAAp8B,GACnBA,EAAiB,MAAY,EAAK7E,MAAM8T,KAAX,MAC7B,IAAIotB,EAAyB,CACzBr8B,kBAAmBA,GAEvB,EAAK7E,MAAM6Q,uBAAuBqwB,GAClC,EAAKlhC,MAAMuU,QAAQC,KAAK,6BA1GP,EA6GnBhC,aAAe,SAAAtT,GACb,IAAI0T,EAAI,gBACJuuB,EAAcvuB,EAAKrf,MAAM4tC,YACvBzuB,EAASxT,EAAMwT,OACfzU,EAAwB,aAAhByU,EAAO5R,KAAsB4R,EAAO+T,QAAU/T,EAAOzU,MAE/DmjC,EADS1uB,EAAOnR,KACCe,MAAM,KAEvB++B,GADMD,EAAU,GACVA,EAAU,IAGhBhjC,EAAO,CACTgB,SAAUnB,EACV8C,OAHWqgC,EAAU,GAIrBj7B,MAAOk7B,GAGT3xB,GAAuB,mBAAoBtR,GACxCnL,MAAK,SAAAod,GACAA,GAAqC,YAAzBA,EAASjS,KAAKkQ,QAC5BsE,EAAK5S,MAAM+Q,4BAA4B3S,MAG1CzK,OAAM,SAAAC,OACTutC,EAAYE,GAAKjiC,UAAY+hC,EAAYE,GAAKjiC,SAC9CwT,EAAKH,SAAS,CACZrT,UAAU,EACVkiC,WAAYH,KAxIG,EA4InBxlB,kBAAoB,SAACpW,EAAQrG,GAC3B,EAAKuT,SAAS,CAAEiJ,YAAa,KAC7B,IAAM1a,EAAO9B,EAAMwT,OAAOkJ,MAAM,GAC1Bva,EAAWL,EAAKO,KAChBsa,EAAW7a,EAAKF,KACtB,GAAIE,EAAM,CACR,EAAKugC,mBACL,IAAIzlB,EAAS,IAAIC,WACjBD,EAAOE,cAAc9c,EAAMwT,OAAOkJ,MAAM,IACxCE,EAAOG,OAAS,SAAA/c,GACd,EAAKuT,SAAS,CACZiJ,YAAaxc,EAAMwT,OAAO9Q,OAC1Bsa,UAAW7a,EACX4B,UAAW4Y,EACXtW,OAAQA,OA1JG,EAsNnB+oB,eAAiB,SAACxtB,EAAMU,EAAYT,GAClC,GAAa,IAATD,EAAY,CACd,IAAI0N,EAAiBhN,EACjBpD,EAAO,CACT2C,SACAyN,kBAEF,EAAKxO,MAAMqR,uBAAuB,CAAE7C,mBACpCkB,GAAuB,qBAAsBtR,GAG/C,GAAa,IAAT0C,EAAY,CACd,IAAImf,EAAaze,EACbpD,EAAO,CACT2C,SACAkf,cAEF,EAAKjgB,MAAMqR,uBAAuB,CAAE4O,eACpCvQ,GAAuB,mBAAoBtR,KAxO5B,EA8PnBojC,cAAgB,SAACpjC,EAAM+H,GACrB,IAAImN,EAAK,gBACTmuB,wBAAa,CACXC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACE,yBAAKlhC,UAAU,aACb,6CACA,+DACA,4BAAQ0B,QAASw/B,GAAjB,MACA,4BACEx/B,QAAS,WACP,IAAIpB,EAAS3C,EAAK2C,OAEd4D,EAAW,CACb5D,SACA6gC,YAHe,GAMjBlyB,GAAuB,oBAAqB/K,GAAU1R,MAAK,SAAAod,GACtDA,GAAYA,EAASjS,MAAgC,WAAxBiS,EAASjS,KAAKkQ,QAC5CgF,EAAMtT,MAAMmR,oBAAoBxM,GAC/Bg9B,IACDruB,EAAMuuB,iBAAiB9gC,IAEvB4gC,OAEDhuC,OAAM,SAAAC,GACPH,QAAQC,IAAI,MAAOE,QAlBzB,wBAvQS,EA8SnBkuC,kBAAoB,WAClB,EAAKrvB,SAAS,CACZsvB,aAAc,EAAKxuC,MAAMwuC,eAhTV,EAoTnBC,cAAgB,SAACC,EAAWC,GAC1B,GAAID,GAAaC,EAAU,CACzB,IAAI5uB,EAAK,gBACTmuB,wBAAa,CACXC,SAAU,YAAkB,IAAfC,EAAc,EAAdA,QACX,OACE,yBAAKlhC,UAAU,aACb,4EACA,4BAAQ0B,QAASw/B,GAAjB,MACA,4BACEx/B,QAAS,WAKPuN,GAAuB,oBAJR,CACbuyB,YACAC,aAEoDjvC,MAAK,SAAAod,GACzD,GAAGA,GAAYA,EAASjS,MAAgC,WAAxBiS,EAASjS,KAAKkQ,OAAoB,CAChE,IAAI3J,EAAW,CACb5D,OAAQkhC,EACRC,YAEF5uB,EAAMtT,MAAMmR,oBAAoBxM,GAC/Bg9B,IACDruB,EAAMuuB,iBAAiBI,QAEvBN,OAEDhuC,OAAM,SAAAC,GACPH,QAAQC,IAAI,MAAOE,QAnBzB,yBA3TV,EAAKL,MAAQ,CACX0N,SAAU,GACV4f,SAAS,EACTC,SAAS,EACTpF,YAAa,GACbQ,UAAW,GACXjZ,UAAW,GACX29B,iBAAiB,EACjBuB,gBAAgB,EAChBF,UAAW,IAGb,EAAKhB,mBAAqB,EAAKA,mBAAmB/tB,KAAxB,iBAC1B,EAAKkK,mBAAqB,EAAKA,mBAAmBlK,KAAxB,iBAC1B,EAAK0tB,gBAAkB,EAAKA,gBAAgB1tB,KAArB,iBACvB,EAAKivB,eAAiB,EAAKA,eAAejvB,KAApB,iBACtBlV,EACE,WACA,EAAKgC,MAAMsb,OAAS,EAAKtb,MAAMsb,OAAS,EAAKtb,MAAM8T,MApBpC,E,oFAyBjBN,SAASG,KAAKvT,UAAUC,IAAI,eAC5BmT,SAASG,KAAKvT,UAAUC,IAAI,oB,0CAI5B,GAAIkT,KAAKvT,MAAM8T,KAAM,CACnBP,KAAKd,SAAS,CACZqB,KAAMP,KAAKvT,MAAM8T,OAGnB,IAAIqtB,EACF5tB,KAAKvT,MAAMsb,QAAU/H,KAAKvT,MAAMsb,OAAOpV,SACnCqN,KAAKvT,MAAMsb,OAAOpV,SAClBqN,KAAKvT,MAAM8T,KAAK5N,UAAY,GAElCqN,KAAKsM,eAAetM,KAAKvT,MAAM8T,MAC/BP,KAAK6uB,eAAejB,M,gDAIExH,M,qCA8BXwH,GAAc,IAAD,OAEpBpgC,EAASwS,KAAKvT,MAAM8T,KAAK/S,OAE7B2O,GAAuB,YAAa,CAAE3O,WACnC9N,MAAK,SAAAod,GAEJ,GADE5c,QAAQC,IAAI2c,GAEZA,GACyB,YAAzBA,EAASjS,KAAKkQ,QACd+B,EAASjS,KAAKwD,OAAOI,OAAS,EAC9B,CACDvO,QAAQC,IAAI2c,GACG,EAAK9c,MAAM4tC,YAEzBA,EAAc9wB,EAASjS,KAAKwD,OAC5B,EAAK6Q,SAAS,CAAE0uB,YAAaA,QAGhCxtC,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAiEA,IAAD,OACjB1G,GAAuB,eACpBzc,MAAK,SAAAod,GACJ,GAA6B,YAAzBA,EAASjS,KAAKkQ,OAAsB,CACtC,IAAIrN,EAAWoP,EAASjS,KAAKwD,OAAOX,SACpC,EAAKwR,SAAS,CAAExR,iBAGnBtN,OAAM,SAAAyiB,GACL3iB,QAAQC,IAAI0iB,Q,yCAICpV,GAAO,IAAD,OACnBD,EAASwS,KAAKhgB,MAAMwN,OACpBD,EAAOyS,KAAKhgB,MAAMgS,OAClBtE,EAAWsS,KAAKhgB,MAAM0N,SAEb,KAATD,IACO,IAATF,EACIyS,KAAKd,SAAS,CAAEoO,SAAS,EAAMb,aAAc,KAC7CzM,KAAKd,SAAS,CAAEqO,SAAS,EAAMb,WAAY,KAC/Cpf,EACEC,EACAC,EACAC,EACAC,GACA,SAACrN,EAAOgO,EAAQJ,GACd,IAAI5N,GAGAgO,EAAQ,CACV,GAAa,IAATd,EAAY,CACd,IAAIkf,EAAY,UAAMvlB,EAAUW,aAAhB,YACdX,EAAUO,eADI,YAEZwG,GACJ,EAAKiR,SAAS,CAAEuN,aAAcA,EAAca,SAAS,IAGvD,GAAa,IAAT/f,EAAY,CACd,IAAImf,EAAU,UAAMxlB,EAAUW,aAAhB,YACZX,EAAUO,eADE,YAEVwG,GAEJ,EAAKiR,SAAS,CAAEwN,WAAYA,EAAYa,SAAS,IAEnD,EAAKwN,eAAextB,EAAMU,EAAYT,GACtCtN,QAAQC,IAAI,uBAAwB8N,U,wCA8B5C+R,KAAKd,SAAS,CAAEmuB,iBAAkBrtB,KAAKhgB,MAAMqtC,kBAC7C,IAAIO,EACF5tB,KAAKvT,MAAMsb,QAAU/H,KAAKvT,MAAMsb,OAAOpV,SACnCqN,KAAKvT,MAAMsb,OAAOpV,SAClBqN,KAAKvT,MAAM8T,KAAK5N,UAAY,GAElCqN,KAAK6uB,eAAejB,K,qCAGPc,GACbxuC,QAAQC,IAAIuuC,GACZ1uB,KAAKd,SAAS,CACZ0vB,gBAAiB5uB,KAAKhgB,MAAM4uC,eAC5BF,gB,uCA2CalhC,GACf,IAAIogC,EAAc5tB,KAAKhgB,MAAM4tC,aAAe,GAC5CA,EAAY16B,OACV06B,EAAYz6B,WAAU,SAAAC,GAAI,OAAIA,EAAK5F,SAAW6F,SAAS7F,EAAQ,OAC/D,GAEFwS,KAAKd,SAAS,CAAE0uB,YAAaA,M,+BAmD7B,IAAIvuB,EAAOW,KACX,OACE,yBAAK9S,UAAU,WACd,kBAAC,GAAW8S,KAAKvT,OAChB,yBAAKS,UAAU,cACb,yBAAKA,UAAU,0BAIb,yBAAKA,UAAU,6EACb,4BACEA,UAAU,yCACV0B,QAASoR,KAAKqtB,iBAEd,0BAAMngC,UAAU,cAJlB,WAQD8S,KAAKhgB,MAAM4tC,aACV5tB,KAAKhgB,MAAM4tC,YAAY7f,KAAI,SAASljB,EAAM+H,GACxC,OACE,yBACEzI,IAAKyI,EACL1F,UAAU,iBACV2Z,GAAI,WAAahc,EAAK2C,QAEtB,yBAAKN,UAAU,2CACZrC,EAAKoQ,eACJ,yBACE6P,IAAKjgB,EAAKoQ,eACVoX,IAAI,GACJnlB,UAAU,mBAGZ,yBAAKA,UAAU,cACb,0BAAMA,UAAU,yBAItB,yBAAKA,UAAU,mDACb,yBAAKA,UAAU,uEACb,yBAAKA,UAAU,UACb,4BACGrC,EAAK7J,UACF6J,EAAK7J,UACL,KACC6J,EAAK3J,SAAW2J,EAAK3J,SAAW,IACjC,MAEN,2BAAI2J,EAAKvK,QAGX,yBAAK4M,UAAU,+BAEb,yBACEA,UACErC,EAAKgB,SACD,uBACA,iBAGN,2BAAOkjC,QAAQ,KAAf,UACA,yBAAK7hC,UAAU,QACb,2BACEK,KAAK,WACLS,KAAI,mBAAcnD,EAAK2C,OAAnB,YAA6BoF,GACjC4O,SAAUnC,EAAKJ,aACfiU,UAASroB,EAAKgB,SACdgb,GAAE,8BAAyBjU,KAE7B,yBAAK1F,UAAU,UACb,2BAAO6hC,QAAO,8BAAyBn8B,IACrC,gCAKR,4BACE1F,UAAU,2BACV0B,QAASyQ,EAAKquB,mBAAmB/tB,KAAKN,EAAMxU,IAF9C,iBAzBF,YAiCE,kBAACmjB,GAAA,EAAD,CACE9gB,UAAU,iBACV/K,MAAO,0BAAM+K,UAAU,gBACvB2Z,GAAG,KAEH,kBAACoH,GAAA,EAAD,CACEgd,SAAU5rB,EAAKuvB,eAAejvB,KAC5BK,KACAnV,EAAK2C,SAGP,uBAAGN,UAAU,oBANf,cASA,kBAAC+gB,GAAA,EAAD,CACEgd,SAAU,kBACR5rB,EAAK5S,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,eACVpiB,MAAO,CAAEkrC,YAAargC,OAI1B,uBAAGqC,UAAU,sBARf,gBAUA,kBAAC+gB,GAAA,EAAD,CACEgd,SAAU,kBACR5rB,EAAK5S,MAAMuU,QAAQC,KAAK,CACtBmB,SAAU,sBACVpiB,MAAO,CAAEmrC,aAActgC,EAAK2C,YAIhC,uBAAGN,UAAU,+BAAgC,IAR/C,uBAYA,kBAAC+gB,GAAA,EAAD,KAOE,uBAAG/gB,UAAU,sBAPf,cAaN,yBAAKA,UAAU,6DACb,yBAAKA,UAAU,sBAAf,mBACkB,8BAAOrC,EAAKmkC,iBAK9B,yBAAK9hC,UAAU,aAAf,kBACiB,8BAAOrC,EAAKhI,wBAQ1Cmd,KAAKhgB,MAAMqtC,gBACV,kBAAC,GAAD,CACEA,gBAAiBrtB,KAAKhgB,MAAMqtC,gBAC5BE,qBAAsBvtB,KAAKqtB,kBAE3B,W,GA1fOjvB,aAqiBNmE,gBArBS,SAAAviB,GACtB,MAAO,CACLugB,KAAMvgB,EAAM+R,KAAKX,SACjB2W,OAAQ/nB,EAAM+R,KAAKV,WACnBoB,YAAazS,EAAM+R,KAAKU,gBAID,SAAA+P,GACzB,OAAOC,YACL,CACEnF,0BACAD,gCACAG,+BACAI,uBACAE,2BAEF0E,KAIWD,CAGb0sB,ICjdaC,IAzEIjlC,EAAQ,KAAWklC,qB,kMAOlCnvB,KAAKovB,gB,oCAIL,IAAIl9B,EAAWhH,EAAgB,YAC/B,GAAIgH,GACF,GAAIA,EAAS0J,MAAO,CAClB,IAAIC,EAAe3J,EAAS0J,MAC5BoE,KAAKd,SAAS,CAAErD,aAAcA,UAchCmE,KAAKvT,MAAMuU,QAAQC,KAAK,O,+BAK1B,OACE,kBAACouB,GAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/wB,KACjC,kBAAC4wB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW/wB,KACtC,kBAAC4wB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW/sB,KACvC,kBAAC4sB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW1rB,KACzC,kBAACurB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWC,KACvC,kBAACJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWE,KAK/C,kBAACL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWG,KAC/C,kBAACN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWI,KAC7C,kBAACP,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAWK,KACtD,kBAACR,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAWM,KAC/C,kBAACT,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,wBAAwBC,UAAWzS,KACrD,kBAACsS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,2BAA2BC,UAAWnD,KACxD,kBAACgD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWxR,KAGtC,kBAACqR,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kCAAkCC,UAAWO,KAC/D,kBAACV,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAWQ,KAEtD,kBAACX,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW7H,KAEvC,kBAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAWhE,KACtD,kBAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,0BAA0BC,UAAWhD,KAIvD,kBAAC6C,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAWhC,KAChD,kBAAC6B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWR,U,GA9DrB7wB,cCjC1B8xB,GAD4BC,YAAgBC,IAAhBD,CAAyBE,IAC7CC,CAA0BC,GAExCC,IAASC,OACP,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAUR,MAAOA,IACf,kBAACZ,EAAA,EAAD,CAAOG,UAAWkB,OAGtB1wB,SAASmP,eAAe,SnEAX,WACb,GAA6C,kBAAmB7vB,UAAW,CAGzE,GADkB,IAAIuJ,IAAI8nC,GAAwB3xC,OAAOC,UAC3Cge,SAAWje,OAAOC,SAASge,OAIvC,OAGFje,OAAOohC,iBAAiB,QAAQ,WAC9B,IAAM/gC,EAAK,UAAMsxC,GAAN,sBAEP7xC,IAiDV,SAAiCO,GAE/BuxC,MAAMvxC,GACHI,MAAK,SAAAod,GAGkB,MAApBA,EAAS/B,SACuD,IAAhE+B,EAAShB,QAAQ6jB,IAAI,gBAAgB9uB,QAAQ,cAG7CtR,UAAUC,cAAcsxC,MAAMpxC,MAAK,SAAAC,GACjCA,EAAaoxC,aAAarxC,MAAK,WAC7BT,OAAOC,SAAS8xC,eAKpB3xC,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEArEA8wC,CAAwB3xC,GAIxBC,UAAUC,cAAcsxC,MAAMpxC,MAAK,WACjCQ,QAAQC,IACN,gHAMJd,EAAgBC,OmE1BxB4xC,I,wCCtBAC,EAAOC,QAAU,IAA0B,4C,0DCA3CD,EAAOC,QAAU,IAA0B,iD,wHCA3C,IAAIrjB,EAAM,CACT,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,KAIf,SAASsjB,EAAeC,GACvB,IAAIzqB,EAAK0qB,EAAsBD,GAC/B,OAAOE,EAAoB3qB,GAE5B,SAAS0qB,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE1jB,EAAKujB,GAAM,CACpC,IAAIhR,EAAI,IAAI/jB,MAAM,uBAAyB+0B,EAAM,KAEjD,MADAhR,EAAExrB,KAAO,mBACHwrB,EAEP,OAAOvS,EAAIujB,GAEZD,EAAeK,KAAO,WACrB,OAAOt/B,OAAOs/B,KAAK3jB,IAEpBsjB,EAAeM,QAAUJ,EACzBJ,EAAOC,QAAUC,EACjBA,EAAexqB,GAAK,K,sCC/CpBsqB,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.c00fcdd3.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default {\r\n  email: {\r\n    required: 'Please enter your email address',\r\n    invalid: 'Please enter a valid email address'\r\n  },\r\n  parentEmail: {\r\n    required: \"Please enter student's email address\"\r\n  },\r\n  password: {\r\n    required: 'Please enter your password',\r\n    newPassword: 'Please enter new password',\r\n    oldPassword: 'Please enter current password',\r\n    confirmNewPassword: 'Please enter confirm new password',\r\n    passwordPattern:\r\n      'Password should be min 8 characters long with one special character, number, lower and upper case letter',\r\n    same: 'Mismatch new password and confirm new password'\r\n  },\r\n  firstName: {\r\n    required: 'Please enter first name',\r\n    alphaOnly: 'First name could only consist alphabets'\r\n  },\r\n  lastName: {\r\n    required: 'Please enter last name',\r\n    alphaOnly: 'Last name could only consist alphabets'\r\n  },\r\n  parentFirstName: {\r\n    required: \"Please enter student's first name\",\r\n    alphaOnly: \"Student's first name could only consist alphabets\"\r\n  },\r\n  parentLastName: {\r\n    required: \"Please enter student's last name\",\r\n    alphaOnly: \"Student's last name could only consist alphabets\"\r\n  },\r\n  parentName: {\r\n    required: \"Please enter parent's first name\",\r\n    alphaOnly: \"Parent's first name could only consist alphabets\"\r\n  },\r\n\r\n  parentLName: {\r\n    required: \"Please enter parent's last name\",\r\n    alphaOnly: \"Parent's last name could only consist alphabets\"\r\n  },\r\n\r\n  day: { required: 'Please select day' },\r\n  month: { required: 'Please select month' },\r\n  year: { required: 'Please select year' },\r\n  DOBDay: { required: 'Select day' },\r\n  DOBMonth: { required: 'Select month' },\r\n  DOBYear: { required: 'Select year' },\r\n  city: { required: 'Please enter city' },\r\n  state: { required: 'Please enter state' },\r\n  country: { required: 'Please enter country' },\r\n  summary: { required: 'Please enter summary' },\r\n  instituteName: { required: 'Please enter institute' },\r\n  startDate: { required: 'Please select date' },\r\n  endDate: { required: 'Please select date' },\r\n  title: { required: 'Please enter title' },\r\n  description: { required: 'Please enter description' },\r\n  competency: { required: 'Please select competency' },\r\n  importance: { required: 'Please select achievement level' },\r\n  skills: { required: 'Please select skills' },\r\n  fromYear: { required: 'Please select year' },\r\n  toYear: { required: 'Please select year' },\r\n  fromGrade: { required: 'Please select grade' },\r\n  toGrade: { required: 'Please select grade' },\r\n  request: { required: 'Please enter request' },\r\n  recommendation: { required: 'Please enter Recommendation' },\r\n  recommenderTitle: { required: 'Please enter recommender title' },\r\n  birthDate: { required: 'Please select your date of birth' },\r\n  groupName: { required: 'Please enter group name' },\r\n  aboutGroup: { required: \"Please enter group's motive\" },\r\n  passwordPattern:\r\n    'Please select a New Password: Password should be min 8 characters long with one special character, number, lower and upper case letter',\r\n  designation: {required: \"Please enter designation\"},\r\n  organisation: {required: \"Please enter organisation\"},\r\n  industry: {required: \"Please enter industry\"},\r\n  functionalArea: {required: \"Please enter functionalArea\"},\r\n  role: {required: \"Please enter role\"}, \r\n  profileRole: {required: \"Please enter profileRole\"},   \r\n  location: {required: \"Please enter location\"}, \r\n  mobileNo: {required: \"Please enter mobileNo\"},\r\n  skills: {required: \"Please enter skills\"}, \r\n  rating: {required: \"Please enter rating\"},\r\n  projectName: {required: \"Please enter projectName\"},     \r\n  company:{required: \"Please select company\"} ,\r\n  companyName:{required: \"Please enter companyName\"},\r\n  offeredDesignation:{required: \"Please enter designation\"},\r\n  nextEmployer :{required: \"Please enter your next Employer\"},\r\n  currentSalary : {required: \"Please select your salary\"},\r\n  lakh : {required: \"Please enter salary in lakhs\"},\r\n  thousand : {required: \"Please enter salary in thousands\"},\r\n  noticePeriod: {required: \"Kindly select notice period\"},\r\n  offeredSalary : {required: \"Please select your offered salary\"},\r\n  offeredSalaryInLakh : {required: \"Please enter salary in lakhs\"},\r\n  offeredSalaryInThousand : {required: \"Please enter salary in thousands\"},\r\n  desiredLocation:{required: \"Kindly select desired location\"},\r\n  desiredIndustry:{required: \"Kindly select desired industry\"}\r\n};\r\n","const ICONS = {\r\n  1: 'icon-business',\r\n  2: 'icon-family_and_consumer_science',\r\n  3: 'icon-english',\r\n  4: 'icon-computer-science',\r\n  5: 'icon-foreign_language',\r\n  6: 'icon-maths',\r\n  7: 'icon-beaker',\r\n  8: 'icon-social_studies',\r\n  9: 'icon-physical_education',\r\n  10: 'icon-sports2',\r\n  11: 'icon-baseball',\r\n  12: 'icon-american_football',\r\n  13: 'icon-volleyball',\r\n  14: 'icon-golf',\r\n  15: 'icon-swimming',\r\n  16: 'icon-field',\r\n  17: 'icon-gymnastic',\r\n  18: 'icon-lacrosse',\r\n  19: 'icon-tennis',\r\n  20: 'icon-fencing',\r\n  21: 'icon-cricket',\r\n  22: 'icon-wrestling',\r\n  23: 'icon-hockey',\r\n  24: 'icon-visual_arts',\r\n  25: 'icon-performance-arts',\r\n  26: 'icon-woordworking',\r\n  27: 'icon-robotics',\r\n  28: 'icon-refrigeration_fundamentals',\r\n  29: 'icon-production_technology',\r\n  30: 'icon-auto_body_repair',\r\n  31: 'icon-auto_mechanics',\r\n  32: 'icon-building_construction',\r\n  33: 'icon-computer_aided_drafting',\r\n  34: 'icon-cosmetology',\r\n  35: 'icon-criminal_justice',\r\n  36: 'icon-driver_education',\r\n  37: 'icon-electronics',\r\n  38: 'icon-FFA',\r\n  39: 'icon-fire_science',\r\n  40: 'icon-heating_and_cooling_system',\r\n  41: 'icon-hospitality_and_tourism',\r\n  42: 'icon-JROTC',\r\n  43: 'icon-metalworking',\r\n  44: 'icon-networking',\r\n  45: 'icon-plumbing',\r\n  50: 'icon-journalism',\r\n  51: 'icon-general',\r\n  52: 'icon-badminton',\r\n  53: 'icon-chess',\r\n  54: 'icon-frisbee',\r\n  56: 'icon-voluntreeing',\r\n  57: 'icon-community',\r\n  58: 'icon-travel',\r\n  59: 'icon-work',\r\n  60: 'icon-intrest',\r\n  61: 'icon-hobby'\r\n};\r\n\r\nexport default ICONS;\r\n","// used for passoword encryption\r\nimport validationMessages from '../constants/validationMessages';\r\nimport regExpressions from '../constants/regExpressions';\r\nimport icons from '../config/competencyIcons';\r\nimport moment from 'moment';\r\nimport { getAPIURL } from '../../commonFunctions';\r\n\r\nconst CONSTANTS = {\r\n  IV_LENGTH: 16,\r\n  ENCRYPTION_KEY: 'sd5b75nb7577#^%$%*&G#CGF*&%@#%*&',\r\n  CRYPTER_KEY:\r\n    '0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xffffffff,0xfffffff8',\r\n  regExpressions,\r\n  validationMessages,\r\n  azureStorageAccount: 'theRapidHiremediastorage',\r\n  // azureContainer: 'theRapidHire-media',\r\n  azureContainer: getAPIURL().azureContainer,\r\n  azureThumbContainer: getAPIURL().azureThumbContainer,\r\n  APIPort: ':3002',\r\n  azureBlobURI: 'https://theRapidHiremediastorage.blob.core.windows.net',\r\n  profileAlbum: 'profile',\r\n  coverAlbum: 'cover',\r\n  badgeAlbum: 'badges',\r\n  certificateAlbum: 'certificates',\r\n  mediaAlbum: 'media',\r\n  trophieAlbum: 'trophy',\r\n  feedAlbum: 'feeds',\r\n  oragnizationAlbum: 'oragnization',\r\n  audioAlbum: 'soundtrack',\r\n  smallThumb: 's-',\r\n  mediumThumb: 'm-',\r\n  typeSchool: 'School',\r\n  typeUniversity: 'University',\r\n  fromYear: 2000,\r\n  toYear: moment().year(),\r\n  fromGrade: 1,\r\n  toGrade: 12,\r\n  OTHER:'Other',\r\n  socket: {\r\n    URL: getAPIURL().httpServer + getAPIURL().APIURL + ':' + getAPIURL().APIPort\r\n    //URL: 'http://' + getAPIURL().APIURL + ':3001'\r\n  },\r\n  icons,\r\n  rangeSliderHideValue: 12,\r\n  rangeSliderHideName: 'Hide',\r\n  groupStatus: {\r\n    REQUESTED: 'Requested',\r\n    INVITED: 'Invited',\r\n    ACCEPTED: 'Accepted',\r\n    REJECTED: 'Rejected'\r\n  },\r\n  feedActivity: {\r\n    CREATEFEED: 'CreateFeed',\r\n    LIKEFEED: 'LikeFeed',\r\n    SHAREFEED: 'ShareFeed',\r\n    COMMENTONFEED: 'CommentOnFeed'\r\n  },\r\n  singleTrack: 'single',\r\n  multipleTrack: 'multiple'\r\n};\r\n\r\nexport default CONSTANTS;\r\n","export default {\r\n  alphaOnly: '/^[A-Za-z\\\\s]+$/',\r\n  // passwordPattern:\r\n  //   '/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[$@$!%*?&#])[A-Za-z\\\\d$@$!%*?&#]{8,20}/'\r\n\r\n  passwordPattern:\r\n    '/^(?=\\\\S*[a-z])(?=\\\\S*[A-Z])(?=\\\\S*\\\\d)(?=\\\\S*[^\\\\w\\\\s])\\\\S{8,}$/'\r\n};\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport Transition from 'react-transition-group/Transition';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//import crypto from 'crypto';\r\nimport CONSTANTS from './core/config/appConfig';\r\nimport Cryptr from 'cryptr';\r\nimport moment from 'moment';\r\nconst ENCRYPTION_KEY = 'sd5b75nb7577#^%$%*&G#CGF*&%@#%*&';\r\n\r\nvar cryptlib = require('cryptlib'),\r\n  iv = 'F@$%^*GD$*(*#!12', //16 bytes = 128 bit\r\n  key = cryptlib.getHashSha256(ENCRYPTION_KEY, 32); //32 bytes = 256 bits\r\n\r\nlet azureURL = `${CONSTANTS.azureBlobURI}/${CONSTANTS.azureContainer}`;\r\nlet azureThumbURL = `${CONSTANTS.azureBlobURI}/${\r\n  CONSTANTS.azureThumbContainer\r\n}`;\r\n\r\nconst cryptr = new Cryptr(CONSTANTS.CRYPTER_KEY);\r\nlet toastId = '';\r\n\r\n//used to encryption of localstorage data\r\nexport const encryptedData = data => {\r\n  return cryptr.encrypt(data);\r\n};\r\n\r\n//used to decrypt localstorage data\r\nexport const decryptedData = data => {\r\n  return cryptr.decrypt(data);\r\n};\r\n\r\n// used to set localstorage item\r\nexport const setLocalStorage = (key, value) => {\r\n  value = JSON.stringify(value);\r\n  const encodedData = encryptedData(value);\r\n  localStorage.setItem(key, encodedData);\r\n};\r\n\r\n// used to get localstorage item\r\nexport const getLocalStorage = key => {\r\n  if (key) {\r\n    let data = localStorage.getItem(key);\r\n    if (data) {\r\n          console.log(data);\r\n          data = JSON.parse(decryptedData(data));\r\n      return data;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// used to remove localstorage item\r\nexport const removeLocalStorage = key => {\r\n  localStorage.removeItem(key);\r\n};\r\n\r\n// used to clear localstorage\r\nexport const clearLocalStorage = () => {\r\n  localStorage.clear();\r\n};\r\n\r\n// toastr messages for error\r\nexport const showErrorToast = (errorMessage, event) => {\r\n  if (!toast.isActive(toastId)) {\r\n    toastId = toast.error(errorMessage, {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true\r\n    });\r\n  }\r\n};\r\n\r\n// toastr messages for success\r\nexport const showSuccessToast = message => {\r\n  if (!toast.isActive(toastId)) {\r\n    toastId = toast.success(message, {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true\r\n    });\r\n  }\r\n};\r\n\r\n// toastr messages for warning\r\nexport const showWarningToast = message => {\r\n  if (!toast.isActive(toastId)) {\r\n    toastId = toast.warn(message, {\r\n      position: toast.POSITION.TOP_RIGHT,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true\r\n    });\r\n  }\r\n};\r\n\r\n// used zoomin and zoomout of toastr messages\r\nexport const ZoomInAndOut = ({ children, position, ...props }) => (\r\n  <Transition\r\n    {...props}\r\n    timeout={200}\r\n    onEnter={node => node.classList.add('zoomIn', 'animate')}\r\n    onExit={node => {\r\n      node.classList.remove('zoomIn', 'animate');\r\n      node.classList.add('zoomOut', 'animate');\r\n    }}\r\n  >\r\n    {children}\r\n  </Transition>\r\n);\r\n\r\n// used to render validation message\r\nexport const renderMessage = message => {\r\n  return <span className=\"error\">{message}</span>;\r\n};\r\n\r\nexport const encrypt = text => {\r\n  let cryptText = cryptlib.encrypt(text, key, iv);\r\n  return cryptText.replace(/\\//g, '_spike_');\r\n};\r\n//  let buff = new Buffer(text);\r\n//  return buff.toString('base64');\r\n//return cryptlib.encrypt(text, key, iv);\r\n//return text;\r\n//};\r\n\r\nexport const decrypt = text => {\r\n  let decrptText = text.replace(/_spike_/g, '/');\r\n  return cryptlib.decrypt(decrptText, key, iv);\r\n  // let buff = new Buffer(text, 'base64');\r\n  //return buff.toString('ascii');\r\n  // return cryptlib.decrypt(text, key, iv);\r\n  //return text;\r\n};\r\n\r\n// export const encrypt = text => {\r\n//   let buff = new Buffer(text);\r\n//   let base64data = buff.toString('base64');\r\n//   return base64data;\r\n// };\r\n\r\n// export const decrypt = text => {\r\n//   let buff = new Buffer(text, 'base64');\r\n//   text = buff.toString('ascii');\r\n//   return text;\r\n// };\r\n\r\n// used to get apiurl for different servers\r\nexport function getAPIURL() {\r\n  let returnUrl = {\r\n    APIURL: '',\r\n    azureContainer: '',\r\n    azureThumbContainer: '',\r\n    httpServer: '',\r\n    APIPort: ''\r\n  };\r\n  switch (window.location.hostname) {  \r\n\r\n    case '133.76.253.131':\r\n      returnUrl.APIURL = '103.76.253.131';\r\n      returnUrl.azureContainer = 'theRapidHire-media-development';\r\n      returnUrl.azureThumbContainer = 'theRapidHire-media-development-thumbnails';\r\n      returnUrl.httpServer = 'http://';\r\n      returnUrl.APIPort = '3002';\r\n      break;\r\n\r\n    default:\r\n      returnUrl.APIURL = 'localhost';\r\n      returnUrl.azureContainer = 'theRapidHire-media-development';\r\n      returnUrl.azureThumbContainer = 'theRapidHire-media-development-thumbnails';\r\n      returnUrl.httpServer = 'http://';\r\n      returnUrl.APIPort = '3002';\r\n      break;\r\n  }\r\n  return returnUrl;\r\n}\r\n\r\n// used to convert timestamp to date\r\nexport const timeStampToDate = timestamp => {\r\n  timestamp = timestamp.toString();\r\n  timestamp = timestamp.slice(0, -3);\r\n  timestamp = parseInt(timestamp, 10);\r\n  let momentDate = moment.unix(timestamp);\r\n  return momentDate;\r\n};\r\n\r\nexport const uploadToAzure = (type, userId, file, sasToken, callback) => {\r\n  if (file !== '') {\r\n    let AzureStorage = window.AzureStorage;\r\n    let folderName = type === 1 ? CONSTANTS.profileAlbum : CONSTANTS.coverAlbum;\r\n    let fileName = generateTimestamp(file.name);\r\n    let uploadPath = `sv_${userId}/${folderName}/${fileName}`;\r\n\r\n    const blobService = AzureStorage.Blob.createBlobServiceWithSas(\r\n      CONSTANTS.azureBlobURI,\r\n      sasToken\r\n    );\r\n\r\n    blobService.createBlockBlobFromBrowserFile(\r\n      CONSTANTS.azureContainer,\r\n      uploadPath,\r\n      file,\r\n      (error, result) => {\r\n        if (callback) callback(error, result, uploadPath, fileName);\r\n        if (error) {\r\n          console.log('error ', error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n};\r\n\r\nexport const isValidURL = URL => {\r\n  var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\r\n  return regexp.test(URL);\r\n};\r\n\r\nexport const limitCharacter = (text, count) => {\r\n  if (text && count) {\r\n    return text.slice(0, count) + (text.length > count ? '...' : '');\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const SampleNextArrow = props => {\r\n  const { arrow, onClick } = props;\r\n  return (\r\n    <span\r\n      className={`icon-right_carousel custom-next  next${arrow}`}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n};\r\n\r\nexport const SamplePrevArrow = props => {\r\n  const { arrow, onClick } = props;\r\n  return (\r\n    <span\r\n      className={`icon-left_carousel custom-prev prev ${arrow}`}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n};\r\n\r\nconst generateRandomString = () => {\r\n  var text = '';\r\n  var possible =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n  for (var i = 0; i < 5; i++)\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n  return text;\r\n};\r\n\r\nexport const generateTimestamp = fileName => {\r\n  let extension = fileName.split('.').pop();\r\n  let newFileName =\r\n    moment().valueOf() + generateRandomString() + '.' + extension;\r\n  return newFileName;\r\n};\r\n\r\nconst fileExists = image_url => {\r\n  var http = new XMLHttpRequest();\r\n  http.open('HEAD', image_url, false);\r\n  http.send();\r\n  return http.status != 404;\r\n};\r\n\r\nexport const getThumbImage = (imageType, imagePath) => {\r\n  if (imagePath) {\r\n    // let newArray = imagePath.split('/');\r\n    // if (newArray.length > 0) {\r\n    //   if (getAPIURL().APIURL !== '103.76.253.131') {\r\n    //     if (imageType === 'small') {\r\n    //       let imageName = imagePath.replace(\r\n    //         newArray[2],\r\n    //         CONSTANTS.smallThumb + newArray[2]\r\n    //       );\r\n    //       imageName = `${azureThumbURL}/${imageName}`;\r\n    //       if (fileExists(imageName)) {\r\n    //         return imageName;\r\n    //       } else {\r\n    //         let imageName = `${azureURL}/${imagePath}`;\r\n    //         return imageName;\r\n    //       }\r\n    //     }\r\n\r\n    //     if (imageType === 'medium') {\r\n    //       let imageName = imagePath.replace(\r\n    //         newArray[2],\r\n    //         CONSTANTS.mediumThumb + newArray[2]\r\n    //       );\r\n    //       imageName = `${azureThumbURL}/${imageName}`;\r\n    //       if (fileExists(imageName)) {\r\n    //         return imageName;\r\n    //       } else {\r\n    //         let imageName = `${azureURL}/${imagePath}`;\r\n    //         return imageName;\r\n    //       }\r\n    //     }\r\n    //   }\r\n\r\n    if (\r\n      imageType === 'original' ||\r\n      imageType === 'medium' ||\r\n      imageType === 'small'\r\n    ) {\r\n      let imageName = `${azureURL}/${imagePath}`;\r\n      return imageName;\r\n    }\r\n  }\r\n  //}\r\n};\r\n\r\nexport const getIPAddress = onNewIP => {\r\n  //compatibility for firefox and chrome\r\n  var myPeerConnection =\r\n    window.RTCPeerConnection ||\r\n    window.mozRTCPeerConnection ||\r\n    window.webkitRTCPeerConnection;\r\n  var pc = new myPeerConnection({\r\n      iceServers: []\r\n    }),\r\n    noop = function() {},\r\n    localIPs = {},\r\n    ipRegex = /([0-9]{1,3}(\\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g,\r\n    key;\r\n\r\n  function iterateIP(ip) {\r\n    if (!localIPs[ip]) onNewIP(ip);\r\n    localIPs[ip] = true;\r\n  }\r\n\r\n  //create a bogus data channel\r\n  pc.createDataChannel('');\r\n\r\n  // create offer and set local description\r\n  pc.createOffer()\r\n    .then(function(sdp) {\r\n      sdp.sdp.split('\\n').forEach(function(line) {\r\n        if (line.indexOf('candidate') < 0) return;\r\n        line.match(ipRegex).forEach(iterateIP);\r\n      });\r\n\r\n      pc.setLocalDescription(sdp, noop, noop);\r\n    })\r\n    .catch(function(reason) {\r\n      // An error occurred, so handle the failure to connect\r\n    });\r\n\r\n  //listen for candidate events\r\n  pc.onicecandidate = function(ice) {\r\n    if (\r\n      !ice ||\r\n      !ice.candidate ||\r\n      !ice.candidate.candidate ||\r\n      !ice.candidate.candidate.match(ipRegex)\r\n    )\r\n      return;\r\n    ice.candidate.candidate.match(ipRegex).forEach(iterateIP);\r\n  };\r\n};\r\n\r\n// function callbackToPromise(method, ...args) {\r\n//   return new Promise(function(resolve, reject) {\r\n//       return method(...args, function(err, result) {\r\n//           return err ? reject(err) : resolve(result);\r\n//       });\r\n//   });\r\n// }\r\n","import {\r\n  USER_LOGIN,\r\n  USER_LOGOUT,\r\n  GET_STUDENT_PERSONAL_INFO,\r\n  SET_STUDENT_AS_USER,\r\n  GET_STUDENT_LIST,\r\n  UPDATE_STUDENT_INFO,\r\n  GET_HEADER_COUNT,\r\n  UPDATE_HEADER_COUNT,\r\n  CHANGE_PASSWORD_STATUS,\r\n  REMOVE_STUDENT_DATA,\r\n  UPDATE_USER_PERSONAL_INFO,\r\n  UPDATE_PARENT_PERSONAL_INFO,\r\n  UPDATE_FEED_GROUP_INFO,\r\n  GROUP_LIST_DATA\r\n} from '../types';\r\nimport {\r\n  setLocalStorage,\r\n  getLocalStorage,\r\n  clearLocalStorage\r\n} from '../../../commonFunctions';\r\n\r\nconst INITIAL_STATE = {\r\n  userData: getLocalStorage('userInfo') || {},  \r\n  parentData: getLocalStorage('parentInfo'),\r\n  otherUserInfoData: getLocalStorage('otherUserInfo')\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN:\r\n      if (action.payload && action.payload.data && action.payload.data.result) {\r\n        let userInfo = action.payload.data.result || {};\r\n        if (userInfo.roleId === 1) {\r\n          state.userData = userInfo;\r\n          state.parentData = null;\r\n          setLocalStorage('parentInfo', null);\r\n        }\r\n        //else if (\r\n        //   userInfo.roleId === 2 &&\r\n        //   userInfo.students &&\r\n        //   userInfo.students.length === 1\r\n        // ) {\r\n        //   state.parentData = userInfo;\r\n        //   setLocalStorage('parentInfo', userInfo);\r\n        //   userInfo.students[0]['token'] = userInfo['token'];\r\n        //   userInfo = userInfo.students[0];\r\n        //   state.userData = userInfo;\r\n        // }\r\n        else if (userInfo.roleId === 2) {\r\n          state.parentData = userInfo;\r\n          setLocalStorage('parentInfo', userInfo);\r\n          //  userInfo.students[0]['token'] = userInfo['token'];\r\n          state.userData = userInfo;\r\n        } else {\r\n          state.userData = userInfo;\r\n        }\r\n        setLocalStorage('userInfo', userInfo);\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_STUDENT_PERSONAL_INFO:\r\n      if (action.payload && action.payload.data && action.payload.data.result) {\r\n        const object = action.payload.data.result;\r\n        let userInfo = getLocalStorage('userInfo');\r\n\r\n        for (const key in object) {\r\n          if (object.hasOwnProperty(key)) {\r\n            const element = object[key];\r\n            userInfo[key] = element;\r\n            state[key] = element;\r\n          }\r\n        }\r\n        state.userData = userInfo;\r\n        setLocalStorage('userInfo', userInfo);\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case USER_LOGOUT:\r\n      state.userData = {};\r\n      state.parentData = null;\r\n      state.headerCount = null;\r\n      clearLocalStorage();\r\n      return Object.assign({}, state);\r\n\r\n    case SET_STUDENT_AS_USER:\r\n      if (\r\n        action.payload &&        \r\n        action.payload.otherUserInfoData\r\n      ) {      \r\n        let otherUserInfoData = action.payload.otherUserInfoData;        \r\n        state.otherUserInfoData = otherUserInfoData;\r\n        setLocalStorage('otherUserInfo', otherUserInfoData);       \r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_STUDENT_LIST:\r\n      if (action.payload) {\r\n        const userInfoStudent = action.payload.data.result;\r\n        let userInfo = getLocalStorage('parentInfo')\r\n          ? getLocalStorage('parentInfo')\r\n          : getLocalStorage('userInfo');\r\n        userInfo.students = userInfoStudent;\r\n        state.userData = userInfo;\r\n        state.parentData = userInfo;\r\n        setLocalStorage('parentInfo', userInfo);\r\n        setLocalStorage('userInfo', userInfo);\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case UPDATE_STUDENT_INFO:\r\n      if (action.payload && action.payload.data.userId) {\r\n        let userInfo = state.userData;\r\n        state.userData.students[action.payload.data.index].isActive =\r\n          action.payload.data.isActive;\r\n        setLocalStorage(\r\n          state.userData.students[action.payloaddata.data.index].isActive,\r\n          true\r\n        );\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_HEADER_COUNT:\r\n      if (\r\n        action.payload &&\r\n        action.payload.data &&\r\n        action.payload.data.result[0]\r\n      ) {\r\n        const headerCountMessage = action.payload.data.result[0];\r\n        state.headerCount = headerCountMessage;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case UPDATE_HEADER_COUNT:\r\n      if (action) {\r\n        let headerCount = action.payload;\r\n        headerCount['connectionCount'] =\r\n          headerCount.connectionCount === '0' ? 0 : headerCount.connectionCount;\r\n        headerCount['messagingCount'] =\r\n          headerCount.messagingCount === '0' ? 0 : headerCount.messagingCount;\r\n        headerCount['notificationCount'] =\r\n          headerCount.notificationCount === '0'\r\n            ? 0\r\n            : headerCount.notificationCount;\r\n        state.headerCount = headerCount;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case CHANGE_PASSWORD_STATUS:\r\n      let userInfo = getLocalStorage('parentInfo')\r\n        ? getLocalStorage('parentInfo')\r\n        : getLocalStorage('userInfo');\r\n      console.log(userInfo['isPasswordChanged']);\r\n      userInfo['isPasswordChanged'] = true;\r\n      state.userData = userInfo;\r\n      if (getLocalStorage('parentInfo')) {\r\n        state.parentData = userInfo;\r\n        setLocalStorage('parentInfo', userInfo);\r\n      }\r\n      setLocalStorage('userInfo', userInfo);\r\n      return Object.assign({}, state);\r\n\r\n    case REMOVE_STUDENT_DATA:\r\n      if (action.payload && action.payload.userId) {\r\n        let userInfo = getLocalStorage('parentInfo');\r\n        if (getLocalStorage('parentInfo')) {\r\n          userInfo['students'].splice(\r\n            userInfo['students'].findIndex(\r\n              todo => todo.userId === parseInt(action.payload.userId, 10)\r\n            ),\r\n            1\r\n          );\r\n          state.parentData = userInfo;\r\n          state.userData = userInfo;\r\n          setLocalStorage('parentInfo', userInfo);\r\n          setLocalStorage('userInfo', userInfo);\r\n        }\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case UPDATE_USER_PERSONAL_INFO:\r\n      if (action.payload) {\r\n        const object = action.payload;\r\n        let userInfo = getLocalStorage('userInfo');\r\n\r\n        for (const key in object) {\r\n          if (object.hasOwnProperty(key)) {\r\n            const element = object[key];\r\n            userInfo[key] = element;\r\n            state[key] = element;\r\n          }\r\n        }\r\n        state.userData = userInfo;\r\n        setLocalStorage('userInfo', userInfo);\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case UPDATE_PARENT_PERSONAL_INFO:\r\n      if (action.payload) {\r\n        const object = action.payload;\r\n        console.log(object);\r\n        let parentInfo = getLocalStorage('parentInfo');\r\n\r\n        for (const key in object) {\r\n          if (object.hasOwnProperty(key)) {\r\n            const element = object[key];\r\n            parentInfo[key] = element;\r\n            state[key] = element;\r\n          }\r\n        }\r\n        state.parentData = parentInfo;\r\n        setLocalStorage('parentInfo', parentInfo);\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case UPDATE_FEED_GROUP_INFO:\r\n      if (action.payload) {\r\n        console.log(action.payload);\r\n        state.groupInfoData = action.payload;\r\n        if (state.groupListData) {\r\n          let groupListData = state.groupListData;\r\n          let index = state.groupListData.findIndex(\r\n            todo => todo.groupId == action.payload.groupId\r\n          );\r\n          if (index !== -1) {\r\n            groupListData[index] = action.payload;\r\n            state.groupListData = groupListData;\r\n          }\r\n        }\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GROUP_LIST_DATA:\r\n      if (action.payload && action.payload.data.result) {\r\n        state.groupListData = action.payload.data.result;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_EDUCATION_BY_USER,\r\n  GET_ALL_COMPETENCY,\r\n  GET_ACHIEVEMENT_BY_USER,\r\n  GET_All_ORAGNIZATION,\r\n  GET_RECOMMENDATION_BY_USER,\r\n  GET_ACHIEVEMENT_DATA\r\n} from '../types';\r\n\r\nconst INITIAL_STATE = {\r\n  all: [],\r\n  competencyData: [],\r\n  achievementData: [],\r\n  oragnizationData: [],\r\n  recommendationData: [],\r\n  onlyAchievement: []\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_EDUCATION_BY_USER:\r\n      if (action.payload && action.payload.data.result) {\r\n        const educationInfo = action.payload.data.result;\r\n        state.all = educationInfo;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_ALL_COMPETENCY:\r\n      if (action.payload && action.payload.data.result) {\r\n        state.competencyData = action.payload.data.result;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_ACHIEVEMENT_BY_USER:\r\n      if (action.payload && action.payload.data.result) {\r\n        state.achievementData = action.payload.data.result;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_ACHIEVEMENT_DATA:\r\n      if (action.payload && action.payload.data.result) {\r\n        state.onlyAchievement = action.payload.data.result;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_All_ORAGNIZATION:\r\n      if (action.payload && action.payload.data.result) {\r\n        state.oragnizationData = action.payload.data.result;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_RECOMMENDATION_BY_USER:\r\n      if (action.payload && action.payload.data.result) {\r\n        state.recommendationData = action.payload.data.result;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport User from './reducerUser';\r\nimport Student from './reducerStudent';\r\n\r\nconst appReducer = combineReducers({\r\n  state: (state = {}) => state,\r\n  User,\r\n  Student\r\n});\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'USER_LOGOUT') {\r\n    state = undefined;\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default rootReducer;\r\n","export const USER_LOGIN = 'USER_LOGIN';\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const GET_STUDENT_PERSONAL_INFO = 'GET_STUDENT_PERSONAL_INFO';\r\n\r\nexport const GET_ALL_EDUCATION = 'GET_ALL_EDUCATION';\r\n\r\nexport const SET_STUDENT_AS_USER = 'SET_STUDENT_AS_USER';\r\n\r\nexport const GET_STUDENT_LIST = 'GET_STUDENT_LIST';\r\n\r\nexport const GET_EDUCATION_BY_USER = 'GET_EDUCATION_BY_USER';\r\n\r\nexport const GET_ALL_COMPETENCY = 'GET_ALL_COMPETENCY';\r\n\r\nexport const GET_ACHIEVEMENT_BY_USER = 'GET_ACHIEVEMENT_BY_USER';\r\n\r\nexport const GET_All_ORAGNIZATION = 'GET_All_ORAGNIZATION';\r\n\r\nexport const GET_RECOMMENDATION_BY_USER = 'GET_RECOMMENDATION_BY_USER';\r\n\r\nexport const UPDATE_STUDENT_INFO = 'UPDATE_STUDENT_INFO';\r\n\r\nexport const GET_HEADER_COUNT = 'GET_HEADER_COUNT';\r\n\r\nexport const UPDATE_HEADER_COUNT = 'UPDATE_HEADER_COUNT';\r\n\r\nexport const CHANGE_PASSWORD_STATUS = 'CHANGE_PASSWORD_STATUS';\r\n\r\nexport const REMOVE_STUDENT_DATA = 'REMOVE_STUDENT_DATA';\r\n\r\nexport const UPDATE_USER_PERSONAL_INFO = 'UPDATE_USER_PERSONAL_INFO';\r\n\r\nexport const UPDATE_PARENT_PERSONAL_INFO = 'UPDATE_PARENT_PERSONAL_INFO';\r\n\r\nexport const GET_ACHIEVEMENT_DATA = 'GET_ACHIEVEMENT_DATA';\r\n\r\nexport const UPDATE_FEED_GROUP_INFO = 'UPDATE_FEED_GROUP_INFO';\r\n\r\nexport const GROUP_LIST_DATA = 'GROUP_LIST_DATA';\r\n","export default {\r\n  login: {\r\n    url: '/app/login',\r\n    method: 'POST',\r\n    data: {\r\n      email: '',\r\n      password: '',\r\n      deviceId: ''\r\n    },\r\n    showResultMessage: false,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  updateUserStatus: {\r\n    url: '/ui/user/updateUserStatus',\r\n    method: 'PUT',\r\n    data: {\r\n      userId: '',\r\n      isActive: ''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  signupUser: {\r\n    url: 'app/signup',\r\n    method: 'POST',\r\n    data: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',    \r\n      roleId: '',    \r\n      userId: '',\r\n      createdBy:''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  }, \r\n\r\n  signupHR: {\r\n    url: 'app/signuphr',\r\n    method: 'POST',\r\n    data: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',    \r\n      roleId: '',    \r\n      userId: '',     \r\n      companyId:'',\r\n      companyName:''     \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  }, \r\n\r\n  signupParent: {\r\n    url: '/app/signup',\r\n    method: 'POST',\r\n    data: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      roleId: '',\r\n      students: [],\r\n      invite: '',\r\n      userId: '',\r\n      password: '',\r\n      dob: ''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n  \r\n  emailVerify: {\r\n    url: '/app/user/verify',\r\n    method: 'PUT',\r\n    data: {\r\n      code: ''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  roleType: {\r\n    url: '/app/roleType',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  forgotPassword: {\r\n    url: '/app/forgot/password?email=:email',\r\n    method: 'POST',\r\n    data: {},\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  resetPassword: {\r\n    url: '/app/reset/password',\r\n    method: 'POST',\r\n    data: {\r\n      code: '',\r\n      newPassword: ''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  logout: {\r\n    url: '/ui/logout',\r\n    method: 'post',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  changePassword: {\r\n    url: '/ui/update/password',\r\n    method: 'POST',\r\n    data: {\r\n      oldPassword: '',\r\n      newPassword: ''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n\r\n  getUserDetails: {\r\n    url: '/ui/user?userId=:userId',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  addResume: {\r\n    url: '/ui/userProfile/addResume',\r\n    method: 'PUT',\r\n    data: {\r\n      userProfileId:'',\r\n      userId:'',\r\n      resumeURL:'',\r\n      resumeName:''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  addVideo: {\r\n    url: '/ui/userProfile/saveVideo',\r\n    method: 'PUT',\r\n    data: {\r\n      userId:'',\r\n      userProfileId:'',\r\n      videoLink:''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n\r\n  getEmploymentListById: {\r\n    url: '/ui/employment?userId=:userId',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  addEmployment: {\r\n    url: '/ui/employment',\r\n    method: 'POST',\r\n    data: {      \r\n      userId:'',\r\n      designation:'',\r\n      organisation:'',\r\n      currentCompany:'',\r\n      currentSalary:'',\r\n      currentSalaryInLakh:'',\r\n      currentSalaryInThousand:'',\r\n      describe:'',\r\n      noticePeriod:'',\r\n      offeredSalary:'',\r\n      offeredSalaryInLakh:'',\r\n      offeredSalaryInThousand:'',\r\n      offeredDesignation:'',\r\n      startDate:'',\r\n      endDate:'',\r\n      lastWorkingDate:'',\r\n      nextEmployer:''    \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  editEmployment: {\r\n    url: 'ui/employment',\r\n    method: 'PUT',\r\n    data: {\r\n      userId:'',\r\n      employmentId:'',\r\n      designation:'',\r\n      organisation:'',\r\n      currentCompany:'',\r\n      currentSalary:'',\r\n      currentSalaryInLakh:'',\r\n      currentSalaryInThousand:'',\r\n      describe:'',\r\n      noticePeriod:'',\r\n      offeredSalary:'',\r\n      offeredSalaryInLakh:'',\r\n      offeredSalaryInThousand:'',\r\n      offeredDesignation:'',\r\n      startDate:'',\r\n      endDate:'',\r\n      lastWorkingDate:'',\r\n      nextEmployer:''    \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  deleteEmployment: {\r\n    url: 'ui/employment?employmentId=:employmentId',\r\n    method: 'DELETE',\r\n    data: { },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  getSkillsListById: {\r\n    url: 'api/v1/public/user/web/getSkillsListById/:userId',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  //predefined values\r\n  getKeySkillsList: {\r\n    url: '/ui/skills',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  //predefined values\r\n  getProfileRoleList: {\r\n    url: '/ui/profileRole',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n  \r\n  //predefined values\r\n  getCompanyList: {\r\n    url: '/app/company',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n  \r\n  \r\n  getProjectListById: {\r\n    url: '/ui/project?userId=:userId',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  getAssociatedListDataByUserId: {\r\n    url: 'api/v1/public/user/web/getAssociatedListDataByUserId/:userId',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  addProject: {\r\n    url: '/ui/project',\r\n    method: 'POST',\r\n    data: {      \r\n      userId:'',\r\n      projectName : '',\r\n      projectURL : '',\r\n      associatedWith : '',\r\n      projectFinished : '',       \r\n      description : '',     \r\n      startDate:'',\r\n      endDate:''         \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  editProject: {\r\n    url: '/ui/project',\r\n    method: 'PUT',\r\n    data: {\r\n      userId:'',\r\n      projectName : '',\r\n      projectURL : '',\r\n      associatedWith : '',\r\n      projectFinished : '',       \r\n      description : '',     \r\n      startDate:'',\r\n      endDate:'',\r\n      projectId:''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n\r\n  getDesiredProfileListById: {\r\n    url: '/ui/careerProfile?userId=:userId',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n\r\n  addCareerProfile: {\r\n    url: '/ui/careerProfile',\r\n    method: 'POST',\r\n    data: {      \r\n        userId:'',\r\n        industry : '',\r\n        functionalArea : '',\r\n        role : '',\r\n        jobType : '',       \r\n        employmentType : '',     \r\n        desiredShift:  '',\r\n        expectedSalary : '',       \r\n        expectedSalaryInLakh : '',     \r\n        expectedSalaryInThousand:  '',\r\n        desiredLocation : [],       \r\n        desiredIndustry : []       \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  editDesiredProfileData: {\r\n    url: '/ui/careerProfile',\r\n    method: 'PUT',\r\n    data: {\r\n      userId:'',\r\n        industry : '',\r\n        functionalArea : '',\r\n        role : '',\r\n        jobType : '',  \r\n        profileId:'',     \r\n        employmentType : '',     \r\n        desiredShift:  '',\r\n        expectedSalary : '',       \r\n        expectedSalaryInLakh : '',     \r\n        expectedSalaryInThousand:  '',\r\n        desiredLocation : [],       \r\n        desiredIndustry : []      \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  addJobDescription: {\r\n    url: '/ui/jobDescription',\r\n    method: 'POST',\r\n    data: {      \r\n        userId:'' ,       \r\n        title : '',\r\n        titleId : '',\r\n        description : '',\r\n        noOfPosition : 0,\r\n        minExperience : 0,                \r\n        maxExperience : 0,    \r\n        location : [],    \r\n        postedBy: '',  \r\n        skills: [],\r\n        jobDescId:''      \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  getJobDescriptonListById: {\r\n    url: '/ui/jobDescription?userId=:userId',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  editJobDescriptionData: {\r\n    url: '/ui/jobDescription',\r\n    method: 'PUT',\r\n    data: {\r\n      recruiterId:'' ,\r\n      companyId:'',\r\n      title : '',\r\n      description : '',\r\n      noOfPosition : '',\r\n      minExperience : '',                \r\n      maxExperience : '',    \r\n      location : [],      \r\n      skills: [],\r\n      postedBy: '', \r\n      jobDescId:'' \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  addUserSkills: {\r\n    url: '/ui/userProfile',\r\n    method: 'POST',\r\n    data: { \r\n     userId:'',\r\n     roleId:'',\r\n     skills:[],    \r\n     profileRole:[],\r\n     experienceInYear:0,\r\n     experienceInMonth:0,\r\n     currentLocation:0,\r\n     mobileNo:0 \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  getUserSkillsById: {\r\n    url: '/ui/userProfile?userId=:userId',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  editUserSkills: {\r\n    url: '/ui/userProfile',\r\n    method: 'PUT',\r\n    data: {\r\n      userId:'',\r\n      userProfileId:'',  \r\n      skills:[]\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  editUserProfile: {\r\n    url: '/ui/userProfile',\r\n    method: 'PUT',\r\n    data: {\r\n      userId:'',\r\n      roleId:'',\r\n      userProfileId:'',        \r\n      profileRole:[],\r\n      skills:[],\r\n      experienceInYear:0,\r\n      experienceInMonth:0,\r\n      currentLocation:0,\r\n      mobileNo:0 \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  createInterviewersSkills: {\r\n    url: 'api/v1/public/user/web/createInterviewersSkills',\r\n    method: 'POST',\r\n    data: {       \r\n      userId:'',\r\n      keySkillId:'',\r\n      skillId:''    \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  getInterviewersSkillsListById: {\r\n    url: 'api/v1/public/user/web/getInterviewersSkillsListById/:userId',\r\n    method: 'GET',\r\n    data: {},\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  editInterviewersSkillsData: {\r\n    url: 'api/v1/public/user/web/editInterviewersSkillsData',\r\n    method: 'PUT',\r\n    data: {      \r\n      userId:'',\r\n      skills:'',\r\n      skillId:''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  createSlot: {\r\n    url: '/ui/timeSlot',\r\n    method: 'POST',\r\n    data: {\r\n      slotId:'',\r\n      slotRegisteredDate:'',\r\n      startTimeStamp: '',\r\n      endTimeStamp:'',\r\n      interviewerId: '',\r\n      userId:''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  modifySlot: {\r\n    url: '/ui/timeSlot',\r\n    method: 'PUT',\r\n    data: {\r\n      slotId:'',\r\n      slotRegisteredDate:'',\r\n      startTimeStamp: '',\r\n      endTimeStamp:'',\r\n      interviewerId: '',\r\n      userId:''\r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  bookedTimeSlot : {\r\n    url: '/ui/bookedTimeSlot',\r\n    method: 'POST',\r\n    data: {\r\n      userId:'',\r\n      slotRegisteredDate:''\r\n    },\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  deleteTimeSlotByInterviewer : {\r\n    url: '/ui/deleteTimeSlot?slotId=:slotId',\r\n    method: 'GET',\r\n    data: {     \r\n    },\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  getTimeSlotByInterviewer : {\r\n    url: '/ui/timeSlot?interviewerId=:interviewerId',\r\n    method: 'GET',\r\n    data: {     \r\n    },\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  getTimeSlotByUser : {\r\n    url: '/ui/timeSlot?userId=:userId',\r\n    method: 'GET',\r\n    data: {     \r\n    },\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  saveChatLink: {\r\n      url: '/ui/saveChatLink',\r\n      method: 'PUT',\r\n      data: {\r\n        slotId:'',\r\n        roleId:'',\r\n        videoChatLink:'',\r\n        userId:''\r\n      },\r\n      showResultMessage: true,\r\n      showErrorMessage: true\r\n  },\r\n\r\n  getCandidateList : {\r\n    url: '/ui/candidateList?userId=:userId',\r\n    method: 'GET',\r\n    data: {    \r\n    },\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  getHrList : {\r\n    url: '/ui/hrList?userId=:userId',\r\n    method: 'GET',\r\n    data: {    \r\n    },\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  createJobMap: {\r\n    url: '/ui/jobMap',\r\n    method: 'POST',\r\n    data: {\r\n      jobMapId:'',\r\n      jobId:'',\r\n      candidateId: '',\r\n      hrId:'',\r\n      status:'',\r\n      createdBy: ''     \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n  \r\n  updateProfileImage: {\r\n    url: '/ui/user',\r\n    method: 'PUT',\r\n    data: {\r\n      profilePicture: '',\r\n      userId: ''\r\n    },\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n\r\n  updateJobMap: {\r\n    url: '/ui/jobMap',\r\n    method: 'PUT',\r\n    data: {\r\n      jobMapId:'',\r\n      jobId:'',\r\n      candidateId: '',\r\n      hrId:'',\r\n      status:'',\r\n      createdBy: ''     \r\n    },\r\n    showResultMessage: true,\r\n    showErrorMessage: true\r\n  },\r\n\r\n\r\n  getUserListForMapping : {\r\n    url: '/ui/jobMap?jobId=:jobId',\r\n    method: 'GET',\r\n    data: {    \r\n    },\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n  getUserListForHR : {\r\n    url: '/ui/getListForHR?jobId=:jobId',\r\n    method: 'GET',\r\n    data: {    \r\n    },\r\n    showResultMessage: false,\r\n    showErrorMessage: false\r\n  },\r\n\r\n\r\n\r\n};\r\n","import axios from 'axios';\r\n\r\nimport ApiJson from './apiConfigJson';\r\nimport {\r\n  showErrorToast,\r\n  showSuccessToast,\r\n  getAPIURL,\r\n  getLocalStorage\r\n} from '../../commonFunctions';\r\nimport { get } from 'http';\r\n\r\nlet apiFailCounter = 0;\r\n\r\naxios.defaults.baseURL =\r\n  getAPIURL().httpServer + getAPIURL().APIURL + \":\" + getAPIURL().APIPort;\r\n\r\naxios.interceptors.request.use(\r\n  function(config) {\r\n    let userInfo = getLocalStorage('userInfo');\r\n    if (userInfo) {\r\n      if (userInfo.token) {\r\n        let access_token = userInfo.token;\r\n        config.headers.Authorization = `Spike ${access_token}`;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  function(error) {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst prepareDataObject = (_data_, paramObj) => {\r\n  for (let key in _data_) {\r\n    if (paramObj[key] || paramObj[key] === false) {\r\n      _data_[key] = paramObj[key];\r\n    } else {\r\n      if (typeof _data_[key] !== 'object') _data_[key] = '';\r\n    }\r\n  }\r\n  return _data_;\r\n};\r\n\r\nconst injectParamsToUrl = (_url_, paramObj) => {\r\n  var url = _url_;\r\n  for (let key in paramObj) {\r\n    url = url.replace(':' + key, paramObj[key]);\r\n  }\r\n  return url;\r\n};\r\n\r\nconst handleErrorByStatus = error => {\r\n  if (error && error.status === 'Error') {\r\n    const message = error.message;\r\n    showErrorToast(message);\r\n  }\r\n};\r\n\r\nconst theRapidHireApiService = (apiKeyName, data) => {\r\n  let apiDetails = ApiJson[apiKeyName];\r\n  if (!apiDetails) {\r\n    console.log(\r\n      'Api configuration do not found in api-json, please check api-json.js'\r\n    );\r\n    throw new Error(\r\n      'Api configuration do not found in api-json, please check api-json.js'\r\n    );\r\n  }\r\n\r\n  let requestObject = Object.assign({}, apiDetails);\r\n  requestObject.data = prepareDataObject(requestObject.data, data);\r\n  requestObject.url = injectParamsToUrl(requestObject.url, data);\r\n\r\n  return axios(requestObject)\r\n    .then(function(result) {\r\n      apiFailCounter = 0;\r\n      if (result.data && result.data.status === 'Success') {\r\n        if (result.data.message) {\r\n          const message = result.data.message;\r\n          if (requestObject.showResultMessage === true)\r\n            showSuccessToast(message);\r\n        }\r\n      } else {\r\n        handleErrorByStatus(result.data);\r\n      }\r\n      return result;\r\n    })\r\n    .catch(function(error) {\r\n      console.log('error', error);\r\n      if (error && error.response) {\r\n        if (requestObject.showErrorMessage === true)\r\n          handleErrorByStatus(error.response);\r\n      }\r\n\r\n      if (\r\n        error.config.maxContentLength - 1 &&\r\n        error.toString().indexOf('Network Error') > -1\r\n      ) {\r\n        apiFailCounter++;\r\n        if (apiFailCounter >= 3) {\r\n          localStorage.clear();\r\n          window.open(window.location.origin, '_self');\r\n        }\r\n      }\r\n      return error.response;\r\n    });\r\n};\r\n\r\nexport default theRapidHireApiService;\r\n","import {\r\n  USER_LOGIN,\r\n  USER_LOGOUT,\r\n  GET_STUDENT_PERSONAL_INFO,\r\n  SET_STUDENT_AS_USER,\r\n  GET_STUDENT_LIST,\r\n  UPDATE_STUDENT_INFO,\r\n  GET_HEADER_COUNT,\r\n  UPDATE_HEADER_COUNT,\r\n  CHANGE_PASSWORD_STATUS,\r\n  REMOVE_STUDENT_DATA,\r\n  UPDATE_USER_PERSONAL_INFO,\r\n  UPDATE_PARENT_PERSONAL_INFO,\r\n  UPDATE_FEED_GROUP_INFO,\r\n  GROUP_LIST_DATA\r\n} from '../types';\r\nimport theRapidHireApiService from '../../api/apiService';\r\n\r\nexport const actionUserLogin = data => {\r\n  const request = theRapidHireApiService('login', data);\r\n  return {\r\n    type: USER_LOGIN,\r\n    payload: request\r\n  };\r\n};\r\n\r\nexport const actionUserLogout = () => {\r\n  const request = theRapidHireApiService('logout');\r\n  return {\r\n    type: USER_LOGOUT,\r\n    payload: request\r\n  };\r\n};\r\n\r\nexport const actionGetStudentPersonalInfo = userId => {\r\n  const request = theRapidHireApiService('getStudentPersonalInfo', { userId });\r\n  return {\r\n    type: GET_STUDENT_PERSONAL_INFO,\r\n    payload: request\r\n  };\r\n};\r\n\r\nexport const actionSetStudentAsUser = data => {\r\n  return {\r\n    type: SET_STUDENT_AS_USER,\r\n    payload: { otherUserInfoData: data.otherUserInfoData }\r\n  };\r\n};\r\n\r\nexport const actionGetStudentList = userId => {\r\n  const request = theRapidHireApiService('getStudentsByParentProfile', { userId });\r\n  return {\r\n    type: GET_STUDENT_LIST,\r\n    payload: request\r\n  };\r\n};\r\n\r\nexport const actionGetStudentUpdatedInfo = data => {\r\n  const request = data;\r\n  return {\r\n    type: UPDATE_STUDENT_INFO,\r\n    payload: request\r\n  };\r\n};\r\n\r\nexport const actionGetHeaderCount = userId => {\r\n  const request = theRapidHireApiService('getHeaderCount', { userId });\r\n  return {\r\n    type: GET_HEADER_COUNT,\r\n    payload: request\r\n  };\r\n};\r\n\r\nexport const actionUpdateHeaderCount = data => {\r\n  const request = theRapidHireApiService('updateHeaderCount', data);\r\n  return {\r\n    type: UPDATE_HEADER_COUNT,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const actionChangePasswordStatus = () => {\r\n  return {\r\n    type: CHANGE_PASSWORD_STATUS\r\n  };\r\n};\r\n\r\nexport const actionRemoveStudent = data => {\r\n  return {\r\n    type: REMOVE_STUDENT_DATA,\r\n    payload: data\r\n  };\r\n};\r\n\r\nexport const actionUpdateUserInfo = data => {\r\n  const request = data;\r\n  return {\r\n    type: UPDATE_USER_PERSONAL_INFO,\r\n    payload: request\r\n  };\r\n};\r\n\r\nexport const actionUpdateGroupInfo = data => {\r\n  const request = data;\r\n  return {\r\n    type: UPDATE_FEED_GROUP_INFO,\r\n    payload: request\r\n  };\r\n};\r\n\r\nexport const actionSetGroupList = userId => {\r\n  console.log(userId);\r\n  const request = theRapidHireApiService('getGroupListByUser', userId);\r\n  return {\r\n    type: GROUP_LIST_DATA,\r\n    payload: request\r\n  };\r\n};\r\n\r\nexport const actionUpdateParentInfo = data => {\r\n  const request = data;\r\n  return {\r\n    type: UPDATE_PARENT_PERSONAL_INFO,\r\n    payload: request\r\n  };\r\n};\r\n","import {\r\n  GET_EDUCATION_BY_USER,\r\n  GET_ALL_COMPETENCY,\r\n  GET_ACHIEVEMENT_BY_USER,\r\n  GET_All_ORAGNIZATION,\r\n  GET_ACHIEVEMENT_BY_ID,\r\n  GET_RECOMMENDATION_BY_USER,\r\n  GET_ACHIEVEMENT_DATA\r\n} from '../types';\r\nimport theRapidHireApiService from '../../api/apiService';\r\n\r\nexport const actionGetAllEducation = userId => {\r\n  const request = theRapidHireApiService('getAllEducation', { userId });\r\n  return {\r\n    type: GET_EDUCATION_BY_USER,\r\n    payload: request\r\n  };\r\n};\r\n\r\nexport const actionGetAllCompetency = () => {\r\n  const request = theRapidHireApiService('getAllCompetency');\r\n  return {\r\n    payload: request,\r\n    type: GET_ALL_COMPETENCY\r\n  };\r\n};\r\n\r\nexport const actionGetAchievementsByUser = userId => {\r\n  const request = theRapidHireApiService('listAchievementByUser', { userId });\r\n  return {\r\n    payload: request,\r\n    type: GET_ACHIEVEMENT_BY_USER\r\n  };\r\n};\r\n\r\nexport const actionGetAchievementsData = userId => {\r\n  const request = theRapidHireApiService('listAchievementByUser1', { userId });\r\n  return {\r\n    payload: request,\r\n    type: GET_ACHIEVEMENT_DATA\r\n  };\r\n};\r\n\r\nexport const actionListOragnization = () => {\r\n  const request = theRapidHireApiService('ListOragnization');\r\n  return {\r\n    payload: request,\r\n    type: GET_All_ORAGNIZATION\r\n  };\r\n};\r\n\r\nexport const actionGetRecommendationsByUser = userId => {\r\n  const request = theRapidHireApiService('listRecommendationByUser', { userId });\r\n  return {\r\n    payload: request,\r\n    type: GET_RECOMMENDATION_BY_USER\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n//import { Field, reduxForm } from 'redux-form';\r\n//import renderField from 'components/FormInputs/renderField';\r\nimport {\r\n  getLocalStorage,\r\n  encrypt,\r\n  decrypt,\r\n  getIPAddress,\r\n  ZoomInAndOut,\r\n  renderMessage,showErrorToast\r\n} from '../../common/commonFunctions';\r\nimport cube from '../../common/commonFunctions';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  InputGroup,\r\n  FormControl,\r\n  Nav,\r\n  NavItem\r\n} from 'react-bootstrap';\r\n\r\nimport { actionUserLogin } from '../core/redux/actions';\r\nimport { actionSetStudentAsUser } from '../core/redux/actions';\r\nimport Sidebar from './sideBar';\r\n\r\nimport CONSTANTS from '../core/config/appConfig';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\n\r\nfunction getUrlParameter(name, url) {\r\n  name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n  var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\r\n  var results = regex.exec(url);\r\n  // return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ''));\r\n  return results === null ? '' : decodeURIComponent(results[1]);\r\n}\r\n\r\nclass Login extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      isLoading: false\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        email: 'required|email',\r\n        password: ['required', 'regex:' + regExpressions.passwordPattern]\r\n      },\r\n      {\r\n        'required.email': validationMessages.email.required,\r\n        'email.email': validationMessages.email.invalid,\r\n        'required.password': validationMessages.password.required,\r\n        'regex.password': validationMessages.password.passwordPattern\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    let _this = this;\r\n    var isIE = /*@cc_on!@*/ false || !!document.documentMode;\r\n    var isEdge = !isIE && !!window.StyleMedia;\r\n    if (!isEdge) {\r\n      getIPAddress(function(ip) {\r\n        _this.setState({\r\n          deviceId: ip\r\n        });\r\n      });\r\n    } else {\r\n      _this.setState({\r\n        deviceId: '0.0.0.0'\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.body.classList.remove('light-theme');\r\n    document.body.classList.remove('home');\r\n    document.body.classList.remove('fixedHeader');\r\n\r\n  \r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        self.handleSubmit();\r\n      }\r\n    });\r\n  };\r\n\r\n  submitData = event => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.validateData();\r\n    }\r\n  };\r\n\r\n  handleSubmit() {\r\n    let self = this;\r\n    let email = null;\r\n    let password = null;\r\n    let url = this.state.matchUrl || this.props.match.url;\r\n    let groupId = null;\r\n\r\n    if (\r\n      this.props.match.url.indexOf('/autoLogin/') >= 0 &&\r\n      this.props.match.params &&\r\n      this.props.match.params.user &&\r\n      this.props.match.params.pass\r\n    ) {\r\n      email = this.props.match.params.user.trim();\r\n      password = this.props.match.params.pass.trim();\r\n    } else if (\r\n      this.props.match.url.indexOf('/recommendation/') >= 0 &&\r\n      this.props.match.params.email &&\r\n      this.props.match.params.pass &&\r\n      this.props.match.params.pass !== 'null'\r\n    ) {\r\n      email = this.props.match.params.email.toLowerCase().trim();\r\n      password = this.props.match.params.pass.trim();\r\n    } else if (\r\n      this.props.match.url.indexOf('/previewprofile/') >= 0 &&\r\n      this.props.match.params.email &&\r\n      this.props.match.params.pass &&\r\n      this.props.match.params.pass !== 'null'\r\n    ) {\r\n      email = this.props.match.params.email.toLowerCase().trim();\r\n      password = this.props.match.params.pass.trim();\r\n    } else if (url.indexOf('/joingroup') >= 0) {\r\n      let search = this.state.search\r\n        ? this.state.search\r\n        : this.props.location.search;\r\n      let parsedGroupId = getUrlParameter('groupId', search);\r\n      let parsedEmail = getUrlParameter('email', search);\r\n      let parsedPass = getUrlParameter('pass', search);\r\n      if (parsedEmail && parsedPass && parsedPass !== 'null') {\r\n        groupId = parsedGroupId;\r\n        email = parsedEmail.toLowerCase().trim();\r\n        password = parsedPass.trim();\r\n      } else if (parsedGroupId) {\r\n        groupId = parsedGroupId;\r\n        email = this.state.email.toLowerCase().trim();\r\n        password = encrypt(this.state.password.trim());\r\n      }\r\n    } else {\r\n      email = this.state.email.toLowerCase().trim();\r\n      password = encrypt(this.state.password.trim());\r\n    }\r\n\r\n    let deviceId = this.state.deviceId;\r\n\r\n    let data = {\r\n      email,\r\n      password,\r\n      deviceId\r\n    };\r\n \r\n    this.props\r\n    .actionUserLogin(data)\r\n    .then(response => {\r\n      console.log(response);      \r\n      if (response.payload && response.payload.data.status === 'Success') {        \r\n          self.setState({ isLoading: false });\r\n          const userResponse = response.payload.data.result;\r\n          if (userResponse && userResponse.token) {\r\n            if (userResponse.roleId === 1)\r\n              self.props.history.push('/user/profile');          \r\n            else if (userResponse.roleId === 2)\r\n              self.props.history.push('/interviewer/interviewerProfile');\r\n              else if (userResponse.roleId === 3)\r\n              self.props.history.push('/recruiter/jobDesription');\r\n              else if (userResponse.roleId === 4)\r\n              self.props.history.push('/admin/candidate');\r\n        }\r\n      } else { \r\n        self.setState({ isLoading: false, password: '' });\r\n      }\r\n    })\r\n      .catch(error => {\r\n        self.setState({\r\n          isLoading: false,\r\n          password: ''\r\n        });\r\n        console.log('err', error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n<div>   <div className=\"wrapper\">\r\n        \r\n<ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        /> \r\n          <div className=\"main-panel\">   \r\n     \r\n      <div className=\"login_card\">\r\n      <div className=\"header forgotPasswordForm bg-transparent\">\r\n        <h4 className=\"h4login\">  <legend className=\"color-blue mb-0\">Login</legend></h4>\r\n      </div>     \r\n      <div className=\"content\">\r\n        <form className=\"form-horizontal\">\r\n  \r\n          <div className=\"form-group\">\r\n            <label className=\"col-md-3 control-label\">Email</label>\r\n            <div className=\"col-md-9\">\r\n            <FormGroup className={this.getClasses('email')}>\r\n               \r\n                  {/* <InputGroup.Addon>\r\n                    <span className=\"icon-email\" />\r\n                  </InputGroup.Addon> */}\r\n                  <FormControl\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  />\r\n               \r\n                {renderMessage(this.props.getValidationMessages('email'))}\r\n              </FormGroup>    \r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"form-group\">\r\n            <label className=\"col-md-3 control-label\">Password</label>\r\n            <div className=\"col-md-9\">\r\n            <FormGroup className={this.getClasses('password')}>\r\n              \r\n                  {/* <InputGroup.Addon>\r\n                    <span className=\"icon-password\" />\r\n                  </InputGroup.Addon> */}\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    onKeyPress={this.submitData}                   \r\n                  />\r\n              \r\n                {renderMessage(this.props.getValidationMessages('password'))}\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"col-md-3\"></label>\r\n            <div className=\"col-md-9\">\r\n            <Link to=\"/forgot\" className=\"forgotPass\">\r\n                Forgot Password?\r\n              </Link>           \r\n            </div>\r\n          </div>\r\n  \r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"col-md-3\"></label>\r\n            <div className=\"col-md-9\">\r\n            <FormGroup>\r\n                <Button\r\n                  bsStyle=\"primary\"\r\n                  className=\"centeredBtn btn-lg\"\r\n                  disabled={isLoading}\r\n                  onClick={!isLoading ? this.validateData : null}\r\n                >\r\n                  {isLoading ? 'Checking Credentials...' : 'Sign In'}\r\n                </Button>\r\n              </FormGroup>\r\n              <Link style={{position :'absolute',right:'20px',bottom: '107px'}} \r\n                                                                                                    to={{\r\n                                                                                                      pathname: '/signup',\r\n                                                                                                      state: {\r\n                                                                                                        eventKey: 2\r\n                                                                                                      }\r\n                                                                                                    }}\r\n                >\r\n                      Register\r\n                      </Link>       \r\n              {/* <a style={{position :'absolute',right:'65px',bottom: '10px'}} href=\"https://theRapidHiremediastorage.blob.core.windows.net/theRapidHire-media-production/sv_1/PrivacyPolicy.html\" target=\"_blank\">\r\n           Terms and Condition\r\n        </a> */}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div>      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    { actionUserLogin, actionSetStudentAsUser },\r\n    dispatch\r\n  );\r\n};\r\n\r\nLogin = validation(strategy)(Login);\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React, { Component } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nclass Sidebar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className=\"overlay\" />\r\n        <a className=\"logo\" href=\"/\">\r\n          Spike View\r\n        </a>\r\n        <div className=\"custom-slider\">\r\n          <Carousel>\r\n            <Carousel.Item>\r\n              <h3>theRapidHire for Students</h3>\r\n              <p className=\"carouselTitle\">\r\n                Put a Spotlight on Your Life - Tell Your Story{' '}\r\n              </p>\r\n              <p className=\"carousel-content\">\r\n                Help the world discover the incredible person you are and all\r\n                the amazing accomplishments you’ve achieved—and every great\r\n                thing you’re going to do at school or in your community.\r\n              </p>\r\n            </Carousel.Item>\r\n            <Carousel.Item>\r\n              <h3>theRapidHire for Parents</h3>\r\n              <p className=\"carouselTitle\">\r\n                Highlight Your Student’s Accomplishments{' '}\r\n              </p>\r\n              <p className=\"carousel-content\">\r\n                Display your student’s excellence and growing skills through a\r\n                secure profile that evolves to match their flourishing talents\r\n                and track their lifelong achievements.\r\n              </p>\r\n            </Carousel.Item>\r\n\r\n            <Carousel.Item>\r\n              <h3>Dream It, Do It, Share It! </h3>\r\n              <p className=\"carouselTitle\">\r\n                Tell your story in your style - Security{' '}\r\n              </p>\r\n              <p className=\"carousel-content\">\r\n                Only share what you want, with who you want in with full data\r\n                and privacy control managed by you.\r\n              </p>\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Sidebar;\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  InputGroup,\r\n  FormControl,\r\n  Nav,\r\n  NavItem\r\n} from 'react-bootstrap';\r\n// import { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\n\r\nimport Sidebar from './sideBar';\r\nimport theRapidHireApiService from '../core/api/apiService';\r\nimport {\r\n  ZoomInAndOut,\r\n  renderMessage,\r\n  showErrorToast\r\n} from '../commonFunctions';\r\nimport CONSTANTS from '../core/config/appConfig';\r\nimport moment from 'moment';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../assets/react-datepicker';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet i = 0;\r\n\r\nclass Signup extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      parentEmail: '',\r\n      parentFirstName: '',\r\n      parentLastName: '',\r\n      roles: [],\r\n      roleId:\r\n        this.props.location.state &&\r\n        this.props.location.state.eventKey &&\r\n        this.props.location.state.eventKey === 2\r\n          ? 2\r\n          : 1,\r\n      eventKey:\r\n        this.props.location.state &&\r\n        this.props.location.state.eventKey &&\r\n        this.props.location.state.eventKey === 2\r\n          ? 2\r\n          : 3,\r\n      birthDate: '',\r\n      isOpen: false,\r\n      year: '',\r\n      month: '',\r\n      day: '',\r\n      parentField: false,\r\n      dob: ''\r\n    };\r\n\r\n    this.initialState = this.state;\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.setValidatorTypes = this.setValidatorTypes.bind(this);\r\n  }\r\n\r\n  async componentWillMount() {\r\n    this.getRoles();\r\n    this.setValidatorTypes(\r\n      this.props.location.state &&\r\n      this.props.location.state.eventKey &&\r\n      this.props.location.state.eventKey === 2\r\n        ? 2\r\n        : 3\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.setDatePickerPlaceHolder();\r\n  }\r\n\r\n  setValidatorTypes(type) {\r\n    let elementObject = {\r\n      firstName: ['required', 'regex:' + regExpressions.alphaOnly],\r\n      lastName: ['required', 'regex:' + regExpressions.alphaOnly],\r\n      email: 'required|email'\r\n    };\r\n\r\n    let messageObject = {\r\n      'required.firstName': validationMessages.firstName.required,\r\n      'regex.firstName': validationMessages.firstName.alphaOnly,\r\n      'required.lastName': validationMessages.lastName.required,\r\n      'regex.lastName': validationMessages.lastName.alphaOnly,\r\n      'required.email': validationMessages.email.required,\r\n      'email.email': validationMessages.email.invalid\r\n    };\r\n\r\n    if (parseInt(type, 10) === 3) {     \r\n    }\r\n\r\n    if (parseInt(type, 10) === 2) {    \r\n    }\r\n    this.validatorTypes = strategy.createSchema(elementObject, messageObject);\r\n  }\r\n\r\n  getValidatorData() {\r\n    return this.state;\r\n  }\r\n\r\n  getClasses(field) {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  }\r\n\r\n  getRoles = () => {\r\n    theRapidHireApiService('roleType', '')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          this.setState({ roles: response.data.result });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  setDatePickerPlaceHolder() {\r\n    try {\r\n      if (!this.state.birthDate)\r\n        document.getElementsByName('date')[0].style.visibility = 'visible';\r\n      else {\r\n        document.getElementsByName('date')[0].style.visibility = 'hidden';\r\n      }\r\n    } catch (error) {}\r\n  }\r\n\r\n  submitData = event => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.validateData();\r\n    }\r\n  };\r\n\r\n  validateData = () => {\r\n    let self = this;   \r\n    this.props.validate(function(error) {\r\n      if (!error) {\r\n        var email = self.state.email\r\n          ? self.state.email.toLowerCase().trim()\r\n          : '';       \r\n        \r\n          self.setState({ isLoading: true });\r\n          self.handleSubmit();\r\n        }      \r\n    });\r\n  };\r\n \r\n  handleSelect = eventKey => {\r\n    if (eventKey !== this.state.roleId) {\r\n      this.setState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        parentEmail: '',\r\n        parentFirstName: '',\r\n        parentLastName: '',\r\n        birthDate: '',\r\n        month: '',\r\n        day: '',\r\n        year: ''\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      roleId: eventKey == 2 ? 2 : 1,\r\n      eventKey: eventKey\r\n    });\r\n    this.props.clearValidations();\r\n    this.setValidatorTypes(eventKey);\r\n  };\r\n\r\n  handleResetForm = () => {\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  handleSubmit() {\r\n    console.log('handleSubmit');\r\n    let firstName = this.state.firstName.trim();\r\n    let lastName = this.state.lastName.trim();\r\n    let email = this.state.email.toLowerCase().trim();\r\n    let roleId = this.state.roleId;   \r\n\r\n    let self = this;    \r\n     \r\n      let data = {\r\n        firstName,\r\n        lastName,\r\n        email,      \r\n        roleId\r\n       // dob\r\n      };\r\n\r\n      theRapidHireApiService('signupUser', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {\r\n            self.handleResetForm();\r\n            setTimeout(function() {\r\n              self.props.history.push('/login');\r\n            }, 5000);\r\n          } else {\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          self.setState({ isLoading: false });\r\n          console.log(err);\r\n        });  \r\n\r\n  }\r\n  \r\n\r\n  \r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <div className=\"wrapper\">        \r\n          <div className=\"main-panel\">     \r\n            <div className=\"login_card\">\r\n               <div className=\"header\">\r\n       \r\n        <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        />\r\n        \r\n        <div className=\"formContent forgotPasswordForm bg-transparent\">\r\n          <div className=\"centeredBox p-6\">\r\n          <div className=\"flex align-center mb-1\">\r\n                  <Link to=\"/login\" className=\"md-icon mr-1\">\r\n                    <span className=\"icon-back_arrow2\" />\r\n                  </Link>\r\n                  <legend className=\"color-blue mb-0\">Back To Login</legend>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Nav bsStyle=\"tabs\" activeKey={this.state.eventKey == 2 ? 2 : 3}>            \r\n\r\n              <NavItem eventKey={2} onClick={this.handleSelect.bind(this, '2')}>\r\n              Interviewer SIGN UP\r\n              </NavItem>\r\n\r\n              <NavItem eventKey={3} onClick={this.handleSelect.bind(this, '3')}>\r\n                User SIGN UP\r\n              </NavItem>\r\n              <NavItem\r\n                  eventKey={4}\r\n                  onClick={() => this.props.history.push('/hrsignup')}\r\n                >\r\n                  HR SIGN UP\r\n                </NavItem>\r\n            </Nav>\r\n            <form>\r\n              {/* <div className=\"signupText\">\r\n                Sign up to theRapidHire as\r\n                <ButtonToolbar>\r\n                  <DropdownButton\r\n                    bsSize=\"xsmall\"\r\n                    title={this.state.roleId === 1 ? 'Student' : 'Parent'}\r\n                    id=\"dropdown-size-large\"\r\n                  >\r\n                    {this.state.roles.length > 0\r\n                      ? this.state.roles.map((role, index) => (\r\n                          <MenuItem\r\n                            key={index}\r\n                            eventKey={role.roleTypeId}\r\n                            onSelect={this.handleSelect}\r\n                          >\r\n                            {role.roleName}\r\n                          </MenuItem>\r\n                        ))\r\n                      : ''}\r\n                  </DropdownButton>\r\n                </ButtonToolbar>\r\n              </div> */}\r\n\r\n              <FormGroup className={this.getClasses('firstName')}>\r\n                <label className=\"form-label\">First Name</label>\r\n               \r\n                  {/* <InputGroup.Addon>\r\n                    <span className=\"icon-username\" />\r\n                  </InputGroup.Addon> */}\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    maxLength=\"35\"\r\n                  />\r\n               \r\n                {renderMessage(this.props.getValidationMessages('firstName'))}\r\n              </FormGroup>\r\n\r\n              <FormGroup className={this.getClasses('lastName')}>\r\n                <label className=\"form-label\">Last Name</label>\r\n                {/* <InputGroup>\r\n                  <InputGroup.Addon>\r\n                    <span className=\"icon-username\" />\r\n                  </InputGroup.Addon> */}\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    maxLength=\"35\"\r\n                  />             \r\n                {renderMessage(this.props.getValidationMessages('lastName'))}\r\n              </FormGroup>\r\n\r\n              <FormGroup className={this.getClasses('email')}>\r\n                <label className=\"form-label\">Email</label>              \r\n                  <FormControl\r\n                    type=\"Email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    onKeyPress={this.submitData}\r\n                  />               \r\n                {renderMessage(this.props.getValidationMessages('email'))}\r\n              </FormGroup>\r\n\r\n              {/* {this.state.roleId === 1 ? (\r\n                <FormGroup>\r\n                  <label className=\"form-label\">Date Of Birth</label>\r\n                  <div className=\"dob\">\r\n                    <div className={`form-group ${this.getClasses('year')}`}>\r\n                      <YearPicker\r\n                        id=\"year\"\r\n                        name=\"year\"\r\n                        classes=\"form-control\"\r\n                        defaultValue=\"Year\"\r\n                        start={1970}\r\n                        end={moment().year()}\r\n                        reverse\r\n                        value={this.state.year}\r\n                        onChange={year => this.selectDate('year', year)}\r\n                      />\r\n                      {renderMessage(this.props.getValidationMessages('year'))}\r\n                    </div>\r\n\r\n                    <div className={`form-group ${this.getClasses('month')}`}>\r\n                      <MonthPicker\r\n                        id=\"month\"\r\n                        name=\"month\"\r\n                        classes=\"form-control\"\r\n                        defaultValue=\"Month\"\r\n                        short\r\n                        endYearGiven\r\n                        year={this.state.year}\r\n                        value={this.state.month}\r\n                        onChange={month => this.selectDate('month', month)}\r\n                      />\r\n\r\n                      {renderMessage(this.props.getValidationMessages('month'))}\r\n                    </div>\r\n\r\n                    <div className={`form-group ${this.getClasses('day')}`}>\r\n                      <DayPicker\r\n                        defaultValue=\"Day\"\r\n                        id=\"day\"\r\n                        name=\"day\"\r\n                        classes=\"form-control\"\r\n                        year={this.state.year}\r\n                        month={this.state.month}\r\n                        endYearGiven\r\n                        value={this.state.day}\r\n                        onChange={day => this.selectDate('day', day)}\r\n                      />\r\n                      {renderMessage(this.props.getValidationMessages('day'))}\r\n                    </div>\r\n                  </div>\r\n                  <span\r\n                    className=\"error\"\r\n                    id=\"dateOfBirth\"\r\n                    style={{ display: 'none' }}\r\n                  >\r\n                    Please enter valid date of birth\r\n                  </span>                  \r\n                </FormGroup>\r\n              ) : (\r\n                ''\r\n              )} */}\r\n   \r\n              <FormGroup>\r\n                <Button\r\n                  bsStyle=\"primary\"\r\n                  className=\"centeredBtn btn-lg\"\r\n                  disabled={isLoading}\r\n                  onClick={!isLoading ? this.validateData : null}\r\n                >\r\n                  {isLoading ? 'In Progress...' : 'Sign Up'}\r\n                </Button>\r\n              </FormGroup>\r\n            </form>\r\n          </div>\r\n        </div> </div> </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSignup = validation(strategy)(Signup);\r\nexport default Signup;\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport classnames from 'classnames';\nimport { bindActionCreators } from 'redux';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  FormGroup,\n  InputGroup,\n  FormControl,\n  Nav,\n  NavItem\n} from 'react-bootstrap';\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\nimport * as qs from 'query-string';\nimport Select from 'react-select';\nimport { actionUserLogin } from '../core/redux/actions';\nimport Sidebar from './sideBar';\nimport theRapidHireApiService from '../core/api/apiService';\nimport {\n  ZoomInAndOut,\n  renderMessage,\n  showErrorToast,\n  encrypt,\n  getIPAddress\n} from '../commonFunctions';\nimport CONSTANTS from '../core/config/appConfig';\nimport moment from 'moment';\n\nlet validationMessages = CONSTANTS.validationMessages;\nlet regExpressions = CONSTANTS.regExpressions;\nlet i = 0;\n\nclass HRSignup extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      userId: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      newPassword: '',\n      confirmNewPassword: '',\n      parentEmail: '',\n      parentFirstName: '',\n      parentLastName: '',\n      year: '',\n      month: '',\n      day: '',\n      roleId:\n        this.props.location.state &&\n        this.props.location.state.eventKey &&\n        this.props.location.state.eventKey === 2\n          ? 1\n          : 1,\n      eventKey:\n        this.props.location.state &&\n        this.props.location.state.eventKey &&\n        this.props.location.state.eventKey === 2\n          ? 2\n          : 1,\n      parentField: false,\n      invite: CONSTANTS.INVITE_4,\n      invitedRoleId: 1,\n      otherCompanyName:false,\n      companyDetail:[]\n    };\n\n    this.initialState = this.state;\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getValidatorData = this.getValidatorData.bind(this);\n    this.getClasses = this.getClasses.bind(this);\n    this.setValidatorTypes = this.setValidatorTypes.bind(this);\n  }\n\n  componentWillMount() {\n    console.log('call');\n    this.setValidatorTypes(\n      this.props.location.state &&\n      this.props.location.state.eventKey &&\n      this.props.location.state.eventKey === 2\n        ? 2\n        : 1\n    );\n  }\n\n  componentDidMount() {\n    if (this.props.location.search) {\n      const parsed = qs.parse(this.props.location.search);\n      const invite = parsed.invite;\n      const userId = parsed.userId;\n      this.setState({\n        invite,\n        userId\n      });\n      this.setUserInfo(userId);\n      let _this = this;\n      getIPAddress(function(ip) {\n        _this.setState({\n          deviceId: ip\n        });\n      });\n    }\n    this.getCompanyList();\n  }\n\n  setUserInfo = userId => {\n    if (userId) {\n      theRapidHireApiService('getStudentPersonalInfoBeforeLogin', { userId })\n        .then(response => {\n          if (response.data.status === 'Success') {\n            let userData = response.data.result;\n            console.log(userData);\n            if (userData) {\n              let firstName = userData.firstName || '';\n              let lastName = userData.lastName || '';\n              let email = userData.email || '';\n              let roleId = userData.roleId === 0 ? 1 : userData.roleId;\n              let invitedRoleId = roleId;\n              if (userData.dob) {\n                let day = moment(userData.dob).format('D');\n                let month = Number(moment(userData.dob).format('M')) - 1;\n                let year = moment(userData.dob).format('YYYY');\n                console.log(day, month, year);\n                this.setState({\n                  day,\n                  month,\n                  year\n                });\n              }\n\n              if (this.state.invite === CONSTANTS.INVITE_0) {\n                this.setValidatorTypes(roleId);\n              }\n              this.setState({\n                firstName,\n                lastName,\n                email,\n                invitedRoleId,\n                roleId\n              });\n            }\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n  };\n\n  getCompanyList(){\n    theRapidHireApiService('getCompanyList')\n    .then(response => {     \n      if (response.data.status === 'Success') {\n         let companyDetail= this.state.companyDetail;\n         response.data.result.forEach(function(data){         \n         \n            companyDetail.push({label: data.companyName,value:data.companyId })\n        })     \n         this.setState({companyDetail: companyDetail});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  // type = 1 = student,   type = 2 = parent\n  setValidatorTypes(type) {\n    console.log(type);\n    type = Number(type);\n\n    // Common validation for student and parent\n    let elementObject = {\n      firstName: ['required', 'regex:' + regExpressions.alphaOnly],\n      lastName: ['required', 'regex:' + regExpressions.alphaOnly],\n      email: 'required|email',\n  // //   newPassword: ['required', 'regex:' + regExpressions.passwordPattern],\n    //  confirmNewPassword: 'required|same:newPassword'\n     \n    };\n\n    let messageObject = {\n      'required.firstName': validationMessages.firstName.required,\n      'regex.firstName': validationMessages.firstName.alphaOnly,\n      'required.lastName': validationMessages.lastName.required,\n      'regex.lastName': validationMessages.lastName.alphaOnly,\n      'required.email': validationMessages.email.required,\n      'email.email': validationMessages.email.invalid,\n //     'required.newPassword': validationMessages.password.newPassword,\n //     'regex.newPassword': validationMessages.password.passwordPattern,\n      // 'required.confirmNewPassword':\n      //   validationMessages.password.confirmNewPassword,\n      // 'same.confirmNewPassword': validationMessages.password.same\n     \n    };   \n    this.validatorTypes = strategy.createSchema(elementObject, messageObject);\n  }\n\n  getValidatorData() {\n    return this.state;\n  }\n\n  getClasses(field) {\n    return classnames({\n      error: !this.props.isValid(field)\n    });\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSelect = tabValue => {\n    let eventKey = Number(tabValue);\n    if (eventKey !== this.state.roleId && this.props.location.search === '') {\n      this.setState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        newPassword: '',\n        confirmNewPassword: '',\n        companyName:''\n        // parentEmail: '',\n        // parentFirstName: '',\n        // parentLastName: '',\n        // year: '',\n        // month: '',\n        // day: ''\n      });\n    }\n\n    this.setState({\n      roleId: 3,\n      eventKey: eventKey\n    });\n    this.props.clearValidations();\n    this.setValidatorTypes(eventKey);\n  };\n\n  handleResetForm = () => {\n    this.setState(this.initialState);\n  };\n\n  submitData = event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      this.validateData();\n    }\n  };\n\n  validateData = () => {\n    console.log('validateData -- ');\n    let self = this;\n    this.props.validate(function(error) {\n      if (!error) {       \n          //self.setState({ isLoading: true });\n          self.handleSubmit();        \n      }\n    });\n  };\n\n  handleCompanyChange = newValue => {\n    if(newValue.value == 1){\n       \n        // this.validatorTypes.rules['companyName'] = 'required|companyName';\n        // this.validatorTypes.messages['required.companyName'] =\n        //                                         'Please enter companyName';\n        this.setState({otherCompanyName: true});\n    }else{\n        // this.validatorTypes.rules['companyName'] = '';\n        // this.validatorTypes.messages['required.companyName'] =\n        //                                         'Please enter companyName';\n    }\n        this.setState({\n        company: newValue\n        });\n    \n  };\n\n  handleSubmit() {\n    let firstName = this.state.firstName.trim();\n    let lastName = this.state.lastName.trim();\n    let email = this.state.email.toLowerCase().trim();\n //   let password = encrypt(this.state.newPassword.trim());\n    let roleId = 3;\n    let userId = this.state.userId;\n    let deviceId = this.state.deviceId;\n    console.log(this.state.company);\n    let companyName = this.state.company && this.state.company.value !== 1? this.state.company.label: this.state.companyName;\n    let companyId= this.state.company && this.state.company.value !== 1 ? this.state.company.value: null\n    let students = [];    \n    let self = this;\n\n      let data = {\n        firstName,\n        lastName,\n        email,\n  //      password,\n      //  dob,\n    //    parentEmail,\n     //   parentFirstName,\n     //   parentLastName,\n        roleId,\n        companyId,\n        companyName,\n    //    invite,\n         userId:''\n      };\n\n      console.log(data);\n\n      theRapidHireApiService('signupHR', data)\n        .then(response => {\n          if (response.data.status === 'Success') {\n            if (\n              self.state.invite === CONSTANTS.INVITE_1 ||\n              self.state.invite === CONSTANTS.INVITE_2 ||\n              self.state.invite === CONSTANTS.INVITE_3\n            ) {\n              let loginData = {\n                email,                \n                deviceId\n              };\n\n              this.props\n                .actionUserLogin(loginData)\n                .then(response => {\n                  if (\n                    response.payload &&\n                    response.payload.data.status === 'Success'\n                  ) {\n                    self.setState({\n                      isLoading: false\n                    });\n                    const userResponse = response.payload.data.result;\n                    if (userResponse && userResponse.token) {\n                      if (userResponse.roleId === 1) {                     \n                      \n                      }\n                    }\n                  }\n                })\n                .catch(error => {\n                  self.setState({\n                    isLoading: false,\n                    password: ''\n                  });\n                  console.log('err', error);\n                });\n            } else {\n              self.setState({\n                isLoading: false,\n                firstName: '',\n                lastName: '',\n                email: '',\n                newPassword: '',\n                confirmNewPassword: '',\n                // day: '',\n                // month: '',\n                // year: '',\n                // parentFirstName: '',\n                // parentLastName: ''\n              });\n              setTimeout(function() {\n                self.props.history.push('/login');\n              }, 5000);\n            }\n          } else {\n            self.setState({ isLoading: false });\n          }\n        })\n        .catch(err => {\n          self.setState({ isLoading: false });\n          console.log(err);\n        }); \n  \n  }\n\n  selectDate(type, value) {\n    if (this.state.roleId === CONSTANTS.STUDENT_ROLE) {\n      if (type === 'year') {\n        this.setState({ year: value }, () => this.checkAge());\n      }\n      if (type === 'month') {\n        this.setState({ month: value }, () => this.checkAge());\n      }\n      if (type === 'day') {\n        this.setState({ day: value }, () => this.checkAge());\n      }\n    } else if (this.state.roleId === CONSTANTS.PARENT_ROLE) {\n      if (type === 'year') {\n        this.setState({ year: value });\n      }\n      if (type === 'month') {\n        this.setState({ month: value });\n      }\n      if (type === 'day') {\n        this.setState({ day: value });\n      }\n    }\n  }\n\n  checkAge() {\n    if (this.state.year && this.state.month && this.state.day) {\n      let day = this.state.day;\n      let month = Number(this.state.month);\n      let year = this.state.year;\n\n      let birthDate = new Date(year, month, day);\n      var today = new Date();\n\n      if (birthDate > today) {\n        showErrorToast('Please select valid date');\n      }\n\n      let age = today.getFullYear() - birthDate.getFullYear();\n\n      if (\n        this.state.invite === CONSTANTS.INVITE_0 ||\n        this.state.invite === CONSTANTS.INVITE_1 ||\n        this.state.invite === CONSTANTS.INVITE_2 ||\n        this.state.invite === CONSTANTS.INVITE_3\n      ) {\n        this.setState({\n          parentField: false\n        });\n      } else if (age <= 13) {\n        this.setState({\n          parentField: true\n        });\n        this.validatorTypes.rules['parentEmail'] = 'required|email';\n        this.validatorTypes.messages['required.parentEmail'] =\n          'Please enter parent email address';\n        this.validatorTypes.messages['email.parentEmail'] =\n          'Please enter a valid parent email address';\n\n        this.validatorTypes.rules['parentFirstName'] =\n          'required|regex:' + regExpressions.alphaOnly;\n        this.validatorTypes.messages['required.parentFirstName'] =\n          validationMessages.parentName.required;\n        this.validatorTypes.messages['regex.parentFirstName'] =\n          validationMessages.parentName.alphaOnly;\n      } else {\n        this.setState({\n          parentField: false,\n          parentFirstName: '',\n          parentEmail: ''\n        });\n        this.validatorTypes.rules['parentEmail'] = 'email';\n        this.validatorTypes.messages['required.parentEmail'] = '';\n        this.validatorTypes.messages['email.parentEmail'] =\n          'Please enter a valid parent email address';\n\n        this.validatorTypes.rules['parentFirstName'] =\n          'regex:' + regExpressions.alphaOnly;\n        this.validatorTypes.messages['required.parentFirstName'] = '';\n      }\n    }\n  }  \n\n\n  render() {\n    const { isLoading } = this.state;\n    var readOnly = false;\n    if (\n      this.state.invite === CONSTANTS.INVITE_0 ||\n      this.state.invite === CONSTANTS.INVITE_1 ||\n      this.state.invite === CONSTANTS.INVITE_2 ||\n      this.state.invite === CONSTANTS.INVITE_3\n    ) {\n      readOnly = true;\n    } else {\n      readOnly = false;\n    }\n    return (\n    <div className=\"wrapper\">        \n      <div className=\"main-panel\">     \n        <div className=\"login_card\">\n           <div className=\"header\">\n       \n        <ToastContainer\n          autoClose={5000}\n          className=\"custom-toaster-main-cls\"\n          toastClassName=\"custom-toaster-bg\"\n          transition={ZoomInAndOut}\n        />\n          \n        <div className=\"formContent forgotPasswordForm bg-transparent\">\n          <div className=\"centeredBox p-7\">      \n          <div className=\"flex align-center mb-1\">\n                  <Link to=\"/login\" className=\"md-icon mr-1\">\n                    <span className=\"icon-back_arrow2\" />\n                  </Link>\n                  <legend className=\"color-blue mb-0\">Back To Login</legend>\n                </div>     \n                <Nav bsStyle=\"tabs\" activeKey={4}>               \n                <NavItem\n                  eventKey={2}\n                  onClick={() =>\n                    this.props.history.push({\n                      pathname: '/signup',\n                      state: {\n                        eventKey: 2\n                      }\n                    })\n                  }\n                >\n                  Interviewer SIGN UP\n                </NavItem>\n                <NavItem\n                  eventKey={1}\n                  onClick={() =>\n                    this.props.history.push({\n                      pathname: '/signup',\n                      state: {\n                        eventKey: 1\n                      }\n                    })\n                  }\n                >\n                  USER SIGN UP\n                </NavItem>\n                <NavItem\n                  eventKey={4}                 \n                >\n                  HR SIGN UP\n                </NavItem>\n              </Nav>\n           \n\n            <form>\n                      \n              <FormGroup className={this.getClasses('company')}>\n              <label className=\"form-label\">Add Company</label>\n              \n                    <div className=\"custom-select\">\n                      <span className=\"icon-down_arrow selectIcon\" />\n                      <Select\n                        className=\"form-control\"                        \n                        name=\"company\"\n                        value={this.state.company}\n                        onChange={this.handleCompanyChange}\n                        options={this.state.companyDetail}\n                        placeholder=\"Select company\"\n                      />\n                    </div>                   \n                   \n                    {renderMessage(this.props.getValidationMessages('company'))}\n                </FormGroup>\n\n                {this.state.otherCompanyName === true ?\n\n                <FormGroup className={this.getClasses('companyName')}>\n                    <label className=\"form-label\">Company Name</label>\n                  \n                    <FormControl\n                        type=\"text\"\n                        placeholder=\"Company Name\"\n                        name=\"companyName\"\n                        value={this.state.companyName}\n                        onChange={this.handleChange}\n                        autoComplete=\"off\"\n                        maxLength=\"35\"\n                    />\n                  \n                    {renderMessage(this.props.getValidationMessages('companyName'))}\n                </FormGroup> : null}\n\n              <FormGroup className={this.getClasses('firstName')}>\n                <label className=\"form-label\">First Name</label>\n              \n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    name=\"firstName\"\n                    value={this.state.firstName}\n                    onChange={this.handleChange}\n                    autoComplete=\"off\"\n                    maxLength=\"35\"\n                  />\n               \n                {renderMessage(this.props.getValidationMessages('firstName'))}\n              </FormGroup>\n\n              <FormGroup className={this.getClasses('lastName')}>\n                <label className=\"form-label\">Last Name</label>\n           \n                  <FormControl\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    name=\"lastName\"\n                    value={this.state.lastName}\n                    onChange={this.handleChange}\n                    autoComplete=\"off\"\n                    maxLength=\"35\"\n                  />\n                \n                {renderMessage(this.props.getValidationMessages('lastName'))}\n              </FormGroup>\n\n              <FormGroup className={this.getClasses('email')}>\n                <label className=\"form-label\">Email</label>\n               \n                  <FormControl\n                    type=\"Email\"\n                    placeholder=\"Email\"\n                    name=\"email\"                    \n                    value={this.state.email}\n                    onChange={this.handleChange}\n                    autoComplete=\"off\"\n                    onKeyPress={this.submitData}\n                  />\n            \n                {renderMessage(this.props.getValidationMessages('email'))}\n              </FormGroup>\n\n              {/* <FormGroup className={this.getClasses('newPassword')}>\n                <label className=\"form-label\">Password</label>\n              \n                  <FormControl\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"newPassword\"\n                    value={this.state.newPassword}\n                    onChange={this.handleChange}\n                    maxLength=\"20\"\n                    autoComplete=\"new-password\"\n                  />\n                \n                {renderMessage(this.props.getValidationMessages('newPassword'))}\n              </FormGroup>\n\n              <FormGroup className={this.getClasses('confirmNewPassword')}>\n                <label className=\"form-label\">Confirm Password</label>\n              \n                  <FormControl\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"confirmNewPassword\"\n                    value={this.state.confirmNewPassword}\n                    onChange={this.handleChange}\n                    maxLength=\"20\"\n                  />               \n                {renderMessage(\n                  this.props.getValidationMessages('confirmNewPassword')\n                )}\n              </FormGroup>\n */}\n\n              <FormGroup>\n                <Button\n                  bsStyle=\"primary\"\n                  className=\"centeredBtn btn-lg\"\n                  disabled={isLoading}\n                  onClick={!isLoading ? this.validateData : null}\n                >\n                  {isLoading ? 'In Progress...' : 'Sign Up'}\n                </Button>\n              </FormGroup>\n            </form>\n          </div> </div>\n        </div>\n      </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ actionUserLogin }, dispatch);\n};\n\nHRSignup = validation(strategy)(HRSignup);\nexport default connect(\n  null,\n  mapDispatchToProps\n)(HRSignup);\n","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  InputGroup,\r\n  FormControl,\r\n  Modal,\r\n  ButtonToolbar,\r\n  OverlayTrigger,\r\n  Tooltip\r\n} from 'react-bootstrap';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport theRapidHireApiService from '../core/api/apiService';\r\nimport {\r\n  renderMessage,\r\n  encrypt,\r\n  decrypt,\r\n  setLocalStorage\r\n} from '../commonFunctions';\r\nimport CONSTANTS from '../core/config/appConfig';\r\nimport { actionChangePasswordStatus } from '../../common/core/redux/actions';\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\n\r\nclass changePassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      confirmNewPassword: '',\r\n      cpModal: true\r\n    };\r\n\r\n    this.initialState = this.state;\r\n\r\n    this.handleButtonState = this.handleButtonState.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        oldPassword: 'required',\r\n        newPassword: ['required', 'regex:' + regExpressions.passwordPattern],\r\n        confirmNewPassword: 'required|same:newPassword'\r\n      },\r\n      {\r\n        'required.oldPassword': validationMessages.password.oldPassword,\r\n        'required.newPassword': validationMessages.password.newPassword,\r\n        'regex.newPassword': validationMessages.password.passwordPattern,\r\n        'required.confirmNewPassword':\r\n          validationMessages.password.confirmNewPassword,\r\n        'same.confirmNewPassword': validationMessages.password.same\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    if (\r\n      this.props.location &&\r\n      this.props.location.state &&\r\n      this.props.location.state.pass\r\n    ) {\r\n      let password = decrypt(this.props.location.state.pass);\r\n      console.log(password);\r\n      if (password) {\r\n        this.setState({\r\n          oldPassword: password\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  closeCPModal = () => {\r\n    this.setState({ cpModal: false });\r\n    this.props.closeCPComponent();\r\n    setLocalStorage('isPasswordPopupClose', true);\r\n  };\r\n\r\n  submitData = event => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.handleButtonState();\r\n    }\r\n  };\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleResetForm = () => {\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  handleButtonState() {\r\n    let self = this;\r\n    self.props.validate(function(error) {\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        self.handleSubmit();\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    let self = this;\r\n    let oldPassword = encrypt(this.state.oldPassword.trim());\r\n    let newPassword = encrypt(this.state.newPassword.trim());\r\n\r\n    let data = {\r\n      oldPassword,\r\n      newPassword\r\n    };\r\n\r\n    theRapidHireApiService('changePassword', data)\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          self.props.closeCPComponent();\r\n          self.props.actionChangePasswordStatus();\r\n          self.handleResetForm();\r\n          self.setState({ cpModal: false });\r\n        } else {\r\n          self.handleResetForm();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        self.handleResetForm();\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, show, target } = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        className=\"change-p-popUp\"\r\n        show={this.state.cpModal}\r\n        onHide={this.closeCPModal}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Body>\r\n          <div className=\"centeredBox\">\r\n            <form className=\"forgotPasswordForm p-5 p-relative\">\r\n              {/* <span className=\"icon-info once-info\"> */}\r\n              <ButtonToolbar>\r\n                <OverlayTrigger\r\n                  key=\"bottom\"\r\n                  placement=\"bottom\"\r\n                  overlay={\r\n                    <Tooltip id=\"bottom\">\r\n                      {validationMessages.passwordPattern}\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <span className=\"icon-info once-info\" variant=\"secondary\" />\r\n                </OverlayTrigger>\r\n              </ButtonToolbar>\r\n\r\n              <div className=\"formIcon\">\r\n                <span className=\"icon-change_password\">\r\n                  <span className=\"path1\" />\r\n                  <span className=\"path2\" />\r\n                </span>\r\n              </div>\r\n              <FormGroup>\r\n                <legend className=\"text-center\">Change Password</legend>\r\n              </FormGroup>\r\n              <FormGroup className={this.getClasses('oldPassword')}>\r\n                <InputGroup>\r\n                  <InputGroup.Addon>\r\n                    <span className=\"icon-password\" />\r\n                  </InputGroup.Addon>\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    placeholder=\"Current password\"\r\n                    name=\"oldPassword\"\r\n                    value={this.state.oldPassword}\r\n                    onChange={this.handleChange}\r\n                    maxLength=\"20\"\r\n                    onKeyPress={this.submitData}\r\n                  />\r\n                </InputGroup>\r\n                {renderMessage(this.props.getValidationMessages('oldPassword'))}\r\n              </FormGroup>\r\n\r\n              <FormGroup className={this.getClasses('newPassword')}>\r\n                <InputGroup>\r\n                  <InputGroup.Addon>\r\n                    <span className=\"icon-password\" />\r\n                  </InputGroup.Addon>\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    placeholder=\"New password\"\r\n                    name=\"newPassword\"\r\n                    value={this.state.newPassword}\r\n                    onChange={this.handleChange}\r\n                    maxLength=\"20\"\r\n                    onKeyPress={this.submitData}\r\n                  />\r\n                </InputGroup>\r\n                {renderMessage(this.props.getValidationMessages('newPassword'))}\r\n              </FormGroup>\r\n\r\n              <FormGroup className={this.getClasses('confirmNewPassword')}>\r\n                <InputGroup>\r\n                  <InputGroup.Addon>\r\n                    <span className=\"icon-password\" />\r\n                  </InputGroup.Addon>\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm new password\"\r\n                    name=\"confirmNewPassword\"\r\n                    value={this.state.confirmNewPassword}\r\n                    onChange={this.handleChange}\r\n                    maxLength=\"20\"\r\n                    onKeyPress={this.submitData}\r\n                  />\r\n                </InputGroup>\r\n                {renderMessage(\r\n                  this.props.getValidationMessages('confirmNewPassword')\r\n                )}\r\n              </FormGroup>\r\n              <FormGroup className=\"centeredBox\">\r\n                <Button\r\n                  bsStyle=\"primary\"\r\n                  className=\"no-bold no-round btn btn-primary \"\r\n                  disabled={isLoading}\r\n                  onClick={!isLoading ? this.handleButtonState : null}\r\n                >\r\n                  {isLoading ? 'In Progress...' : 'Save'}\r\n                </Button>{' '}\r\n                &nbsp;&nbsp;\r\n                <Button\r\n                  bsStyle=\"default\"\r\n                  // disabled={\r\n                  //   this.props.isPasswordChanged === false ? true : false\r\n                  // }\r\n                  className=\"no-bold no-round btn btn-primary\"\r\n                  onClick={this.closeCPModal}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </FormGroup>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nchangePassword = validation(strategy)(changePassword);\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      actionChangePasswordStatus\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(changePassword);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport { Button, FormGroup, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\n//import HeaderBeforeLogin from './headerBeforeLogin';\r\nimport theRapidHireApiService from '../core/api/apiService';\r\nimport { ZoomInAndOut, renderMessage } from '../commonFunctions';\r\nimport CONSTANTS from '../core/config/appConfig';\r\nimport Sidebar from '../authorization/sideBar';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      email: ''\r\n    };\r\n\r\n    this.handleButtonState = this.handleButtonState.bind(this);\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        email: 'required|email'\r\n      },\r\n      {\r\n        'required.email': validationMessages.email.required,\r\n        'email.email': validationMessages.email.invalid\r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  submitData = event => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.handleButtonState();\r\n    }\r\n  };\r\n\r\n  handleButtonState() {\r\n    let self = this;\r\n    self.props.validate(function(error) {\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        self.handleSubmit();\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    let self = this;\r\n    let email = self.state.email.toLowerCase().trim();\r\n    theRapidHireApiService('forgotPassword', { email })\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          self.setState({ email: '', isLoading: false });\r\n          setTimeout(() => {\r\n            self.props.history.push('/');\r\n          }, 4000);\r\n        } else {\r\n          self.setState({ isLoading: false });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        self.setState({ isLoading: false });\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <div className=\"wrapper\">        \r\n      <div className=\"main-panel\">     \r\n        <div className=\"login_card\">\r\n           <div className=\"header\">\r\n        <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        />\r\n        <div className=\"formContent\">\r\n          <div className=\"centeredBox p-5\">\r\n            <form className=\"forgotPasswordForm bg-transparent\">\r\n              <FormGroup>\r\n                {/* <legend className=\"color-blue\">\r\n                  <Link to=\"/login\">\r\n                    <span className=\"icon-edit_pencil icon icon-shift\" />\r\n                  </Link>{' '}\r\n                  Forgot Password\r\n                </legend> */}\r\n\r\n                <div className=\"flex align-center mb-1\">\r\n                  <Link to=\"/login\" className=\"md-icon mr-1\">\r\n                    <span className=\"icon-back_arrow2\" />\r\n                  </Link>\r\n                  <legend className=\"color-blue mb-0\">Forgot Password</legend>\r\n                </div>\r\n\r\n                <p className=\"lead mb-50\">\r\n                  <strong>\r\n                    Reset your password by filling in your email address. You\r\n                    will then receive an email with new password.\r\n                  </strong>\r\n                </p>\r\n              </FormGroup>\r\n              <FormGroup className={this.getClasses('email')}>\r\n                <InputGroup>\r\n                  <InputGroup.Addon>\r\n                    <span className=\"icon-email\" />\r\n                  </InputGroup.Addon>\r\n                  <FormControl\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    onKeyPress={this.submitData}\r\n                  />\r\n                </InputGroup>\r\n                {renderMessage(this.props.getValidationMessages('email'))}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button\r\n                  bsStyle=\"primary\"\r\n                  className=\"centeredBtn btn-lg\"\r\n                  disabled={isLoading}\r\n                  onClick={!isLoading ? this.handleButtonState : null}\r\n                >\r\n                  {isLoading ? 'In Progress...' : 'Reset'}\r\n                </Button>\r\n              </FormGroup>\r\n            </form>\r\n          </div>\r\n        </div> </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword = validation(strategy)(ResetPassword);\r\nexport default ResetPassword;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem, FormGroup, FormControl } from 'react-bootstrap';\n\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\nimport _ from 'lodash';\n\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport {\n  ZoomInAndOut,\n  getThumbImage,\n  getLocalStorage,\n  limitCharacter\n} from '../../common/commonFunctions';\nimport SearchUserList from '../../common/searchDropdown/searchUserList';\nimport ChangePassword from '../../common/changePassword/changePassword';\nimport {\n  actionUserLogout,\n  actionGetHeaderCount,\n  actionUpdateHeaderCount,\n  actionChangePasswordStatus\n} from '../../common/core/redux/actions';\nimport userDefaultImage from '../../assets/img/default-img.PNG';\n\nlet AsyncTypeahead = asyncContainer(Typeahead);\nvar keyCheck=false,renderChangeMenu=false;\nclass Header extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state={\n      userProfile:{}\n\n    }    \n  }\n\n  componentWillMount() {\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;    \n    if(user){\n      let userId =user.userId; \n      this.getUserProfileData(userId);\n    }\n  } \n\n  logout = () => {\n    this.props.actionUserLogout();\n    this.props.history.push('/');\n  };\n  \n  showVideoChat = () => {    \n    this.props.history.push('/js/app');\n  };\n\n  getUserProfileData(userId){\n    theRapidHireApiService('getUserSkillsById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response.data);       \n         let userProfile = response.data.result[0];     \n         \n         this.setState({userProfile:userProfile});        \n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  render() {\n    let _this= this;\n    return (\n    <Navbar fluid={true}>\n      <Navbar.Header>\n        {/* <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\">\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n        </button> */}\n      </Navbar.Header>\n\n      <Navbar.Collapse>\n\n        {/* <Nav>\n          <NavItem><i className=\"fa fa-dashboard\"></i></NavItem>\n          <NavDropdown title={<i className=\"fa fa-globe\" />} id=\"basic-nav-dropdown\">\n             <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem> \n          </NavDropdown>\n        </Nav> */}\n        <div className=\"separator\"></div>\n        {this.props.user && this.props.user.roleId == 4 ? <Navbar.Form pullLeft>\n          <FormGroup>\n            <span className=\"input-group-addon\"> <Link to=\"/admin/candidate\">Admin</Link></span>\n           \n          </FormGroup> \n        </Navbar.Form> :null}\n        <Nav pullRight>\n        <NavItem> <Link to=\"/user/profile\">Profile </Link></NavItem>\n        {_this.state.userProfile ?    <NavItem> <Link to=\"/user/dashboard\">Dashboard </Link></NavItem>:null}\n       {_this.state.userProfile ? \n        <NavItem> <Link to=\"/user/timeSlots\">Time Slot </Link></NavItem>:null}      \n          {/* <NavDropdown title=\"Dropdown\" id=\"right-nav-bar\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem> \n          </NavDropdown> */}\n          <NavItem onClick={this.logout}>Log out</NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n  }}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    headerCount: state.User.headerCount\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionUserLogout,\n      actionGetHeaderCount,\n      actionUpdateHeaderCount,\n      actionChangePasswordStatus\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\n\n","import React, { Component } from 'react';\r\nimport Cropper from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport Select from 'react-select';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport _ from 'lodash';\r\nconst options = [\r\n  {\r\n    value: CONSTANTS.mediaAlbum,\r\n    label: (\r\n      <div className=\"adselectIcon\">\r\n        General <span className=\"icon-image_tag\" />\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    value: CONSTANTS.certificateAlbum,\r\n    label: (\r\n      <div className=\"adselectIcon\">\r\n        Certificate <span className=\"icon-certificate\" />\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    value: CONSTANTS.badgeAlbum,\r\n    label: (\r\n      <div className=\"adselectIcon\">\r\n        Badge <span className=\"icon-badges\" />\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    value: CONSTANTS.trophieAlbum,\r\n    label: (\r\n      <div className=\"adselectIcon\">\r\n        Trophy <span className=\"icon-trophy\" />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // {\r\n  //   value: 'Videos',\r\n  //   label: (\r\n  //     <div className=\"adselectIcon\">\r\n  //       Videos <span className=\"icon-video_tag\" />\r\n  //     </div>\r\n  //   )\r\n  // }\r\n];\r\nclass ImageCropper extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cropModal: true,\r\n      cropBoxWidth: '',\r\n      cropBoxHeight: '',\r\n      imageSource: '',\r\n      imageName: '',\r\n      imageType: '',\r\n      modalSize: 'medium',\r\n      aspectRatio: '',\r\n      selectedOption: {\r\n        value: 'media',\r\n        label: (\r\n          <div className=\"adselectIcon\">\r\n            General <span className=\"icon-image_tag\" />\r\n          </div>\r\n        )\r\n      },\r\n      tagValue: ''\r\n    };\r\n  }\r\n\r\n  closeCropModal = () => {\r\n    this.setState({ cropModal: false, imageSource: '' });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let imageSource = this.props.imageSource;\r\n    let cropBoxWidth = this.props.cropBoxWidth;\r\n    let cropBoxHeight = this.props.cropBoxHeight;\r\n    let imageType = this.props.imageType;\r\n    let imageName = this.props.imageName;\r\n    let modalSize = this.props.modalSize;\r\n    let aspectRatio = this.props.aspectRatio;\r\n\r\n    if (imageSource !== '') {\r\n      this.setState({\r\n        imageSource,\r\n        imageName,\r\n        imageType,\r\n        cropBoxWidth,\r\n        cropBoxHeight,\r\n        modalSize,\r\n        aspectRatio\r\n      });\r\n    }\r\n    if (this.props.labelName) {\r\n      this.handleChange(this.state.selectedOption);\r\n    }\r\n  }\r\n\r\n  handleImageChange = event => {\r\n    const file = event.target.files[0];\r\n    const fileName = file.name;\r\n    const fileType = file.type;\r\n    if (file) {\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = event => {\r\n        this.setState({\r\n          imageSource: event.target.result,\r\n          imageName: fileName,\r\n          imageType: fileType\r\n        });\r\n      };\r\n    }\r\n  };\r\n\r\n  cropImage(action) {\r\n    let cropImageResult = this.refs.cropper && this.refs.cropper\r\n      .getCroppedCanvas({\r\n        fillColor: '#fff',\r\n        imageSmoothingEnabled: false,\r\n        imageSmoothingQuality: 'high'\r\n      })\r\n      .toDataURL(this.state.imageType);\r\n\r\n    if (cropImageResult !== '') {\r\n      let croppedImage = this.dataURLtoFile(\r\n        cropImageResult,\r\n        this.state.imageName\r\n      );\r\n      if (this.props.labelName === 'ADD_MEDIA') {\r\n        this.props.uploadImageToAzure(croppedImage, this.state.tagValue);\r\n      } else {\r\n        this.props.uploadImageToAzure(croppedImage);\r\n      }\r\n\r\n      this.setState({\r\n        cropModal: false\r\n      });\r\n    } else {\r\n      this.props.uploadImageToAzure('');\r\n    }\r\n  }\r\n\r\n  dataURLtoFile(dataurl, filename) {\r\n    var arr = dataurl ? dataurl.split(',') : dataurl,\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    var blob = new Blob([u8arr], { type: this.state.imageType });\r\n    blob.name = filename;\r\n    return blob;\r\n    // return new File([u8arr], filename, { type: mime });\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    if (selectedOption) {\r\n      let aspectRatio = 16 / 9;\r\n      let tagValue = selectedOption.value;\r\n      if (tagValue === CONSTANTS.mediaAlbum) {\r\n        aspectRatio = 16 / 9;\r\n      } else {\r\n        aspectRatio = 1 / 1;\r\n      }\r\n      this.setState({ selectedOption, tagValue, aspectRatio });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { selectedOption } = this.state;\r\n    return (\r\n      <Modal\r\n        bsSize={this.state.modalSize}\r\n        show={this.state.cropModal}\r\n        onHide={this.closeCropModal}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title\r\n            className={\r\n              this.props.labelName === 'ADD_MEDIA'\r\n                ? 'addMediaTxt'\r\n                : 'subtitle text-center'\r\n            }\r\n          >\r\n            {this.props.labelName === 'ADD_MEDIA' ? 'ADD MEDIA' : 'Crop Photo'}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Cropper\r\n            className=\"img-responsive1\"\r\n            ref=\"cropper\"\r\n            minCropBoxWidth={this.state.cropBoxWidth}\r\n            minCropBoxHeight={this.state.cropBoxHeight}\r\n            src={this.state.imageSource}\r\n            style={{ height: 400, width: '100%',opacity: 1 }}\r\n            aspectRatio={this.state.aspectRatio}\r\n            guides={true}\r\n            viewMode={1}\r\n            background={false}\r\n            zoomable={true}\r\n            cropBoxMovable={false}\r\n            cropBoxResizable={false}\r\n            highlight={false}\r\n            dragMode=\"move\"\r\n            movable={true}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div className=\"flex justify-content-between align-center\">\r\n            <div className=\"left\">\r\n              {this.props.labelName === 'ADD_MEDIA' ? (\r\n                <div className=\"custom-select selectAddAch\">\r\n                  <span className=\"icon-down_arrow selectIcon\" />\r\n                  {/* selectAddAch */}\r\n                  {/* adfigCaption  */}\r\n                  <Select\r\n                    className=\"form-control adfigCaption\"\r\n                    placeholder=\"Select Media Type\"\r\n                    value={selectedOption}\r\n                    onChange={this.handleChange}\r\n                    options={options}\r\n                    clearable={false}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"right flex align-center\">\r\n              <div className=\"custom-upload mr-1\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  value=\"\"\r\n                  onChange={this.handleImageChange.bind(this)}\r\n                />\r\n\r\n                <Button bstyle=\"default\">Change Photo</Button>\r\n              </div>\r\n              {this.props.labelName ? (\r\n                <Button\r\n                  bsStyle=\"primary\"\r\n                  onClick=\r\n                  {_.debounce((event) => this.cropImage(), 1000)} \r\n                   disabled={selectedOption ? false : true}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              ) : (\r\n                <Button bsStyle=\"primary\" onClick= {_.debounce((event) => this.cropImage(), 1000)} >\r\n                  Apply\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCropper;\r\n","import React, { Component } from 'react';\nimport Header from '../header/header';\n\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n//import { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\nimport _ from 'lodash';\nimport S3FileUpload from 'react-s3';\nimport moment from 'moment';\n\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\";\n//import Img from '../../common/cropper/img';\nimport {\n  showErrorToast,\n  uploadToAzure,\n  limitCharacter,\n  SampleNextArrow,\n  SamplePrevArrow,\n  getThumbImage\n} from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\n\nimport {\n  actionGetStudentPersonalInfo,\n  actionGetAllCompetency,\n  actionGetAchievementsByUser,\n  actionGetRecommendationsByUser,\n  actionUpdateUserInfo,\n  actionGetAchievementsData\n} from '../../common/core/redux/actions';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\n\n\nconst config = {\n  bucketName: 'ankurself',\n  dirName: 'photos', /* optional */\n  region: 'ap-south-1', // Put your aws region here\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\n}\n\n\nvar settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 3,\n  swipeToSlide: true,\n  nextArrow: <SampleNextArrow props={this.props} />,\n  prevArrow: <SamplePrevArrow props={this.props} />,\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2\n      }\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }\n  ]\n};\n\nclass Dashboard extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {      \n      showJobDescriptionComponent: false,      \n      jobDescriptionDetail: {},        \n     \n      loader1: false,\n      loader2: false,      \n      jobDescriptionListData: [],\n      showVideoComponent: false,     \n      userData:{},     \n      showDropdown: false,     \n      isActive: 'true',     \n      contentEditable: false,\n      editName: false,\n      name: '',\n      editTagLine: false\n    };\n   /// this.textInput = React.createRef();    \n  }\n\n  componentWillMount() {\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\n    \n    if(user){\n      this.getSlotDetails(user.userId);        \n    } \n   \n  }\n\n  componentWillReceiveProps(res) {\n    \n  }\n\n  componentDidMount() {  \n    \n  }\n\n  getSlotDetails(userId){   \n    theRapidHireApiService('getTimeSlotByUser',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response);\n        let bookedSlotData=[];\n        bookedSlotData = response.data.result;\n      this.setState({bookedSlotData:bookedSlotData});\n      }\n     \n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  getUserListForMapping(jobId){\n    theRapidHireApiService('getUserListForMapping',{jobId})\n    .then(response => {     \n      if (response.data.status === \"Success\") {\n         let jobDescriptionListData= this.state.jobDescriptionListData;\n         jobDescriptionListData= response.data.result;\n     \n         this.setState({jobDescriptionListData: jobDescriptionListData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  handleSubmit = (data,action) => {\n    let jobMapId=data.jobMapId;\n    let jobId=this.state.jobId;\n    let candidateId=data.userId;\n    let hrId=this.state.userId;\n    let status= action;\n    let createdBy= this.props.user.userId;\n\n    let dataMap={\n      jobMapId,\n      jobId,\n      candidateId,\n      hrId,\n      status,\n      createdBy        \n    }\n    \n    if(jobMapId!==\"\" || jobMapId!==null){\n        theRapidHireApiService('createJobMap',dataMap)\n        .then(response => {     \n          if (response.data.status === \"Success\") {\n            this.getUserListForMapping(this.state.jobId);   \n            //  let jobDescriptionListData= this.state.jobDescriptionListData;\n            //  jobDescriptionListData= response.data.result;\n        \n            //  this.setState({jobDescriptionListData: jobDescriptionListData});\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }else{\n      theRapidHireApiService('updateJobMap',dataMap)\n      .then(response => {     \n        if (response.data.status === \"Success\") {\n          this.getUserListForMapping(this.state.jobId);   \n          //  let jobDescriptionListData= this.state.jobDescriptionListData;\n          //  jobDescriptionListData= response.data.result;\n      \n          //  this.setState({jobDescriptionListData: jobDescriptionListData});\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n    \n\n\n  contentEditable = () => {\n    window.scrollTo(500, 0);\n    //console.log(!this.state.contentEditable);\n    this.setState({ contentEditable: !this.state.contentEditable });\n  };\n\n  setProfileData = data => {\n    //console.log(data);\n    if (data) {\n      let userId = data.userId;\n      let summary = data.summary;\n      let firstName = data.firstName;\n      let lastName = data.lastName;\n      // let tagline = data.tagline.trim();\n      // let editTag = data.tagline.trim();\n      let tagline = data.tagline ? data.tagline.trim() : null;\n      let editTag = data.tagline ? data.tagline.trim() : null;\n\n      let name =\n        (data.firstName ? data.firstName : '') +\n        ' ' +\n        (data.lastName ? data.lastName : '');\n      let profileImage = data.profilePicture;\n      if (profileImage) {\n        profileImage = getThumbImage('medium', profileImage);\n      }\n      let coverImage = data.coverImage;\n      if (coverImage) {\n        coverImage = getThumbImage('original', coverImage);\n      }\n      let isActive = data.isActive;\n      this.setState({\n        editTag,\n        summary,\n        firstName,\n        lastName,\n        userId,\n        profileImage,\n        coverImage,\n        tagline,\n        isActive,\n        name\n      });\n    }\n  };  \n\n \n  joinVideoChat = data => {    \n    \n   console.log(data);\n    let videoKeySelf= data.videoKeyUser;\n    \n    let videoKeyClient= data.videoKeyInterviewer;\n    \n    this.props.history.push({\n        pathname: '/js/app',\n        state: { videoKeySelf:videoKeySelf,videoKeyClient:videoKeyClient,slotId:data.slotId}});    \n      \n  };\n\n  editJobDescriptionComponent = jobDescriptionDetail => {\n    console.log(jobDescriptionDetail);\n    this.setState({\n      jobDescriptionDetail: jobDescriptionDetail ,\n      showJobDescriptionComponent: !this.state.showJobDescriptionComponent    \n    });\n  }\n\n \n\n  getProfileData = () => {\n    let userId = this.state.userId;\n    this.props.actionGetStudentPersonalInfo(userId);\n  };\n  \n  generateSASToken() {\n    theRapidHireApiService('getSASToken')\n      .then(response => {\n        if (response.data.status === 'Success') {\n          let sasToken = response.data.result.sasToken;\n          this.setState({ sasToken });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  toggleDropdown = () => {\n    this.setState({\n      showDropdown: !this.state.showDropdown\n    });\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };  \n\n \n \n  render() {let self= this;\n    return ( \n    \n    <div className=\"wrapper\">\n        <Header {...this.props} />     \n          <div className=\"main-panel\">          \n        \n\n        <div className=\"w3-content main-panel1\">\n        \n          <div className=\"container main\">\n           \n\n            {/* <div className=\"button--wrapper mb-1 text-center flex flex-1 justify-center dashBtnCenter\">\n              <button\n                className=\"btn btn-with-border with-icon smallBtn mr-1\"\n                onClick={this.viewSampleProfile}\n              >\n                View Sample Profile\n              </button>             \n              <button\n                className=\"btn btn-with-border with-icon smallBtn\"\n                onClick={this.addStudentModel}\n              >\n                <span className=\"icon-plus\" />\n                add student\n              </button>\n            </div> */}\n            {this.state.bookedSlotData && this.state.bookedSlotData.length > 0 ? this.state.bookedSlotData.map(function(data, index) {\n                return (                 \n                     \n                  <div\n                    key={index}\n                    className=\"suggestion-usd\"\n                   \n                  >\n                    <div className=\"student-img deflt-icon centeredBox flex\">\n                       Your Slot has been booked with Rapid Hire Company\n                    </div>\n                    <div className=\"student-info flex justify-content-space-between\">\n                      <div className=\"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\">\n                        <div className=\"flex-1\">\n                          <h3>\n                            {/* {data.firstName\n                              ? data.firstName +\n                                ' ' +\n                                (data.lastName ? data.lastName : '')\n                              : null} */}\n                          </h3>\n                          <p></p>\n                          <p></p>\n                        </div>\n\n                         <div className=\"flex-1\">\n                          <h6>\n                            {moment(parseInt(data.startTimeStamp,10)).format(\"hh:mm:ss\")}                      \n                          </h6>\n                          {moment(parseInt(data.endTimeStamp,10)).format(\"hh:mm:ss\")}\n                        </div>\n\n                        <div className=\"btn-group flex align-center\">                 \n                        \n                          <button onClick={self.joinVideoChat.bind(\n                            self,\n                            data                            \n                          )} \n                            className=\"btn btn-primary no-round\"\n                          //  onClick={self.handleClickProfile.bind(self, data)}\n                          >\n                           Join Video\n                          </button>                       \n                          &nbsp; &nbsp;\n                      \n                          <DropdownButton\n                            className=\"burger-trigger\"\n                            title={<span className=\"icon-burger\" />}\n                            id=\"1\"\n                          >\n                            <MenuItem\n                              // onSelect={self.addParentModel.bind(\n                              //   this,\n                              //   data.userId\n                              // )}\n                            >\n                              <i className=\"m-ico icon-plus\" />\n                              Add Parent\n                            </MenuItem>\n                            <MenuItem                            \n                              \n                            >\n                              <i className=\"m-ico icon-parent\" /> Option List\n                            </MenuItem>\n                            <MenuItem                             \n                            >\n                              <i className=\"m-ico icon-profile-sharing\" />{' '}\n                              Option List\n                            </MenuItem>\n\n                            <MenuItem\n                            //   onSelect={self.deleteStudent.bind(\n                            //     this,\n                            //     data.userId,\n                            //     self.props.parent.userId\n                            //   )}\n                            >\n                              <i className=\"m-ico icon-delete\" /> Delete\n                            </MenuItem>\n                          </DropdownButton>\n                        </div>\n                      </div>\n\n                      {/* <div className=\"flex align-center justify-content-space-bettween tag-wrap\">\n                        <div className=\"promo-tag br-light\">\n                          Skills <span>{data.accomplishment}</span>\n                        </div>\n                       \n                        <div className=\"promo-tag\">\n                          Location <span>{data.recommendation}</span>\n                        </div>\n                      </div> */}\n                    </div>\n                  </div>\n                );\n              }):\"No slot is booked \"\n          }\n          </div>         \n          {/* {this.state.addStudentModel ? (\n            <AddMoreStudent\n              addStudentModel={this.state.addStudentModel}\n              closeAddStudentModel={this.addStudentModel}\n            />\n          ) : null} */}\n        </div></div>\n      </div>\n    \n    \n    \n    \n    \n    \n    // </div></div>\n    //   </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionGetStudentPersonalInfo,\n      actionGetAllCompetency,\n      actionGetAchievementsByUser,\n      actionGetRecommendationsByUser,\n      actionUpdateUserInfo,\n      actionGetAchievementsData\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Col,\r\n  Row,\r\n  ControlLabel,\r\n  FormControl\r\n} from 'react-bootstrap';\r\n\r\n//import 'react-datepicker/dist/react-datepicker.css';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport moment from 'moment';\r\n\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  ZoomInAndOut,\r\n  generateTimestamp,\r\n  getThumbImage\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport { actionListOragnization } from '../../common/core/redux/actions';\r\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\r\n\r\nlet AsyncTypeahead = asyncContainer(Typeahead);\r\nlet validationMessages = CONSTANTS.validationMessages;\r\n\r\nclass addEducation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      educationModal: true,\r\n      organizationId: '',\r\n      instituteName: '',\r\n      city: '',\r\n      // fieldOfStudy: '',\r\n      // grade: '',\r\n      description: '',\r\n      userId: '',\r\n      isActive: true,\r\n      educationId: '',\r\n      listOragnization: [],\r\n      searchText: '',\r\n      fromYear: '',\r\n      toYear: '',\r\n      fromGrade: '',\r\n      toGrade: '',\r\n      oragnizationPreview: '',\r\n      oragnizationLogo: '',\r\n      oragnizationFile: '',\r\n      isToGrade: '',\r\n      isToYear: '',\r\n      imageSource: '',\r\n      educationFromYear: '',\r\n      educationToYear: ''\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.uploadImageToAzure = this.uploadImageToAzure.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        instituteName: 'required',\r\n        city: 'required',\r\n        fromGrade: 'required',\r\n        toGrade: 'required',\r\n        fromYear: 'required',\r\n        toYear: 'required'\r\n      },\r\n      {\r\n        'required.instituteName': validationMessages.instituteName.required,\r\n        'required.city': validationMessages.city.required,\r\n        'required.fromGrade': validationMessages.fromGrade.required,\r\n        'required.toGrade': validationMessages.toGrade.required,\r\n        'required.fromYear': validationMessages.fromYear.required,\r\n        'required.toYear': validationMessages.toYear.required\r\n      }\r\n    );\r\n  }\r\n\r\n  componentWillMount() {\r\n   // this.listOragnization();\r\n  \r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.educationMode);\r\n    if (this.props.user) {\r\n      this.setState({\r\n        userId: this.props.user.userId,\r\n        isActive: this.props.user.isActive\r\n      });\r\n    }\r\n\r\n    if (this.props.educationDetail) {\r\n      let data = this.props.educationDetail;\r\n      let logo = data.logo !== '' ? getThumbImage('medium', data.logo) : '';\r\n      this.setState({\r\n        educationId: data.educationId,\r\n        instituteName: data.institute,\r\n        city: data.city,\r\n        fromGrade: data.fromGrade,\r\n        toGrade: data.toGrade,\r\n        educationFromYear: data.fromYear,\r\n        educationToYear: data.toYear,\r\n        fromYear: data.fromYear,\r\n        toYear: data.toYear,\r\n        organizationId: data.organizationId,\r\n        oragnizationPreview: logo,\r\n        oragnizationLogo: data.logo,\r\n        //grade: data.grade,\r\n        //fieldOfStudy: data.fieldOfStudy,\r\n        description: data.description\r\n        //startDate: moment(data.fromDate),\r\n        //endDate: moment(data.toDate)\r\n      });\r\n    }\r\n  }\r\n\r\n  closeEducationModal = () => {\r\n    this.setState({\r\n      educationModal: false\r\n    });\r\n    this.props.closeEducationComponent();\r\n  };\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  handleImageChange = event => {\r\n    this.setState({ imageSource: '' });\r\n    const file = event.target.files[0];\r\n    const fileName = file.name;\r\n    const fileType = file.type;\r\n    if (file) {\r\n      //this.generateSASToken();\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = event => {\r\n        this.setState({\r\n          // oragnizationFile: file,\r\n\r\n          imageSource: event.target.result,\r\n          imageName: fileName,\r\n          imageType: fileType,\r\n          action: 1\r\n        });\r\n      };\r\n    }\r\n  };\r\n\r\n  // generateSASToken() {\r\n  //   theRapidHireApiService('getSASToken')\r\n  //     .then(response => {\r\n  //       if (response.data.status === 'Success') {\r\n  //         let sasToken = response.data.result.sasToken;\r\n  //         this.setState({ sasToken });\r\n  //       }\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleCompare = (fromValue, toValue, key) => {\r\n    if (fromValue !== '' && toValue !== '') {\r\n      let fromValueNum = parseInt(fromValue, 10);\r\n      let toValueNum = parseInt(toValue, 10);\r\n      if (key === 1) {\r\n        if (fromValueNum > toValueNum) {\r\n          console.log('if', this.validatorTypes);\r\n          this.validatorTypes.rules['isToGrade'] = 'required';\r\n          this.validatorTypes.messages['required.isToGrade'] =\r\n            'The ToGrade must be greater than FromGrade';\r\n        } else {\r\n          console.log('else', this.validatorTypes);\r\n          this.validatorTypes.rules['isToGrade'] = '';\r\n          this.validatorTypes.messages['required.isToGrade'] = '';\r\n        }\r\n      } else if (key === 2) {\r\n        if (fromValueNum > toValueNum) {\r\n          console.log('if', this.validatorTypes);\r\n          this.validatorTypes.rules['isToYear'] = 'required';\r\n          this.validatorTypes.messages['required.isToYear'] =\r\n            'The ToYear must be greater than FromYear';\r\n        } else {\r\n          console.log('else', this.validatorTypes);\r\n          this.validatorTypes.rules['isToYear'] = '';\r\n          this.validatorTypes.messages['required.isToYear'] = '';\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleToGrade = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    console.log('handleToGrade');\r\n    this.handleCompare(this.state.fromGrade, event.target.value, 1);\r\n  };\r\n\r\n  handleFromGrade = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.handleCompare(event.target.value, this.state.toGrade, 1);\r\n  };\r\n\r\n  handleToYear = event => {\r\n    let toYear = this.state.educationToYear;\r\n    let DOB =\r\n      this.props.user && this.props.user.dob\r\n        ? moment(this.props.user.dob).format('YYYY')\r\n        : '';\r\n\r\n    if (\r\n      toYear &&\r\n      this.props.educationMode === 2 &&\r\n      parseInt(DOB, 10) > parseInt(toYear, 10)\r\n    ) {\r\n      var x = document.getElementById('toYearSelect');\r\n      var selectBoxLength = document.getElementById('toYearSelect').length;\r\n      x.remove(selectBoxLength - 2);\r\n    }\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.handleCompare(this.state.fromYear, event.target.value, 2);\r\n  };\r\n\r\n  handleFromYear = event => {\r\n    let fromYear = this.state.educationFromYear;\r\n    let DOB =\r\n      this.props.user && this.props.user.dob\r\n        ? moment(this.props.user.dob).format('YYYY')\r\n        : '';\r\n\r\n    if (\r\n      fromYear &&\r\n      this.props.educationMode === 2 &&\r\n      parseInt(DOB, 10) > parseInt(fromYear, 10)\r\n    ) {\r\n      var x = document.getElementById('fromYearSelect');\r\n      var selectBoxLength = document.getElementById('fromYearSelect').length;\r\n      x.remove(selectBoxLength - 2);\r\n    }\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.handleCompare(event.target.value, this.state.toYear, 2);\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate.isAfter(endDate)) {\r\n      endDate = startDate;\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        if (self.state.oragnizationFile !== '') {\r\n          self.uploadOragnizationLogo();\r\n        } else {\r\n          self.handleSubmit();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  uploadImageToAzure(file) {\r\n    if (file) {\r\n      this.setState({\r\n        oragnizationPreview: this.state.imageSource,\r\n        oragnizationFile: file\r\n      });\r\n    }\r\n  }\r\n\r\n  uploadOragnizationLogo() {\r\n    let AzureStorage = window.AzureStorage;\r\n    let sasToken = this.state.sasToken;\r\n    let userId = this.state.userId;\r\n    let fileData = this.state.oragnizationFile;\r\n    let fileName = generateTimestamp(fileData.name);\r\n    let uploadPath = `sv_${userId}/${CONSTANTS.oragnizationAlbum}/${fileName}`;\r\n    let self = this;\r\n\r\n    const blobService = AzureStorage.Blob.createBlobServiceWithSas(\r\n      CONSTANTS.azureBlobURI,\r\n      sasToken\r\n    );\r\n\r\n    blobService.createBlockBlobFromBrowserFile(\r\n      CONSTANTS.azureContainer,\r\n      uploadPath,\r\n      fileData,\r\n      (error, result) => {\r\n        if (result) {\r\n          self.setState(\r\n            {\r\n              oragnizationLogo: uploadPath\r\n            },\r\n            () => {\r\n              self.handleSubmit();\r\n            }\r\n          );\r\n        }\r\n        if (error) {\r\n          console.log('error ', error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  handleSubmit() {\r\n    let organizationId = this.state.organizationId;\r\n    let educationId = this.state.educationId;\r\n    let userId = this.state.userId;\r\n    let institute = this.state.instituteName;\r\n    let city = this.state.city;\r\n    let fromGrade = this.state.fromGrade;\r\n    let toGrade = this.state.toGrade;\r\n    let fromYear = this.state.fromYear;\r\n    let toYear = this.state.toYear;\r\n    // let fieldOfStudy = this.state.fieldOfStudy;\r\n    //let grade = this.state.grade;\r\n    // let fromDate =\r\n    //   this.state.startDate !== ''\r\n    //     ? moment(this.state.startDate).format('DD-MMM-YYYY')\r\n    //     : '';\r\n    // let toDate =\r\n    //   this.state.endDate !== ''\r\n    //     ? moment(this.state.endDate).format('DD-MMM-YYYY')\r\n    //     : '';\r\n    let description = this.state.description;\r\n    let isActive = this.state.isActive;\r\n    let type = CONSTANTS.typeSchool;\r\n    let logo = this.state.oragnizationLogo;\r\n\r\n    let data = {\r\n      educationId,\r\n      organizationId,\r\n      userId,\r\n      logo,\r\n      institute,\r\n      city,\r\n      fromGrade,\r\n      toGrade,\r\n      fromYear,\r\n      toYear,\r\n      description,\r\n      isActive,\r\n      type\r\n    };\r\n\r\n    let self = this;\r\n    if (this.state.educationId === '') {\r\n      theRapidHireApiService('addEducation', data)\r\n        .then(response => {\r\n          if (response && response.data.status === 'Success') {\r\n            self.props.closeEducationComponent();\r\n            self.props.getAllEducation();\r\n            self.setState({ isLoading: false });\r\n          } else {\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log('err', error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editEducation', data)\r\n        .then(response => {\r\n          if (response && response.data.status === 'Success') {\r\n            self.props.closeEducationComponent();\r\n            self.props.getAllEducation();\r\n            self.setState({ isLoading: false, educationModal: false });\r\n          } else {\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log('err', error);\r\n        });\r\n    }\r\n  }\r\n\r\n  deleteEducation = educationId => {\r\n    console.log(educationId);\r\n    let data = {\r\n      educationId\r\n    };\r\n    let self = this;\r\n    if (educationId) {\r\n      theRapidHireApiService('deleteEducation', data)\r\n        .then(response => {\r\n          if (response && response.data.status === 'Success') {\r\n            self.props.closeEducationComponent();\r\n            self.props.getAllEducation();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  listOragnization() {\r\n    let self = this;\r\n    this.props\r\n      .actionListOragnization()\r\n      .then(response => {\r\n        if (response.payload && response.payload.data.status === 'Success') {\r\n          let oragnizationData = response.payload.data.result;\r\n          if (oragnizationData.length > 0) {\r\n            let options = oragnizationData.map(function(item) {\r\n              return {\r\n                value: item.organizationId,\r\n                label: item.name\r\n              };\r\n            });\r\n            self.setState({ listOragnization: options, isLoading: false });\r\n          } else {\r\n            self.setState({ listOragnization: [], isLoading: false });\r\n          }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleInstituteChange = value => {\r\n    console.log(value);\r\n    if (value.length > 0) {\r\n      let organizationId = value[0].value;\r\n      let instituteName = value[0].label;\r\n      console.log(organizationId, instituteName);\r\n      this.setState({\r\n        organizationId,\r\n        instituteName\r\n      });\r\n    }\r\n  };\r\n\r\n  handleInputChange = value => {\r\n    this.setState({\r\n      instituteName: value\r\n    });\r\n  };\r\n\r\n  renderFromYearDropdown() {\r\n    const yearList = [];\r\n    let fromYear = this.state.educationFromYear;\r\n\r\n    let DOB =\r\n      this.props.user && this.props.user.dob\r\n        ? moment(this.props.user.dob).format('YYYY')\r\n        : '';\r\n\r\n    if (DOB === 0 || DOB === null || DOB === '') {\r\n      let current_year = moment().format('YYYY') - 49;\r\n      DOB = current_year;\r\n    }\r\n    console.log(fromYear);\r\n    console.log(DOB);\r\n    yearList.push(\r\n      <option value=\"\" key={''}>\r\n        Year\r\n      </option>\r\n    );\r\n\r\n    if (\r\n      parseInt(fromYear, 10) &&\r\n      parseInt(DOB, 10) &&\r\n      parseInt(DOB, 10) > parseInt(fromYear, 10) &&\r\n      this.props.educationMode === 2\r\n    ) {\r\n      yearList.push(\r\n        <option value={fromYear} key={fromYear}>\r\n          {fromYear}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    for (var i = DOB; i <= CONSTANTS.toYear; i++) {\r\n      yearList.push(\r\n        <option value={i} key={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return yearList;\r\n  }\r\n\r\n  renderToYearDropdown() {\r\n    let toYear = this.state.educationToYear;\r\n\r\n    const yearList = [];\r\n    let DOB =\r\n      this.props.user && this.props.user.dob\r\n        ? moment(this.props.user.dob).format('YYYY')\r\n        : '';\r\n\r\n    if (DOB === 0 || DOB === null || DOB === '') {\r\n      let current_year = moment().format('YYYY') - 49;\r\n      DOB = current_year;\r\n    }\r\n\r\n    yearList.push(\r\n      <option value=\"\" key={''}>\r\n        Year\r\n      </option>\r\n    );\r\n\r\n    if (\r\n      parseInt(toYear, 10) &&\r\n      parseInt(DOB, 10) &&\r\n      parseInt(DOB, 10) > parseInt(toYear, 10) &&\r\n      this.props.educationMode === 2\r\n    ) {\r\n      yearList.push(\r\n        <option value={toYear} key={toYear}>\r\n          {toYear}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    for (var i = DOB; i <= CONSTANTS.toYear; i++) {\r\n      yearList.push(\r\n        <option value={i} key={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return yearList;\r\n  }\r\n\r\n  renderGradeDropdown() {\r\n    const gradeArray = [\r\n      '1st',\r\n      '2nd',\r\n      '3rd',\r\n      '4th',\r\n      '5th',\r\n      '6th',\r\n      '7th',\r\n      '8th',\r\n      '9th',\r\n      '10th',\r\n      '11th',\r\n      '12th'\r\n    ];\r\n    const gradeList = [];\r\n    gradeList.push(\r\n      <option value=\"\" key={''}>\r\n        Grade\r\n      </option>\r\n    );\r\n    for (var i = 0; i <= gradeArray.length - 1; i++) {\r\n      gradeList.push(\r\n        <option value={gradeArray[i]} key={i}>\r\n          {gradeArray[i]}\r\n        </option>\r\n      );\r\n    }\r\n    return gradeList;\r\n  }\r\n\r\n  // handleFromClick = () => {\r\n  //   let fromYear = this.state.educationFromYear;\r\n  //   let DOB =\r\n  //     this.props.user && this.props.user.dob\r\n  //       ? moment(this.props.user.dob).format('YYYY')\r\n  //       : '';\r\n\r\n  //   if (DOB == 0 || DOB === null) {\r\n  //     let current_year = moment().format('YYYY') - 30;\r\n  //     DOB = current_year;\r\n  //   }\r\n  //   if (fromYear && this.props.educationMode === 2) {\r\n  //     var x = document.getElementById('mySelect');\r\n  //     var selectedValue = x.value;\r\n  //     if (\r\n  //       selectedValue == fromYear &&\r\n  //       parseInt(DOB, 10) > parseInt(fromYear, 10)\r\n  //     ) {\r\n  //       x.remove(x.selectedIndex);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <Modal\r\n        bsSize=\"large\"\r\n        show={this.state.educationModal}\r\n        onHide={this.closeEducationModal}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        />\r\n\r\n        {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={1 / 1}\r\n            modalSize={this.state.action === 1 ? 'medium' : 'large'}\r\n            cropBoxWidth={this.state.action === 1 ? '200' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '200' : '700'}\r\n            uploadImageToAzure={this.uploadImageToAzure}\r\n          />\r\n        ) : null}\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"subtitle text-center\">\r\n            EDUCATION INFO\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form horizontal className=\"lightBgForm\">\r\n            <Col sm={9}>\r\n              <FormGroup\r\n                controlId=\"formHorizontalEmail\"\r\n                className={this.getClasses('instituteName')}\r\n              >\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  Institute\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <AsyncTypeahead\r\n                    minLength={2}\r\n                    isLoading={this.state.isLoading}\r\n                    labelKey={'label'}\r\n                    placeholder=\"Search Institute\"\r\n                    onSearch={this.listOragnization.bind(this)}\r\n                    options={this.state.listOragnization}\r\n                    name=\"instituteName\"\r\n                    value={this.state.instituteName}\r\n                    onChange={this.handleInstituteChange}\r\n                    allowNew={true}\r\n                    newSelectionPrefix=\"Add Oragnization\"\r\n                    onInputChange={this.handleInputChange}\r\n                    searchText={this.state.searchText}\r\n                    defaultInputValue={this.state.instituteName}\r\n                  />\r\n                  {/* <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Golden Leaf School\"\r\n                    name=\"instituteName\"\r\n                    value={this.state.instituteName}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  /> */}\r\n                  {renderMessage(\r\n                    this.props.getValidationMessages('instituteName')\r\n                  )}\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup\r\n                controlId=\"formHorizontalPassword\"\r\n                className={this.getClasses('city')}\r\n              >\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  City\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Ex: New york\"\r\n                    name=\"city\"\r\n                    value={this.state.city}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {renderMessage(this.props.getValidationMessages('city'))}\r\n                </Col>\r\n              </FormGroup>\r\n              {/* <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  Field of study\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Enter field of study\"\r\n                    name=\"fieldOfStudy\"\r\n                    value={this.state.fieldOfStudy}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </Col>\r\n              </FormGroup> */}\r\n\r\n              <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  Grade\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <Row className=\"flex row customDatePicker\">\r\n                    <Col sm={6} className={this.getClasses('fromGrade')}>\r\n                      <div className=\"line-between-form-controls\">\r\n                        <div className=\"custom-select\">\r\n                          <span className=\"icon-down_arrow selectIcon\" />\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            placeholder=\"Grade\"\r\n                            onChange={this.handleFromGrade}\r\n                            name=\"fromGrade\"\r\n                            value={this.state.fromGrade}\r\n                          >\r\n                            {this.renderGradeDropdown()}\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('fromGrade')\r\n                      )}\r\n                    </Col>\r\n\r\n                    <Col sm={6} className={this.getClasses('toGrade')}>\r\n                      <div className=\"line-between-form-controls\">\r\n                        <div className=\"custom-select\">\r\n                          <span className=\"icon-down_arrow selectIcon\" />\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            placeholder=\"Grade\"\r\n                            onChange={this.handleToGrade}\r\n                            name=\"toGrade\"\r\n                            value={this.state.toGrade}\r\n                          >\r\n                            {this.renderGradeDropdown()}\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('toGrade')\r\n                      )}\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('isToGrade')\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </FormGroup>\r\n\r\n              <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  From to Date\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <Row className=\"flex row customDatePicker\">\r\n                    <Col sm={6} className={this.getClasses('fromYear')}>\r\n                      <div className=\"line-between-form-controls\">\r\n                        <div className=\"custom-select\">\r\n                          <span className=\"icon-down_arrow selectIcon\" />\r\n                          <FormControl\r\n                            id=\"fromYearSelect\"\r\n                            componentClass=\"select\"\r\n                            placeholder=\"Year\"\r\n                            onChange={this.handleFromYear}\r\n                            onClick={this.handleFromClick}\r\n                            //onSelect={this.handleFromYear}\r\n                            name=\"fromYear\"\r\n                            value={this.state.fromYear}\r\n                          >\r\n                            {this.renderFromYearDropdown().reverse()}\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('fromYear')\r\n                      )}\r\n                    </Col>\r\n                    <Col sm={6} className={this.getClasses('toYear')}>\r\n                      <div className=\"line-between-form-controls\">\r\n                        <div className=\"custom-select\">\r\n                          <span className=\"icon-down_arrow selectIcon\" />\r\n                          <FormControl\r\n                            id=\"toYearSelect\"\r\n                            componentClass=\"select\"\r\n                            placeholder=\" Year\"\r\n                            onChange={this.handleToYear}\r\n                            name=\"toYear\"\r\n                            value={this.state.toYear}\r\n                          >\r\n                            {this.renderToYearDropdown().reverse()}\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('toYear')\r\n                      )}\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('isToYear')\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </FormGroup>\r\n\r\n              {/* <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  Grade\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Enter grade\"\r\n                    name=\"grade\"\r\n                    value={this.state.grade}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </Col>\r\n              </FormGroup> */}\r\n\r\n              {/* <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  From to Date\r\n                </Col>\r\n                <Col sm={9} className={this.getClasses('startDate')}>\r\n                  <div className=\"flex row \">\r\n                    <Col sm={6}>\r\n                      <DatePicker\r\n                        className=\"form-control\"\r\n                        selected={this.state.startDate}\r\n                        selectsStart\r\n                        startDate={this.state.startDate}\r\n                        endDate={this.state.endDate}\r\n                        onChange={this.handleChangeStart}\r\n                        readOnly={true}\r\n                        placeholderText=\"Date\"\r\n                        showYearDropdown\r\n                        dateFormat=\"DD-MMM-YYYY\"\r\n                        isClearable={false}\r\n                      />\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('startDate')\r\n                      )}\r\n                    </Col>\r\n                    <Col sm={6} className={this.getClasses('endDate')}>\r\n                      <DatePicker\r\n                        className=\"form-control\"\r\n                        selected={this.state.endDate}\r\n                        selectsEnd\r\n                        startDate={this.state.startDate}\r\n                        endDate={this.state.endDate}\r\n                        onChange={this.handleChangeEnd}\r\n                        readOnly={true}\r\n                        placeholderText=\"Date\"\r\n                        showYearDropdown\r\n                        dateFormat=\"DD-MMM-YYYY\"\r\n                        isClearable={false}\r\n                      />\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('endDate')\r\n                      )}\r\n                    </Col>\r\n                  </div>\r\n                </Col>\r\n              </FormGroup> */}\r\n\r\n              <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  Description\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <FormControl\r\n                    componentClass=\"textarea\"\r\n                    placeholder=\"Enter Here\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    maxLength=\"500\"\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <div className=\"box flex flex-column flex-center\">\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={this.handleImageChange.bind(this)}\r\n                  accept=\"image/*\"\r\n                  value=\"\"\r\n                  className=\"custom-fileUpload\"\r\n                />\r\n                <div className=\"addProfileWrapper text-center\">\r\n                  {this.state.oragnizationPreview === '' ? (\r\n                    <span className=\"icon-school icon lg-icon\" />\r\n                  ) : (\r\n                    <img src={this.state.oragnizationPreview} alt=\"\" />\r\n                  )}\r\n                  <div className=\"hover-section\">\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={this.handleImageChange.bind(this)}\r\n                      accept=\"image/*\"\r\n                      value=\"\"\r\n                      className=\"custom-fileUpload\"\r\n                    />\r\n                    <span class=\"icon-edit_pencil icon\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <div className=\"flex align-center justify-content-between fullWidth\" />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div className=\"flex justify-content-between align-center\">\r\n            <div className=\"left\">\r\n              {this.state.educationId !== '' ? (\r\n                <Button\r\n                  bsStyle=\"danger\"\r\n                  className=\"no-bold no-round btn btn-danger\"\r\n                  onClick={this.deleteEducation.bind(\r\n                    this,\r\n                    this.state.educationId\r\n                  )}\r\n                >\r\n                  Delete Education\r\n                </Button>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            <div className=\"right flex align-center\">\r\n              <Button\r\n                bsStyle=\"primary\"\r\n                className=\"no-bold no-round\"\r\n                disabled={isLoading}\r\n                onClick={!isLoading ? this.validateData : null}\r\n              >\r\n                {isLoading ? 'In Progress...' : 'Save'}\r\n              </Button>\r\n\r\n              <Button\r\n                bsStyle=\"default\"\r\n                className=\"no-bold no-round\"\r\n                onClick={this.closeEducationModal}\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          {/* <Button\r\n            bsStyle=\"primary\"\r\n            className=\"no-bold no-round\"\r\n            disabled={isLoading}\r\n            onClick={!isLoading ? this.validateData : null}\r\n          >\r\n            {isLoading ? 'In Progress...' : 'Save'}\r\n          </Button>\r\n          <Button\r\n            bsStyle=\"default\"\r\n            className=\"no-bold no-round\"\r\n            onClick={this.closeEducationModal}\r\n          >\r\n            Close\r\n          </Button>\r\n          {this.state.educationId !== '' ? (\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round btn btn-danger\"\r\n              onClick={this.deleteEducation.bind(this, this.state.educationId)}\r\n            >\r\n              Delete Education\r\n            </Button>\r\n          ) : (\r\n            ''\r\n          )*/}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ actionListOragnization }, dispatch);\r\n};\r\n\r\naddEducation = validation(strategy)(addEducation);\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(addEducation);\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio,\r\n  Row\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp,\r\n  showErrorToast\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\nclass addEmployment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation:'',\r\n      organisation:'',\r\n      employmentModal:true,\r\n      employmentId:''\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        designation: 'required',\r\n        organisation: 'required'       \r\n      },\r\n      {\r\n        'required.designation': validationMessages.designation.required,\r\n        'required.organisation': validationMessages.organisation.required        \r\n      }\r\n    );\r\n  }\r\n\r\n  closeAchievementyModal = status => {\r\n    \r\n    this.setState({      \r\n    });\r\n    // if (status === 'save')\r\n    //   this.props.closeSaveAchievementComponent(this.props.competencyTypeId);\r\n    // else this.props.closeAchievementComponent(this.props.competencyTypeId);\r\n  };\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n    //  let userId = this.props.user.userId;\r\n    // }  \r\n    console.log('this.props.employmentDetail ',this.props.employmentDetail);\r\n    this.setEmploymentData(this.props.employmentDetail);\r\n  }\r\n\r\n\r\n  setEmploymentData = data => {\r\n    \r\n    let startDay = '',\r\n      startMonth = '',\r\n      startYear = '',\r\n      endDay = '',\r\n      endMonth = '',\r\n      endYear = '',\r\n      todaysDate = '';\r\n    if (data) {        \r\n     \r\n      if (data.startDate) {\r\n        startDay = moment(data.startDate).format('D');\r\n        startMonth = Number(moment(data.startDate).format('M')) - 1;\r\n\r\n        startYear = moment(data.startDate).format('YYYY');\r\n      }\r\n\r\n      if (data.endDate) {\r\n        endDay = moment(data.endDate).format('D');\r\n        endMonth = Number(moment(data.endDate).format('M')) - 1;\r\n        endYear = moment(data.endDate).format('YYYY');\r\n      } else {\r\n        todaysDate = '';\r\n      }\r\n\r\n      this.setState({      \r\n        userId:data.userId,\r\n        designation : data.designation,\r\n        organisation : data.organisation,\r\n        currentCompany : data.currentCompany,\r\n        currentSalary : data.currentSalary,\r\n        lakh : data.currentSalaryInLakh,\r\n        thousand : data.currentSalaryInThousand,\r\n        describe : data.describe,\r\n        noticePeriod : data.noticePeriod,\r\n        offeredSalary : data.offeredSalary,\r\n        offeredSalaryInLakh : data.offeredSalaryInLakh,\r\n        offeredSalaryInThousand : data.offeredSalaryInThousand,\r\n        offeredDesignation : data.offeredDesignation,\r\n        nextEmployer : data.nextEmployer,\r\n        userId: 10,\r\n        employmentId:  data.employmentId,\r\n        startDay: startDay,\r\n        startMonth: startMonth,\r\n        startYear: startYear,\r\n        endDay: endDay,\r\n        endMonth: endMonth,\r\n        endYear: endYear,\r\n        //startDate: moment(data.fromDate),\r\n        // endDate: data.toDate ? moment(data.toDate) : emptyToDate,\r\n   \r\n        todaysDate: data.toDate ? false : true       \r\n      });     \r\n    }\r\n  };\r\n\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    console.log(endDate);\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    let today = new Date();  \r\n\r\n    if (this.state.noticePeriod == 6) { // serving notice period === 6\r\n      this.validatorTypes.rules['offeredDesignation'] = [\r\n        'required'      \r\n      ];\r\n      this.validatorTypes.messages['required.offeredDesignation'] =\r\n        validationMessages.offeredDesignation.required;\r\n\r\n        this.validatorTypes.rules['nextEmployer'] = [\r\n          'required'      \r\n        ];\r\n        this.validatorTypes.messages['required.nextEmployer'] =\r\n          validationMessages.nextEmployer.required;\r\n\r\n          this.validatorTypes.rules['offeredSalary'] = [\r\n            'required'      \r\n          ];\r\n          this.validatorTypes.messages['required.offeredSalary'] =\r\n            validationMessages.offeredSalary.required;\r\n  \r\n            this.validatorTypes.rules['offeredSalaryInLakh'] = [\r\n              'required'      \r\n            ];\r\n            this.validatorTypes.messages['required.offeredSalaryInLakh'] =\r\n              validationMessages.offeredSalaryInLakh.required;\r\n  \r\n              this.validatorTypes.rules['offeredSalaryInThousand'] = [\r\n                'required'      \r\n              ];\r\n              this.validatorTypes.messages['required.offeredSalaryInThousand'] =\r\n                validationMessages.offeredSalaryInThousand.required;\r\n     \r\n          if (\r\n            self.state.lwdDate &&\r\n            self.state.lwdDate > today          \r\n          ) {\r\n            showErrorToast(\r\n              '\"From\" and \"To\" date should be less than future date'\r\n            );\r\n              self.setState({\r\n                lwdDay : '',\r\n                lwdYear : '',\r\n                lwdMonth : '',\r\n                lwdDate:''\r\n              });\r\n          }  \r\n    }else{\r\n      this.validatorTypes.rules['offeredDesignation'] = '';\r\n      this.validatorTypes.messages['required.offeredDesignation'] = '';\r\n\r\n      this.validatorTypes.rules['nextEmployer'] = '';\r\n      this.validatorTypes.messages['required.nextEmployer'] = '';\r\n\r\n      this.validatorTypes.rules['offeredSalary'] = '';\r\n      this.validatorTypes.messages['required.offeredSalary'] = '';\r\n\r\n      this.validatorTypes.rules['offeredSalaryInLakh'] = '';\r\n      this.validatorTypes.messages['required.offeredSalaryInLakh'] = '';\r\n\r\n      this.validatorTypes.rules['offeredSalaryInThousand'] = '';\r\n      this.validatorTypes.messages['required.offeredSalaryInThousand'] = '';\r\n      self.setState({\r\n        lwdDay : '',\r\n        lwdYear : '',\r\n        lwdMonth : '',\r\n        lwdDate:''\r\n      });\r\n    } \r\n\r\n    this.props.validate(function(error) {  \r\n\r\n    \r\n      if (!error) {\r\n        if (\r\n          self.state.fromDate &&\r\n          self.state.fromDate > today &&\r\n          (self.state.toDate && self.state.toDate > today)\r\n        ) {\r\n          showErrorToast(\r\n            '\"From\" and \"To\" date should be less than future date'\r\n          );\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: '',\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (self.state.fromDate && self.state.fromDate > today) {\r\n          showErrorToast('\"From\" date should be less than future date');\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: ''\r\n          });\r\n        } else if (self.state.toDate && self.state.toDate > today) {\r\n          showErrorToast('\"To\" date should be less than future date');\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (\r\n          self.state.fromDate !== '' &&\r\n          self.state.toDate !== '' &&\r\n          self.state.fromDate > self.state.toDate\r\n        ) {\r\n          showErrorToast(\r\n            'The \"to\" date should be greater than or equal to \"from\" date'\r\n          );\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        }else { \r\n          self.setState({ isLoading: true });       \r\n              self.handleSubmit();        \r\n          }\r\n        }\r\n    });\r\n  };\r\n\r\n  selectStartDate = (type, value) => {\r\n    if (type === 'startYear') {\r\n      this.setState({ startYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startMonth') {\r\n      this.setState({ startMonth: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startDay') {\r\n      this.setState({ startDay: 1 }, () => this.selectDateChange());\r\n    }\r\n  };\r\n\r\n  selectEndDate = (type, value) => {\r\n    if (type === 'endYear') {\r\n      this.setState({ endYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'endMonth') {\r\n      this.setState({ endMonth: value }, () => this.selectDateChange());\r\n    }\r\n    // if (type === 'endDay') {\r\n    //   this.setState({ endDay: 1 }, () => this.selectDateChange());\r\n    // }\r\n  };\r\n\r\n  selectLWDDate = (type, value) => {\r\n    if (type === 'lwdYear') {\r\n      this.setState({ lwdYear: value } ,() => this.selectLwdChange());\r\n    }\r\n    if (type === 'lwdMonth') {\r\n      this.setState({ lwdMonth: value },() => this.selectLwdChange());\r\n    }\r\n    if (type === 'lwdDay') {\r\n      this.setState({ lwdDay: 1 })// () => this.selectDateChange());\r\n    } \r\n  };\r\n\r\n  selectLwdChange = () => {\r\n    let lwdDate = '';  \r\n    let lwdDay = 1,\r\n       lwdYear = '',\r\n       lwdMonth = '';\r\n\r\n       if (this.state.lwdYear && this.state.lwdMonth) {\r\n        lwdDay = 1;\r\n        lwdMonth =\r\n          this.state.lwdMonth !== '' ? Number(this.state.lwdMonth) + 1 : '';\r\n          lwdYear = this.state.lwdYear !== '' ? this.state.lwdYear : '';\r\n          lwdDate = moment(lwdYear + '-' + lwdMonth + '-' + lwdDay);\r\n      }\r\n      this.setState({\r\n        lwdDate\r\n      });\r\n  }\r\n  \r\n\r\n  selectDateChange = () => {\r\n    let fromDate = '';\r\n    let toDate = '';\r\n    let startDay = 1,\r\n      startYear = '',\r\n      startMonth = '',\r\n      endDay = 1,\r\n      endMonth = '',\r\n      endYear = '';\r\n\r\n    if (this.state.startYear && this.state.startMonth) {\r\n      startDay = 1;\r\n      startMonth =\r\n        this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n      startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n    }\r\n\r\n    if (this.state.endYear && this.state.endMonth) {\r\n      endDay = 1;\r\n      endMonth =\r\n        this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n      endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n    }\r\n\r\n    if (toDate && fromDate) {\r\n      if (fromDate.isAfter(toDate)) {\r\n        console.log('dd');\r\n        this.setState({\r\n          endDay: startDay,\r\n          endMonth: startMonth - 1,\r\n          endYear: startYear,\r\n          fromDate,\r\n          toDate\r\n        });\r\n      } else {\r\n        this.setState({\r\n          fromDate,\r\n          toDate\r\n        });\r\n      }\r\n    }\r\n  }; \r\n\r\n  handleSubmit() {\r\n    let designation = this.state.designation;\r\n    let organisation = this.state.organisation;\r\n    let currentCompany = this.state.currentCompany;\r\n    let currentSalary = this.state.currentSalary;\r\n    let currentSalaryInLakh = this.state.lakh;\r\n    let currentSalaryInThousand = this.state.thousand;\r\n    let describe = this.state.describe;\r\n    let noticePeriod = this.state.noticePeriod;\r\n    let offeredSalary = this.state.offeredSalary;\r\n    let offeredSalaryInLakh = this.state.offeredSalaryInLakh;\r\n    let offeredSalaryInThousand = this.state.offeredSalaryInThousand;\r\n    let offeredDesignation = this.state.offeredDesignation;\r\n    let nextEmployer = this.state.nextEmployer;\r\n    let userId= this.props.user.userId;\r\n    let employmentId=  this.state.employmentId;\r\n   \r\n   \r\n    console.log('this.state.startDay -- ',this.state.startDay);\r\n\r\n    let startDay = 1;\r\n    let startMonth =\r\n      this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n    let startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n    let fromDate = '';\r\n    if (startDay && startMonth && startYear) {\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n      fromDate = moment(fromDate).valueOf();\r\n    }\r\n\r\n    let endDay = 1;\r\n    let endMonth =\r\n      this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n    let endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n    let toDate = '';\r\n    if (endDay && endMonth && endYear) {\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n      toDate = moment(toDate).valueOf();\r\n      toDate = this.state.todaysDate ? '' : toDate;\r\n    }   \r\n\r\n   \r\n    let lwdDay = this.state.lwdDay !== '' ? this.state.lwdDay : '';\r\n    let lwdMonth =\r\n      this.state.lwdMonth !== '' ? Number(this.state.lwdMonth) + 1 : '';\r\n    let lwdYear = this.state.lwdYear !== '' ? this.state.lwdYear : '';\r\n    let lwdDate = '';\r\n    if(this.state.lwdMonth && this.state.lwdDay && this.state.lwdYear) {\r\n      lwdDate = moment(lwdYear + '-' + lwdMonth + '-' + lwdDay);\r\n      lwdDate = moment(lwdDate).valueOf();\r\n    }\r\n  \r\n\r\n    let data = {\r\n      employmentId,\r\n      userId,\r\n      designation,\r\n      organisation,\r\n      currentCompany,\r\n      currentSalary,\r\n      currentSalaryInLakh,\r\n      currentSalaryInThousand,\r\n      describe,\r\n      noticePeriod,\r\n      offeredSalary,\r\n      offeredSalaryInLakh,\r\n      offeredSalaryInThousand,\r\n      offeredDesignation,\r\n      startDate:fromDate,\r\n      endDate:toDate,\r\n      lastWorkingDate:lwdDate,\r\n      nextEmployer    \r\n    };\r\n\r\n    let self = this;\r\n    console.log('this.state.employmentId -- ',this.state.employmentId);\r\n    if (!this.state.employmentId || this.state.employmentId === '') {\r\n      theRapidHireApiService('addEmployment', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n            self.closeEmploymentModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editEmployment', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n            self.closeEmploymentModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n  currentCheckBox = event => {\r\n    if (event.target.checked) {\r\n      this.validatorTypes.rules['endDay'] = '';\r\n      this.validatorTypes.rules['endMonth'] = '';\r\n      this.validatorTypes.rules['endYear'] = '';\r\n      this.setState({\r\n        toDate: '',\r\n        todaysDate: true,\r\n        endDay: '',\r\n        endMonth: '',\r\n        endYear: '',\r\n        currentCompany: false\r\n      });\r\n\r\n      this.validatorTypes.rules['noticePeriod'] = 'required';\r\n      this.validatorTypes.messages['required.noticePeriod'] =\r\n        validationMessages.noticePeriod.required;\r\n\r\n        this.validatorTypes.rules['currentSalary'] = [\r\n          'required'      \r\n        ];\r\n        this.validatorTypes.messages['required.currentSalary'] =\r\n          validationMessages.currentSalary.required;\r\n\r\n          this.validatorTypes.rules['lakh'] = [\r\n            'required'      \r\n          ];\r\n          this.validatorTypes.messages['required.lakh'] =\r\n            validationMessages.lakh.required;\r\n\r\n            this.validatorTypes.rules['thousand'] = [\r\n              'required'      \r\n            ];\r\n            this.validatorTypes.messages['required.thousand'] =\r\n              validationMessages.thousand.required;\r\n\r\n    } else {\r\n\r\n      this.validatorTypes.rules['noticePeriod'] = '';\r\n      this.validatorTypes.messages['required.noticePeriod'] = '';\r\n\r\n      this.validatorTypes.rules['currentSalary'] = '';\r\n      this.validatorTypes.messages['required.currentSalary'] = '';\r\n\r\n      this.validatorTypes.rules['lakh'] = '';\r\n      this.validatorTypes.messages['required.lakh'] = '';\r\n\r\n      this.validatorTypes.rules['thousand'] = '';\r\n      this.validatorTypes.messages['required.thousand'] = '';\r\n\r\n      this.validatorTypes.rules['endDay'] = 'required';\r\n      this.validatorTypes.messages['required.endDay'] =\r\n        validationMessages.day.required;\r\n\r\n      this.validatorTypes.rules['endMonth'] = 'required';\r\n      this.validatorTypes.messages['required.endMonth'] =\r\n        validationMessages.month.required;\r\n\r\n      this.validatorTypes.rules['endYear'] = 'required';\r\n      this.validatorTypes.messages['required.endYear'] =\r\n        validationMessages.year.required;\r\n\r\n      this.setState({\r\n        todaysDate: false,\r\n        endYear: '',\r\n        endMonth: '',\r\n        endDay: '',\r\n        currentCompany: true     \r\n      });\r\n    }   \r\n  };\r\n\r\n\r\n  deleteEmployment = event => {\r\n    let employmentId= this.state.employmentId,self= this;\r\n    theRapidHireApiService('deleteEmployment', {employmentId})\r\n    .then(response => {\r\n      if (response.data.status === 'Success') {        \r\n        self.closeEmploymentModal('save');\r\n        self.setState({ isLoading: false });\r\n      }\r\n    })\r\n    .catch(error => {\r\n      self.setState({ isLoading: false });\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  closeEmploymentModal = status => {   \r\n    this.setState({\r\n      employmentModal: false\r\n      \r\n    });   \r\n    this.props.closeEmploymentComponent();\r\n  };\r\n\r\n  render() {   \r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>   \r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.employmentModal}\r\n          onHide={this.closeEmploymentModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.EmploymentId || this.state.EmploymentId === ''\r\n                ? 'Add Employment'\r\n                : 'Edit Employment'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('title')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Designation</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a designation\"\r\n                      name=\"designation\"\r\n                      value={this.state.designation}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('designation'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n           \r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('organisation')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Organisation</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a organisation\"\r\n                      name=\"organisation\"\r\n                      value={this.state.organisation}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('organisation'))}\r\n                  </Col>\r\n                </FormGroup>              \r\n\r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Is this your current company ?\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"currentCompany\"\r\n                          className=\"radio-primary\"\r\n                          value={true}\r\n                          checked={\r\n                            this.state.currentCompany === true ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Yes\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"currentCompany\"\r\n                          className=\"radio-primary\"\r\n                          value={false}\r\n                          checked={\r\n                            this.state.currentCompany === false ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          No\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date From\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"startYear\"\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.startYear}\r\n                          onChange={year =>\r\n                            this.selectStartDate('startYear', year)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"startMonth\"\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.startYear}\r\n                          value={this.state.startMonth}\r\n                          onChange={month =>\r\n                            this.selectStartDate('startMonth', month)\r\n                          }\r\n                        />\r\n                      </div>                     \r\n                    </div>                  \r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date To\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"endYear\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.endYear}\r\n                          onChange={year => this.selectEndDate('endYear', year)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"endMonth\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.endYear}\r\n                          value={this.state.endMonth}\r\n                          onChange={month =>\r\n                            this.selectEndDate('endMonth', month)\r\n                          }\r\n                        />\r\n                      </div>                     \r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <Checkbox\r\n                        className=\"checkbox-primary \"\r\n                        onClick={this.currentCheckBox.bind(this)}\r\n                        defaultChecked={this.state.currentCompany ? true : false}\r\n                      >\r\n                        Are you working here now\r\n                        <span className=\"check\" />\r\n                      </Checkbox>\r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                {this.state.todaysDate === true ? <div>\r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Current Salary\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"currentSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"indian\"\r\n                          checked={\r\n                            this.state.currentSalary === 'indian' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Indian\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"currentSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"dollar\"\r\n                          checked={\r\n                            this.state.currentSalary === 'dollar' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Dollars\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                    {renderMessage(\r\n                          this.props.getValidationMessages('currentSalary')\r\n                        )}\r\n                  </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Salary\r\n                </Col>                \r\n                  <Col sm={9}>                \r\n                  <div className=\"dob\">\r\n                      <div className=\"form-group\">                     \r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"lakh\"\r\n                          name=\"lakh\"\r\n                          value={this.state.lakh}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">lakh</option>\r\n                       <option value={1}>1 lakh</option>\r\n                       <option value={2}>2 lakh</option>\r\n                       <option value={3}>3 lakh</option>\r\n                       <option value={4}>4 lakh</option>\r\n                       <option value={5}>5 lakh</option>    \r\n                       <option value={6}>6 lakh</option>        \r\n                       <option value={7}>7 lakh</option>\r\n                       <option value={8}>8 lakh</option>\r\n                       <option value={9}>9 lakh</option>\r\n                       <option value={10}>10 lakh</option>\r\n                       <option value={11}>11 lakh</option>    \r\n                       <option value={12}>12 lakh</option>                                      \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('lakh')\r\n                        )}\r\n                      </div>              \r\n                     <div className=\"form-group\">                                              \r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"thousand\"\r\n                          name=\"thousand\"\r\n                          value={this.state.thousand}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >      \r\n                        <option value=\"\">thousand</option>\r\n                       <option value={1}>1 thousand</option>\r\n                       <option value={2}>2 thousand</option>\r\n                       <option value={3}>3 thousand</option>\r\n                       <option value={4}>4 thousand</option>\r\n                       <option value={5}>5 thousand</option>    \r\n                       <option value={6}>6 thousand</option>        \r\n                       <option value={7}>7 thousand</option>\r\n                       <option value={8}>8 thousand</option>\r\n                       <option value={9}>9 thousand</option>\r\n                       <option value={10}>10 thousand</option>\r\n                       <option value={11}>11 thousand</option>    \r\n                       <option value={12}>12 thousand</option>                                      \r\n                      </FormControl>      \r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('thousand')\r\n                        )}           \r\n                      </div>                                    \r\n                      </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n                </div>:''}\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Describe</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      componentClass=\"textarea\"\r\n                      placeholder=\"Tell us how this made you unique\"\r\n                      name=\"describe\"\r\n                      value={this.state.describe}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"1000\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('description')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n              {this.state.todaysDate === true ? \r\n                <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Notice Period\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <FormControl\r\n                        componentClass=\"select\"\r\n                        placeholder=\"Select Notice Period\"\r\n                        name=\"noticePeriod\"\r\n                        value={this.state.noticePeriod}\r\n                        onChange={this.handleChange}\r\n                        onClick={this.handleChange}\r\n                        inputRef={element => {\r\n                          this.competencyDropdown = element;\r\n                        }}\r\n                      > \r\n                       <option value=\"\">Select Achievement Level</option>\r\n                       <option value={1}>15 days or less</option>\r\n                       <option value={2}>1 month</option>\r\n                       <option value={3}>2 month</option>\r\n                       <option value={4}>3 month</option>\r\n                       <option value={5}>more than 3 month</option>    \r\n                       <option value={6}>Serving notice period</option>                                      \r\n                      </FormControl>\r\n                    </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n              :''}\r\n             {this.state.noticePeriod == 6 ? <div>\r\n                   <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Last Working Days\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"lwdYear\"\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.lwdYear}\r\n                          onChange={year =>\r\n                            this.selectLWDDate('lwdYear', year)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"lwdMonth\"\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.lwdYear}\r\n                          value={this.state.lwdMonth}\r\n                          onChange={month =>\r\n                            this.selectLWDDate('lwdYear', month)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <DayPicker\r\n                          defaultValue=\"Day\"\r\n                          id=\"day\"\r\n                          name=\"lwdDay\"\r\n                          classes=\"form-control\"\r\n                          year={this.state.lwdYear}\r\n                          month={this.state.lwdMonth}\r\n                          endYearGiven\r\n                          value={this.state.lwdDay}\r\n                          onChange={day =>\r\n                            this.selectLWDDate('lwdDay', day)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup> \r\n\r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Offered Salary\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"offeredSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"indian\"\r\n                          checked={\r\n                            this.state.offeredSalary === 'indian' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Indian\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"offeredSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"dollar\"\r\n                          checked={\r\n                            this.state.offeredSalary === 'dollar' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Dollars\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('offeredSalary')\r\n                        )}\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Salary\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"lakh\"\r\n                          name=\"offeredSalaryInLakh\"\r\n                          value={this.state.offeredSalaryInLakh}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >\r\n                        <option value=\"\">lakh</option>\r\n                       <option value={1}>1 lakh</option>\r\n                       <option value={2}>2 lakh</option>\r\n                       <option value={3}>3 lakh</option>\r\n                       <option value={4}>4 lakh</option>\r\n                       <option value={5}>5 lakh</option>    \r\n                       <option value={6}>6 lakh</option>        \r\n                       <option value={7}>7 lakh</option>\r\n                       <option value={8}>8 lakh</option>\r\n                       <option value={9}>9 lakh</option>\r\n                       <option value={10}>10 lakh</option>\r\n                       <option value={11}>11 lakh</option>    \r\n                       <option value={12}>12 lakh</option>                                      \r\n                      </FormControl>      \r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('offeredSalaryInLakh')\r\n                        )}               \r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"thousand\"\r\n                          name=\"offeredSalaryInThousand\"\r\n                          value={this.state.offeredSalaryInThousand}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >  \r\n                         <option value=\"\">thousand</option>\r\n                       <option value={1}>1 thousand</option>\r\n                       <option value={2}>2 thousand</option>\r\n                       <option value={3}>3 thousand</option>\r\n                       <option value={4}>4 thousand</option>\r\n                       <option value={5}>5 thousand</option>    \r\n                       <option value={6}>6 thousand</option>        \r\n                       <option value={7}>7 thousand</option>\r\n                       <option value={8}>8 thousand</option>\r\n                       <option value={9}>9 thousand</option>\r\n                       <option value={10}>10 thousand</option>\r\n                       <option value={11}>11 thousand</option>    \r\n                       <option value={12}>12 thousand</option>                                      \r\n                      </FormControl>  \r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('offeredSalaryInThousand')\r\n                        )}                                \r\n                      </div>                     \r\n                    </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"  \r\n                  className={this.getClasses('offeredDesignation')}                \r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Offered Designation</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a Designation\"\r\n                      name=\"offeredDesignation\"\r\n                      value={this.state.offeredDesignation}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />                    \r\n                  </Col>\r\n                  {renderMessage(\r\n                      this.props.getValidationMessages('offeredDesignation')\r\n                  )}\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\" \r\n                  className={this.getClasses('nextEmployer')}               \r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Next Employer</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add your next employer\"\r\n                      name=\"nextEmployer\"\r\n                      value={this.state.nextEmployer}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />                  \r\n                  </Col>\r\n                  {renderMessage(\r\n                      this.props.getValidationMessages('nextEmployer')\r\n                  )}\r\n                </FormGroup>\r\n              </div>:''} \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.deleteEmployment.bind(this)}              \r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeEmploymentModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddEmployment = validation(strategy)(addEmployment);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addEmployment);","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio  \r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp,\r\n  showErrorToast\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass addProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation:'',\r\n      organisation:'',\r\n      projectModal:true,\r\n      projectId:'',\r\n      associateList: []\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        projectName: 'required'       \r\n      },\r\n      {\r\n        'required.projectName': validationMessages.projectName.required       \r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  }; \r\n\r\n  componentDidMount() {\r\n    let userId= null;\r\n    if(this.props.user){\r\n      userId = this.props.user.userId;\r\n      this.setState({userId: userId});\r\n    } \r\n   \r\n    this.setProjectData(this.props.projectDetail);\r\n    this.getAssociatedListData(userId);\r\n  }\r\n\r\n  getAssociatedListData(userId){\r\n    theRapidHireApiService('getAssociatedListDataByUserId',{userId})\r\n    .then(response => {     \r\n      if (response.data.statusCode === 200) {\r\n         let associateList= this.state.associateList;\r\n         associateList= response.data.resourceData[0];\r\n         this.setState({associateList: associateList});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n  setProjectData = data => {\r\n    \r\n    let startDay = '',\r\n      startMonth = '',\r\n      startYear = '',\r\n      endDay = '',\r\n      endMonth = '',\r\n      endYear = '',\r\n      todaysDate = '';\r\n    if (data) {        \r\n     \r\n      if (data.startDate) {\r\n        startDay = moment(data.startDate).format('D');\r\n        startMonth = Number(moment(data.startDate).format('M')) - 1;\r\n\r\n        startYear = moment(data.startDate).format('YYYY');\r\n      }\r\n\r\n      if (data.endDate) {\r\n        endDay = moment(data.endDate).format('D');\r\n        endMonth = Number(moment(data.endDate).format('M')) - 1;\r\n        endYear = moment(data.endDate).format('YYYY');\r\n      } else {\r\n        todaysDate = '';\r\n      }\r\n\r\n      this.setState({      \r\n        userId:data.userId,\r\n        projectName : data.projectName,\r\n        projectURL : data.projectURL,\r\n        associatedWith : data.associatedWith,\r\n        projectFinished : data.projectFinished,       \r\n        description : data.description,     \r\n        projectId:  data.projectId,\r\n        startDay: startDay,\r\n        startMonth: startMonth,\r\n        startYear: startYear,\r\n        endDay: endDay,\r\n        endMonth: endMonth,\r\n        endYear: endYear,\r\n        //startDate: moment(data.fromDate),\r\n        // endDate: data.toDate ? moment(data.toDate) : emptyToDate,   \r\n        todaysDate: data.toDate ? false : true       \r\n      });     \r\n    }\r\n  };\r\n\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {  \r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    let today = new Date();  \r\n    this.props.validate(function(error) {     \r\n      if (!error) {\r\n        if (\r\n          self.state.fromDate &&\r\n          self.state.fromDate > today &&\r\n          (self.state.toDate && self.state.toDate > today)\r\n        ) {\r\n          showErrorToast(\r\n            '\"From\" and \"To\" date should be less than future date'\r\n          );\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: '',\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (self.state.fromDate && self.state.fromDate > today) {\r\n          showErrorToast('\"From\" date should be less than future date');\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: ''\r\n          });\r\n        } else if (self.state.toDate && self.state.toDate > today) {\r\n          showErrorToast('\"To\" date should be less than future date');\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (\r\n          self.state.fromDate !== '' &&\r\n          self.state.toDate !== '' &&\r\n          self.state.fromDate > self.state.toDate\r\n        ) {\r\n          showErrorToast(\r\n            'The \"to\" date should be greater than or equal to \"from\" date'\r\n          );\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        }else { \r\n          self.setState({ isLoading: true });       \r\n              self.handleSubmit();        \r\n          }\r\n        }    \r\n    });\r\n  };\r\n\r\n  selectStartDate = (type, value) => {\r\n    if (type === 'startYear') {\r\n      this.setState({ startYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startMonth') {\r\n      this.setState({ startMonth: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startDay') {\r\n      this.setState({ startDay: 1 }, () => this.selectDateChange());\r\n    }\r\n  };\r\n\r\n  selectEndDate = (type, value) => {\r\n    if (type === 'endYear') {\r\n      this.setState({ endYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'endMonth') {\r\n      this.setState({ endMonth: value }, () => this.selectDateChange());\r\n    }\r\n    // if (type === 'endDay') {\r\n    //   this.setState({ endDay: 1 }, () => this.selectDateChange());\r\n    // }\r\n  };\r\n \r\n  selectDateChange = () => {\r\n    let fromDate = '';\r\n    let toDate = '';\r\n    let startDay = 1,\r\n      startYear = '',\r\n      startMonth = '',\r\n      endDay = 1,\r\n      endMonth = '',\r\n      endYear = '';\r\n\r\n    if (this.state.startYear && this.state.startMonth) {\r\n      startDay = 1;\r\n      startMonth =\r\n        this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n      startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n    }\r\n\r\n    if (this.state.endYear && this.state.endMonth) {\r\n      endDay = 1;\r\n      endMonth =\r\n        this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n      endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n    }\r\n\r\n    if (toDate && fromDate) {\r\n      if (fromDate.isAfter(toDate)) {      \r\n        this.setState({\r\n          endDay: startDay,\r\n          endMonth: startMonth - 1,\r\n          endYear: startYear,\r\n          fromDate,\r\n          toDate\r\n        });\r\n      } else {\r\n        this.setState({\r\n          fromDate,\r\n          toDate\r\n        });\r\n      }\r\n    }\r\n  }; \r\n\r\n  handleSubmit() {  \r\n\r\n    let projectName = this.state.projectName;\r\n    let projectURL = this.state.projectURL;\r\n    let associatedWith = this.state.associatedWith;\r\n    let projectFinished = this.state.projectFinished;\r\n    let description = this.state.description;\r\n \r\n    let userId = this.props.user.userId;\r\n    let projectId=  this.state.projectId;   \r\n   \r\n    console.log('this.state.startDay -- ',this.state.startDay);\r\n\r\n    let startDay = 1;\r\n    let startMonth =\r\n      this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n    let startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n    let fromDate = '';\r\n    if (startDay && startMonth && startYear) {\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n      fromDate = moment(fromDate).valueOf();\r\n    }\r\n\r\n    let endDay = 1;\r\n    let endMonth =\r\n      this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n    let endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n    let toDate = '';\r\n    if (endDay && endMonth && endYear) {\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n      toDate = moment(toDate).valueOf();\r\n      toDate = this.state.todaysDate ? '' : toDate;\r\n    }    \r\n  \r\n    let data = {\r\n      projectId,\r\n      userId,\r\n      projectName,\r\n      projectURL,\r\n      associatedWith,\r\n      projectFinished,\r\n      description, \r\n      startDate:fromDate,\r\n      endDate:toDate      \r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.projectId || this.state.projectId === '') {\r\n      theRapidHireApiService('addProject', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n           self.closeProjectModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editProject', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n           self.closeProjectModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  currentCheckBox = event => {\r\n    if (event.target.checked) {\r\n      this.setState({\r\n        todaysDate: true,\r\n        endDate: emptyToDate,\r\n        endDay: '',\r\n        endMonth: '',\r\n        endYear: '',\r\n        projectFinished: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        todaysDate: false,\r\n        endYear: moment().format('YYYY'),\r\n        endMonth: moment().format('M') - 1,\r\n        endDay: moment().format('D'),\r\n        projectFinished:false\r\n      });\r\n    }\r\n    // let endDate = null;\r\n    // if (!todaysDate) endDate = emptyToDate;\r\n    // else endDate = '';\r\n    // this.setState({ todaysDate: !todaysDate, endDate: endDate });\r\n  };\r\n\r\n  closeProjectModal = status => {   \r\n    this.setState({\r\n      projectModal: false\r\n      \r\n    });   \r\n    this.props.closeProjectComponent();\r\n  };\r\n\r\n  render() {\r\n\r\n    console.log('this.props.employmentDetail ',this.props.projectDetail);\r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.projectModal}\r\n          onHide={this.closeProjectModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.ProjectId || this.state.ProjectId === ''\r\n                ? 'Add Project'\r\n                : 'Edit Project'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('title')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Project Name</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a project\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('projectName'))}\r\n                  </Col>\r\n                </FormGroup>                     \r\n               \r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date From\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"startYear\"\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.startYear}\r\n                          onChange={year =>\r\n                            this.selectStartDate('startYear', year)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"startMonth\"\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.startYear}\r\n                          value={this.state.startMonth}\r\n                          onChange={month =>\r\n                            this.selectStartDate('startMonth', month)\r\n                          }\r\n                        />\r\n                      </div>                 \r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date To\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"endYear\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.endYear}\r\n                          onChange={year => this.selectEndDate('endYear', year)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"endMonth\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.endYear}\r\n                          value={this.state.endMonth}\r\n                          onChange={month =>\r\n                            this.selectEndDate('endMonth', month)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      {/* <div className=\"form-group\">\r\n                        <DayPicker\r\n                          defaultValue=\"Day\"\r\n                          id=\"day\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          name=\"endDay\"\r\n                          classes=\"form-control\"\r\n                          year={this.state.endYear}\r\n                          month={this.state.endMonth}\r\n                          endYearGiven\r\n                          value={this.state.endDay}\r\n                          onChange={day => this.selectEndDate('endDay', day)}\r\n                        /> \r\n                      </div>*/}\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <Checkbox\r\n                        className=\"checkbox-primary \"\r\n                        onClick={this.currentCheckBox.bind(this)}\r\n                        defaultChecked={this.state.projectFinished ? true : false}\r\n                      >\r\n                        Is project going on?\r\n                        <span className=\"check\" />\r\n                      </Checkbox>\r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                {/* <div>    <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Associated With\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"associatedWith\"\r\n                          name=\"associatedWith\"\r\n                          value={this.state.associatedWith}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">associatedWith</option>\r\n                       {this.state.associateList.map((ass, i) => (\r\n                       <option value={ass}>{ass}</option>\r\n                       ))}                                 \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('associatedWith')\r\n                        )}\r\n                      </div>                                  \r\n                    </div>\r\n                  </Col>\r\n                </FormGroup>\r\n                </div> */}\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Description</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      componentClass=\"textarea\"\r\n                      placeholder=\"description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"1000\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('description')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>    \r\n\r\n                 <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('title')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Project URL</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a projectURL\"\r\n                      name=\"projectURL\"\r\n                      value={this.state.projectURL}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('projectURL'))}\r\n                  </Col>\r\n                </FormGroup>         \r\n               \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeProjectModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddProject = validation(strategy)(addProject);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addProject);\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass addCareerProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation:'',\r\n      organisation:'',\r\n      careerProfileModal:true,\r\n      profileId:'',\r\n      associateList: [],\r\n      locationList: [{\r\n              value: 1 ,\r\n              label: 'Indore'},\r\n              {\r\n                value: 2 ,\r\n                label: 'Bhopal'},\r\n                {\r\n                  value: 2 ,\r\n                  label: 'Dewas'}\r\n              ],\r\n      desiredIndustryList:[{\r\n        value: 1 ,\r\n        label: 'Agriculture'},\r\n        {\r\n          value: 2 ,\r\n          label: 'IT'},\r\n          {\r\n            value: 2 ,\r\n            label: 'Admin'}\r\n        ]      \r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        industry: 'required',       \r\n        functionalArea: 'required',\r\n        role: 'required',\r\n        desiredLocation: 'required',\r\n        desiredIndustry: 'required',\r\n       \r\n      },\r\n      {\r\n        'required.industry': validationMessages.industry.required,        \r\n         'required.functionalArea': validationMessages.functionalArea.required,\r\n        'required.role': validationMessages.role.required,\r\n        'required.desiredLocation': validationMessages.desiredLocation.required,\r\n        'required.desiredIndustry': validationMessages.desiredIndustry.required,\r\n      }\r\n    );\r\n  }  \r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n    //  let userId = this.props.user.userId;\r\n    // }  \r\n    console.log('this.props.employmentDetail ',this.props.careerProfileDetail);\r\n    this.setCareerProfileData(this.props.careerProfileDetail);\r\n   // this.getAssociatedListData(10);\r\n  }\r\n\r\n\r\n  setCareerProfileData = data => { \r\n    if(data){ \r\n      this.setState({      \r\n          userId:data.userId,\r\n          industry : data.industry,\r\n          functionalArea : data.functionalArea,\r\n          role : data.role,\r\n          jobType : data.jobType, \r\n          profileId: data.profileId,      \r\n          employmentType : data.employmentType,     \r\n          desiredShift:  data.desiredShift,\r\n          expectedSalary : data.expectedSalary,       \r\n          expectedSalaryInLakh : data.expectedSalaryInLakh,     \r\n          expectedSalaryInThousand:  data.expectedSalaryInThousand,          \r\n          desiredLocation : data.desiredLocation,       \r\n          desiredIndustry : data.desiredIndustry       \r\n        });     \r\n      }; \r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    console.log(endDate);\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      let imageObject = {\r\n        media: self.state.mediaImgArray || []\r\n      };\r\n\r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        }    \r\n    });\r\n  };  \r\n\r\n  handleSubmit() {\r\n   \r\n   let industry = this.state.industry;\r\n   let functionalArea = this.state.functionalArea;\r\n   let role = this.state.role;\r\n   let jobType = this.state.jobType; \r\n        \r\n   let employmentType = this.state.employmentType;    \r\n   let desiredShift =  this.state.desiredShift;\r\n   let expectedSalary = this.state.expectedSalary;     \r\n   let expectedSalaryInLakh = this.state.expectedSalaryInLakh;    \r\n   let expectedSalaryInThousand =  this.state.expectedSalaryInThousand;\r\n   let desiredLocation= [];\r\n   this.state.desiredLocation.forEach(function(item){\r\n    desiredLocation.push(item.label);\r\n   })    \r\n   let desiredIndustry = [];     \r\n   this.state.desiredIndustry.forEach(function(item){\r\n    desiredIndustry.push(item.label);\r\n   })\r\n \r\n    let userId = this.props.user.userId;\r\n    let profileId=  this.state.profileId;   \r\n\r\n   \r\n    let data = {\r\n      profileId,\r\n      userId,\r\n      industry,\r\n      functionalArea,\r\n      role,\r\n      jobType,\r\n      employmentType, \r\n      desiredShift,\r\n      expectedSalary,\r\n      expectedSalaryInLakh,\r\n      expectedSalaryInThousand,\r\n      desiredLocation,\r\n      desiredIndustry\r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.profileId || this.state.profileId === '') {\r\n      theRapidHireApiService('addCareerProfile', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n            self.closeCareerProfileModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editDesiredProfileData', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n            self.closeCareerProfileModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n \r\n  handleLocationChange = newValue => {\r\n    this.setState({\r\n      desiredLocation: newValue\r\n    });\r\n  };\r\n\r\n  handleDesiredIndustryChange = newValue => {\r\n    this.setState({\r\n      desiredIndustry: newValue\r\n    });\r\n  };\r\n\r\n  \r\n\r\n  closeCareerProfileModal = status => {   \r\n    this.setState({\r\n      careerProfileModal: false\r\n      \r\n    });   \r\n    this.props.closeCareerProfileComponent();\r\n  };\r\n\r\n  render() {\r\n\r\n    console.log('this.props.employmentDetail ',this.props.careerProfileDetail);\r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>  \r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.careerProfileModal}\r\n          onHide={this.closeCareerProfileModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.profileId || this.state.profiletId === ''\r\n                ? 'Add Career Profile'\r\n                : 'Edit Career Profile'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>   \r\n            \r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n               <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Industry\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <FormControl\r\n                              componentClass=\"select\"\r\n                              placeholder=\"industry\"\r\n                              name=\"industry\"\r\n                              value={this.state.industry}                          \r\n                              onChange={this.handleChange}\r\n                              autoComplete=\"off\"\r\n                              maxLength=\"1000\"\r\n                            >                        \r\n                          <option value=\"\">industry</option>\r\n                          <option value={1}>IT</option>                                                     \r\n                    </FormControl>              \r\n                {renderMessage(\r\n                          this.props.getValidationMessages('industry')\r\n                        )}\r\n                </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Functional Area\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"functionalArea\"\r\n                          name=\"functionalArea\"\r\n                          value={this.state.functionalArea}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">functionalArea</option>\r\n                       <option value={1}>IT Specialization</option>\r\n                                                   \r\n                </FormControl>              \r\n                {renderMessage(\r\n                          this.props.getValidationMessages('functionalArea')\r\n                        )}\r\n                  </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Role\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"role\"\r\n                          name=\"role\"\r\n                          value={this.state.role}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">role</option>\r\n                       <option value={1}>Software Developer</option>\r\n                       <option value={2}>Team Lead</option>\r\n                       <option value={3}>IT Analyst</option>\r\n                       <option value={4}>Recruiter</option>                                                       \r\n                </FormControl>              \r\n                {renderMessage(\r\n                          this.props.getValidationMessages('role')\r\n                        )}\r\n               </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n        \r\n\r\n      \r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      JOB Type\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"jobType\"\r\n                          className=\"radio-primary\"\r\n                          value=\"permanent\"\r\n                          checked={\r\n                            this.state.jobType === 'permanent' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Permanet\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"jobType\"\r\n                          className=\"radio-primary\"\r\n                          value=\"dollar\"\r\n                          checked={\r\n                            this.state.jobType === 'contractual' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Contractual\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                   <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Employment Type\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"employmentType\"\r\n                          className=\"radio-primary\"\r\n                          value=\"full\"\r\n                          checked={\r\n                            this.state.employmentType === 'full' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Full Time\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"employmentType\"\r\n                          className=\"radio-primary\"\r\n                          value=\"part\"\r\n                          checked={\r\n                            this.state.employmentType === 'part' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Part Time\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n\r\n                  <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Preffered Shift \r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"desiredShift\"\r\n                          className=\"radio-primary\"\r\n                          value=\"day\"\r\n                          checked={\r\n                            this.state.desiredShift === 'day' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Day\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"desiredShift\"\r\n                          className=\"radio-primary\"\r\n                          value=\"night\"\r\n                          checked={\r\n                            this.state.desiredShift === 'night' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Night\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"desiredShift\"\r\n                          className=\"radio-primary\"\r\n                          value=\"flexible\"\r\n                          checked={\r\n                            this.state.desiredShift === 'flexible' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Flexible\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                      <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Expected Salary\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"expectedSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"indian\"\r\n                          checked={\r\n                            this.state.expectedSalary === 'indian' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Indian\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"expectedSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"dollar\"\r\n                          checked={\r\n                            this.state.expectedSalary === 'dollar' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Dollar\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>             \r\n\r\n                 <FormGroup className={this.getClasses('desiredLocation')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Desired Location\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"\r\n                        multi\r\n                        name=\"desiredLocation\"\r\n                        value={this.state.desiredLocation}\r\n                        onChange={this.handleLocationChange}\r\n                        options={this.state.locationList}\r\n                        placeholder=\"Select all the location that you used along the way\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('desiredLocation'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className={this.getClasses('skills')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Desired Industry\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"\r\n                        multi\r\n                        name=\"desiredIndustry\"\r\n                        value={this.state.desiredIndustry}\r\n                        onChange={this.handleDesiredIndustryChange}\r\n                        options={this.state.desiredIndustryList}\r\n                        placeholder=\"Select all the industry that you used along the way\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('desiredIndustry'))}\r\n                  </Col>\r\n                </FormGroup>             \r\n                \r\n               \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeCareerProfileModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddCareerProfile = validation(strategy)(addCareerProfile);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addCareerProfile);","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\nconst locationList=[\r\n{locationId:1,name:'Indore' },{locationId:2,name:'Bhopal'},{locationId:3,name:'Pune'}]\r\n\r\nclass addPersonalProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation:'',\r\n      organisation:'',\r\n      personalProfileModal:true,\r\n      projectId:'',\r\n      associateList: [],\r\n      profileRoleList:[]\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        profileRole: 'required',\r\n        year:'required',\r\n        month:'required',\r\n        location:'required',\r\n        mobileNo: 'required'\r\n        // level3Competency: 'required',\r\n        // skills: 'required',\r\n        // importance: 'required',\r\n        // //   startDate: 'required',\r\n        // //  endDate: 'required',\r\n        // firstName: ['regex:' + regExpressions.alphaOnly],\r\n        // lastName: ['regex:' + regExpressions.alphaOnly],\r\n        // email: 'email'\r\n      },\r\n      {\r\n        'required.profileRole': validationMessages.profileRole.required,\r\n        'required.year': validationMessages.year.required,\r\n        'required.month': validationMessages.month.required,\r\n        'required.location': validationMessages.location.required,\r\n        'required.mobileNo': validationMessages.mobileNo.required,\r\n        // 'required.level3Competency': validationMessages.competency.required\r\n        // 'required.skills': validationMessages.skills.required,\r\n        // 'required.importance': validationMessages.importance.required,\r\n        // //  'required.startDate': validationMessages.startDate.required,\r\n        // //  'required.endDate': validationMessages.endDate.required,\r\n        // 'email.email': validationMessages.email.invalid,\r\n        // 'regex.firstName': validationMessages.firstName.alphaOnly,\r\n        // 'regex.lastName': validationMessages.lastName.alphaOnly\r\n      }\r\n    );\r\n  }\r\n\r\n \r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n    let userId = this.props.user.userId;\r\n    // }  \r\n    console.log('this.props.employmentDetail ',this.props.userProfile);\r\n    this.setProjectData(this.props.userProfile);\r\n    this.getProfileRoleList();\r\n  }\r\n\r\n  // getAssociatedListData(userId){\r\n  //   theRapidHireApiService('getAssociatedListDataByUserId',{userId})\r\n  //   .then(response => {     \r\n  //     if (response.data.statusCode === 200) {\r\n  //        let associateList= this.state.associateList;\r\n  //        associateList= response.data.resourceData[0];\r\n  //        this.setState({associateList: associateList});\r\n  //     }\r\n  //   })\r\n  //   .catch(err => {\r\n  //     console.log(err);\r\n  //   });\r\n  // }\r\n\r\n\r\n  getProfileRoleList(){\r\n    theRapidHireApiService('getProfileRoleList')\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n        let profileRoleList= this.state.profileRoleList;\r\n        // response.data.result.forEach(function(data){       \r\n        //    profileRoleList.push({label: data.profileRole,value:data.profileRoleId })\r\n        // })   \r\n        profileRoleList=response.data.result ;\r\n        console.log(profileRoleList);    \r\n        this.setState({profileRoleList: profileRoleList});\r\n          }\r\n        })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n  setProjectData = data => {    \r\n    if (data) {  \r\n      this.setState({      \r\n          userId:data.userId,\r\n          userProfileId : data.userProfileId,\r\n          skills:data.skills,\r\n          year: data.experienceInYear,\r\n          month: data.experienceInMonth,\r\n          location: data.currentLocation,\r\n          mobileNo: data.mobileNo,\r\n          profileRole: data.profileRole && data.profileRole[0] && data.profileRole[0].profileRoleId          \r\n        });    \r\n    }\r\n  };\r\n \r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      let imageObject = {\r\n        media: self.state.mediaImgArray || []\r\n      };\r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        }      \r\n    });\r\n  };\r\n\r\n  handleSubmit() {  \r\n\r\n    let profileRoleId = this.state.profileRole;\r\n    let profileRole = [];\r\n    let profileRoleList= this.state.profileRoleList;\r\n    let index= profileRoleList.findIndex(todo => todo.profileRoleId == profileRoleId );\r\n\r\n    profileRole.push(profileRoleList[index]);\r\n\r\n    let experienceInYear = this.state.year;\r\n    let experienceInMonth = this.state.month;\r\n    let currentLocation = this.state.location;\r\n    let mobileNo = this.state.mobileNo;\r\n    let skills = this.state.skills;\r\n    let userId = this.props.user.userId;\r\n    let userProfileId=  this.state.userProfileId; \r\n    let roleId = this.props.user.roleId\r\n    let data = {\r\n      userProfileId,\r\n      userId,\r\n      profileRole,\r\n      experienceInYear,\r\n      experienceInMonth,\r\n      currentLocation,\r\n      mobileNo,\r\n      skills,\r\n      roleId   \r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.userProfileId || this.state.userProfileId === '') {\r\n      theRapidHireApiService('addUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n           self.closePersonalProfileModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editUserProfile', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n           self.closePersonalProfileModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  closePersonalProfileModal = status => {   \r\n    this.setState({\r\n      personalProfileModal: false\r\n      \r\n    });   \r\n    this.props.closePersonalProfileComponent();\r\n  };\r\n\r\n  render() {    \r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.personalProfileModal}\r\n          onHide={this.closePersonalProfileModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.userProfileId || this.state.userProfileId === ''\r\n                ? 'Add Profile'\r\n                : 'Edit Profile'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n              <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                        Profile Role\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"profileRole\"\r\n                          name=\"profileRole\"\r\n                          value={this.state.profileRole}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\" disabled>job role</option>\r\n                       {this.state.profileRoleList.map((ass, i) => (\r\n                       <option value={ass.profileRoleId}>{ass.profileRole}</option>\r\n                       ))}                                 \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('associatedWith')\r\n                        )}\r\n                      </div>                                  \r\n                    </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>                  \r\n               \r\n\r\n                            <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Experience\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"year\"\r\n                          name=\"year\"\r\n                          value={this.state.year}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\" disabled>years</option>\r\n                       <option value={1}>1 years</option>\r\n                       <option value={2}>2 years</option>\r\n                       <option value={3}>3 years</option>\r\n                       <option value={4}>4 years</option>\r\n                       <option value={5}>5 years</option>    \r\n                       <option value={6}>6 years</option>        \r\n                       <option value={7}>7 years</option>\r\n                       <option value={8}>8 years</option>\r\n                       <option value={9}>9 years</option>\r\n                       <option value={10}>10 years</option>\r\n                       <option value={11}>11 years</option>    \r\n                       <option value={12}>12 years</option>                                      \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('year')\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"month\"\r\n                          name=\"month\"\r\n                          value={this.state.month}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >      \r\n                        <option value=\"\" disabled>month</option>\r\n                       <option value={1}>1 month</option>\r\n                       <option value={2}>2 month</option>\r\n                       <option value={3}>3 month</option>\r\n                       <option value={4}>4 month</option>\r\n                       <option value={5}>5 month</option>    \r\n                       <option value={6}>6 month</option>        \r\n                       <option value={7}>7 month</option>\r\n                       <option value={8}>8 month</option>\r\n                       <option value={9}>9 month</option>\r\n                       <option value={10}>10 month</option>\r\n                       <option value={11}>11 month</option>    \r\n                       <option value={12}>12 month</option>                                      \r\n                      </FormControl>                 \r\n                      </div>                     \r\n                    </div>                   \r\n                     {renderMessage(this.props.getValidationMessages('month'))} \r\n                  </Col>\r\n                </FormGroup>\r\n                <div>               \r\n\r\n              <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                      Current Location\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"location\"\r\n                          name=\"location\"\r\n                          value={this.state.location}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">location</option>\r\n                       {locationList.map((ass, i) => (\r\n                          <option value={ass.locationId}>{ass.name}</option>\r\n                       ))}\r\n                                                        \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('associatedWith')\r\n                        )}\r\n                      </div>                                  \r\n                    </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n                </div>\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>MobileNo</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add mobileNo\"\r\n                      name=\"mobileNo\"\r\n                      value={this.state.mobileNo}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('mobileNo')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>           \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closePersonalProfileModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddPersonalProfile = validation(strategy)(addPersonalProfile);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addPersonalProfile);\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass addSkills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,         \r\n      promptRecommendation: false,    \r\n      userId: '',       \r\n      skillsModal:true,\r\n      skillId:'',\r\n      rating:'',\r\n      skillsList:[],\r\n      availableSkills:[]      \r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        skills: 'required',\r\n        rating: 'required'\r\n        // level3Competency: 'required',\r\n        // skills: 'required',\r\n        // importance: 'required',\r\n        // //   startDate: 'required',\r\n        // //  endDate: 'required',\r\n        // firstName: ['regex:' + regExpressions.alphaOnly],\r\n        // lastName: ['regex:' + regExpressions.alphaOnly],\r\n        // email: 'email'\r\n      },\r\n      {\r\n        'required.skills': validationMessages.skills.required,        \r\n         'required.rating': validationMessages.rating.required\r\n        // 'required.skills': validationMessages.skills.required,\r\n        // 'required.importance': validationMessages.importance.required,\r\n        // //  'required.startDate': validationMessages.startDate.required,\r\n        // //  'required.endDate': validationMessages.endDate.required,\r\n        // 'email.email': validationMessages.email.invalid,\r\n        // 'regex.firstName': validationMessages.firstName.alphaOnly,\r\n        // 'regex.lastName': validationMessages.lastName.alphaOnly\r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userId= null;\r\n    if(this.props.user){\r\n      userId = this.props.user.userId;\r\n      this.setState({userId: userId});\r\n    }    \r\n    this.setSkillsData(this.props.skillsDetail);\r\n    // this.getAssociatedListData(10);\r\n    this.getKeySkillsList();\r\n  }\r\n\r\n  getKeySkillsList(userId){\r\n    theRapidHireApiService('getKeySkillsList')\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n         let skillsList= this.state.skillsList;\r\n         let availableSkills= this.props.skillsDetail && this.props.skillsDetail.skills ?this.props.skillsDetail.skills:[] ;\r\n         response.data.result.forEach(function(data){\r\n           let availIndex= availableSkills.findIndex(todo => todo.skillId == data.skillId);\r\n          if(availIndex === -1)\r\n            skillsList.push({label: data.skillName,value:data.skillId })\r\n        })    \r\n        console.log(skillsList);    \r\n         this.setState({skillsList: skillsList});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  setSkillsData = data => { \r\n    console.log(data);\r\n    if(data){ \r\n      this.setState({      \r\n          userId:data.userId,\r\n          availableSkills : data.skills,         \r\n          userProfileId: data.userProfileId\r\n        });     \r\n      }; \r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    console.log(endDate);\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {      \r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        }   \r\n    });\r\n  };  \r\n\r\n  handleSubmit() {   \r\n   let rating = this.state.rating;  \r\n   let availableSkills = this.props.skillsDetail.skills;\r\n   let skills = this.state.skills;  \r\n    console.log(this.state.skills);  \r\n   \r\n    availableSkills.push({'skillId':skills.value,'skillName':skills.label,'rating':rating});   \r\n\r\n    let userId = this.props.user.userId;\r\n    let skillId=  this.state.skillId;   \r\n    let userProfileId= this.props.skillsDetail.userProfileId ?this.props.skillsDetail.userProfileId:\"\";\r\n    \r\n    console.log('userProfileId',userProfileId);\r\n    let data = {\r\n      userProfileId,\r\n      userId,\r\n      skills:availableSkills     \r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.userProfileId || this.state.userProfileId === '') {\r\n      theRapidHireApiService('addUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n            self.closeSkillsModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n            self.closeSkillsModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n\r\n  handleSkillsChange = newValue => {\r\n    this.setState({\r\n      skills: newValue\r\n    });\r\n  };\r\n  \r\n\r\n  closeSkillsModal = status => {   \r\n    this.setState({\r\n      skillsModal: false      \r\n    });   \r\n    this.props.closeSkillsComponent();\r\n  };\r\n\r\n  render() {    \r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.skillsModal}\r\n          onHide={this.closeSkillsModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.profileId || this.state.profiletId === ''\r\n                ? 'Add Career Profile'\r\n                : 'Edit Career Profile'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>   \r\n            \r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>               \r\n                 <FormGroup className={this.getClasses('skills')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Add Skills\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"                        \r\n                        name=\"skills\"\r\n                        value={this.state.skills}\r\n                        onChange={this.handleSkillsChange}\r\n                        options={this.state.skillsList}\r\n                        placeholder=\"Select skill\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('skills'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n              <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Role\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"rating\"\r\n                          name=\"rating\"\r\n                          value={this.state.rating}  \r\n                          defaultValue={parseInt(this.state.rating,10)}                   \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">skills rating</option>\r\n                       <option value={1}>1</option>\r\n                       <option value={2}>2</option>\r\n                       <option value={3}>3</option>\r\n                       <option value={4}>4</option>  \r\n                       <option value={5}>5</option>                                                       \r\n                </FormControl>              \r\n                {renderMessage(\r\n                          this.props.getValidationMessages('rating')\r\n                        )}\r\n               </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n                 \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeSkillsModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddSkills = validation(strategy)(addSkills);\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addSkills);","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\nimport VideoPlayer from 'react-video-js-player';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass videoIntroduction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,         \r\n      promptRecommendation: false,    \r\n      userId: '',       \r\n      videoModal:true,\r\n      skillId:''  ,\r\n      video: {\r\n        src: \"http://www.example.com/path/to/video.mp4\",\r\n        poster: \"http://www.example.com/path/to/video_poster.jpg\"\r\n    },     \r\n    };\r\n\r\n  \r\n  }\r\n\r\n\r\n  componentDidMount() {  \r\n \r\n  }\r\n \r\n\r\n  onPlayerReady(player){\r\n    console.log(\"Player is ready: \", player);\r\n    this.player = player;\r\n}\r\n\r\nonVideoPlay(duration){\r\n    console.log(\"Video played at: \", duration);\r\n}\r\n\r\nonVideoPause(duration){\r\n    console.log(\"Video paused at: \", duration);\r\n}\r\n\r\nonVideoTimeUpdate(duration){\r\n    console.log(\"Time updated: \", duration);\r\n}\r\n\r\nonVideoSeeking(duration){\r\n    console.log(\"Video seeking: \", duration);\r\n}\r\n\r\nonVideoSeeked(from, to){\r\n    console.log(`Video seeked from ${from} to ${to}`);\r\n}\r\n\r\nonVideoEnd(){\r\n    console.log(\"Video ended\");\r\n}\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n \r\n  \r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      let imageObject = {\r\n        media: self.state.mediaImgArray || []\r\n      };\r\n\r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        } else {\r\n          self.handleSubmit();\r\n        }      \r\n    });\r\n  };  \r\n\r\n  handleSubmit() {\r\n   \r\n   let rating = this.state.rating;  \r\n  \r\n   let skills = [];     \r\n   this.state.skills.forEach(function(item){\r\n    skills.push(item.label);\r\n   })\r\n \r\n    let userId = 10;\r\n    let skillId=  this.state.skillId;   \r\n\r\n   \r\n    let data = {\r\n      rating,\r\n      userId,\r\n      skills,\r\n      skillId\r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.skillId || this.state.skillId === '') {\r\n      theRapidHireApiService('addUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.statusCode === 200) {      \r\n            self.setState({ isLoading: false });\r\n            self.closeVideoModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.statusCode === 200) {        \r\n            self.closeVideoModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  closeVideoModal = status => {   \r\n    this.setState({\r\n      skillsModal: false\r\n      \r\n    });   \r\n    this.props.closeVideoComponent();\r\n  };\r\n\r\n  render() {  \r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.videoModal}\r\n          onHide={this.closeVideoModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {/* {!this.state.profileId || this.state.profiletId === ''\r\n                ? 'Add Career Profile'\r\n                : 'Edit Career Profile'} */}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>   \r\n            \r\n     \r\n\r\n\r\n  <VideoPlayer\r\n                    controls={true}\r\n                    src=\"http://download.blender.org/peach/bigbuckbunny_movies/BigBuckBunny_320x180.mp4\"\r\n                    poster={this.state.video.poster}\r\n                    width=\"720\"\r\n                    height=\"420\"\r\n                    onReady={this.onPlayerReady.bind(this)}\r\n                    onPlay={this.onVideoPlay.bind(this)}\r\n                    onPause={this.onVideoPause.bind(this)}\r\n                    onTimeUpdate={this.onVideoTimeUpdate.bind(this)}\r\n                    onSeeking={this.onVideoSeeking.bind(this)}\r\n                    onSeeked={this.onVideoSeeked.bind(this)}\r\n                    onEnd={this.onVideoEnd.bind(this)}\r\n                />  \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeVideoModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nvideoIntroduction = validation(strategy)(videoIntroduction);\r\nexport default videoIntroduction;\r\n","import React, { Component } from 'react';\nimport Header from '../header/header';\nimport {\n  Button,\n  Media,\n  Row,\n  Col,\n  FormControl,\n  InputGroup\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\n//import SideBar from '../../components/SideBar';\nimport _ from 'lodash';\nimport S3FileUpload from 'react-s3';\nimport { Link } from 'react-router-dom';\n//import Summary from './summary/addSummary';\nimport Education from '../profile/addEducation';\nimport AddEmployment from '../profile/addEmployment';\nimport AddProject from '../profile/addProject';\nimport AddCareerProfile from '../profile/addCareerProfile';\nimport AddPersonalProfile from '../profile/addPersonalProfile';\nimport AddSkills from '../profile/addSkills';\nimport VideoIntroduction from '../profile/videoIntroduction';\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\";\n//import Img from '../../common/cropper/img';\nimport {\n  showErrorToast,\n  uploadToAzure,\n  limitCharacter,\n  SampleNextArrow,\n  SamplePrevArrow,\n  getThumbImage\n} from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport moment from 'moment';\nimport {\n  actionGetStudentPersonalInfo,\n  actionGetAllCompetency,\n  actionGetAchievementsByUser,\n  actionGetRecommendationsByUser,\n  actionUpdateUserInfo,\n  actionGetAchievementsData\n} from '../../common/core/redux/actions';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\nimport Select from 'react-select';\n\nconst config = {\n  bucketName: 'ankurself',\n  dirName: 'photos', /* optional */\n  region: 'ap-south-1', // Put your aws region here\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\n}\nvar settings=null;\n\nconst skills1=[\n  {label:'Developer',value:1 },\n  {label:'React Developer',value:2 }\n  ]\n\nclass EditProfile extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {      \n      showEmploymentComponent: false,\n      showSkillsComponent: false,\n      showProjectComponent: false,\n      showPCareerProfileComponent: false,\n      showVideoComponent:false,\n      showEducationComponent:false,\n      educationDetail: {}, \n      employmentDetail: {},            \n      skillsDetail: {},     \n      projectDetail: {},    \n      careerProfileDetail: {}, \n      loader1: false,\n      loader2: false,\n      imageSource: '',      \n      employmentListData: [],\n      skillsListData:[],\n      projectListData:[],\n      userData:{},    \n      showDropdown: false,     \n      isActive: 'true',     \n      contentEditable: false,\n      editName: false,\n      name: '',\n      editTagLine: false,\n      profileRoleList:[],\n      userProfile:{}\n    };\n   // this.textInput = React.createRef();    \n  }\n\n  componentWillMount() {\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\n    \n    if(user){\n      let userId =user.userId; \n      this.getEmploymentData(userId);\n      this.getUserDetails(userId);  \n      this.getSkillsData(userId);\n      this.getProjectsData(userId);\n      this.getCareerProfileData(userId);\n      this.getUserProfileData(userId);\n      this.setProfileData(user);\n      this.setState({userId: userId,user:user});\n    }    \n    this.uploadImageToAzure = this.uploadImageToAzure.bind(this);\n  }\n\n  componentWillReceiveProps(res) {\n     this.setProfileData(res.user);   \n  }\n\n  componentDidMount() { \n  \n  }\n\n  setProfileData = data => {\n    //console.log(data);\n    if (data) {\n      let userId = data.userId;\n      let summary = data.summary;\n      let firstName = data.firstName;\n      let lastName = data.lastName;\n      // let tagline = data.tagline.trim();\n      // let editTag = data.tagline.trim();\n      let email= data.email;\n      let tagline = data.tagline ? data.tagline.trim() : null;\n      let editTag = data.tagline ? data.tagline.trim() : null;\n\n      let name =\n        (data.firstName ? data.firstName : '') +\n        ' ' +\n        (data.lastName ? data.lastName : '');\n      let profileImage = data.profilePicture;\n      if (profileImage) {\n        profileImage = profileImage //getThumbImage('medium', profileImage);\n      }\n      let coverImage = data.coverImage;\n      if (coverImage) {\n        coverImage = getThumbImage('original', coverImage);\n      }\n      let isActive = data.isActive;\n      this.setState({\n        editTag,\n        summary,\n        firstName,\n        lastName,\n        userId,\n        email,\n        profileImage,\n        coverImage,\n        tagline,\n        isActive,\n        name\n      });\n    }\n  }; \n\n  //Get Section\n  getUserDetails(userId){\n    theRapidHireApiService('getUserDetails',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n         let userData= this.state.userData;\n         userData= response.data.result[0];     \n         this.setState({userData: userData});        \n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  getEmploymentData(userId){\n    theRapidHireApiService('getEmploymentListById',{userId})\n    .then(response => { \n      console.log(response);    \n      if (response.data.status === 'Success') {\n         let employmentListData= this.state.employmentListData;\n         employmentListData= response.data.result;\n         this.setState({employmentListData: employmentListData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  getSkillsData(userId){\n    theRapidHireApiService('getUserSkillsById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response.data);\n         let skillsListData= this.state.skillsListData;\n         let skillsDetail = response.data.result[0];        \n         skillsListData=skillsDetail ? skillsDetail.skills: []\n         this.setState({skillsListData,skillsDetail});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  getProjectsData(userId){\n    theRapidHireApiService('getProjectListById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n         let projectListData= this.state.projectListData;\n         projectListData= response.data.result;\n         this.setState({projectListData: projectListData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  getCareerProfileData(userId){\n    theRapidHireApiService('getDesiredProfileListById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n         let careerProfileListData= this.state.careerProfileListData;\n         careerProfileListData= response.data.result[0];\n         this.setState({careerProfileListData: careerProfileListData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  getProfileData = () => {\n    let userId = this.state.userId;\n    this.props.actionGetStudentPersonalInfo(userId);\n  };\n\n  getUserProfileData(userId){\n    theRapidHireApiService('getUserSkillsById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n            \n         let userProfile = response.data.result[0];       \n        if(userProfile){\n          let profileRole= userProfile.profileRole && userProfile.profileRole[0] && userProfile.profileRole[0].profileRole ?\n                                                          userProfile.profileRole[0].profileRole : [] ;\n          let experience= userProfile.experienceInYear;\n          let mobileNo= userProfile.mobileNo;\n          let currentLocation= userProfile.currentLocation;\n          let videoLink = userProfile.videoLink;\n          this.setState({userProfile:userProfile,\n                      profileRole,\n                      experience,\n                      mobileNo,\n                      currentLocation,\n                      videoLink\n          }); \n          this.setUserProfileData(userProfile);\n        }         \n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  setUserProfileData = data => {    \n    console.log('data ',data);\n    if (data) { \n      this.setState({     \n          userProfileId : data.userProfileId,\n          skills:data.skills,\n          year: data.experienceInYear,\n          month: data.experienceInMonth,\n          location: data.currentLocation,\n          mobileNo: data.mobileNo,\n          resumeURL: data.resumeURL,\n          resumeName:data.resumeName,\n          profileRole: data.profileRole[0].profileRoleId          \n        });    \n    }\n  };\n\n   //Show Component Section\n   showEducationComponent = event => {    \n    this.setState({\n      showEducationComponent: !this.state.showEducationComponent   \n    });\n    if(!this.state.showEducationComponent){\n       this.setState({educationDetail :  null});\n       //this.getEducationData(this.state.userId);\n    }\n  };\n\n  //Show Component Section\n  showEmploymentComponent = event => {    \n    this.setState({\n      showEmploymentComponent: !this.state.showEmploymentComponent   \n    });\n    if(!this.state.showEmploymentComponent){\n       this.setState({employmentDetail :  null});\n       this.getEmploymentData(this.state.userId);\n    }\n  };\n\n  showSkillsComponent = event => {    \n    this.setState({\n      showSkillsComponent: !this.state.showSkillsComponent   \n    });    \n    \n    if(!this.state.showSkillsComponent){\n     //  this.setState({skillsDetail :  null});\n       this.getSkillsData(this.state.userId);\n    }\n  };\n\n  showSkillsComponent = event => {    \n    this.setState({\n      showSkillsComponent: !this.state.showSkillsComponent   \n    });    \n    \n    if(!this.state.showSkillsComponent){\n     //  this.setState({skillsDetail :  null});\n       this.getSkillsData(this.state.userId);\n    }\n  }; \n\n  showPersonalProfileComponent = event => {    \n    this.setState({\n      showPersonalProfileComponent: !this.state.showPersonalProfileComponent   \n    });    \n    \n    if(!this.state.showPersonalProfileComponent){\n     //  this.setState({skillsDetail :  null});\n       this.getSkillsData(this.state.userId);\n    }\n  }; \n\n  showProjectComponent = event => {    \n    this.setState({\n      showProjectComponent: !this.state.showProjectComponent   \n    });    \n    \n    if(!this.state.showProjectComponent){\n       this.setState({projectDetail :  null});\n       this.getProjectsData(this.state.userId);\n    }\n  };\n\n  showCareerProfileComponent = event => {    \n    this.setState({\n      showCareerProfileComponent: !this.state.showCareerProfileComponent   \n    });    \n    \n    if(!this.state.showCareerProfileComponent){\n       this.setState({careerProfileDetail :  null});\n       this.getCareerProfileData(this.state.userId);\n    }\n  };\n\n  showVideoComponent = event => {    \n    this.setState({\n      showVideoComponent: !this.state.showVideoComponent   \n    });     \n  };\n\n  editEducationComponent = educationDetail => {\n    console.log(educationDetail);\n    this.setState({\n      educationDetail: educationDetail ,\n      showEducationComponent: !this.state.showEducationComponent    \n    });\n  }\n\n  editEmploymentComponent = employmentDetail => {\n    console.log(employmentDetail);\n    this.setState({\n      employmentDetail: employmentDetail ,\n      showEmploymentComponent: !this.state.showEmploymentComponent    \n    });\n  }\n\n  editSkillsComponent = skillsDetail => {    \n    this.setState({\n      skillsDetail: skillsDetail ,\n      showSkillsComponent: !this.state.showSkillsComponent    \n    });\n  }\n\n  editProjectComponent = projectDetail => {\n    console.log(projectDetail);\n    this.setState({\n      projectDetail: projectDetail ,\n      showProjectComponent: !this.state.showProjectComponent    \n    });\n  }\n\n  editCareerProfileComponent = careerProfileDetail => {\n    console.log(careerProfileDetail);\n    this.setState({\n      careerProfileDetail: careerProfileDetail ,\n      showCareerProfileComponent: !this.state.showCareerProfileComponent    \n    });\n  }  \n  \n  generateSASToken() {\n    theRapidHireApiService('getSASToken')\n      .then(response => {\n        if (response.data.status === 'Success') {\n          let sasToken = response.data.result.sasToken;\n          this.setState({ sasToken });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  toggleDropdown = () => {\n    this.setState({\n      showDropdown: !this.state.showDropdown\n    });\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };  \n\n\n  // Change name by making editable\n  contentEditable = () => {\n    window.scrollTo(500, 0);\n    //console.log(!this.state.contentEditable);\n    this.setState({ contentEditable: !this.state.contentEditable });\n  };\n \n  makeTagLineEditable = () => {\n    let editTag = this.state.tagline ? this.state.tagline : '';\n    this.setState({\n      editTagLine: !this.state.editTagLine,\n      editTag: editTag\n    });\n  };\n\n\n  saveTagLine = () => {\n    let userId = this.state.userId;\n    let tagline = this.state.editTag;\n    let data = {\n      userId,\n      tagline\n    };\n    //if (tagline) {\n    this.props.actionUpdateUserInfo({ tagline });\n    theRapidHireApiService('updateUserTagline', data)\n      .then(response => {\n        if (response.data.status === 'Success') {\n          this.setState({ editTagLine: false });\n        }\n      })\n      .catch(err => {\n        this.setState({ editTagLine: false });\n        console.log(err);\n      });\n    // } else {\n    //   this.setState({ editTagLine: false });\n    // }\n  };\n\n  saveName = () => {\n    let userId = this.state.userId;\n    let name = this.state.name.trim();\n    if (name) {\n      var newArray = name.split(' ').map(function(item, index) {\n        if (item.length > 0) {\n          return item;\n        }\n      });\n\n      let firstName = newArray.length > 0 ? newArray[0] : '';\n      if (newArray.length > 1) {\n        var lastName = newArray.slice(1).join(' ');\n      }\n\n      if (firstName && firstName.length > 35) {\n        showErrorToast(\n          'Your first name should not be more than 35 characters.'\n        );\n      } else if (lastName && lastName.length > 35) {\n        showErrorToast('Your last name should not be more than 35 characters.');\n      } else {\n        let data = {\n          userId,\n          firstName,\n          lastName\n        };\n        this.props.actionUpdateUserInfo({ firstName, lastName });\n        // theRapidHireApiService('updateName', data)\n        //   .then(response => {\n        //     if (response.data.status === 'Success') {\n        //       this.setState({ editName: false });\n        //     }\n        //   })\n        //   .catch(err => {\n        //     this.setState({ editName: false });\n        //     console.log(err);\n        //   });\n      }\n    } else {\n      this.setState({ editName: false });\n    }\n  };\n\n  makeNameEditable = () => {\n    let name =\n      (this.state.firstName ? this.state.firstName : '') +\n      ' ' +\n      (this.state.lastName ? this.state.lastName : '');\n    this.setState({\n      editName: true,\n      name: name\n    });\n  };\n\n\n  //Profile Change \n  uploadImageToAzure(file) {\n    let userId = this.state.userId;\n\n    if (file !== '') {\n        S3FileUpload\n        .uploadFile(file, config)\n        .then(data => {\n          let profileImage = getThumbImage('medium', this.state.imageName);\n              this.setState({ profileImage: profileImage, loader1: false });             \n              this.updateUserData(data.location, userId);\n        })    \n        .catch(err => console.error(err));     \n    }\n  }\n\n  updateUserData = (uploadPath, userId) => {  \n      let profilePicture = uploadPath;\n      let data = {\n        userId,\n        profilePicture\n      };\n      this.props.actionUpdateUserInfo({ profilePicture });\n      theRapidHireApiService('updateProfileImage', data);    \n  };\n  \n  handleImageChange = (action, event) => {\n    let fileName = event.target.files[0].name;\n    S3FileUpload\n    .uploadFile(event.target.files[0], config)\n    .then(data => {\n      \n      let userId= this.state.userId;\n      let profilePicture = data.location;\n      let profileData = {\n        userId,\n        profilePicture\n      };\n      this.props.actionUpdateUserInfo({ profilePicture });\n      theRapidHireApiService('updateProfileImage', profileData);    \n\n    })\n    // this.setState({ imageSource: '' });\n    // const file = event.target.files[0];\n    // const fileName = file.name;\n    // const fileType = file.type;\n    // if (file) {      \n    //   let reader = new FileReader();\n    //   reader.readAsDataURL(event.target.files[0]);\n    //   reader.onload = event => {\n    //     this.setState({\n    //       imageSource: event.target.result,\n    //       imageName: fileName,\n    //       imageType: fileType,\n    //       action: action\n    //     });\n    //   };\n    // }\n  };\n\n  // Upload file to Azure\n  uploadFiles= event => {\n    console.log(event.target.files[0]);\n    let fileName = event.target.files[0].name;\n    S3FileUpload\n    .uploadFile(event.target.files[0], config)\n    .then(data => {\n      let sendData ={\n         userProfileId: this.state.userProfileId,\n         userId: this.state.userId,\n         resumeURL:data.location,\n         resumeName: fileName\n      };     \n      console.log(data);\n      theRapidHireApiService('addResume',sendData)\n      .then(response => {     \n        if (response.data.status === 'Success') {\n          this.getUserProfileData(this.state.userId);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    })    \n    .catch(err => console.error(err));\n  }\n\n  DeleteFile = event => {\n    S3FileUpload\n    .deleteFile(this.state.resumeName, config)\n    .then(response =>{ console.log(response);\n      let sendData ={\n        userProfileId: this.state.userProfileId,\n        userId: this.state.userId,\n        resumeURL:null,\n        resumeName: null\n     };     \n     \n     theRapidHireApiService('addResume',sendData)\n     .then(response => {     \n       if (response.data.status === 'Success') {\n         this.getUserProfileData(this.state.userId);\n       }\n     })\n     .catch(err => {\n       console.log(err);\n     });\n    })\n    .catch(err => console.error(err));\n  }\n \n  render() {\n    return (\n      <div className=\"wrapper\">\n      <Header {...this.props} />     \n      <div className=\"main-panel\">   \n        \n      {/* <ToastContainer\n          autoClose={5000}\n          className=\"custom-toaster-main-cls\"\n          toastClassName=\"custom-toaster-bg\"\n          transition={ZoomInAndOut}\n        />  */}\n        <div className=\"\">   \n       {this.state.imageSource ? (\n          <ImageCropper\n            imageSource={this.state.imageSource}\n            imageName={this.state.imageName}\n            imageType={this.state.imageType}\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\n            modalSize={this.state.action === 1 ? 'medium' : 'large'}\n            cropBoxWidth={this.state.action === 1 ? '200' : '700'}\n            cropBoxHeight={this.state.action === 1 ? '200' : '700'}\n            uploadImageToAzure={this.uploadImageToAzure}\n          />\n        ) : null} \n\n        \n\n  <div className=\"w3-content main-panel1\">\n \n \n <div className=\"w3-row-padding\">\n  \n   <div className=\"w3-third\">\n     <div className=\"w3-white w3-text-grey w3-card-4\">\n      <div className=\"w3-display-container \" style={{overflow:\"hidden\"}}>\n      <img  src={this.state.profileImage} style={{width:\"100%\",\"padding-right\": \"132px\"}} alt=\"Avatar\" />          \n            \n      <div className=\"\">\n      <div className=\"\">\n                    <div className=\"\">    \n         <input  type=\"file\"\n                        onChange={this.handleImageChange.bind(this, 1)}\n                        accept=\"image/*\"\n                        value=\"\"\n                      />\n                      <span className=\"icon-camera icon\" />  \n        </div>  </div>  </div>   \n      </div>      \n      <div className=\"w3-container\">\n      <p><i className=\"fa fa-user fa-fw w3-margin-right w3-large w3-text-teal\"></i>{this.state.firstName} {this.state.lastName}</p>\n        <p><i className=\"fa fa-briefcase fa-fw w3-margin-right w3-large w3-text-teal\"></i>{this.state.profileRole}</p>\n        <p><i className=\"fa fa-home fa-fw w3-margin-right w3-large w3-text-teal\"></i>London, UK</p>\n        <p><i className=\"fa fa-envelope fa-fw w3-margin-right w3-large w3-text-teal\"></i>{this.state.email}</p>\n        <p><i className=\"fa fa-phone fa-fw w3-margin-right w3-large w3-text-teal\"></i>{this.state.mobileNo}</p>\n        <p><i className=\"fa-fw w3-margin-right w3-large w3-text-teal\"></i>\n                    {this.state.profileRole ?         \n                                      <Button\n                                      bsStyle=\"primary no-bold no-round mr-1\"\n                                        onClick={this.showPersonalProfileComponent.bind(\n                                          this                            \n                                        )}\n                                       >\n                                       <span className=\"icon-share2\" />\n                                        Add Information\n                                       </Button>\n                                       :\n                                        <Button onClick={this.showPersonalProfileComponent.bind(\n                                           this                            \n                                              )}\n                                                className=\"btn btn-white with-icon\">\n                                          <span className=\"icon-share2\" />\n                                          Add Information\n                                        </Button>}\n\n                          {this.state.showPersonalProfileComponent ==\n                            true ? (\n                              <AddPersonalProfile\n                                closePersonalProfileComponent={\n                                  this.showPersonalProfileComponent\n                                }           \n                                user={\n                                  this.state.user\n                                }                    \n                                userProfile={\n                                  this.state.userProfile\n                                }\n                              />\n                            ) : (\n                              '')}    \n        </p>\n        {/* <p className=\"w3-large\"><b><i className=\"fa fa-asterisk fa-fw w3-margin-right w3-text-teal\"></i>Skills</b></p>\n        <p>Adobe Photoshop</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"90%\"}}>90%</div>\n        </div>\n        <p>Photography</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"80%\"}}>\n            <div className=\"w3-center w3-text-white\">80%</div>\n          </div>\n        </div>\n        <p>Illustrator</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"75%\"}}>75%</div>\n        </div>\n        <p>Media</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"50%\"}}>50%</div>\n        </div>\n        className\n  \n        <p className=\"w3-large w3-text-theme\"><b><i className=\"fa fa-globe fa-fw w3-margin-right w3-text-teal\"></i>Languages</b></p>\n        <p>English</p>\n        <div className=\"w3-light-grey w3-round-xlarge\">\n          <div className=\"w3-round-xlarge w3-teal\" style={{height:\"24px\",width:\"100%\"}}></div>\n        </div>\n        <p>Spanish</p>\n        <div className=\"w3-light-grey w3-round-xlarge\">\n          <div className=\"w3-round-xlarge w3-teal\" style={{height:\"24px\",width:\"55%\"}}></div>\n        </div>\n        <p>German</p>\n        <div className=\"w3-light-grey w3-round-xlarge\">\n          <div className=\"w3-round-xlarge w3-teal\" style={{height:\"24px\",width:\"25%\"}}></div>\n        </div>\n        className\n      </div> */}\n       </div>\n    </div>  \n  </div>\n\n<div className=\"w3-twothird\">\n {this.state.videoLink ? null : \n    \n      <div className=\"w3-container w3-card w3-white w3-margin-bottom\">    \n        <div className=\"centerButton\">\n            <Link target=\"_blank\" style={{color:\"blue\"}} to=\"/video\">Add Video Introduction </Link>                     \n        </div>\n        <div className=\"w3-container\">\n        <h5 className=\"w3\"><b>           \n            </b></h5>\n         <p></p>    \n      </div>     \n    </div>\n  }\n\n\n  <div className=\"w3-container w3-card w3-white w3-margin-bottom\">\n             \n      <h2 className=\"w3-text-grey\">\n               Resume        \n      </h2>\n       <div className=\"centerButton\">   \n        <ul style={{\"list-style\": \"none\"}}><li>\n       <p>   <div style={{\"padding-left\": \"150px\"}}> <input type=\"file\" onChange={this.uploadFiles.bind(this)} />\n         <i className=\"fa fa-cloud-upload fa-fw w3-margin-right w3-xxlarge w3-text-teal\"></i></div> </p></li>\n         <li>\n            <p><a>{this.state.resumeName}</a></p> </li>  </ul>                    \n      </div> \n      {/* <div className=\"centerButton\">\n      <input type=\"file\" onChange={this.uploadFiles.bind(this)} /> </div> */}\n      <div className=\"w3-container\">\n        <h5 className=\"w3-opacity\"><b>\n        { this.state.resumeURL ?  <DownloadLink\n                          filename={this.state.resumeURL}\n                          exportFile={() => \"My cached data\"}\n                      >\n                              Link to download\n                      </DownloadLink> : null}       </b></h5>    \n                      <p>             \n         { this.state.resumeURL ? \n                        <a onClick={this.DeleteFile.bind(this)}>Delete Resume</a>: null}\n                        <br></br>         \n                       </p>       \n       \n      </div>     \n    </div>\n\n    {/* Education */}\n    <div className=\"w3-container w3-card w3-white w3-margin-bottom\">\n\n    <div className=\"centerButton\">                        \n                <Button\n                  bsStyle=\"primary no-bold no-round mr-1\"\n                  className=\"no-bold no-round\"\n                 // disabled={isLoading}\n                  onClick={this.showEducationComponent.bind(this)}\n                >  Add Education\n              </Button>\n              {this.state.showEducationComponent ==\n                              true ? (\n                                <Education\n                                  closeEducationComponent={\n                                    this.showEducationComponent\n                                  }     \n                                  user={\n                                    this.state.user\n                                  }                           \n                                  educationMode={\n                                    this.state.educationDetail\n                                  }\n                                />\n                              ) : (\n              '')}\n              </div>\n     \n              <h2 className=\"w3-text-grey\"><i className=\"fa-fw w3-margin-right w3-text-teal\"></i></h2> \n              \n         {this.state.employmentListDeducationListDataata && this.state.educationListData.map((data, index) => (                          \n              <div className=\"w3-container\">                        \n                            <h5 className=\"w3-opacity\"><b></b>\n                              <a onClick={this.editEducationComponent.bind(this,data)}>\n                                      <span className=\"pe-7s-pen\" />\n                                    </a>\n                            </h5>\n                            <h6 className=\"w3-text-teal\"><i className=\"fa fa-calendar fa-fw w3-margin-right\"></i>\n                              {moment(parseInt(data.startDate,10)).format(\"DD-MMM-YYYY\")+' ' } to \n                                        {data.endDate ?' '+moment(parseInt(data.endDate,10)).format(\"DD-MMM-YYYY\"):<span className=\"w3-tag w3-teal w3-round\">Present</span>}\n                            </h6>\n                            <p>Lorem ipsum dolor sit amet.</p>                          \n              </div>))}                 \n  </div>\n\n   {/* Experience */}\n     <div className=\"w3-container w3-card w3-white w3-margin-bottom\">\n              <div className=\"centerButton\">                        \n                <Button\n                  bsStyle=\"primary no-bold no-round mr-1\"\n                  className=\"no-bold no-round\"\n                 // disabled={isLoading}\n                  onClick={this.showEmploymentComponent.bind(this)}\n                >  Add Experience\n              </Button>\n              {this.state.showEmploymentComponent ==\n                              true ? (\n                                <AddEmployment\n                                  closeEmploymentComponent={\n                                    this.showEmploymentComponent\n                                  }     \n                                  user={\n                                    this.state.user\n                                  }                           \n                                  employmentDetail={\n                                    this.state.employmentDetail\n                                  }\n                                />\n                              ) : (\n              '')}\n              </div>    \n       <h2 className=\"w3-text-grey\"><i className=\"fa-fw w3-margin-right w3-xxlarge w3-text-teal\"></i></h2> \n         {this.state.employmentListData && this.state.employmentListData.map((data, index) => (                          \n              <div className=\"w3-container\">                        \n                            <h5 className=\"w3-opacity\"><b>{data.designation} / {data.organisation}</b>\n                              <a onClick={this.editEmploymentComponent.bind(this,data)}>\n                                      <span className=\"pe-7s-pen\" />\n                                    </a>\n                            </h5>\n                            <h6 className=\"w3-text-teal\"><i className=\"fa fa-calendar fa-fw w3-margin-right\"></i>\n                              {moment(parseInt(data.startDate,10)).format(\"DD-MMM-YYYY\")+' ' } to \n                                        {data.endDate ?' '+moment(parseInt(data.endDate,10)).format(\"DD-MMM-YYYY\"):<span className=\"w3-tag w3-teal w3-round\">Present</span>}\n                            </h6>\n                            <p></p>                          \n              </div>))}                 \n  </div>\n\n   {/* Skills */}\n   <div className=\"w3-container w3-card w3-white w3-margin-bottom\">\n              <div className=\"centerButton\">                        \n                <Button\n                  bsStyle=\"primary no-bold no-round mr-1\"\n                  className=\"no-bold no-round\"\n                 // disabled={isLoading}\n                  onClick={this.showSkillsComponent.bind(this)}\n                >     Add Skills\n              </Button>\n              {this.state.showSkillsComponent ==true ? (\n                          <AddSkills\n                            closeSkillsComponent={\n                              this.showSkillsComponent\n                            }   \n                            user={\n                              this.state.user\n                            }                            \n                            skillsDetail={\n                              this.state.skillsDetail\n                            }\n                          />\n                        ) : (\n                          '')}\n              </div>                      \n\n       <h2 className=\"w3-text-grey\"><i className=\"fa-fw w3-margin-right w3-xxlarge w3-text-teal\"></i></h2> \n         {this.state.skillsListData && this.state.skillsListData.map((data, index) => (                          \n              <div className=\"w3-container\">                        \n                            <h5 className=\"w3-opacity\"><b>{data.skillName} / {data.rating}</b>\n                              <a onClick={this.editSkillsComponent.bind(this,data)}>\n                                      <span className=\"pe-7s-pen\" />\n                                    </a>\n                            </h5>                           \n                            <p>Lorem ipsum dolor sit amet.</p>                          \n              </div>))}                 \n  </div>\n    \n\n\n {/* Project */}  \n <div className=\"w3-container w3-card w3-white w3-margin-bottom\">\n              <div className=\"centerButton\">                        \n                <Button\n                  bsStyle=\"primary no-bold no-round mr-1\"\n                  className=\"no-bold no-round\"\n                 // disabled={isLoading}\n                  onClick={this.showProjectComponent.bind(this)}\n                >     Add Project\n              </Button>\n              {this.state.showProjectComponent ==true ? (\n                        <AddProject\n                          closeProjectComponent={\n                            this.showProjectComponent\n                          }\n                          user={\n                            this.state.user\n                          }                        \n                          projectDetail={\n                            this.state.projectDetail\n                          }\n                        />\n                      ) : (\n                        '')}\n              </div>                      \n\n       <h2 className=\"w3-text-grey\">\n      <i className=\"fa-fw w3-margin-right w3-xxlarge w3-text-teal\"></i></h2>\n         {this.state.projectListData && this.state.projectListData.map((data, index) => (                          \n              <div className=\"w3-container\">                        \n                            <h5 className=\"w3-opacity\"><b>{data.projectName} / {data.associatedWith}</b>\n                              <a onClick={this.editProjectComponent.bind(this,data)}>\n                                      <span className=\"pe-7s-pen\" />\n                                    </a>\n                            </h5>\n                            <h6 className=\"w3-text-teal\"><i className=\"fa fa-calendar fa-fw w3-margin-right\"></i>\n                              {moment(parseInt(data.startDate,10)).format(\"DD-MMM-YYYY\")+' ' } to \n                                        {data.endDate ?' '+moment(parseInt(data.endDate,10)).format(\"DD-MMM-YYYY\"):<span className=\"w3-tag w3-teal w3-round\">Present</span>}\n                            </h6>                           \n                            <p>Lorem ipsum dolor sit amet.</p>                          \n              </div>))}                 \n  </div>\n    \n\n\n\n  {/* Desired Career Profile */}  \n <div className=\"w3-container w3-card w3-white\" style={{\"margin-bottom\": \"200px\"}}>\n              <div className=\"centerButton\">                        \n              {this.state.careerProfileListData?null:  <Button\n                  bsStyle=\"primary no-bold no-round mr-1\"\n                  className=\"no-bold no-round\"\n                 // disabled={isLoading}\n                  onClick={this.showCareerProfileComponent.bind(this)}\n                >     Add Career \n              </Button>}\n              {this.state.showCareerProfileComponent ==\n                                true ? (\n                                  <AddCareerProfile\n                                    closeCareerProfileComponent={\n                                      this.showCareerProfileComponent\n                                    }\n                                    user={\n                                      this.state.user\n                                    }                                   \n                                    careerProfileDetail={\n                                      this.state.careerProfileDetail\n                                    }\n                                  />\n                                ) : (\n                                  '')}                           \n              </div>                    \n\n      \n            <div>\n              <span style={{\"font-weight\": 600,\"font-size\": \"20px\",color: \"#333\"}}><i className=\"fa-fw w3-margin-right w3-xxlarge w3-text-teal\"></i></span>\n                                      \n                                      <span class=\"edit icon\" tabindex=\"0\"><a onClick={this.editCareerProfileComponent.bind(this,this.state.careerProfileListData)}>\n                                      <span className=\"pe-7s-pen\" />\n                                          </a></span>\n            </div>\n     \n            <div className=\"w3-container\">                        \n              <h5 className=\"w3-opacity\"><b>{this.state.careerProfileListData && this.state.careerProfileListData.desiredLocation}</b>                \n              </h5>                                     \n            </div>              \n  </div>\n  \n  </div>  \n </div>  \n </div>\n\n    \n\n\n        \n        \n      </div></div></div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionGetStudentPersonalInfo,\n      actionGetAllCompetency,\n      actionGetAchievementsByUser,\n      actionGetRecommendationsByUser,\n      actionUpdateUserInfo,\n      actionGetAchievementsData\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditProfile);\n","import React, { Component } from 'react';\nimport Header from '../header/header';\nimport {\n  Button,\n  Media,\n  Row,\n  Col,\n  FormControl,FormGroup,\n  InputGroup\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\nimport _ from 'lodash';\n\nimport { Week, Month, Agenda, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\nimport { DataManager, Query, Predicate, Internationalization } from '@syncfusion/ej2-data';\nimport moment from 'moment';\n\nimport { extend } from '@syncfusion/ej2-base';\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\";\n//import \"@syncfusion/ej2-split-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\n//import '../node_modules/@syncfusion/ej2/material.css';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\";\n//import Img from '../../common/cropper/img';\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\n//import moment from 'moment';\nimport {\n  showErrorToast,\n  uploadToAzure,\n  limitCharacter,\n  SampleNextArrow,\n  SamplePrevArrow,\n  getThumbImage,ZoomInAndOut\n} from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\n//import AvailableTimes from 'react-available-times';\n// import {\n//   actionGetStudentPersonalInfo,\n//   actionGetAllCompetency,\n//   actionGetAchievementsByUser,\n//   actionGetRecommendationsByUser,\n//   actionUpdateUserInfo,\n//   actionGetAchievementsData\n// } from '../../common/core/redux/actions';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\n\nclass TimeSlots extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {      \n      isOpen: false,\n      timeSlotData:[]\n    };   \n    \n  }\n\n  componentWillMount() {\n    let userId = this.props.user.userId;\n    this.setState({userId:userId});\n   this.bookedTimeSlot(userId);   \n   this.getUserProfileData(userId);\n  }\n\n  componentDidMount() {  \n    this.setTimeSlotForWeek();\n  }\n\n  getUserProfileData(userId){\n    theRapidHireApiService('getUserSkillsById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response.data);       \n         let userProfile = response.data.result[0];     \n        this.setState({userProfile:userProfile                  \n         }); \n         this.setUserProfileData(userProfile);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  setTimeSlotForWeek(){  \n    let timeSlotForWeek=[];\n    for(var i=0;i<7;i++){\n      let date = new Date();\n      date.setDate(date.getDate() + i);    \n     \n      let finalDate = date.getDate()+'/'+ (date.getMonth()+1) +'/'+date.getFullYear();\n      \n      timeSlotForWeek.push({showDate:finalDate,date : new Date(moment().add('days', i).format(\"DD-MMM-YYYY\")).valueOf() })\n    }\n    this.setState({timeSlotForWeek});\n  }\n \n  bookedTimeSlot(userId,date){\n    let data={\n      userId:userId,\n      slotRegisteredDate:date\n    }\n    theRapidHireApiService('bookedTimeSlot',data)\n    .then(response => {    \n      console.log(response); \n      if (response.data.status === 'Success' ) {\n         let timeSlotData= this.state.timeSlotData;\n         timeSlotData= response.data.result;     \n         this.setState({timeSlotData: timeSlotData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  updateTimeSlot(data){\n   let date=  this.state.selectedDate;\n   data.userId = this.props.user.userId;    \n    theRapidHireApiService('modifySlot',data)\n    .then(response => {    \n      console.log(response); \n      if (response.data.status === 'Success') {\n        this.bookedTimeSlot(this.state.userId,date)\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n\n  }\n\n  dateChange(date){\n   // console.log(new Date(moment(event.value).format(\"DD-MMM-YYYY\")).valueOf() );\n //   let date= parseInt(new Date(moment(event.value).format(\"DD-MMM-YYYY\")).valueOf());\n  //  this.setState({newData:});\n   this.bookedTimeSlot(this.state.userId,date);\n   this.setState({selectedDate:date })\n  }\n\n \n  render() {\n    let dateValue=new Date();\n    let _this= this;\n    return (\n      <div className=\"wrapper\">\n       <ToastContainer\n          autoClose={5000}\n          className=\"custom-toaster-main-cls\"\n          toastClassName=\"custom-toaster-bg\"\n          transition={ZoomInAndOut}\n        /> \n      <Header {...this.props} />     \n      <div className=\"main-panel\">   \n      <div className=\"\">\n      \n      {this.state.userProfile ?   \n      <div className=\"w3-row-padding\">\n      <div className=\"w3-third\" style={{width: \"fit-content\",\"margin-left\": \"122px\",\"padding-top\": \"15px\"}}>\n     <div className=\"w3-white w3-text-grey w3-card-4\">\n      <div className=\"w3-display-container \" style={{overflow:\"hidden\"}}> \n      <div className=\"w3-container\">\n        {this.state.timeSlotForWeek && this.state.timeSlotForWeek.map((data) => (    \n                     <p>    \n                         <Button\n                                      bsStyle=\"primary no-bold no-round mr-1\"\n                                        onClick={_this.dateChange.bind(\n                                          _this,\n                                          data.date                      \n                                        )}\n                                       >\n                                       <span className=\"icon-share2\" />\n                                       {data.showDate}\n                            </Button></p>\n        ))}                               \n        </div>\n        </div>\n        </div> </div>\n        <div className=\"w3-twothird\" style={{\"padding-top\": \"15px\"}}>\n          <div className=\"w3-container w3-card w3-white w3-margin-bottom\">    \n            \n               {/* <DatePickerComponent id=\"datepicker\" onChange={this.dateChange.bind(this)} format='yyyy-MM-dd' placeholder='Enter date' />  */}\n\n       \n       <div className=\"time_slot_card\">\n        <div className=\"header\">\n          <h4 className=\"title\">Avalilable TimeSlot</h4>\n          <p className=\"category\">Kindly select date then get the date</p>\n        </div>\n        <div className=\"content table-responsive table-full-width\">\n          <table className=\"table table-hover table-striped\">\n            <thead>\n              <tr>              \n                <th>startTime</th>\n                <th>EndTime</th>            \n                <th className=\"text-right\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.timeSlotData.map(data => (\n                <tr key={data.slotId}>\n                  <td>{moment(parseInt(data.startTimeStamp,10)).format(\"hh:mm:ss\")}</td>\n                  <td>{moment(parseInt(data.endTimeStamp,10)).format(\"hh:mm:ss\")}</td>                                 \n                  <td><Button\n                          bsStyle=\"default\"\n                          className=\"no-bold no-round\"\n                          onClick={_this.updateTimeSlot.bind(_this, data)}              \n                        >\n                        Book\n                       </Button></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n        </div>\n      </div>\n       \n       </div>\n       </div>\n       </div>:<div className=\"w3-content main-panel1\">\n                <div className=\"container main\">\n                  Kindly complete profile first\n                  </div>\n              </div>\n\n            }\n       </div>\n      </div>\n       \n       \n       \n       \n \n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n     \n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TimeSlots);\n","import React, { Component } from 'react';\nimport Header from '../header/header';\nimport {\n  Button,\n  Media,\n  Row,\n  Col,\n  FormControl,FormGroup,\n  InputGroup\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\nimport _ from 'lodash';\n\n \n\n//import Summary from './summary/addSummary';\n//import Education from './education/addEducation';\n\n//import DatePicker from 'react-datepicker';\n//import DatePicker from 'react-date-picker';\n\nimport { Week, Month, Agenda, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\nimport { DataManager, Query, Predicate, Internationalization } from '@syncfusion/ej2-data';\n\n\nimport { extend } from '@syncfusion/ej2-base';\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\";\n//import \"@syncfusion/ej2-split-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\n//import '../node_modules/@syncfusion/ej2/material.css';\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\";\n//import Img from '../../common/cropper/img';\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\n//import moment from 'moment';\nimport {\n  showErrorToast,\n  uploadToAzure,\n  limitCharacter,\n  SampleNextArrow,\n  SamplePrevArrow,\n  getThumbImage,\n  ZoomInAndOut\n} from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\n//import AvailableTimes from 'react-available-times';\n// import {\n//   actionGetStudentPersonalInfo,\n//   actionGetAllCompetency,\n//   actionGetAchievementsByUser,\n//   actionGetRecommendationsByUser,\n//   actionUpdateUserInfo,\n//   actionGetAchievementsData\n// } from '../../common/core/redux/actions';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\n\n\n\n\nclass SlotArrangement extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {      \n      isOpen: false,\n      startDate: new Date()\n    };\n  \n    \n    \n  }\n\n  componentWillMount() {\n    //let userId = this.props.user.userId;\n  \n    document.body.classList.add('light-theme');\n    document.body.classList.add('absoluteHeader');\n    document.body.classList.remove('home');\n    document.body.classList.remove('fixedHeader');\n  }\n\n  componentWillReceiveProps(res) {\n    \n  }\n\n  componentDidMount() {  \n    this.getSlotList();\n  }\n \n  getSlotList(userId){\n    theRapidHireApiService('getProjectListById',{userId})\n    .then(response => {     \n      if (response.data.statusCode === 200) {\n         let projectListData= this.state.projectListData;\n         projectListData= response.data.resourceData[0];\n         this.setState({projectListData: projectListData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  onPopupOpen(args) {\n    console.log(args);\n    let self= this;\n    let data={\n      startTime: args.data.StartTime,\n      endTime: args.data.EndTime,\n      userId: 17\n    };\n    theRapidHireApiService('createSlot', data)\n    .then(response => {\n      if (response.data.statusCode === 200) {      \n        self.setState({ isLoading: false });\n        self.closeProjectModal('save');\n      } \n    })\n    .catch(error => {\n      self.setState({ isLoading: false });\n      console.log(error);\n    });\n\n    args.cancel = true;\n}\n\n\n \n  render() {\n    return (\n      <div className=\"innerWrapper\">      \n       <ToastContainer\n          autoClose={5000}\n          className=\"custom-toaster-main-cls\"\n          toastClassName=\"custom-toaster-bg\"\n          transition={ZoomInAndOut}\n        /> \n          <Header {...this.props} />    \n \n  <div >\n          <div >\n            <div className=\"loader\">\n <FormGroup\n                    className={`fullWidthDatepicker `}>\n                   \n                    </FormGroup> \n\n      \n</div></div></div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n     \n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SlotArrangement);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem, FormGroup, FormControl } from 'react-bootstrap';\n\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\nimport _ from 'lodash';\n\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport {\n  ZoomInAndOut,\n  getThumbImage,\n  getLocalStorage,\n  limitCharacter\n} from '../../common/commonFunctions';\nimport SearchUserList from '../../common/searchDropdown/searchUserList';\nimport ChangePassword from '../../common/changePassword/changePassword';\nimport {\n  actionUserLogout,\n  actionGetHeaderCount,\n  actionUpdateHeaderCount,\n  actionChangePasswordStatus\n} from '../../common/core/redux/actions';\nimport userDefaultImage from '../../assets/img/default-img.PNG';\n\nlet AsyncTypeahead = asyncContainer(Typeahead);\nvar keyCheck=false,renderChangeMenu=false;\nclass Header extends Component {\n \n\n  logout = () => {\n    this.props.actionUserLogout();\n    this.props.history.push('/');\n  };\n  \n  render() {\n    return (\n    <Navbar fluid={true}>\n      <Navbar.Header>\n        <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\">\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n        </button>\n      </Navbar.Header>\n\n      <Navbar.Collapse>\n\n        <Nav>\n          <NavItem><i className=\"fa fa-dashboard\"></i></NavItem>\n          <NavDropdown title={<i className=\"fa fa-globe\" />} id=\"basic-nav-dropdown\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem>\n          </NavDropdown>\n        </Nav>\n        <div className=\"separator\"></div>\n        <Navbar.Form pullLeft>\n          <FormGroup>\n            <span className=\"input-group-addon\"><i className=\"fa fa-search\"></i></span>\n            <FormControl type=\"text\" placeholder=\"Type to search\" />\n          </FormGroup>\n        </Navbar.Form>\n        <Nav pullRight>\n          <NavItem> <Link to=\"/user/timeSlots\">Time Slot </Link></NavItem>\n          <NavDropdown title=\"Dropdown\" id=\"right-nav-bar\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem>\n          </NavDropdown>\n          <NavItem onClick={this.logout}>Log out</NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n  }}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    headerCount: state.User.headerCount\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionUserLogout,\n      actionGetHeaderCount,\n      actionUpdateHeaderCount,\n      actionChangePasswordStatus\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\n\n","import React, { Component } from 'react';\nimport Header from './header/header';\nimport {\n  Button,\n  Media,\n  Row,\n  Col,\n  FormControl,\n  InputGroup\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { captureUserMedia } from './AppUtils';\n//import { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\nimport _ from 'lodash';\n\n//import Webcam from './Webcam.react';\nimport Webcam from \"react-webcam\";\n//import  \"https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js\";\n//import * as AWS from \"https://sdk.amazonaws.com/js/aws-sdk-2.2.32.min.js\";\n//import Summary from './summary/addSummary';\n\nimport VideoPlayer from 'react-video-js-player';\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\nimport ImageCropper from './../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\";\n//import Img from '../../common/cropper/img';\nimport {\n  showErrorToast,\n  uploadToAzure,\n  limitCharacter,\n  SampleNextArrow,\n  SamplePrevArrow,\n  getThumbImage\n} from './../common/commonFunctions';\nimport theRapidHireApiService from './../common/core/api/apiService';\nimport CONSTANTS from './../common/core/config/appConfig';\n\n//import videojs from 'video.js'\n\nimport {\n  actionGetStudentPersonalInfo,\n  actionGetAllCompetency,\n  actionGetAchievementsByUser,\n  actionGetRecommendationsByUser,\n  actionUpdateUserInfo,\n  actionGetAchievementsData\n} from './../common/core/redux/actions';\nimport $ from 'jquery'; \nimport SpiderChart from './../common/spiderChart/spiderChart';\nvar AWS = require('aws-sdk');\n\n  //loadScript('https://sdk.amazonaws.com/js/aws-sdk-2.2.32.min.js')\n\n\nconst config = {\n  bucketName: 'ankurself',\n  dirName: 'photos', /* optional */\n  region: 'ap-south-1', // Put your aws region here\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\n}\n\n\nvar settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 3,\n  swipeToSlide: true,\n  nextArrow: <SampleNextArrow props={this.props} />,\n  prevArrow: <SamplePrevArrow props={this.props} />,\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2\n      }\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }\n  ]\n};\n\nconst hasGetUserMedia = !!(navigator.getUserMedia || navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia || navigator.msGetUserMedia);\n\nclass Video extends Component {\n  constructor(props, context) {\n    super(props);\n   \n    this.state = {  \n        video: {\n            src: \"http://www.example.com/path/to/video.mp4\",\n            poster: \"http://www.example.com/path/to/video_poster.jpg\"\n        },    \n      showJobDescriptionComponent: false,      \n      jobDescriptionDetail: {},        \n     \n      loader1: false,\n      loader2: false,      \n      jobDescriptionListData: [],     \n      userData:{},     \n      showDropdown: false,     \n      isActive: 'true',     \n      contentEditable: false,\n      editName: false,\n      name: '',\n      editTagLine: false,\n      showVideo:false\n    };\n    var wRegion = \"ap-south-1\";\n    var poolid = 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c';\n    var s3bucketName = \"ankurself\";\n    var audioPath = \"/audio-files\";\n    var s3bucketName = \"ankurself\";\n    var audioPath = \"/audio-files\";\n    var audioStoreWithBucket=s3bucketName+audioPath;\n    //AudioStream = new AudioStream(wRegion,poolid,s3bucketName+audioPath)\n\n    this.region = \"ap-south-1\"; //s3 region\n    this.IdentityPoolId = 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c'; //identity pool id\n    this.bucketName = audioStoreWithBucket; //audio file store\n    this.s3=null; //variable defination for s3\n    this.dateinfo = new Date();\n    this.timestampData = this.dateinfo.getTime(); //timestamp used for file uniqueness\n    this.etag = []; // etag is used to save the parts of the single upload file\n    this.recordedChunks = []; //empty Array\n    this.booleanStop = false; // this is for final multipart complete\n    this.incr = 0; // multipart requires incremetal so that they can merge all parts by ascending order\n    this.filename = this.timestampData.toString() + \".webm\"; //unique filename\n    this.uploadId = \"\"; // upload id is required in multipart\n    this.recorder=null; //initializing recorder variable\n    this.player=null;\n    //To use microphone it shud be {audio: true}\n    this.audioConstraints = {\n      //  audio: true,\n        video: true\n    };    \n  }\n\n  componentWillMount() {\n    //let userId = this.props.user.userId;\n    \n    document.body.classList.add('light-theme');\n    document.body.classList.add('absoluteHeader');\n    document.body.classList.remove('home');\n    document.body.classList.remove('fixedHeader');\n    this.audioStreamInitialize();\n  }\n\n  componentWillReceiveProps(res) {\n    // this.setProfileData(res.user);\n    // this.setAchievementData(res.student.achievementData);\n    // this.renderRecommendationsByUserId();\n  }\n\n  componentDidMount() {\n    let user= this.props.user.userId;\n    console.log(user);\n     if(!hasGetUserMedia) {\n      alert(\"Your browser cannot stream from your webcam. Please switch to Chrome or Firefox.\");\n      return;\n    }\n    const script = document.createElement(\"script\");\n\n    script.src = \"https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js\";\n    script.async = true;\n\n    document.body.appendChild(script)\n    if (this.props.student.achievementData) {\n      console.log(this.props.student.achievementData);\n    }\n\n  }\n\n \n\nonPlayerReady(player){\n    console.log(\"Player is ready: \", player);\n    this.player = player;\n}\n\nonVideoPlay(duration){\n    console.log(\"Video played at: \", duration);\n}\n\nonVideoPause(duration){\n    console.log(\"Video paused at: \", duration);\n}\n\nonVideoTimeUpdate(duration){\n    console.log(\"Time updated: \", duration);\n}\n\nonVideoSeeking(duration){\n    console.log(\"Video seeking: \", duration);\n}\n\nonVideoSeeked(from, to){\n    console.log(`Video seeked from ${from} to ${to}`);\n}\n\nonVideoEnd(){\n    console.log(\"Video ended\");\n}\n\n  audioStreamInitialize() {\n    /*\n        Creates a new credentials object, which will allow us to communicate with the aws services.\n    */\n    var self = this;\n    AWS.config.update({\n         region: \"ap-south-1\",\n             credentials: new AWS.CognitoIdentityCredentials({\n                IdentityPoolId: 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c',\n                RoleArn: 'arn:aws:iam::923146643705:role/Cognito_TestPoolUnauth_Role',\n                AccountId: '923146643705' // your AWS account ID\n\n             })\n        });\n\n            AWS.config.credentials.get(function (err) {\n    if (err) console.log(err);\n    else console.log(AWS.config.credentials);\n});\n     /*\n        Constructs a service object.\n    */\n    // self.s3 = new AWS.S3({apiVersion: '2006-03-01',\n    //                     params: {Bucket: 'ankurself'},\n     \n    // }\n    // );\n    self.s3 = new AWS.S3({logger:console,\n//         AWSAccessKeyId=AKIAJRQYW4X2EL2WE6UQ\n// AWSSecretKey=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\n     apiVersion: '2006-03-01',\n        params: {Bucket: 'ankurself'}\n\n\n})\n    /*\n        Feature detecting is a simple check for the existence of \"navigator.mediaDevices.getUserMedia\"\n        To use the microphone. we need to request permission.\n        The parameter to getUserMedia() is an object specifying the details and requirements for each type of media you want to access.\n        To use microphone it shud be {audio: true}\n    */\n    navigator.mediaDevices.getUserMedia(self.audioConstraints)\n        .then(function(stream) {\n            \n            /*\n                once we accept the prompt for the audio stream from user's mic we enable the record button.\n            */\n            $(\"#record_q1\").removeAttr(\"disabled\");\n            /*\n                Creates a new MediaRecorder object, given a MediaStream to record.\n            */\n            self.recorder = new MediaRecorder(stream);\n                        //    self.setState({videosrc:stream});\n                             \n            /*\n                Called to handle the dataavailable event, which is periodically triggered each time timeslice milliseconds of media have been recorded\n                (or when the entire media has been recorded, if timeslice wasn't specified).\n                The event, of type BlobEvent, contains the recorded media in its data property.\n                You can then collect and act upon that recorded media data using this event handler.\n            */\n            self.recorder.addEventListener('dataavailable', function(e) {\n                var normalArr = [];\n                /*\n                    Here we push the stream data to an array for future use.\n                */\n                self.recordedChunks.push(e.data);\n                normalArr.push(e.data);\n\n                /*\n                    here we create a blob from the stream data that we have received.\n                */\n                var blob = new Blob(normalArr, {\n                    type: 'video/webm'\n                });\n                         \n                /*\n                    if the length of recordedChunks is 1 then it means its the 1st part of our data.\n                    So we createMultipartUpload which will return an upload id.\n                    Upload id is used to upload the other parts of the stream\n                    else.\n                    It Uploads a part in a multipart upload.\n                */\n                if (self.recordedChunks.length == 1) {\n                         console.log(blob.size);\n\n\n                    self.startMultiUpload(blob, self.filename)\n                } else {\n                    /*\n                        self.incr is basically a part number.\n                        Part number of part being uploaded. This is a positive integer between 1 and 10,000.\n                    */\n                    self.incr = self.incr + 1\n                    self.continueMultiUpload(blob, self.incr, self.uploadId, self.filename, self.bucketName);\n                }\n            })\n        });\n}\n\n\n\nstartRecording(id) {\n    var self = this;\n  \n   // self.enableAllButton();\n  //  $(\"#record_q1\").attr(\"disabled\", \"disabled\");\n    /*\n        1800000 is the number of milliseconds to record into each Blob.\n        If this parameter isn't included, the entire media duration is recorded into a single Blob unless the requestData()\n        method is called to obtain the Blob and trigger the creation of a new Blob into which the media continues to be recorded.\n    */\n    /*\n    PLEASE NOTE YOU CAN CHANGE THIS PARAM OF 1800000 but the size should be greater then or equal to 5MB.\n    As for multipart upload the minimum breakdown of the file should be 5MB\n    */\n    //this.recorder.start(1800000);\n    \n    this.recorder.start(1800000);\n    console.log('recprdomg');\n    this.setState({showVideo:true});\n}\n\nstopRecording(id) {\n    var self = this;\n    self.recorder.stop();\n    /*\n        Once the recording is stop we change the flag of self.booleanStop to true.\n        which means we have completed the recording and now we can\n        Completes a multipart upload by assembling previously uploaded parts.\n    */\n    self.booleanStop = true;\n    //disable self\n    self.disableAllButton()\n    $(\"#stop_q1\").attr(\"disabled\", \"disabled\");\n    // add loader\n  //  self.setLoader();\n    this.setState({showVideo:false});\n}\n\npauseRecording(id) {\n    var self = this;\n    self.recorder.pause();\n   $(\"#pause_q1\").addClass(\"hide\");\n    $(\"#resume_q1\").removeClass(\"hide\");\n}\n \n\nresumeRecording(id) {\n    var self = this;\n    self.recorder.resume();\n   $(\"#resume_q1\").addClass(\"hide\");\n    $(\"#pause_q1\").removeClass(\"hide\");\n}\n\nstartMultiUpload(blob, filename) {\n    var self = this;\n    var audioBlob = blob;\n    var params = {\n     \n        Bucket: 'ankurself',\n        Key: filename,\n        ContentType: 'video/webm',\n        ACL: 'public-read'           \n    };\n\n// self.s3.getSignedUrl('postObject', params, function (err, url) {\n//       if(err){\n//         console.log(err);\n//       }\n//       console.log(url);\n//          });\n\n\n    self.s3.createMultipartUpload(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack); // an error occurred\n        } else {\n            self.uploadId = data.UploadId\n            self.incr = 1;\n            self.continueMultiUpload(audioBlob, self.incr, self.uploadId, self.filename, self.bucketName);\n        }\n    });\n}\n \n\n /*\n       Uploads a part in a multipart upload.\n       The following code uploads part of a multipart upload.\n       it specifies a file name for the part data. The Upload ID is same that is returned by the initiate multipart upload.\n   */\n  continueMultiUpload(audioBlob, PartNumber, uploadId, key, bucketName) {\n    var self = this;\n \n \n \n    var params = {\n        Body: audioBlob,\n        Bucket: 'ankurself',\n        Key: key,\n        PartNumber: PartNumber,\n        UploadId: uploadId\n    };\n    console.log(params);\n    self.s3.uploadPart(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack)\n        } // an error occurred\n        else {\n            /*\n                Once the part of data is uploaded we get an Entity tag for the uploaded object(ETag).\n                which is used later when we complete our multipart upload.\n            */\n            self.etag.push(data.ETag);\n            if (self.booleanStop == true) {\n                self.completeMultiUpload();\n            }\n        }\n    });\n}\n\n\n /*\n       Completes a multipart upload by assembling previously uploaded parts.\n   */\n  completeMultiUpload() {\n    var self = this;\n    var outputTag = [];\n    /*\n        here we are constructing the Etag data in the required format.\n    */\n    self.etag.forEach((data, index) => {\n        const obj = {\n            ETag: data,\n            PartNumber: ++index\n        };\n        outputTag.push(obj);\n    });\n\n    var params = {\n        Bucket:'ankurself', // required\n        Key: self.filename, // required\n        UploadId: self.uploadId, // required\n        MultipartUpload: {\n            Parts: outputTag\n        }\n    };\n\n    self.s3.completeMultipartUpload(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack)\n        } // an error occurred\n        else {\n            console.log(data.Location);\n            self.saveVideoURL(data.Location);\n            // initialize variable back to normal\n            self.etag = [];\n            self.recordedChunks = [];\n            self.uploadId = \"\";\n            self.booleanStop = false;\n            self.disableAllButton();\n         //   self.removeLoader();\n            alert(\"we have successfully saved the questionaire..\");\n        }\n    });\n}\n\nsaveVideoURL(videoLink){\n    let data={\n          userId: this.props.user.userId,\n        videoLink\n    };\n\n    theRapidHireApiService('addVideo',data)\n    .then(response => {     \n      if (response.data.statusCode === 200) {\n         let userData= this.state.userData;\n         userData= response.data.resourceData[0];\n         console.log(response.data.resourceData[0]);\n         this.setState({userData: userData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n}\n\n\ndisableAllButton() {\n    $(\"#formdata button[type=button]\").attr(\"disabled\", \"disabled\");\n}\n\nenableAllButton() {\n    $(\"#formdata button[type=button]\").removeAttr(\"disabled\");\n}\n\n  render() {\n    const videoConstraints = {\n        facingMode: \"user\"\n      };\n    return (\n        <div className=\"wrapper\">\n        <Header {...this.props} />     \n          <div className=\"main-panel\">  \n\n        <div className=\"w3-content main-panel1\">     \n        <div className=\"row\">\n    <div className=\"col-md-12\">\n      <div className=\"card\">\n        <div className=\"header\">\n        <div className=\"content\">\n          <div className=\"panel-group\" id=\"accordion\">\n            <button onClick={this.startRecording.bind(this)}>Start Record</button>\n               <button onClick={this.stopRecording.bind(this)}>stop Record</button>\n                {this.state.uploading ?\n            <div>Uploading...</div> : null}           \n          \n       \n                   \n              {this.state.showVideo ?   <Webcam videoConstraints={videoConstraints} />: null} \n          \n       \n         {/* <video id='video' autoplay muted src={this.state.videosrc}/> */}\n           {/* <button type=\"button\" class=\"btn kc record\" id=\"record_q1\" disabled=\"disabled\" onClick={this.startRecording.bind(this)}>Record</button>\n           <button type=\"button\" class=\"btn kc pause\" id=\"pause_q1\" disabled=\"disabled\" onClick={this.pauseRecording.bind(this.id)}>Pause</button>\n           <button type=\"button\" class=\"btn kc resume hide\" id=\"resume_q1\" disabled=\"disabled\" onclick={this.resumeRecording.bind(this.id)}>Resume</button>\n           <button type=\"button\" class=\"btn kc stop\" id=\"stop_q1\" disabled=\"disabled\" onclick={this.stopRecording.bind(this.id)}>Stop</button> */}\n           </div>  \n            \n        </div>    \n        </div></div>  \n            \n            </div>    \n            </div>\n             </div>\n         </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionGetStudentPersonalInfo,\n      actionGetAllCompetency,\n      actionGetAchievementsByUser,\n      actionGetRecommendationsByUser,\n      actionUpdateUserInfo,\n      actionGetAchievementsData\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Video);\n","/* global SOCKET_HOST */\nimport io from 'socket.io-client';\nimport CONSTANTS from '../../common/core/config/appConfig';\nvar SOCKET_HOST=CONSTANTS.socket.URL;\nconst socket = io(SOCKET_HOST);\nexport default socket;\n","import _ from 'lodash';\n\nclass Emitter {\n  constructor() {\n    this.events = {};\n  }\n\n  emit(event, ...args) {\n    if (this.events[event]) {\n      this.events[event].forEach(fn => fn(...args));\n    }\n    return this;\n  }\n\n  on(event, fn) {\n    if (this.events[event]) this.events[event].push(fn);\n    else this.events[event] = [fn];\n    return this;\n  }\n\n  off(event, fn) {\n    if (event && _.isFunction(fn)) {\n      const listeners = this.events[event];\n      const index = listeners.findIndex(_fn => _fn === fn);\n      listeners.splice(index, 1);\n    } else this.events[event] = [];\n    return this;\n  }\n}\n\nexport default Emitter;\n","import _ from 'lodash';\nimport Emitter from './Emitter';\n\n/**\n * Manage all media devices\n */\nclass MediaDevice extends Emitter {\n  /**\n   * Start media devices and send stream\n   */\n  start() {\n    const constraints = {\n      video: {\n        facingMode: 'user',\n        height: { min: 360, ideal: 720, max: 1080 }\n      },\n      audio: true\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then((stream) => {\n        this.stream = stream;\n        this.emit('stream', stream);\n      })\n      .catch((err) => {\n        if (err instanceof DOMException) {\n          alert('Cannot open webcam and/or microphone');\n        } else {\n          console.log(err);\n        }\n      });\n\n    return this;\n  }\n\n  /**\n   * Turn on/off a device\n   * @param {String} type - Type of the device\n   * @param {Boolean} [on] - State of the device\n   */\n  toggle(type, on) {\n    const len = arguments.length;\n    if (this.stream) {\n      this.stream[`get${type}Tracks`]().forEach((track) => {\n        const state = len === 2 ? on : !track.enabled;\n        _.set(track, 'enabled', state);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Stop all media track of devices\n   */\n  stop() {\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n    }\n    return this;\n  }\n}\n\nexport default MediaDevice;\n","import MediaDevice from './MediaDevice';\nimport Emitter from './Emitter';\nimport socket from './socket';\n\nwindow.moz = !!navigator.mozGetUserMedia;\nvar chromeVersion = !!navigator.mozGetUserMedia ? 0 : parseInt(navigator.userAgent.match( /Chrom(e|ium)\\/([0-9]+)\\./ )[2]);\nlet moz= window.moz;\nvar iceServers = [];\n\n    if (moz) {\n        iceServers.push({\n            url: 'stun:23.21.150.121'\n        });\n\n        iceServers.push({\n            url: 'stun:stun.services.mozilla.com'\n        });\n    }\n\n    if (!moz) {\n        iceServers.push({\n            url: 'stun:stun.l.google.com:19302'\n        });\n\n        iceServers.push({\n            url: 'stun:stun.anyfirewall.com:3478'\n        });\n    }\n\n    if (!moz && chromeVersion < 28) {\n        iceServers.push({\n            url: 'turn:homeo@turn.bistri.com:80',\n            credential: 'homeo'\n        });\n    }\n\n    if (!moz && chromeVersion >= 28) {\n        iceServers.push({\n            url: 'turn:turn.bistri.com:80',\n            credential: 'homeo',\n            username: 'homeo'\n        });\n\n        iceServers.push({\n            url: 'turn:turn.anyfirewall.com:443?transport=tcp',\n            credential: 'webrtc',\n            username: 'webrtc'\n        });\n    }\n\nconst PC_CONFIG = { iceServers: iceServers };// [{ urls: ['stun:stun.l.google.com:19302'] }] };\n\nclass PeerConnection extends Emitter {\n  /**\n     * Create a PeerConnection.\n     * @param {String} friendID - ID of the friend you want to call.\n     */\n  constructor(friendID) {\n    super();\n    this.pc = new RTCPeerConnection(PC_CONFIG);\n    this.pc.onicecandidate = event => socket.emit('call', {\n      to: this.friendID,\n      candidate: event.candidate\n    });\n    this.pc.onaddstream = event => this.emit('peerStream', event.stream);\n\n    this.mediaDevice = new MediaDevice();\n    this.friendID = friendID;\n  }\n\n  /**\n   * Starting the call\n   * @param {Boolean} isCaller\n   * @param {Object} config - configuration for the call {audio: boolean, video: boolean}\n   */\n  start(isCaller, config) {\n    this.mediaDevice\n      .on('stream', (stream) => {\n        this.pc.addStream(stream);\n        this.emit('localStream', stream);\n        if (isCaller) socket.emit('request', { to: this.friendID });\n        else this.createOffer();\n      })\n      .start(config);\n\n    return this;\n  }\n\n  /**\n   * Stop the call\n   * @param {Boolean} isStarter\n   */\n  stop(isStarter) {\n    if (isStarter) socket.emit('end', { to: this.friendID });\n    this.mediaDevice.stop();\n    this.pc.close();\n    this.pc = null;\n    this.off();\n    return this;\n  }\n\n  createOffer() {\n    this.pc.createOffer()\n      .then(this.getDescription.bind(this))\n      .catch(err => console.log(err));\n    return this;\n  }\n\n  createAnswer() {\n    this.pc.createAnswer()\n      .then(this.getDescription.bind(this))\n      .catch(err => console.log(err));\n    return this;\n  }\n\n  getDescription(desc) {\n    console.log('desc - - ',desc);\n    this.pc.setLocalDescription(desc);\n    socket.emit('call', { to: this.friendID, sdp: desc });\n    return this;\n  }\n\n  /**\n   * @param {Object} sdp - Session description\n   */\n  setRemoteDescription(sdp) {\n    const rtcSdp = new RTCSessionDescription(sdp);\n    this.pc.setRemoteDescription(rtcSdp);\n    return this;\n  }\n\n  /**\n   * @param {Object} candidate - ICE Candidate\n   */\n  addIceCandidate(candidate) {\n    if (candidate) {\n      const iceCandidate = new RTCIceCandidate(candidate);\n      this.pc.addIceCandidate(iceCandidate);\n    }\n    return this;\n  }\n}\n\nexport default PeerConnection;\n","import React, { Component } from 'react';\nimport PropTypes from 'proptypes';\n\nlet friendID;\n\nclass MainWindow extends Component {\n  /**\n   * Start the call with or without video\n   * @param {Boolean} video\n   */\n  callWithVideo(video) {\n    const { startCall } = this.props;\n    const config = { audio: true, video };\n    return () => startCall(true, friendID, config);\n  }\n\n  render() {\n    const { clientId } = this.props;\n    document.title = `${clientId} - VideoCall`;\n    return (\n      <div className=\"container main-window\">\n        <div>\n          <h3>\n            Hi, your ID is\n            <input\n              type=\"text\"\n              className=\"txt-clientId\"\n              defaultValue={clientId}\n              readOnly\n            />\n          </h3>\n          <h4>Get started by calling a friend below</h4>\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            className=\"txt-clientId\"\n            spellCheck={false}\n            placeholder=\"Your friend ID\"\n            onChange={event => friendID = event.target.value}\n          />\n          <div>\n            <button\n              type=\"button\"\n              className=\"btn-action fa fa-video-camera\"\n              onClick={this.callWithVideo(true)}\n            />\n            {/* <button\n              type=\"button\"\n              className=\"btn-action fa fa-phone\"\n              onClick={this.callWithVideo(false)}\n            /> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMainWindow.propTypes = {\n  clientId: PropTypes.string.isRequired,\n  startCall: PropTypes.func.isRequired\n};\n\nexport default MainWindow;\n","import React, { Component } from 'react';\nimport PropTypes from 'proptypes';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport _ from 'lodash';\n//import { Player } from 'video-react';\n//import 'video-react/dist/video-react.css'; // import css\n\n\nclass CallWindow extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      Video: true,\n      Audio: true,\n      Audio: {echoCancellation:true}      \n    };\n\n    this.btns = [\n      { type: 'Video', icon: 'fa-video-camera' },\n      { type: 'Audio', icon: 'fa-microphone' }\n    ];  \n  }\n\n\n\n\n  componentDidMount() {\n    this.setMediaStream();   \n   }\n\n  componentWillReceiveProps(nextProps) {\n    const { config: currentConfig } = this.props;\n    // Initialize when the call started\n    if (!currentConfig && nextProps.config) {\n      const { config, mediaDevice } = nextProps;\n      _.forEach(config, (conf, type) => mediaDevice.toggle(_.capitalize(type), conf));\n\n      this.setState({\n        Video: config.video,\n        Audio: config.audio\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.setMediaStream();\n  }\n \n  setMediaStream() {\n    const { peerSrc, localSrc } = this.props;\n    if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\n    if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc; \n  }\n\n  /**\n   * Turn on/off a media device\n   * @param {String} deviceType - Type of the device eg: Video, Audio\n   */\n  toggleMediaDevice(deviceType) {\n    const { mediaDevice } = this.props;\n    const deviceState = _.get(this.state, deviceType);\n    this.setState({ [deviceType]: !deviceState });\n    mediaDevice.toggle(deviceType);\n  }\n\n  renderControlButtons() {\n    const getClass = (icon, type) => classnames(`btn-action fa ${icon}`, {\n      disable: !_.get(this.state, type)\n    });\n\n    return this.btns.map(btn => (\n      <button\n        key={`btn${btn.type}`}\n        type=\"button\"\n        className={getClass(btn.icon, btn.type)}\n        onClick={() => this.toggleMediaDevice(btn.type)}\n      />\n    ));\n  }\n\n  render() {\n    const { status, endCall,startCallInterviewer } = this.props;\n    return (\n      <div className={classnames('call-window', status)}>\n        <video id=\"peerVideo\" ref={el => this.peerVideo = el} autoPlay /> */}\n        {/* <Player\n          ref={player => {\n            this.player = player;\n          }}\n          autoPlay\n        >\n          <source src={this.state.source} /></Player> */}\n\n        <video id=\"localVideo\" ref={el => this.localVideo = el} autoPlay muted />\n        <div className=\"video-control\">\n          {this.renderControlButtons()}\n          <button\n            type=\"button\"\n            className=\"btn-action hangup fa fa-phone\"\n            onClick={() => endCall(true)}\n          />\n    {this.props.user && this.props.user.roleId == 2 ?\n           <button\n            type=\"button\"\n            className=\"btn-action startup fa fa-phone\"\n            onClick={() => startCallInterviewer(true)}\n          ></button>: null}\n        </div> \n      </div>\n    );\n  }\n}\n\nCallWindow.propTypes = {\n  status: PropTypes.string.isRequired,\n  localSrc: PropTypes.object, // eslint-disable-line\n  peerSrc: PropTypes.object, // eslint-disable-line\n  config: PropTypes.object, // eslint-disable-line\n  mediaDevice: PropTypes.object, // eslint-disable-line\n  endCall: PropTypes.func.isRequired,\n  startCallInterviewer: PropTypes.func.isRequired\n};\n\n// export default CallWindow;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData    \n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CallWindow);","import React from 'react';\nimport PropTypes from 'proptypes';\nimport classnames from 'classnames';\n\n\nfunction CallModal({ status, callFrom, startCall, rejectCall }) {\n  const acceptWithVideo = (video) => {\n    const config = { audio: true, video };\n    return () => startCall(false, callFrom, config);\n  };\n\n  return (\n    <div className={classnames('call-modal', status)}>\n      <p>\n        <span className=\"caller\">{`${callFrom} is calling`}</span>\n      </p>\n      <button\n        type=\"button\"\n        className=\"btn-action fa fa-video-camera\"\n        onClick={acceptWithVideo(true)}\n      />\n      {/* <button\n        type=\"button\"\n        className=\"btn-action fa fa-phone\"\n        onClick={acceptWithVideo(false)}\n      /> */}\n      <button\n        type=\"button\"\n        className=\"btn-action startup fa fa-phone\"\n        onClick={rejectCall}\n      />\n    </div>\n  );\n}\n\nCallModal.propTypes = {\n  status: PropTypes.string.isRequired,\n  callFrom: PropTypes.string.isRequired,\n  startCall: PropTypes.func.isRequired,\n  rejectCall: PropTypes.func.isRequired\n};\n\nexport default CallModal;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem, FormGroup, FormControl } from 'react-bootstrap';\n\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\nimport _ from 'lodash';\n\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport {\n  ZoomInAndOut,\n  getThumbImage,\n  getLocalStorage,\n  limitCharacter\n} from '../../common/commonFunctions';\nimport SearchUserList from '../../common/searchDropdown/searchUserList';\nimport ChangePassword from '../../common/changePassword/changePassword';\nimport {\n  actionUserLogout,\n  actionGetHeaderCount,\n  actionUpdateHeaderCount,\n  actionChangePasswordStatus\n} from '../../common/core/redux/actions';\nimport userDefaultImage from '../../assets/img/default-img.PNG';\n\nlet AsyncTypeahead = asyncContainer(Typeahead);\nvar keyCheck=false,renderChangeMenu=false;\nclass Header extends Component {\n \n\n  logout = () => {\n    this.props.actionUserLogout();\n    this.props.history.push('/');\n  };\n  \n  showVideoChat = () => {    \n    this.props.history.push('/js/app');\n  };\n\n  render() {\n    return (\n    <Navbar fluid={true}>\n      <Navbar.Header>\n        <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\">\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n        </button>\n      </Navbar.Header>\n\n      <Navbar.Collapse>\n\n        <Nav>\n          <NavItem><i className=\"fa fa-dashboard\"></i></NavItem>\n          <NavDropdown title={<i className=\"fa fa-globe\" />} id=\"basic-nav-dropdown\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem>\n          </NavDropdown>\n        </Nav>\n        <div className=\"separator\"></div>\n        <Navbar.Form pullLeft>\n          <FormGroup>\n            <span className=\"input-group-addon\"><i className=\"fa fa-search\"></i></span>\n            <FormControl type=\"text\" placeholder=\"Type to search\" />\n          </FormGroup>\n        </Navbar.Form>\n        <Nav pullRight>\n          <NavItem> <Link to=\"/user/timeSlots\">Time Slot </Link></NavItem>\n         <NavItem onClick={this.showVideoChat}> Video Chat</NavItem>\n          <NavDropdown title=\"Dropdown\" id=\"right-nav-bar\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem>\n          </NavDropdown>\n          <NavItem onClick={this.logout}>Log out</NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n  }}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    headerCount: state.User.headerCount\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionUserLogout,\n      actionGetHeaderCount,\n      actionUpdateHeaderCount,\n      actionChangePasswordStatus\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\n\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport _ from 'lodash';\nimport socket from './socket';\nimport PeerConnection from './PeerConnection';\nimport MainWindow from './MainWindow';\nimport CallWindow from './CallWindow';\nimport CallModal from './CallModal';\n//import { captureUserMedia, S3Upload } from './AppUtils';\nimport RecordRTC from 'recordrtc';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n//import MultiStreamsMixer from 'multistreamsmixer';\nimport $ from 'jquery'; \nimport Header from '../header/header';\nimport theRapidHireApiService from '../../common/core/api/apiService';\n//import {MediaStreamRecorder} from '/MediaStreamRecorder.js';\n//import MediaStreamRecorder from '../../../node_modules/msr/MediaStreamRecorder.js';\nconst hasGetUserMedia = !!(navigator.getUserMedia || navigator.webkitGetUserMedia ||\n                        navigator.mozGetUserMedia || navigator.msGetUserMedia);\n                       \n                        //loadScript('https://sdk.amazonaws.com/js/aws-sdk-2.2.32.min.js')\n                      \nvar AWS = require('aws-sdk');\n//var multiStreamRecorder;\nconst config = {\n  bucketName: 'ankurself',\n  dirName: 'photos', /* optional */\n  region: 'ap-south-1', // Put your aws region here\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientId: '',\n      callWindow: '',\n      callModal: '',\n      callFrom: '',\n      localSrc: null,\n      peerSrc: null,\n      recordVideo: null     \n    };\n    var wRegion = \"ap-south-1\";\n    var poolid = 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c';\n    var s3bucketName = \"ankurself\";\n    var audioPath = \"/audio-files\";\n    var s3bucketName = \"ankurself\";\n    var audioPath = \"/audio-files\";\n    var audioStoreWithBucket=s3bucketName+audioPath;\n    //AudioStream = new AudioStream(wRegion,poolid,s3bucketName+audioPath)\n\n    this.region = \"ap-south-1\"; //s3 region\n    this.IdentityPoolId = 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c'; //identity pool id\n    this.bucketName = audioStoreWithBucket; //audio file store\n    this.s3=''; //variable defination for s3\n    this.dateinfo = new Date();\n    this.timestampData = this.dateinfo.getTime(); //timestamp used for file uniqueness\n    this.etag = []; // etag is used to save the parts of the single upload file\n    this.recordedChunks = []; //empty Array\n    this.booleanStop = false; // this is for final multipart complete\n    this.incr = 0; // multipart requires incremetal so that they can merge all parts by ascending order\n    this.filename = this.timestampData.toString() + \".webm\"; //unique filename\n    this.uploadId = \"\"; // upload id is required in multipart\n    this.recorder=''; //initializing recorder variable\n    this.multiStreamRecorder='';\n    this.player='';\n    this.localSource='';\n    //To use microphone it shud be {audio: true}\n    this.audioConstraints = {\n        audio: true,\n        video: true,\n        audio: {echoCancellation:true}\n    };\n    this.pc = {};\n    this.config = null;\n    this.startCallHandler = this.startCall.bind(this);\n    this.startCallByInterviewer = this.startCallInterviewer.bind(this);\n    \n    this.endCallHandler = this.endCall.bind(this);\n    this.rejectCallHandler = this.rejectCall.bind(this);\n    this.requestUserMedia = this.requestUserMedia.bind(this);\n  }\n\n  componentDidMount() {\n    var script = document.createElement(\"script\");\n\n    script.src = \"../dist/js/app.min.js\";\n    script.async = true;\n\n    document.body.appendChild(script);\n\n \n    if(!hasGetUserMedia) {\n      alert(\"Your browser cannot stream from your webcam. Please switch to Chrome or Firefox.\");\n      return;\n    }   \n    \n    console.log(this.props.location.state);\n\n    this.setState({slotId: this.props.location.state.slotId});\n\n\n    socket\n      .on('init', data => this.setState({ clientId: this.props.location.state.videoKeySelf })) // to another user's id\n      .on('request', data => {\n        console.log(data);\n       this.setState({ callModal: 'active', callFrom: data.from })\n      })\n      .on('call', (data) => {\n        if (data.sdp) {\n          this.pc.setRemoteDescription(data.sdp);\n          if (data.sdp.type === 'offer') this.pc.createAnswer();\n        } else this.pc.addIceCandidate(data.candidate);\n      })\n      .on('end', this.endCall.bind(this, false))\n      .emit('init',this.props.location.state.videoKeySelf);    // self id kept\n    }\n\n    componentWillMount(){\n     // this.requestUserMedia();\n      this.audioStreamInitialize();\n    }\n  \n    requestUserMedia() {      \n      console.log('requestUserMedia')\n    //   captureUserMedia((stream) => {\n    //     this.setState({ localSrc: stream});\n    //     this.setState({ peerSrc : stream});\n    //     console.log('setting state', this.state)\n    //   });\n    }\n\n    audioStreamInitialize() {\n      /*\n          Creates a new credentials object, which will allow us to communicate with the aws services.\n      */\n      var self = this;\n      AWS.config.update({\n           region: \"ap-south-1\",\n               credentials: new AWS.CognitoIdentityCredentials({\n                  IdentityPoolId: 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c',\n                  RoleArn: 'arn:aws:iam::923146643705:role/Cognito_TestPoolUnauth_Role',\n                  AccountId: '923146643705' // your AWS account ID\n  \n               })\n          });\n  \n              AWS.config.credentials.get(function (err) {\n      if (err) console.log(err);\n      else console.log(AWS.config.credentials);\n  });\n      \n      self.s3 = new AWS.S3({logger:console,\n  //         AWSAccessKeyId=AKIAJRQYW4X2EL2WE6UQ\n  // AWSSecretKey=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\n       apiVersion: '2006-03-01',\n          params: {Bucket: 'ankurself'}\n  \n  \n  })\n      /*\n          Feature detecting is a simple check for the existence of \"navigator.mediaDevices.getUserMedia\"\n          To use the microphone. we need to request permission.\n          The parameter to getUserMedia() is an object specifying the details and requirements for each type of media you want to access.\n          To use microphone it shud be {audio: true}\n      */\n    //   navigator.mediaDevices.getUserMedia(self.audioConstraints)\n    //       .then(function(stream) {\n              \n    //           /*\n    //               once we accept the prompt for the audio stream from user's mic we enable the record button.\n    //           */\n    //         //  $(\"#record_q1\").removeAttr(\"disabled\");\n    //           /*\n    //               Creates a new MediaRecorder object, given a MediaStream to record.\n    //           */\n    //           self.recorder = new MediaRecorder(stream);\n    //                           self.setState({videosrc:stream});                               \n            \n    //           self.recorder.addEventListener('dataavailable', function(e) {\n    //               var normalArr = [];\n    //               /*\n    //                   Here we push the stream data to an array for future use.\n    //               */\n    //               self.recordedChunks.push(e.data);\n    //               normalArr.push(e.data);\n  \n    //               /*\n    //                   here we create a blob from the stream data that we have received.\n    //               */\n    //               var blob = new Blob(normalArr, {\n    //                   type: 'video/webm'\n    //               });\n                           \n    //               /*\n    //                   if the length of recordedChunks is 1 then it means its the 1st part of our data.\n    //                   So we createMultipartUpload which will return an upload id.\n    //                   Upload id is used to upload the other parts of the stream\n    //                   else.\n    //                   It Uploads a part in a multipart upload.\n    //               */\n    //               if (self.recordedChunks.length == 1) {\n    //                        console.log(blob.size);\n  \n  \n    //                   self.startMultiUpload(blob, self.filename)\n    //               } else {\n    //                   /*\n    //                       self.incr is basically a part number.\n    //                       Part number of part being uploaded. This is a positive integer between 1 and 10,000.\n    //                   */\n    //                   self.incr = self.incr + 1\n    //                   self.continueMultiUpload(blob, self.incr, self.uploadId, self.filename, self.bucketName);\n    //               }\n    //           })\n    //       });\n\n     //  this.startRecording(isCaller);\n//    navigator.mediaDevices.getUserMedia({\n//     video: true,\n//     audio: true\n// }).then(async function(stream) {\n   \n//     self.state.recordVideo = RecordRTC(stream, {     \n  \n\n//     // disable logs\n//     disableLogs: true,\n   \n//     // disable logs\n//     disableLogs: true,\n \n//     // get intervals based blobs\n//     // value in milliseconds\n//     timeSlice: 150000,\n//     ondataavailable: function(e) {\n//     console.log('ondataavailable -- ');\n\n//       var normalArr = [];\n//       /*\n//           Here we push the stream data to an array for future use.\n//       */\n//       self.recordedChunks.push(e.data);\n//       normalArr.push(e.data);\n\n//       /*\n//           here we create a blob from the stream data that we have received.\n//       */\n//       var blob = new Blob(normalArr, {\n//           type: 'video/webm'\n//       });                   \n//   //    let size = bytesToSize(recorder.getBlob().size);\n\n//       if (self.recordedChunks.length == 1) {\n//                console.log(blob.size);\n\n\n//           self.startMultiUpload(blob, self.filename)\n//       } else {\n//           /*\n//               self.incr is basically a part number.\n//               Part number of part being uploaded. This is a positive integer between 1 and 10,000.\n//           */\n//           self.incr = self.incr + 1\n//           self.continueMultiUpload(blob, self.incr, self.uploadId, self.filename, self.bucketName);\n//       }}\n//   });      \n\n  \n//});\n  }\n\n  startRecording(id) {\n    var self = this; \n    \n    this.recorder.start(50000);\n    console.log('recprdomg');\n    this.setState({showVideo:true});\n}\n\nstopRecording(id) {\n    var self = this;\n    self.recorder.stop();\n    self.booleanStop = true;\n    //disable self\n   \n  //  self.disableAllButton()\n  //  $(\"#stop_q1\").attr(\"disabled\", \"disabled\");\n    // add loader\n  //  self.setLoader();\n    this.setState({showVideo:false});\n}\n\npauseRecording(id) {\n    var self = this;\n    self.recorder.pause();\n   $(\"#pause_q1\").addClass(\"hide\");\n    $(\"#resume_q1\").removeClass(\"hide\");\n}\n \n\nresumeRecording(id) {\n    var self = this;\n    self.recorder.resume();\n   $(\"#resume_q1\").addClass(\"hide\");\n    $(\"#pause_q1\").removeClass(\"hide\");\n}\n\nstartMultiUpload(blob, filename) {\n    var self = this;\n    var audioBlob = blob;\n    var params = {\n     \n        Bucket: 'ankurself',\n        Key: filename,\n        ContentType: 'video/webm',\n        ACL: 'public-read'           \n    };\n    self.s3.createMultipartUpload(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack); // an error occurred\n        } else {\n            self.uploadId = data.UploadId\n            self.incr = 1;\n            self.continueMultiUpload(audioBlob, self.incr, self.uploadId, self.filename, self.bucketName);\n        }\n    });\n}\n \n\n /*\n       Uploads a part in a multipart upload.\n       The following code uploads part of a multipart upload.\n       it specifies a file name for the part data. The Upload ID is same that is returned by the initiate multipart upload.\n   */\n  continueMultiUpload(audioBlob, PartNumber, uploadId, key, bucketName) {\n    var self = this;\n \n \n \n    var params = {\n        Body: audioBlob,\n        Bucket: 'ankurself',\n        Key: key,\n        PartNumber: PartNumber,\n        UploadId: uploadId\n    };\n    console.log(params);\n    self.s3.uploadPart(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack)\n        } // an error occurred\n        else {\n            /*\n                Once the part of data is uploaded we get an Entity tag for the uploaded object(ETag).\n                which is used later when we complete our multipart upload.\n            */\n            self.etag.push(data.ETag);\n            if (self.booleanStop == true) {\n                self.completeMultiUpload();\n            }\n        }\n    });\n}\n\n\n /*\n       Completes a multipart upload by assembling previously uploaded parts.\n   */\n  completeMultiUpload() {\n    var self = this;\n    var outputTag = [];\n    /*\n        here we are constructing the Etag data in the required format.\n    */\n    self.etag.forEach((data, index) => {\n        const obj = {\n            ETag: data,\n            PartNumber: ++index\n        };\n        outputTag.push(obj);\n    });\n\n    var params = {\n        Bucket:'ankurself', // required\n        Key: self.filename, // required\n        UploadId: self.uploadId, // required\n        MultipartUpload: {\n            Parts: outputTag\n        }\n    };\n\n    self.s3.completeMultipartUpload(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack)\n        } // an error occurred\n        else {\n            self.saveVideoURL(data.Location);\n            // initialize variable back to normal\n            self.etag = [];\n            self.recordedChunks = [];\n            self.uploadId = \"\";\n            self.booleanStop = false;\n          //  self.disableAllButton();\n         //   self.removeLoader();\n            alert(\"we have successfully saved the questionaire..\");\n        }\n    });\n}\n\nsaveVideoURL(videoLink){\n  let data={\n        slotId: this.state.slotId ,\n        userId: this.props.user.userId,\n        videoChatLink: videoLink\n  };\n\n  theRapidHireApiService('saveChatLink',data)\n  .then(response => {     \n    if (response.data.status === 'Success') {\n      \n    }\n  })\n  .catch(err => {\n    console.log(err);\n  });\n}\n\nstartCallInterviewer(){\n    console.log('cllaldjflsadjf');\n    this.multiStreamRecorder.startRecording();\n}\n\n  startCall(isCaller, friendID, config) {\n    this.config = config;let self=this;\n// try array format to record parallely ---    \n   let local,remote;\n \n//    if(this.props.user.roleId == 2){\n//     this.pc = new PeerConnection(this.props.location.state.videoKeyClient)\n//       .on('localStream', (src) => {\n//         const newState = { callWindow: 'active', localSrc: src };        \n//         if (!isCaller) newState.callModal = '';\n    \n//         this.multiStreamRecorder = new RecordRTC([src]);\n       \n//         this.multiStreamRecorder.stream = src;\n//     //    multiStreamRecorder.mimeType = 'audio/webm';\n//     this.multiStreamRecorder.mimeType = 'video/webm';\n//     this.multiStreamRecorder.previewStream = function(stream) {\n//       //    video.srcObject = stream;\n//         //  video.play();\n//       };\n//       this.multiStreamRecorder.ondataavailable = function(e) {\n//          //   appendLink(blob);\n  \n//          var normalArr = [];\n//          /*\n//              Here we push the stream data to an array for future use.\n//          */\n//          self.recordedChunks.push(e);\n//          normalArr.push(e);\n   \n\n\n//                 // //   appendLink(blob);\n//                 // let MB = 5 * 1024 * 1024\n//                 // let size = self.bytesToSize(e.size);\n//                 // console.log(e.size >= MB);\n\n//                 // /*\n//                 //     Here we push the stream data to an array for future use.\n//                 // */\n//                 // vardata.push(e);\n//                 // // normalArr.push(e);\n//                 // let checkSize=0;\n//                 // vardata.forEach(function(data){\n//                 //     checkSize = checkSize + data.size;\n//                 // })\n//                 // console.log('checkSize -- ',checkSize);\n//                 // if(checkSize <= MB )\n//                 // return false;\n//                 // self.recordedChunks.push = [];\n\n\n\n\n\n//          /*\n//              here we create a blob from the stream data that we have received.\n//          */\n//          var blob = new Blob(normalArr, {\n//              type: 'video/webm'\n//          });                   \n//          let size = self.bytesToSize(e.size);\n//          console.log('size ',size);\n//         console.log('recordedChunks -- ',self.recordedChunks);\n        \n//          if (self.recordedChunks.length == 1) {\n//                   console.log(blob.size);\n//                   console.log('startMultiUpload -- ',);\n   \n//              self.startMultiUpload(e, self.filename)\n//          } else {\n//              /*\n//                  self.incr is basically a part number.\n//                  Part number of part being uploaded. This is a positive integer between 1 and 10,000.\n//              */\n//             console.log('continueMultiUpload -- ',);\n   \n//              self.incr = self.incr + 1\n//              self.continueMultiUpload(e, self.incr, self.uploadId, self.filename, self.bucketName);\n//          }\n//         }; \n       \n//         local= src;\n//         this.setState(newState);\n        \n//       })\n//       .on('peerStream', src =>{\n//         this.multiStreamRecorder.addStream( src );\n//         this.setState({ peerSrc: src });\n      \n//       })\n//       .start(isCaller, config);\n//     }else{\n//         this.pc = new PeerConnection(this.props.location.state.videoKeyClient)\n//         .on('localStream', (src) => {\n//           const newState = { callWindow: 'active', localSrc: src };        \n//           if (!isCaller) newState.callModal = '';        \n//           this.setState(newState);        \n//         })\n//         .on('peerStream', src =>{       \n//           this.setState({ peerSrc: src });        \n//         })\n//         .start(isCaller, config);\n//     }\n\nif(this.props.user.roleId == 2){\n        this.pc = new PeerConnection(this.props.location.state.videoKeyClient)\n        .on('localStream', (src) => {\n          const newState = { callWindow: 'active', localSrc: src }; \n          console.log(src);\n          this.localSource= src;\n\n         \n          if (!isCaller) newState.callModal = '';        \n          this.setState(newState);   \n             \n        })\n        .on('peerStream', src =>{   \n           \n            this.multiStreamRecorder = RecordRTC([this.localSource,src], {\n                // audio, video, canvas, gif\n               type: 'video',   \n               mimeType: 'video/mp4', \n             \n               recorderType: RecordRTC.MultiStreamRecorder,\n           \n               // disable logs\n               disableLogs: true,\n           \n               // get intervals based blobs\n               // value in milliseconds\n               timeSlice: 180000,\n           \n               // requires timeSlice above\n               // returns blob via callback function\n               ondataavailable: function(e) {\n    \n    \n             var normalArr = [];\n             /*\n                 Here we push the stream data to an array for future use.\n             */\n             self.recordedChunks.push(e);\n             normalArr.push(e);\n       \n    \n    \n                    // //   appendLink(blob);\n                    // let MB = 5 * 1024 * 1024\n                    // let size = self.bytesToSize(e.size);\n                    // console.log(e.size >= MB);\n    \n                    // /*\n                    //     Here we push the stream data to an array for future use.\n                    // */\n                    // vardata.push(e);\n                    // // normalArr.push(e);\n                    // let checkSize=0;\n                    // vardata.forEach(function(data){\n                    //     checkSize = checkSize + data.size;\n                    // })\n                    // console.log('checkSize -- ',checkSize);\n                    // if(checkSize <= MB )\n                    // return false;\n                    // self.recordedChunks.push = [];\n    \n    \n    \n    \n    \n             /*\n                 here we create a blob from the stream data that we have received.\n             */\n            //  var blob = new Blob(normalArr, {\n            //      type: 'video/webm'\n            //  });                   \n             let size = self.bytesToSize(e.size);\n             console.log('size ',size);\n            console.log('recordedChunks -- ',self.recordedChunks);\n            \n             if (self.recordedChunks.length == 1) {\n                 //     console.log(blob.size);\n                      console.log('startMultiUpload -- ',);\n       \n                 self.startMultiUpload(e, self.filename)\n             } else {\n                 /*\n                     self.incr is basically a part number.\n                     Part number of part being uploaded. This is a positive integer between 1 and 10,000.\n                 */\n                console.log('continueMultiUpload -- ',);\n       \n                 self.incr = self.incr + 1\n                 self.continueMultiUpload(e, self.incr, self.uploadId, self.filename, self.bucketName);\n             }\n                 \n               },\n           \n               // auto stop recording if camera stops\n               checkForInactiveTracks: false,\n           \n               // requires timeSlice above\n               onTimeStamp: function(timestamp) {},\n           \n               // both for audio and video tracks\n               bitsPerSecond: 128000,       \n           \n               // if you are recording multiple streams into single file\n               // this helps you see what is being recorded\n               previewStream: function(stream) {\n                   console.log(stream);\n               },\n           \n               // used by MultiStreamRecorder - to access HTMLCanvasElement\n               elementClass: 'multi-streams-mixer'\n           });\n    \n          this.setState({ peerSrc: src });        \n        })\n        .start(isCaller, config);\n\n    }else{\n        this.pc = new PeerConnection(this.props.location.state.videoKeyClient)\n                .on('localStream', (src) => {\n                  const newState = { callWindow: 'active', localSrc: src };        \n                  if (!isCaller) newState.callModal = '';        \n                  this.setState(newState);        \n                })\n                .on('peerStream', src =>{       \n                  this.setState({ peerSrc: src });        \n                })\n                .start(isCaller, config);\n    }\n}\n\n  bytesToSize(bytes) {\n    var k = 1000;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return '0 Bytes';\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\n}\n\n  rejectCall() {\n    const { callFrom } = this.state;\n    socket.emit('end', { to: callFrom });\n    this.setState({ callModal: '' });\n  }\n\n  endCall(isStarter) {\n  if(this.props.user.roleId == 2)\n    this.multiStreamRecorder.stopRecording();\n    if (_.isFunction(this.pc.stop)) this.pc.stop(isStarter);\n    this.pc = {};\n    this.config = null;\n    this.setState({\n      callWindow: '',\n      localSrc: null,\n      peerSrc: null\n    });\n\n  \n   // this.stopRecording(1);\n  //  this.state.recordVideo.stopRecording();\n    this.booleanStop = true;\n//     this.state.recordVideo.stopRecording(() => {\n//       let params = {\n//         type: 'video/webm',\n//         data: this.state.recordVideo.blob,\n//         id: Math.floor(Math.random()*90000) + 10000\n//       }\n\n//  console.log('enter then statement')\n//   //    this.setState({ uploading: true });\n\n//       S3Upload(params)\n//       .then((success) => {\n//         console.log('enter then statement')\n//         if(success) {\n//           console.log(success)\n//      //     this.setState({ uploadSuccess: true, uploading: false });\n//         }\n//       }, (error) => {\n//         alert(error, 'error occurred. check your aws settings and try again.')\n//       })\n//     });\n  }\n\n  render() {\n    const { clientId, callFrom, callModal, callWindow, localSrc, peerSrc } = this.state;\n    return (\n      <div>\n        <Header {...this.props} />      \n        <MainWindow\n          clientId={clientId}\n          startCall={this.startCallHandler}\n        />\n\n        <CallWindow\n          status={callWindow}\n          localSrc={localSrc}\n          peerSrc={peerSrc}\n          config={this.config}\n          mediaDevice={this.pc.mediaDevice}\n          endCall={this.endCallHandler}\n          user={this.props.user}\n          startCallInterviewer={this.startCallByInterviewer}\n        />\n        <CallModal\n          status={callModal}\n          startCall={this.startCallHandler}\n          rejectCall={this.rejectCallHandler}\n          callFrom={callFrom}\n        />\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData    \n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(App);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem, FormGroup, FormControl } from 'react-bootstrap';\n\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\nimport _ from 'lodash';\n\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport {\n  ZoomInAndOut,\n  getThumbImage,\n  getLocalStorage,\n  limitCharacter\n} from '../../common/commonFunctions';\nimport SearchUserList from '../../common/searchDropdown/searchUserList';\nimport ChangePassword from '../../common/changePassword/changePassword';\nimport {\n  actionUserLogout,\n  actionGetHeaderCount,\n  actionUpdateHeaderCount,\n  actionChangePasswordStatus\n} from '../../common/core/redux/actions';\nimport userDefaultImage from '../../assets/img/default-img.PNG';\n\nlet AsyncTypeahead = asyncContainer(Typeahead);\nvar keyCheck=false,renderChangeMenu=false;\nclass Header extends Component { \n  constructor(props, context) {\n    super(props);\n    this.state={\n      userProfile:{}\n\n    }    \n  }\n\n  getUserProfileData(userId){\n    theRapidHireApiService('getUserSkillsById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response.data);       \n         let userProfile = response.data.result[0];       \n         let profileRole= userProfile.profileRole[0].profileRole;\n         let experience= userProfile.experienceInYear;\n         let mobileNo= userProfile.mobileNo;\n         let currentLocation= userProfile.currentLocation;\n         let videoLink = userProfile.videoLink;\n         this.setState({userProfile:userProfile,\n                    profileRole,\n                    experience,\n                    mobileNo,\n                    currentLocation,\n                    videoLink\n         });        \n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  componentWillMount() {\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;    \n    if(user){\n      let userId =user.userId; \n      this.getUserProfileData(userId);\n    }\n  } \n\n  logout = () => {\n    this.props.actionUserLogout();\n    this.props.history.push('/');\n  };\n\n  render() {\n    return (\n    <Navbar fluid={true}>\n      {/* <Navbar.Header>\n        <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\">\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n        </button>\n      </Navbar.Header> */}\n\n      <Navbar.Collapse>\n\n        {/* <Nav>\n          <NavItem><i className=\"fa fa-dashboard\"></i></NavItem>\n          <NavDropdown title={<i className=\"fa fa-globe\" />} id=\"basic-nav-dropdown\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem>\n          </NavDropdown>\n        </Nav> */}\n        <div className=\"separator\"></div>\n        {/* <Navbar.Form pullLeft>\n          <FormGroup>\n            <span className=\"input-group-addon\"><i className=\"fa fa-search\"></i></span>\n            <FormControl type=\"text\" placeholder=\"Type to search\" />\n          </FormGroup>\n        </Navbar.Form> */}\n        <Nav pullRight>\n        <NavItem> <Link to=\"/interviewer/interviewerProfile\">Profile </Link></NavItem>\n        {this.state.userProfile ?     <NavItem> <Link to=\"/interviewer/dashboard\">Dashboard </Link></NavItem>:null}\n        {this.state.userProfile ?      <NavItem> <Link to=\"/interviewer/timeSlots\">Time Slot </Link></NavItem>  :null}       \n          {/* <NavDropdown title=\"Dropdown\" id=\"right-nav-bar\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem>\n          </NavDropdown> */}\n          <NavItem onClick={this.logout}>Log out</NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n  }}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    headerCount: state.User.headerCount\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionUserLogout,\n      actionGetHeaderCount,\n      actionUpdateHeaderCount,\n      actionChangePasswordStatus\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\n\n","import React, { Component } from 'react';\nimport Header from '../header/header';\nimport {\n  Button,\n  Media,\n  Row,\n  Col,\n  FormControl,FormGroup,\n  InputGroup\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport { Week, Month, Agenda,TimelineViews, TimelineMonth, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\n\nimport moment from 'moment';\n\nimport { extend } from '@syncfusion/ej2-base';\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\";\n//import \"@syncfusion/ej2-split-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\n//import '../node_modules/@syncfusion/ej2/material.css';\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\";\n//import Img from '../../common/cropper/img';\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\n//import moment from 'moment';\nimport {\n  showErrorToast ,ZoomInAndOut \n} from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\n\n\nclass TimeSlots extends Component {\n   constructor(props) {\n        super(...arguments);\n    this.state = {      \n      isOpen: false,\n      startDate: new Date(),\n      timeData:[]\n    };   \n    \n  }\n \n  componentDidMount() {  \n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\n    if(user){\n      let userId =user.userId;       \n      this.setState({userId: userId,user:user});\n      this.getUserProfileData(userId);\n      this.getSlotDetails(userId);  \n    }   \n  }\n\n  getUserProfileData(userId){\n    theRapidHireApiService('getUserSkillsById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response.data);       \n         let userProfile = response.data.result[0];     \n        this.setState({userProfile:userProfile                  \n         });        \n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  getSlotDetails(userId){\n    let interviewerId= userId;\n    theRapidHireApiService('getTimeSlotByInterviewer',{interviewerId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response);\n        let timeData=  [];\n        response.data.result.forEach(function(item,index){    \n          let launchDate = new Date(item.startTimeStamp);     \n          let day = launchDate.getUTCDate();\n          let month = launchDate.getMonth();\n          let year = launchDate.getFullYear(); \n          let min = launchDate.getMinutes();\n          let hour = launchDate.getHours();\n\n          let startDate= new Date(year,month,day,hour,min);\n\n           launchDate = new Date(item.endTimeStamp);     \n           day = launchDate.getUTCDate();\n           month = launchDate.getMonth();\n           year = launchDate.getFullYear(); \n           min = launchDate.getMinutes();\n           hour = launchDate.getHours();\n\n          let endDate= new Date(year,month,day,hour,min);\n\n          timeData.push({\n              slotId: item.slotId, \n              text: 'Photogenic',     \n              userId:  item.userId,     \n              StartTime: startDate,\n              EndTime: endDate,              \n              Color :item.userId ? '#1aaa55' :'#7fa900'\n            })\n      });\n      this.setState({timeData:timeData});\n      }\n     \n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n \n  handleChange = date => {\n    console.log(date);\n    this.setState({\n      startDate: date\n    });\n  };\n\n  onPopupOpen(args) {\n    console.log(args);   \n\n     if(moment(args.data.StartTime).valueOf() <  moment().valueOf()){\n      args.cancel = true;\n      showErrorToast('Selected time can not be less than current time.');\n      return false;\n     }  \n\n     console.log(args.data.StartTime);\n    let self= this;\n    let startDate= new Date(args.data.StartTime);\n   \n    let endDate= new Date(args.data.EndTime);\n \n     console.log(moment(args.data.StartTime));   \n\n    let data={\n      slotRegisteredDate:new Date(moment(args.data.StartTime).format(\"DD-MMM-YYYY\")).valueOf(),\n      startTimeStamp: moment(startDate).valueOf(),\n      endTimeStamp: moment(endDate).valueOf(),\n      interviewerId: this.state.userId\n    };\n   if(!args.data.slotId){\n      theRapidHireApiService('createSlot', data)\n      .then(response => {\n        if (response.data.status===\"Success\") {      \n            self.setState({ isLoading: false });    \n            self.getSlotDetails(self.state.userId);   \n        } \n      })\n      .catch(error => {\n      // self.setState({ isLoading: false });\n        console.log(error);\n      });\n    }else{\n      let slotId= args.data.slotId\n      console.log(args.data);     \n      \n      theRapidHireApiService('deleteTimeSlotByInterviewer',{slotId})\n      .then(response => {\n        if (response.data.status===\"Success\") {      \n            self.setState({ isLoading: false });    \n            self.getSlotDetails(self.state.userId);   \n        } \n      })\n      .catch(error => {\n      // self.setState({ isLoading: false });\n        console.log(error);\n      });\n    }\n    args.cancel = true;\n}\n\n\n\n \n  render() {\n    return (\n      <div className=\"wrapper\">\n       <ToastContainer\n          autoClose={5000}\n          className=\"custom-toaster-main-cls\"\n          toastClassName=\"custom-toaster-bg\"\n          transition={ZoomInAndOut}\n        /> \n        <Header {...this.props} />     \n          <div className=\"main-panel\">\n           <div className=\"w3-content main-panel1\"> \n           {this.state.userProfile ? \n              <ScheduleComponent width='100%' height='800px' \n                ref={schedule => this.scheduleObj = schedule}\n                popupOpen={this.onPopupOpen.bind(this)} showQuickInfo={false} \n                //  eventRendered={this.onEventRendered.bind(this)} selectedDate={new Date(2018, 3, 1)}\n                onChange={this.handleChange.bind(this)} eventSettings={{ dataSource: this.state.timeData }} \n                >\n                      <ViewsDirective>\n                      <ViewDirective option='Day' startHour='09:30' endHour='18:00' />\n                          <ViewDirective option='Week'/>                \n                          <ViewDirective option='Agenda'/>\n                      </ViewsDirective>\n                      <ResourcesDirective>\n                          <ResourceDirective field='slotId' title='Slot' name='Slot' allowMultiple={false} textField='text' dataSource={this.state.timeData} idField='id' colorField='Color'>\n                          </ResourceDirective>\n                      </ResourcesDirective> \n                      <Inject  services={[Week,Agenda]}/>\n                </ScheduleComponent> :\n                <div className=\"container main\">\n                  Kindly complete profile first\n                  </div>\n             }\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(TimeSlots);\n","import React, { Component } from 'react';\nimport Header from '../header/header';\n\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\nimport _ from 'lodash';\nimport S3FileUpload from 'react-s3';\nimport moment from 'moment';\n\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\";\n//import Img from '../../common/cropper/img';\nimport {\n  showErrorToast,\n  uploadToAzure,\n  limitCharacter,\n  SampleNextArrow,\n  SamplePrevArrow,\n  getThumbImage,\n  ZoomInAndOut\n} from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\n\nimport {\n  actionGetStudentPersonalInfo,\n  actionGetAllCompetency,\n  actionGetAchievementsByUser,\n  actionGetRecommendationsByUser,\n  actionUpdateUserInfo,\n  actionGetAchievementsData\n} from '../../common/core/redux/actions';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\n\n\nconst config = {\n  bucketName: 'ankurself',\n  dirName: 'photos', /* optional */\n  region: 'ap-south-1', // Put your aws region here\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\n}\n\n\nvar settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 3,\n  swipeToSlide: true,\n  nextArrow: <SampleNextArrow props={this.props} />,\n  prevArrow: <SamplePrevArrow props={this.props} />,\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2\n      }\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }\n  ]\n};\n\nclass Dashboard extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {      \n      showJobDescriptionComponent: false,      \n      jobDescriptionDetail: {},        \n     \n      loader1: false,\n      loader2: false,      \n      jobDescriptionListData: [],\n      showVideoComponent: false,     \n      userData:{},     \n      showDropdown: false,     \n      isActive: 'true',     \n      contentEditable: false,\n      editName: false,\n      name: '',\n      editTagLine: false\n    };\n   /// this.textInput = React.createRef();    \n  }\n\n  componentWillMount() {\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\n    \n    if(user){\n      this.getSlotDetails(user.userId);        \n    } \n   \n  }\n\n  componentWillReceiveProps(res) {\n    \n  }\n\n  componentDidMount() {  \n    \n  }\n\n  getSlotDetails(userId){   \n    let interviewerId= userId ;\n    theRapidHireApiService('getTimeSlotByInterviewer',{interviewerId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response);\n        let bookedSlotData=[];\n        bookedSlotData = response.data.result;\n      this.setState({bookedSlotData:bookedSlotData});\n      }\n     \n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  getUserListForMapping(jobId){\n    theRapidHireApiService('getUserListForMapping',{jobId})\n    .then(response => {     \n      if (response.data.status === \"Success\") {\n         let jobDescriptionListData= this.state.jobDescriptionListData;\n         jobDescriptionListData= response.data.result;\n     \n         this.setState({jobDescriptionListData: jobDescriptionListData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n\n  handleSubmit = (data,action) => {\n    let jobMapId=data.jobMapId;\n    let jobId=this.state.jobId;\n    let candidateId=data.userId;\n    let hrId=this.state.userId;\n    let status= action;\n    let createdBy= this.props.user.userId;\n\n    let dataMap={\n      jobMapId,\n      jobId,\n      candidateId,\n      hrId,\n      status,\n      createdBy        \n    }\n    \n    if(jobMapId!==\"\" || jobMapId!==null){\n        theRapidHireApiService('createJobMap',dataMap)\n        .then(response => {     \n          if (response.data.status === \"Success\") {\n            this.getUserListForMapping(this.state.jobId);   \n            //  let jobDescriptionListData= this.state.jobDescriptionListData;\n            //  jobDescriptionListData= response.data.result;\n        \n            //  this.setState({jobDescriptionListData: jobDescriptionListData});\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }else{\n      theRapidHireApiService('updateJobMap',dataMap)\n      .then(response => {     \n        if (response.data.status === \"Success\") {\n          this.getUserListForMapping(this.state.jobId);   \n          //  let jobDescriptionListData= this.state.jobDescriptionListData;\n          //  jobDescriptionListData= response.data.result;\n      \n          //  this.setState({jobDescriptionListData: jobDescriptionListData});\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n    \n\n\n  contentEditable = () => {\n    window.scrollTo(500, 0);\n    //console.log(!this.state.contentEditable);\n    this.setState({ contentEditable: !this.state.contentEditable });\n  };\n\n  setProfileData = data => {\n    //console.log(data);\n    if (data) {\n      let userId = data.userId;\n      let summary = data.summary;\n      let firstName = data.firstName;\n      let lastName = data.lastName;\n      // let tagline = data.tagline.trim();\n      // let editTag = data.tagline.trim();\n      let tagline = data.tagline ? data.tagline.trim() : null;\n      let editTag = data.tagline ? data.tagline.trim() : null;\n\n      let name =\n        (data.firstName ? data.firstName : '') +\n        ' ' +\n        (data.lastName ? data.lastName : '');\n      let profileImage = data.profilePicture;\n      if (profileImage) {\n        profileImage = getThumbImage('medium', profileImage);\n      }\n      let coverImage = data.coverImage;\n      if (coverImage) {\n        coverImage = getThumbImage('original', coverImage);\n      }\n      let isActive = data.isActive;\n      this.setState({\n        editTag,\n        summary,\n        firstName,\n        lastName,\n        userId,\n        profileImage,\n        coverImage,\n        tagline,\n        isActive,\n        name\n      });\n    }\n  };  \n\n \n  joinVideoChat = data => {   \n    console.log(data);\n\n    let videoKeyClient= data.videoKeyUser;\n    \n    let videoKeySelf= data.videoKeyInterviewer;\n    \n    this.props.history.push({\n        pathname: '/js/app',\n        state: { videoKeySelf:videoKeySelf,videoKeyClient:videoKeyClient,slotId:data.slotId}});    \n      \n  };\n\n  editJobDescriptionComponent = jobDescriptionDetail => {\n    console.log(jobDescriptionDetail);\n    this.setState({\n      jobDescriptionDetail: jobDescriptionDetail ,\n      showJobDescriptionComponent: !this.state.showJobDescriptionComponent    \n    });\n  }\n\n \n\n  getProfileData = () => {\n    let userId = this.state.userId;\n    this.props.actionGetStudentPersonalInfo(userId);\n  };\n  \n  generateSASToken() {\n    theRapidHireApiService('getSASToken')\n      .then(response => {\n        if (response.data.status === 'Success') {\n          let sasToken = response.data.result.sasToken;\n          this.setState({ sasToken });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  toggleDropdown = () => {\n    this.setState({\n      showDropdown: !this.state.showDropdown\n    });\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };  \n\n \n \n  render() {let self= this;\n    return ( \n    \n    <div className=\"wrapper\">\n     <ToastContainer\n          autoClose={5000}\n          className=\"custom-toaster-main-cls\"\n          toastClassName=\"custom-toaster-bg\"\n          transition={ZoomInAndOut}\n        /> \n        <Header {...this.props} />     \n          <div className=\"main-panel\">          \n        \n\n        <div className=\"w3-content main-panel1\">\n        \n          <div className=\"container main\">\n           \n\n            {/* <div className=\"button--wrapper mb-1 text-center flex flex-1 justify-center dashBtnCenter\">\n              <button\n                className=\"btn btn-with-border with-icon smallBtn mr-1\"\n                onClick={this.viewSampleProfile}\n              >\n                View Sample Profile\n              </button>             \n              <button\n                className=\"btn btn-with-border with-icon smallBtn\"\n                onClick={this.addStudentModel}\n              >\n                <span className=\"icon-plus\" />\n                add student\n              </button>\n            </div> */}\n            {this.state.bookedSlotData && this.state.bookedSlotData.map(function(data, index) {\n                return (                 \n                     \n                  <div\n                    key={index}\n                    className=\"suggestion-usd\"\n                   \n                  >\n                    <div className=\"student-img deflt-icon centeredBox flex\">\n                       Your Slot has been booked with Rapid Hire Company\n                    </div>\n                    <div className=\"student-info flex justify-content-space-between\">\n                      <div className=\"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\">\n                        <div className=\"flex-1\">\n                          <h3>\n                            {/* {data.firstName\n                              ? data.firstName +\n                                ' ' +\n                                (data.lastName ? data.lastName : '')\n                              : null} */}\n                          </h3>\n                          <p></p>\n                          <p></p>\n                        </div>\n\n                         <div className=\"flex-1\">\n                          <h6>\n                            {moment(parseInt(data.startTimeStamp,10)).format(\"hh:mm:ss\")}                      \n                          </h6>\n                          {moment(parseInt(data.endTimeStamp,10)).format(\"hh:mm:ss\")}\n                        </div>\n\n                        <div className=\"btn-group flex align-center\">                 \n                        \n                          <button onClick={self.joinVideoChat.bind(\n                            self,\n                            data                            \n                          )} \n                            className=\"btn btn-primary no-round\"\n                          //  onClick={self.handleClickProfile.bind(self, data)}\n                          >\n                           Join Video\n                          </button>\n                          {/* {self.state.showVideoComponent ==\n                              true ? (\n                                <ShowVideo\n                                  closeShowVideoComponent={\n                                    self.showVideoComponent\n                                  }                                 \n                                  videoLink={\n                                    data.videoLink\n                                  }\n                                />\n                              ) : (\n                                '')} */}\n                          &nbsp; &nbsp;\n                      \n                          <DropdownButton\n                            className=\"burger-trigger\"\n                            title={<span className=\"icon-burger\" />}\n                            id=\"1\"\n                          >\n                            <MenuItem\n                              // onSelect={self.addParentModel.bind(\n                              //   this,\n                              //   data.userId\n                              // )}\n                            >\n                              <i className=\"m-ico icon-plus\" />\n                              Add Parent\n                            </MenuItem>\n                            <MenuItem\n                              onSelect={() =>\n                                self.props.history.push({\n                                  pathname: '/parent/list',\n                                  state: { studentData: data }\n                                })\n                              }\n                            >\n                              <i className=\"m-ico icon-parent\" /> Parent List\n                            </MenuItem>\n                            <MenuItem\n                              onSelect={() =>\n                                self.props.history.push({\n                                  pathname: '/student/profilelog',\n                                  state: { profileOwner: data.userId }\n                                })\n                              }\n                            >\n                              <i className=\"m-ico icon-profile-sharing\" />{' '}\n                              Profile Sharing Log\n                            </MenuItem>\n\n                            <MenuItem\n                            //   onSelect={self.deleteStudent.bind(\n                            //     this,\n                            //     data.userId,\n                            //     self.props.parent.userId\n                            //   )}\n                            >\n                              <i className=\"m-ico icon-delete\" /> Delete\n                            </MenuItem>\n                          </DropdownButton>\n                        </div>\n                      </div>\n\n                      {/* <div className=\"flex align-center justify-content-space-bettween tag-wrap\">\n                        <div className=\"promo-tag br-light\">\n                          Skills <span>{data.accomplishment}</span>\n                        </div>\n                       \n                        <div className=\"promo-tag\">\n                          Location <span>{data.recommendation}</span>\n                        </div>\n                      </div> */}\n                    </div>\n                  </div>\n                );\n              })}\n          </div>         \n          {/* {this.state.addStudentModel ? (\n            <AddMoreStudent\n              addStudentModel={this.state.addStudentModel}\n              closeAddStudentModel={this.addStudentModel}\n            />\n          ) : null} */}\n        </div></div>\n      </div>\n    \n    \n    \n    \n    \n    \n    // </div></div>\n    //   </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionGetStudentPersonalInfo,\n      actionGetAllCompetency,\n      actionGetAchievementsByUser,\n      actionGetRecommendationsByUser,\n      actionUpdateUserInfo,\n      actionGetAchievementsData\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard);\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Col,\r\n  Row,\r\n  ControlLabel,\r\n  FormControl\r\n} from 'react-bootstrap';\r\n\r\n//import 'react-datepicker/dist/react-datepicker.css';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport moment from 'moment';\r\n\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  ZoomInAndOut,\r\n  generateTimestamp,\r\n  getThumbImage\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport { actionListOragnization } from '../../common/core/redux/actions';\r\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\r\n\r\nlet AsyncTypeahead = asyncContainer(Typeahead);\r\nlet validationMessages = CONSTANTS.validationMessages;\r\n\r\nclass addEducation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      educationModal: true,\r\n      organizationId: '',\r\n      instituteName: '',\r\n      city: '',\r\n      // fieldOfStudy: '',\r\n      // grade: '',\r\n      description: '',\r\n      userId: '',\r\n      isActive: true,\r\n      educationId: '',\r\n      listOragnization: [],\r\n      searchText: '',\r\n      fromYear: '',\r\n      toYear: '',\r\n      fromGrade: '',\r\n      toGrade: '',\r\n      oragnizationPreview: '',\r\n      oragnizationLogo: '',\r\n      oragnizationFile: '',\r\n      isToGrade: '',\r\n      isToYear: '',\r\n      imageSource: '',\r\n      educationFromYear: '',\r\n      educationToYear: ''\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.uploadImageToAzure = this.uploadImageToAzure.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        instituteName: 'required',\r\n        city: 'required',\r\n        fromGrade: 'required',\r\n        toGrade: 'required',\r\n        fromYear: 'required',\r\n        toYear: 'required'\r\n      },\r\n      {\r\n        'required.instituteName': validationMessages.instituteName.required,\r\n        'required.city': validationMessages.city.required,\r\n        'required.fromGrade': validationMessages.fromGrade.required,\r\n        'required.toGrade': validationMessages.toGrade.required,\r\n        'required.fromYear': validationMessages.fromYear.required,\r\n        'required.toYear': validationMessages.toYear.required\r\n      }\r\n    );\r\n  }\r\n\r\n  componentWillMount() {\r\n   // this.listOragnization();\r\n  \r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.educationMode);\r\n    if (this.props.user) {\r\n      this.setState({\r\n        userId: this.props.user.userId,\r\n        isActive: this.props.user.isActive\r\n      });\r\n    }\r\n\r\n    if (this.props.educationDetail) {\r\n      let data = this.props.educationDetail;\r\n      let logo = data.logo !== '' ? getThumbImage('medium', data.logo) : '';\r\n      this.setState({\r\n        educationId: data.educationId,\r\n        instituteName: data.institute,\r\n        city: data.city,\r\n        fromGrade: data.fromGrade,\r\n        toGrade: data.toGrade,\r\n        educationFromYear: data.fromYear,\r\n        educationToYear: data.toYear,\r\n        fromYear: data.fromYear,\r\n        toYear: data.toYear,\r\n        organizationId: data.organizationId,\r\n        oragnizationPreview: logo,\r\n        oragnizationLogo: data.logo,\r\n        //grade: data.grade,\r\n        //fieldOfStudy: data.fieldOfStudy,\r\n        description: data.description\r\n        //startDate: moment(data.fromDate),\r\n        //endDate: moment(data.toDate)\r\n      });\r\n    }\r\n  }\r\n\r\n  closeEducationModal = () => {\r\n    this.setState({\r\n      educationModal: false\r\n    });\r\n    this.props.closeEducationComponent();\r\n  };\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  handleImageChange = event => {\r\n    this.setState({ imageSource: '' });\r\n    const file = event.target.files[0];\r\n    const fileName = file.name;\r\n    const fileType = file.type;\r\n    if (file) {\r\n      //this.generateSASToken();\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = event => {\r\n        this.setState({\r\n          // oragnizationFile: file,\r\n\r\n          imageSource: event.target.result,\r\n          imageName: fileName,\r\n          imageType: fileType,\r\n          action: 1\r\n        });\r\n      };\r\n    }\r\n  };\r\n\r\n  // generateSASToken() {\r\n  //   theRapidHireApiService('getSASToken')\r\n  //     .then(response => {\r\n  //       if (response.data.status === 'Success') {\r\n  //         let sasToken = response.data.result.sasToken;\r\n  //         this.setState({ sasToken });\r\n  //       }\r\n  //     })\r\n  //     .catch(err => {\r\n  //       console.log(err);\r\n  //     });\r\n  // }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleCompare = (fromValue, toValue, key) => {\r\n    if (fromValue !== '' && toValue !== '') {\r\n      let fromValueNum = parseInt(fromValue, 10);\r\n      let toValueNum = parseInt(toValue, 10);\r\n      if (key === 1) {\r\n        if (fromValueNum > toValueNum) {\r\n          console.log('if', this.validatorTypes);\r\n          this.validatorTypes.rules['isToGrade'] = 'required';\r\n          this.validatorTypes.messages['required.isToGrade'] =\r\n            'The ToGrade must be greater than FromGrade';\r\n        } else {\r\n          console.log('else', this.validatorTypes);\r\n          this.validatorTypes.rules['isToGrade'] = '';\r\n          this.validatorTypes.messages['required.isToGrade'] = '';\r\n        }\r\n      } else if (key === 2) {\r\n        if (fromValueNum > toValueNum) {\r\n          console.log('if', this.validatorTypes);\r\n          this.validatorTypes.rules['isToYear'] = 'required';\r\n          this.validatorTypes.messages['required.isToYear'] =\r\n            'The ToYear must be greater than FromYear';\r\n        } else {\r\n          console.log('else', this.validatorTypes);\r\n          this.validatorTypes.rules['isToYear'] = '';\r\n          this.validatorTypes.messages['required.isToYear'] = '';\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  handleToGrade = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    console.log('handleToGrade');\r\n    this.handleCompare(this.state.fromGrade, event.target.value, 1);\r\n  };\r\n\r\n  handleFromGrade = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.handleCompare(event.target.value, this.state.toGrade, 1);\r\n  };\r\n\r\n  handleToYear = event => {\r\n    let toYear = this.state.educationToYear;\r\n    let DOB =\r\n      this.props.user && this.props.user.dob\r\n        ? moment(this.props.user.dob).format('YYYY')\r\n        : '';\r\n\r\n    if (\r\n      toYear &&\r\n      this.props.educationMode === 2 &&\r\n      parseInt(DOB, 10) > parseInt(toYear, 10)\r\n    ) {\r\n      var x = document.getElementById('toYearSelect');\r\n      var selectBoxLength = document.getElementById('toYearSelect').length;\r\n      x.remove(selectBoxLength - 2);\r\n    }\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.handleCompare(this.state.fromYear, event.target.value, 2);\r\n  };\r\n\r\n  handleFromYear = event => {\r\n    let fromYear = this.state.educationFromYear;\r\n    let DOB =\r\n      this.props.user && this.props.user.dob\r\n        ? moment(this.props.user.dob).format('YYYY')\r\n        : '';\r\n\r\n    if (\r\n      fromYear &&\r\n      this.props.educationMode === 2 &&\r\n      parseInt(DOB, 10) > parseInt(fromYear, 10)\r\n    ) {\r\n      var x = document.getElementById('fromYearSelect');\r\n      var selectBoxLength = document.getElementById('fromYearSelect').length;\r\n      x.remove(selectBoxLength - 2);\r\n    }\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.handleCompare(event.target.value, this.state.toYear, 2);\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate.isAfter(endDate)) {\r\n      endDate = startDate;\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        if (self.state.oragnizationFile !== '') {\r\n          self.uploadOragnizationLogo();\r\n        } else {\r\n          self.handleSubmit();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  uploadImageToAzure(file) {\r\n    if (file) {\r\n      this.setState({\r\n        oragnizationPreview: this.state.imageSource,\r\n        oragnizationFile: file\r\n      });\r\n    }\r\n  }\r\n\r\n  uploadOragnizationLogo() {\r\n    let AzureStorage = window.AzureStorage;\r\n    let sasToken = this.state.sasToken;\r\n    let userId = this.state.userId;\r\n    let fileData = this.state.oragnizationFile;\r\n    let fileName = generateTimestamp(fileData.name);\r\n    let uploadPath = `sv_${userId}/${CONSTANTS.oragnizationAlbum}/${fileName}`;\r\n    let self = this;\r\n\r\n    const blobService = AzureStorage.Blob.createBlobServiceWithSas(\r\n      CONSTANTS.azureBlobURI,\r\n      sasToken\r\n    );\r\n\r\n    blobService.createBlockBlobFromBrowserFile(\r\n      CONSTANTS.azureContainer,\r\n      uploadPath,\r\n      fileData,\r\n      (error, result) => {\r\n        if (result) {\r\n          self.setState(\r\n            {\r\n              oragnizationLogo: uploadPath\r\n            },\r\n            () => {\r\n              self.handleSubmit();\r\n            }\r\n          );\r\n        }\r\n        if (error) {\r\n          console.log('error ', error);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  handleSubmit() {\r\n    let organizationId = this.state.organizationId;\r\n    let educationId = this.state.educationId;\r\n    let userId = this.state.userId;\r\n    let institute = this.state.instituteName;\r\n    let city = this.state.city;\r\n    let fromGrade = this.state.fromGrade;\r\n    let toGrade = this.state.toGrade;\r\n    let fromYear = this.state.fromYear;\r\n    let toYear = this.state.toYear;\r\n    // let fieldOfStudy = this.state.fieldOfStudy;\r\n    //let grade = this.state.grade;\r\n    // let fromDate =\r\n    //   this.state.startDate !== ''\r\n    //     ? moment(this.state.startDate).format('DD-MMM-YYYY')\r\n    //     : '';\r\n    // let toDate =\r\n    //   this.state.endDate !== ''\r\n    //     ? moment(this.state.endDate).format('DD-MMM-YYYY')\r\n    //     : '';\r\n    let description = this.state.description;\r\n    let isActive = this.state.isActive;\r\n    let type = CONSTANTS.typeSchool;\r\n    let logo = this.state.oragnizationLogo;\r\n\r\n    let data = {\r\n      educationId,\r\n      organizationId,\r\n      userId,\r\n      logo,\r\n      institute,\r\n      city,\r\n      fromGrade,\r\n      toGrade,\r\n      fromYear,\r\n      toYear,\r\n      description,\r\n      isActive,\r\n      type\r\n    };\r\n\r\n    let self = this;\r\n    if (this.state.educationId === '') {\r\n      theRapidHireApiService('addEducation', data)\r\n        .then(response => {\r\n          if (response && response.data.status === 'Success') {\r\n            self.props.closeEducationComponent();\r\n            self.props.getAllEducation();\r\n            self.setState({ isLoading: false });\r\n          } else {\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log('err', error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editEducation', data)\r\n        .then(response => {\r\n          if (response && response.data.status === 'Success') {\r\n            self.props.closeEducationComponent();\r\n            self.props.getAllEducation();\r\n            self.setState({ isLoading: false, educationModal: false });\r\n          } else {\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log('err', error);\r\n        });\r\n    }\r\n  }\r\n\r\n  deleteEducation = educationId => {\r\n    console.log(educationId);\r\n    let data = {\r\n      educationId\r\n    };\r\n    let self = this;\r\n    if (educationId) {\r\n      theRapidHireApiService('deleteEducation', data)\r\n        .then(response => {\r\n          if (response && response.data.status === 'Success') {\r\n            self.props.closeEducationComponent();\r\n            self.props.getAllEducation();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  listOragnization() {\r\n    let self = this;\r\n    this.props\r\n      .actionListOragnization()\r\n      .then(response => {\r\n        if (response.payload && response.payload.data.status === 'Success') {\r\n          let oragnizationData = response.payload.data.result;\r\n          if (oragnizationData.length > 0) {\r\n            let options = oragnizationData.map(function(item) {\r\n              return {\r\n                value: item.organizationId,\r\n                label: item.name\r\n              };\r\n            });\r\n            self.setState({ listOragnization: options, isLoading: false });\r\n          } else {\r\n            self.setState({ listOragnization: [], isLoading: false });\r\n          }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleInstituteChange = value => {\r\n    console.log(value);\r\n    if (value.length > 0) {\r\n      let organizationId = value[0].value;\r\n      let instituteName = value[0].label;\r\n      console.log(organizationId, instituteName);\r\n      this.setState({\r\n        organizationId,\r\n        instituteName\r\n      });\r\n    }\r\n  };\r\n\r\n  handleInputChange = value => {\r\n    this.setState({\r\n      instituteName: value\r\n    });\r\n  };\r\n\r\n  renderFromYearDropdown() {\r\n    const yearList = [];\r\n    let fromYear = this.state.educationFromYear;\r\n\r\n    let DOB =\r\n      this.props.user && this.props.user.dob\r\n        ? moment(this.props.user.dob).format('YYYY')\r\n        : '';\r\n\r\n    if (DOB === 0 || DOB === null || DOB === '') {\r\n      let current_year = moment().format('YYYY') - 49;\r\n      DOB = current_year;\r\n    }\r\n    console.log(fromYear);\r\n    console.log(DOB);\r\n    yearList.push(\r\n      <option value=\"\" key={''}>\r\n        Year\r\n      </option>\r\n    );\r\n\r\n    if (\r\n      parseInt(fromYear, 10) &&\r\n      parseInt(DOB, 10) &&\r\n      parseInt(DOB, 10) > parseInt(fromYear, 10) &&\r\n      this.props.educationMode === 2\r\n    ) {\r\n      yearList.push(\r\n        <option value={fromYear} key={fromYear}>\r\n          {fromYear}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    for (var i = DOB; i <= CONSTANTS.toYear; i++) {\r\n      yearList.push(\r\n        <option value={i} key={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return yearList;\r\n  }\r\n\r\n  renderToYearDropdown() {\r\n    let toYear = this.state.educationToYear;\r\n\r\n    const yearList = [];\r\n    let DOB =\r\n      this.props.user && this.props.user.dob\r\n        ? moment(this.props.user.dob).format('YYYY')\r\n        : '';\r\n\r\n    if (DOB === 0 || DOB === null || DOB === '') {\r\n      let current_year = moment().format('YYYY') - 49;\r\n      DOB = current_year;\r\n    }\r\n\r\n    yearList.push(\r\n      <option value=\"\" key={''}>\r\n        Year\r\n      </option>\r\n    );\r\n\r\n    if (\r\n      parseInt(toYear, 10) &&\r\n      parseInt(DOB, 10) &&\r\n      parseInt(DOB, 10) > parseInt(toYear, 10) &&\r\n      this.props.educationMode === 2\r\n    ) {\r\n      yearList.push(\r\n        <option value={toYear} key={toYear}>\r\n          {toYear}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    for (var i = DOB; i <= CONSTANTS.toYear; i++) {\r\n      yearList.push(\r\n        <option value={i} key={i}>\r\n          {i}\r\n        </option>\r\n      );\r\n    }\r\n    return yearList;\r\n  }\r\n\r\n  renderGradeDropdown() {\r\n    const gradeArray = [\r\n      '1st',\r\n      '2nd',\r\n      '3rd',\r\n      '4th',\r\n      '5th',\r\n      '6th',\r\n      '7th',\r\n      '8th',\r\n      '9th',\r\n      '10th',\r\n      '11th',\r\n      '12th'\r\n    ];\r\n    const gradeList = [];\r\n    gradeList.push(\r\n      <option value=\"\" key={''}>\r\n        Grade\r\n      </option>\r\n    );\r\n    for (var i = 0; i <= gradeArray.length - 1; i++) {\r\n      gradeList.push(\r\n        <option value={gradeArray[i]} key={i}>\r\n          {gradeArray[i]}\r\n        </option>\r\n      );\r\n    }\r\n    return gradeList;\r\n  }\r\n\r\n  // handleFromClick = () => {\r\n  //   let fromYear = this.state.educationFromYear;\r\n  //   let DOB =\r\n  //     this.props.user && this.props.user.dob\r\n  //       ? moment(this.props.user.dob).format('YYYY')\r\n  //       : '';\r\n\r\n  //   if (DOB == 0 || DOB === null) {\r\n  //     let current_year = moment().format('YYYY') - 30;\r\n  //     DOB = current_year;\r\n  //   }\r\n  //   if (fromYear && this.props.educationMode === 2) {\r\n  //     var x = document.getElementById('mySelect');\r\n  //     var selectedValue = x.value;\r\n  //     if (\r\n  //       selectedValue == fromYear &&\r\n  //       parseInt(DOB, 10) > parseInt(fromYear, 10)\r\n  //     ) {\r\n  //       x.remove(x.selectedIndex);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <Modal\r\n        bsSize=\"large\"\r\n        show={this.state.educationModal}\r\n        onHide={this.closeEducationModal}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        />\r\n\r\n        {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={1 / 1}\r\n            modalSize={this.state.action === 1 ? 'medium' : 'large'}\r\n            cropBoxWidth={this.state.action === 1 ? '200' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '200' : '700'}\r\n            uploadImageToAzure={this.uploadImageToAzure}\r\n          />\r\n        ) : null}\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"subtitle text-center\">\r\n            EDUCATION INFO\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form horizontal className=\"lightBgForm\">\r\n            <Col sm={9}>\r\n              <FormGroup\r\n                controlId=\"formHorizontalEmail\"\r\n                className={this.getClasses('instituteName')}\r\n              >\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  Institute\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <AsyncTypeahead\r\n                    minLength={2}\r\n                    isLoading={this.state.isLoading}\r\n                    labelKey={'label'}\r\n                    placeholder=\"Search Institute\"\r\n                    onSearch={this.listOragnization.bind(this)}\r\n                    options={this.state.listOragnization}\r\n                    name=\"instituteName\"\r\n                    value={this.state.instituteName}\r\n                    onChange={this.handleInstituteChange}\r\n                    allowNew={true}\r\n                    newSelectionPrefix=\"Add Oragnization\"\r\n                    onInputChange={this.handleInputChange}\r\n                    searchText={this.state.searchText}\r\n                    defaultInputValue={this.state.instituteName}\r\n                  />\r\n                  {/* <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Golden Leaf School\"\r\n                    name=\"instituteName\"\r\n                    value={this.state.instituteName}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  /> */}\r\n                  {renderMessage(\r\n                    this.props.getValidationMessages('instituteName')\r\n                  )}\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup\r\n                controlId=\"formHorizontalPassword\"\r\n                className={this.getClasses('city')}\r\n              >\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  City\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Ex: New york\"\r\n                    name=\"city\"\r\n                    value={this.state.city}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  {renderMessage(this.props.getValidationMessages('city'))}\r\n                </Col>\r\n              </FormGroup>\r\n              {/* <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  Field of study\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Enter field of study\"\r\n                    name=\"fieldOfStudy\"\r\n                    value={this.state.fieldOfStudy}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </Col>\r\n              </FormGroup> */}\r\n\r\n              <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  Grade\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <Row className=\"flex row customDatePicker\">\r\n                    <Col sm={6} className={this.getClasses('fromGrade')}>\r\n                      <div className=\"line-between-form-controls\">\r\n                        <div className=\"custom-select\">\r\n                          <span className=\"icon-down_arrow selectIcon\" />\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            placeholder=\"Grade\"\r\n                            onChange={this.handleFromGrade}\r\n                            name=\"fromGrade\"\r\n                            value={this.state.fromGrade}\r\n                          >\r\n                            {this.renderGradeDropdown()}\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('fromGrade')\r\n                      )}\r\n                    </Col>\r\n\r\n                    <Col sm={6} className={this.getClasses('toGrade')}>\r\n                      <div className=\"line-between-form-controls\">\r\n                        <div className=\"custom-select\">\r\n                          <span className=\"icon-down_arrow selectIcon\" />\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            placeholder=\"Grade\"\r\n                            onChange={this.handleToGrade}\r\n                            name=\"toGrade\"\r\n                            value={this.state.toGrade}\r\n                          >\r\n                            {this.renderGradeDropdown()}\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('toGrade')\r\n                      )}\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('isToGrade')\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </FormGroup>\r\n\r\n              <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  From to Date\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <Row className=\"flex row customDatePicker\">\r\n                    <Col sm={6} className={this.getClasses('fromYear')}>\r\n                      <div className=\"line-between-form-controls\">\r\n                        <div className=\"custom-select\">\r\n                          <span className=\"icon-down_arrow selectIcon\" />\r\n                          <FormControl\r\n                            id=\"fromYearSelect\"\r\n                            componentClass=\"select\"\r\n                            placeholder=\"Year\"\r\n                            onChange={this.handleFromYear}\r\n                            onClick={this.handleFromClick}\r\n                            //onSelect={this.handleFromYear}\r\n                            name=\"fromYear\"\r\n                            value={this.state.fromYear}\r\n                          >\r\n                            {this.renderFromYearDropdown().reverse()}\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('fromYear')\r\n                      )}\r\n                    </Col>\r\n                    <Col sm={6} className={this.getClasses('toYear')}>\r\n                      <div className=\"line-between-form-controls\">\r\n                        <div className=\"custom-select\">\r\n                          <span className=\"icon-down_arrow selectIcon\" />\r\n                          <FormControl\r\n                            id=\"toYearSelect\"\r\n                            componentClass=\"select\"\r\n                            placeholder=\" Year\"\r\n                            onChange={this.handleToYear}\r\n                            name=\"toYear\"\r\n                            value={this.state.toYear}\r\n                          >\r\n                            {this.renderToYearDropdown().reverse()}\r\n                          </FormControl>\r\n                        </div>\r\n                      </div>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('toYear')\r\n                      )}\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('isToYear')\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </FormGroup>\r\n\r\n              {/* <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  Grade\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Enter grade\"\r\n                    name=\"grade\"\r\n                    value={this.state.grade}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </Col>\r\n              </FormGroup> */}\r\n\r\n              {/* <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  From to Date\r\n                </Col>\r\n                <Col sm={9} className={this.getClasses('startDate')}>\r\n                  <div className=\"flex row \">\r\n                    <Col sm={6}>\r\n                      <DatePicker\r\n                        className=\"form-control\"\r\n                        selected={this.state.startDate}\r\n                        selectsStart\r\n                        startDate={this.state.startDate}\r\n                        endDate={this.state.endDate}\r\n                        onChange={this.handleChangeStart}\r\n                        readOnly={true}\r\n                        placeholderText=\"Date\"\r\n                        showYearDropdown\r\n                        dateFormat=\"DD-MMM-YYYY\"\r\n                        isClearable={false}\r\n                      />\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('startDate')\r\n                      )}\r\n                    </Col>\r\n                    <Col sm={6} className={this.getClasses('endDate')}>\r\n                      <DatePicker\r\n                        className=\"form-control\"\r\n                        selected={this.state.endDate}\r\n                        selectsEnd\r\n                        startDate={this.state.startDate}\r\n                        endDate={this.state.endDate}\r\n                        onChange={this.handleChangeEnd}\r\n                        readOnly={true}\r\n                        placeholderText=\"Date\"\r\n                        showYearDropdown\r\n                        dateFormat=\"DD-MMM-YYYY\"\r\n                        isClearable={false}\r\n                      />\r\n                      {renderMessage(\r\n                        this.props.getValidationMessages('endDate')\r\n                      )}\r\n                    </Col>\r\n                  </div>\r\n                </Col>\r\n              </FormGroup> */}\r\n\r\n              <FormGroup controlId=\"formHorizontalPassword\">\r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                  Description\r\n                </Col>\r\n                <Col sm={9}>\r\n                  <FormControl\r\n                    componentClass=\"textarea\"\r\n                    placeholder=\"Enter Here\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    maxLength=\"500\"\r\n                  />\r\n                </Col>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col sm={3}>\r\n              <div className=\"box flex flex-column flex-center\">\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={this.handleImageChange.bind(this)}\r\n                  accept=\"image/*\"\r\n                  value=\"\"\r\n                  className=\"custom-fileUpload\"\r\n                />\r\n                <div className=\"addProfileWrapper text-center\">\r\n                  {this.state.oragnizationPreview === '' ? (\r\n                    <span className=\"icon-school icon lg-icon\" />\r\n                  ) : (\r\n                    <img src={this.state.oragnizationPreview} alt=\"\" />\r\n                  )}\r\n                  <div className=\"hover-section\">\r\n                    <input\r\n                      type=\"file\"\r\n                      onChange={this.handleImageChange.bind(this)}\r\n                      accept=\"image/*\"\r\n                      value=\"\"\r\n                      className=\"custom-fileUpload\"\r\n                    />\r\n                    <span class=\"icon-edit_pencil icon\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <div className=\"flex align-center justify-content-between fullWidth\" />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div className=\"flex justify-content-between align-center\">\r\n            <div className=\"left\">\r\n              {this.state.educationId !== '' ? (\r\n                <Button\r\n                  bsStyle=\"danger\"\r\n                  className=\"no-bold no-round btn btn-danger\"\r\n                  onClick={this.deleteEducation.bind(\r\n                    this,\r\n                    this.state.educationId\r\n                  )}\r\n                >\r\n                  Delete Education\r\n                </Button>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            <div className=\"right flex align-center\">\r\n              <Button\r\n                bsStyle=\"primary\"\r\n                className=\"no-bold no-round\"\r\n                disabled={isLoading}\r\n                onClick={!isLoading ? this.validateData : null}\r\n              >\r\n                {isLoading ? 'In Progress...' : 'Save'}\r\n              </Button>\r\n\r\n              <Button\r\n                bsStyle=\"default\"\r\n                className=\"no-bold no-round\"\r\n                onClick={this.closeEducationModal}\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          {/* <Button\r\n            bsStyle=\"primary\"\r\n            className=\"no-bold no-round\"\r\n            disabled={isLoading}\r\n            onClick={!isLoading ? this.validateData : null}\r\n          >\r\n            {isLoading ? 'In Progress...' : 'Save'}\r\n          </Button>\r\n          <Button\r\n            bsStyle=\"default\"\r\n            className=\"no-bold no-round\"\r\n            onClick={this.closeEducationModal}\r\n          >\r\n            Close\r\n          </Button>\r\n          {this.state.educationId !== '' ? (\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round btn btn-danger\"\r\n              onClick={this.deleteEducation.bind(this, this.state.educationId)}\r\n            >\r\n              Delete Education\r\n            </Button>\r\n          ) : (\r\n            ''\r\n          )*/}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({ actionListOragnization }, dispatch);\r\n};\r\n\r\naddEducation = validation(strategy)(addEducation);\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(addEducation);\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio,\r\n  Row\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp,\r\n  showErrorToast\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\nclass addEmployment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation:'',\r\n      organisation:'',\r\n      employmentModal:true,\r\n      employmentId:''\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        designation: 'required',\r\n        organisation: 'required'       \r\n      },\r\n      {\r\n        'required.designation': validationMessages.designation.required,\r\n        'required.organisation': validationMessages.organisation.required        \r\n      }\r\n    );\r\n  }\r\n\r\n  closeAchievementyModal = status => {\r\n    \r\n    this.setState({      \r\n    });\r\n    // if (status === 'save')\r\n    //   this.props.closeSaveAchievementComponent(this.props.competencyTypeId);\r\n    // else this.props.closeAchievementComponent(this.props.competencyTypeId);\r\n  };\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n    //  let userId = this.props.user.userId;\r\n    // }  \r\n    console.log('this.props.employmentDetail ',this.props.employmentDetail);\r\n    this.setEmploymentData(this.props.employmentDetail);\r\n  }\r\n\r\n\r\n  setEmploymentData = data => {\r\n    \r\n    let startDay = '',\r\n      startMonth = '',\r\n      startYear = '',\r\n      endDay = '',\r\n      endMonth = '',\r\n      endYear = '',\r\n      todaysDate = '';\r\n    if (data) {        \r\n     \r\n      if (data.startDate) {\r\n        startDay = moment(data.startDate).format('D');\r\n        startMonth = Number(moment(data.startDate).format('M')) - 1;\r\n\r\n        startYear = moment(data.startDate).format('YYYY');\r\n      }\r\n\r\n      if (data.endDate) {\r\n        endDay = moment(data.endDate).format('D');\r\n        endMonth = Number(moment(data.endDate).format('M')) - 1;\r\n        endYear = moment(data.endDate).format('YYYY');\r\n      } else {\r\n        todaysDate = '';\r\n      }\r\n\r\n      this.setState({      \r\n        userId:data.userId,\r\n        designation : data.designation,\r\n        organisation : data.organisation,\r\n        currentCompany : data.currentCompany,\r\n        currentSalary : data.currentSalary,\r\n        lakh : data.currentSalaryInLakh,\r\n        thousand : data.currentSalaryInThousand,\r\n        describe : data.describe,\r\n        noticePeriod : data.noticePeriod,\r\n        offeredSalary : data.offeredSalary,\r\n        offeredSalaryInLakh : data.offeredSalaryInLakh,\r\n        offeredSalaryInThousand : data.offeredSalaryInThousand,\r\n        offeredDesignation : data.offeredDesignation,\r\n        nextEmployer : data.nextEmployer,\r\n        userId: 10,\r\n        employmentId:  data.employmentId,\r\n        startDay: startDay,\r\n        startMonth: startMonth,\r\n        startYear: startYear,\r\n        endDay: endDay,\r\n        endMonth: endMonth,\r\n        endYear: endYear,\r\n        //startDate: moment(data.fromDate),\r\n        // endDate: data.toDate ? moment(data.toDate) : emptyToDate,\r\n   \r\n        todaysDate: data.toDate ? false : true       \r\n      });     \r\n    }\r\n  };\r\n\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    console.log(endDate);\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    let today = new Date();  \r\n\r\n    if (this.state.noticePeriod == 6) { // serving notice period === 6\r\n      this.validatorTypes.rules['offeredDesignation'] = [\r\n        'required'      \r\n      ];\r\n      this.validatorTypes.messages['required.offeredDesignation'] =\r\n        validationMessages.offeredDesignation.required;\r\n\r\n        this.validatorTypes.rules['nextEmployer'] = [\r\n          'required'      \r\n        ];\r\n        this.validatorTypes.messages['required.nextEmployer'] =\r\n          validationMessages.nextEmployer.required;\r\n\r\n          this.validatorTypes.rules['offeredSalary'] = [\r\n            'required'      \r\n          ];\r\n          this.validatorTypes.messages['required.offeredSalary'] =\r\n            validationMessages.offeredSalary.required;\r\n  \r\n            this.validatorTypes.rules['offeredSalaryInLakh'] = [\r\n              'required'      \r\n            ];\r\n            this.validatorTypes.messages['required.offeredSalaryInLakh'] =\r\n              validationMessages.offeredSalaryInLakh.required;\r\n  \r\n              this.validatorTypes.rules['offeredSalaryInThousand'] = [\r\n                'required'      \r\n              ];\r\n              this.validatorTypes.messages['required.offeredSalaryInThousand'] =\r\n                validationMessages.offeredSalaryInThousand.required;\r\n     \r\n          if (\r\n            self.state.lwdDate &&\r\n            self.state.lwdDate > today          \r\n          ) {\r\n            showErrorToast(\r\n              '\"From\" and \"To\" date should be less than future date'\r\n            );\r\n              self.setState({\r\n                lwdDay : '',\r\n                lwdYear : '',\r\n                lwdMonth : '',\r\n                lwdDate:''\r\n              });\r\n          }  \r\n    }else{\r\n      this.validatorTypes.rules['offeredDesignation'] = '';\r\n      this.validatorTypes.messages['required.offeredDesignation'] = '';\r\n\r\n      this.validatorTypes.rules['nextEmployer'] = '';\r\n      this.validatorTypes.messages['required.nextEmployer'] = '';\r\n\r\n      this.validatorTypes.rules['offeredSalary'] = '';\r\n      this.validatorTypes.messages['required.offeredSalary'] = '';\r\n\r\n      this.validatorTypes.rules['offeredSalaryInLakh'] = '';\r\n      this.validatorTypes.messages['required.offeredSalaryInLakh'] = '';\r\n\r\n      this.validatorTypes.rules['offeredSalaryInThousand'] = '';\r\n      this.validatorTypes.messages['required.offeredSalaryInThousand'] = '';\r\n      self.setState({\r\n        lwdDay : '',\r\n        lwdYear : '',\r\n        lwdMonth : '',\r\n        lwdDate:''\r\n      });\r\n    } \r\n\r\n    this.props.validate(function(error) {  \r\n\r\n    \r\n      if (!error) {\r\n        if (\r\n          self.state.fromDate &&\r\n          self.state.fromDate > today &&\r\n          (self.state.toDate && self.state.toDate > today)\r\n        ) {\r\n          showErrorToast(\r\n            '\"From\" and \"To\" date should be less than future date'\r\n          );\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: '',\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (self.state.fromDate && self.state.fromDate > today) {\r\n          showErrorToast('\"From\" date should be less than future date');\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: ''\r\n          });\r\n        } else if (self.state.toDate && self.state.toDate > today) {\r\n          showErrorToast('\"To\" date should be less than future date');\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (\r\n          self.state.fromDate !== '' &&\r\n          self.state.toDate !== '' &&\r\n          self.state.fromDate > self.state.toDate\r\n        ) {\r\n          showErrorToast(\r\n            'The \"to\" date should be greater than or equal to \"from\" date'\r\n          );\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        }else { \r\n          self.setState({ isLoading: true });       \r\n              self.handleSubmit();        \r\n          }\r\n        }\r\n    });\r\n  };\r\n\r\n  selectStartDate = (type, value) => {\r\n    if (type === 'startYear') {\r\n      this.setState({ startYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startMonth') {\r\n      this.setState({ startMonth: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startDay') {\r\n      this.setState({ startDay: 1 }, () => this.selectDateChange());\r\n    }\r\n  };\r\n\r\n  selectEndDate = (type, value) => {\r\n    if (type === 'endYear') {\r\n      this.setState({ endYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'endMonth') {\r\n      this.setState({ endMonth: value }, () => this.selectDateChange());\r\n    }\r\n    // if (type === 'endDay') {\r\n    //   this.setState({ endDay: 1 }, () => this.selectDateChange());\r\n    // }\r\n  };\r\n\r\n  selectLWDDate = (type, value) => {\r\n    if (type === 'lwdYear') {\r\n      this.setState({ lwdYear: value } ,() => this.selectLwdChange());\r\n    }\r\n    if (type === 'lwdMonth') {\r\n      this.setState({ lwdMonth: value },() => this.selectLwdChange());\r\n    }\r\n    if (type === 'lwdDay') {\r\n      this.setState({ lwdDay: 1 })// () => this.selectDateChange());\r\n    } \r\n  };\r\n\r\n  selectLwdChange = () => {\r\n    let lwdDate = '';  \r\n    let lwdDay = 1,\r\n       lwdYear = '',\r\n       lwdMonth = '';\r\n\r\n       if (this.state.lwdYear && this.state.lwdMonth) {\r\n        lwdDay = 1;\r\n        lwdMonth =\r\n          this.state.lwdMonth !== '' ? Number(this.state.lwdMonth) + 1 : '';\r\n          lwdYear = this.state.lwdYear !== '' ? this.state.lwdYear : '';\r\n          lwdDate = moment(lwdYear + '-' + lwdMonth + '-' + lwdDay);\r\n      }\r\n      this.setState({\r\n        lwdDate\r\n      });\r\n  }\r\n  \r\n\r\n  selectDateChange = () => {\r\n    let fromDate = '';\r\n    let toDate = '';\r\n    let startDay = 1,\r\n      startYear = '',\r\n      startMonth = '',\r\n      endDay = 1,\r\n      endMonth = '',\r\n      endYear = '';\r\n\r\n    if (this.state.startYear && this.state.startMonth) {\r\n      startDay = 1;\r\n      startMonth =\r\n        this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n      startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n    }\r\n\r\n    if (this.state.endYear && this.state.endMonth) {\r\n      endDay = 1;\r\n      endMonth =\r\n        this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n      endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n    }\r\n\r\n    if (toDate && fromDate) {\r\n      if (fromDate.isAfter(toDate)) {\r\n        console.log('dd');\r\n        this.setState({\r\n          endDay: startDay,\r\n          endMonth: startMonth - 1,\r\n          endYear: startYear,\r\n          fromDate,\r\n          toDate\r\n        });\r\n      } else {\r\n        this.setState({\r\n          fromDate,\r\n          toDate\r\n        });\r\n      }\r\n    }\r\n  }; \r\n\r\n  handleSubmit() {\r\n    let designation = this.state.designation;\r\n    let organisation = this.state.organisation;\r\n    let currentCompany = this.state.currentCompany;\r\n    let currentSalary = this.state.currentSalary;\r\n    let currentSalaryInLakh = this.state.lakh;\r\n    let currentSalaryInThousand = this.state.thousand;\r\n    let describe = this.state.describe;\r\n    let noticePeriod = this.state.noticePeriod;\r\n    let offeredSalary = this.state.offeredSalary;\r\n    let offeredSalaryInLakh = this.state.offeredSalaryInLakh;\r\n    let offeredSalaryInThousand = this.state.offeredSalaryInThousand;\r\n    let offeredDesignation = this.state.offeredDesignation;\r\n    let nextEmployer = this.state.nextEmployer;\r\n    let userId= this.props.user.userId;\r\n    let employmentId=  this.state.employmentId;\r\n   \r\n   \r\n    console.log('this.state.startDay -- ',this.state.startDay);\r\n\r\n    let startDay = 1;\r\n    let startMonth =\r\n      this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n    let startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n    let fromDate = '';\r\n    if (startDay && startMonth && startYear) {\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n      fromDate = moment(fromDate).valueOf();\r\n    }\r\n\r\n    let endDay = 1;\r\n    let endMonth =\r\n      this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n    let endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n    let toDate = '';\r\n    if (endDay && endMonth && endYear) {\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n      toDate = moment(toDate).valueOf();\r\n      toDate = this.state.todaysDate ? '' : toDate;\r\n    }   \r\n\r\n   \r\n    let lwdDay = this.state.lwdDay !== '' ? this.state.lwdDay : '';\r\n    let lwdMonth =\r\n      this.state.lwdMonth !== '' ? Number(this.state.lwdMonth) + 1 : '';\r\n    let lwdYear = this.state.lwdYear !== '' ? this.state.lwdYear : '';\r\n    let lwdDate = '';\r\n    if(this.state.lwdMonth && this.state.lwdDay && this.state.lwdYear) {\r\n      lwdDate = moment(lwdYear + '-' + lwdMonth + '-' + lwdDay);\r\n      lwdDate = moment(lwdDate).valueOf();\r\n    }\r\n  \r\n\r\n    let data = {\r\n      employmentId,\r\n      userId,\r\n      designation,\r\n      organisation,\r\n      currentCompany,\r\n      currentSalary,\r\n      currentSalaryInLakh,\r\n      currentSalaryInThousand,\r\n      describe,\r\n      noticePeriod,\r\n      offeredSalary,\r\n      offeredSalaryInLakh,\r\n      offeredSalaryInThousand,\r\n      offeredDesignation,\r\n      startDate:fromDate,\r\n      endDate:toDate,\r\n      lastWorkingDate:lwdDate,\r\n      nextEmployer    \r\n    };\r\n\r\n    let self = this;\r\n    console.log('this.state.employmentId -- ',this.state.employmentId);\r\n    if (!this.state.employmentId || this.state.employmentId === '') {\r\n      theRapidHireApiService('addEmployment', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n            self.closeEmploymentModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editEmployment', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n            self.closeEmploymentModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n  currentCheckBox = event => {\r\n    if (event.target.checked) {\r\n      this.validatorTypes.rules['endDay'] = '';\r\n      this.validatorTypes.rules['endMonth'] = '';\r\n      this.validatorTypes.rules['endYear'] = '';\r\n      this.setState({\r\n        toDate: '',\r\n        todaysDate: true,\r\n        endDay: '',\r\n        endMonth: '',\r\n        endYear: '',\r\n        currentCompany: false\r\n      });\r\n\r\n      this.validatorTypes.rules['noticePeriod'] = 'required';\r\n      this.validatorTypes.messages['required.noticePeriod'] =\r\n        validationMessages.noticePeriod.required;\r\n\r\n        this.validatorTypes.rules['currentSalary'] = [\r\n          'required'      \r\n        ];\r\n        this.validatorTypes.messages['required.currentSalary'] =\r\n          validationMessages.currentSalary.required;\r\n\r\n          this.validatorTypes.rules['lakh'] = [\r\n            'required'      \r\n          ];\r\n          this.validatorTypes.messages['required.lakh'] =\r\n            validationMessages.lakh.required;\r\n\r\n            this.validatorTypes.rules['thousand'] = [\r\n              'required'      \r\n            ];\r\n            this.validatorTypes.messages['required.thousand'] =\r\n              validationMessages.thousand.required;\r\n\r\n    } else {\r\n\r\n      this.validatorTypes.rules['noticePeriod'] = '';\r\n      this.validatorTypes.messages['required.noticePeriod'] = '';\r\n\r\n      this.validatorTypes.rules['currentSalary'] = '';\r\n      this.validatorTypes.messages['required.currentSalary'] = '';\r\n\r\n      this.validatorTypes.rules['lakh'] = '';\r\n      this.validatorTypes.messages['required.lakh'] = '';\r\n\r\n      this.validatorTypes.rules['thousand'] = '';\r\n      this.validatorTypes.messages['required.thousand'] = '';\r\n\r\n      this.validatorTypes.rules['endDay'] = 'required';\r\n      this.validatorTypes.messages['required.endDay'] =\r\n        validationMessages.day.required;\r\n\r\n      this.validatorTypes.rules['endMonth'] = 'required';\r\n      this.validatorTypes.messages['required.endMonth'] =\r\n        validationMessages.month.required;\r\n\r\n      this.validatorTypes.rules['endYear'] = 'required';\r\n      this.validatorTypes.messages['required.endYear'] =\r\n        validationMessages.year.required;\r\n\r\n      this.setState({\r\n        todaysDate: false,\r\n        endYear: '',\r\n        endMonth: '',\r\n        endDay: '',\r\n        currentCompany: true     \r\n      });\r\n    }   \r\n  };\r\n\r\n\r\n  deleteEmployment = event => {\r\n    let employmentId= this.state.employmentId,self= this;\r\n    theRapidHireApiService('deleteEmployment', {employmentId})\r\n    .then(response => {\r\n      if (response.data.status === 'Success') {        \r\n        self.closeEmploymentModal('save');\r\n        self.setState({ isLoading: false });\r\n      }\r\n    })\r\n    .catch(error => {\r\n      self.setState({ isLoading: false });\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  closeEmploymentModal = status => {   \r\n    this.setState({\r\n      employmentModal: false\r\n      \r\n    });   \r\n    this.props.closeEmploymentComponent();\r\n  };\r\n\r\n  render() {   \r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>   \r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.employmentModal}\r\n          onHide={this.closeEmploymentModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.EmploymentId || this.state.EmploymentId === ''\r\n                ? 'Add Employment'\r\n                : 'Edit Employment'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('title')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Designation</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a designation\"\r\n                      name=\"designation\"\r\n                      value={this.state.designation}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('designation'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n           \r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('organisation')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Organisation</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a organisation\"\r\n                      name=\"organisation\"\r\n                      value={this.state.organisation}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('organisation'))}\r\n                  </Col>\r\n                </FormGroup>              \r\n\r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Is this your current company ?\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"currentCompany\"\r\n                          className=\"radio-primary\"\r\n                          value={true}\r\n                          checked={\r\n                            this.state.currentCompany === true ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Yes\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"currentCompany\"\r\n                          className=\"radio-primary\"\r\n                          value={false}\r\n                          checked={\r\n                            this.state.currentCompany === false ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          No\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date From\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"startYear\"\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.startYear}\r\n                          onChange={year =>\r\n                            this.selectStartDate('startYear', year)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"startMonth\"\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.startYear}\r\n                          value={this.state.startMonth}\r\n                          onChange={month =>\r\n                            this.selectStartDate('startMonth', month)\r\n                          }\r\n                        />\r\n                      </div>                     \r\n                    </div>                  \r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date To\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"endYear\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.endYear}\r\n                          onChange={year => this.selectEndDate('endYear', year)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"endMonth\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.endYear}\r\n                          value={this.state.endMonth}\r\n                          onChange={month =>\r\n                            this.selectEndDate('endMonth', month)\r\n                          }\r\n                        />\r\n                      </div>                     \r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <Checkbox\r\n                        className=\"checkbox-primary \"\r\n                        onClick={this.currentCheckBox.bind(this)}\r\n                        defaultChecked={this.state.currentCompany ? true : false}\r\n                      >\r\n                        Are you working here now\r\n                        <span className=\"check\" />\r\n                      </Checkbox>\r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                {this.state.todaysDate === true ? <div>\r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Current Salary\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"currentSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"indian\"\r\n                          checked={\r\n                            this.state.currentSalary === 'indian' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Indian\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"currentSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"dollar\"\r\n                          checked={\r\n                            this.state.currentSalary === 'dollar' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Dollars\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                    {renderMessage(\r\n                          this.props.getValidationMessages('currentSalary')\r\n                        )}\r\n                  </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Salary\r\n                </Col>                \r\n                  <Col sm={9}>                \r\n                  <div className=\"dob\">\r\n                      <div className=\"form-group\">                     \r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"lakh\"\r\n                          name=\"lakh\"\r\n                          value={this.state.lakh}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">lakh</option>\r\n                       <option value={1}>1 lakh</option>\r\n                       <option value={2}>2 lakh</option>\r\n                       <option value={3}>3 lakh</option>\r\n                       <option value={4}>4 lakh</option>\r\n                       <option value={5}>5 lakh</option>    \r\n                       <option value={6}>6 lakh</option>        \r\n                       <option value={7}>7 lakh</option>\r\n                       <option value={8}>8 lakh</option>\r\n                       <option value={9}>9 lakh</option>\r\n                       <option value={10}>10 lakh</option>\r\n                       <option value={11}>11 lakh</option>    \r\n                       <option value={12}>12 lakh</option>                                      \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('lakh')\r\n                        )}\r\n                      </div>              \r\n                     <div className=\"form-group\">                                              \r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"thousand\"\r\n                          name=\"thousand\"\r\n                          value={this.state.thousand}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >      \r\n                        <option value=\"\">thousand</option>\r\n                       <option value={1}>1 thousand</option>\r\n                       <option value={2}>2 thousand</option>\r\n                       <option value={3}>3 thousand</option>\r\n                       <option value={4}>4 thousand</option>\r\n                       <option value={5}>5 thousand</option>    \r\n                       <option value={6}>6 thousand</option>        \r\n                       <option value={7}>7 thousand</option>\r\n                       <option value={8}>8 thousand</option>\r\n                       <option value={9}>9 thousand</option>\r\n                       <option value={10}>10 thousand</option>\r\n                       <option value={11}>11 thousand</option>    \r\n                       <option value={12}>12 thousand</option>                                      \r\n                      </FormControl>      \r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('thousand')\r\n                        )}           \r\n                      </div>                                    \r\n                      </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n                </div>:''}\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Describe</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      componentClass=\"textarea\"\r\n                      placeholder=\"Tell us how this made you unique\"\r\n                      name=\"describe\"\r\n                      value={this.state.describe}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"1000\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('description')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n              {this.state.todaysDate === true ? \r\n                <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Notice Period\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <FormControl\r\n                        componentClass=\"select\"\r\n                        placeholder=\"Select Notice Period\"\r\n                        name=\"noticePeriod\"\r\n                        value={this.state.noticePeriod}\r\n                        onChange={this.handleChange}\r\n                        onClick={this.handleChange}\r\n                        inputRef={element => {\r\n                          this.competencyDropdown = element;\r\n                        }}\r\n                      > \r\n                       <option value=\"\">Select Achievement Level</option>\r\n                       <option value={1}>15 days or less</option>\r\n                       <option value={2}>1 month</option>\r\n                       <option value={3}>2 month</option>\r\n                       <option value={4}>3 month</option>\r\n                       <option value={5}>more than 3 month</option>    \r\n                       <option value={6}>Serving notice period</option>                                      \r\n                      </FormControl>\r\n                    </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n              :''}\r\n             {this.state.noticePeriod == 6 ? <div>\r\n                   <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Last Working Days\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"lwdYear\"\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.lwdYear}\r\n                          onChange={year =>\r\n                            this.selectLWDDate('lwdYear', year)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"lwdMonth\"\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.lwdYear}\r\n                          value={this.state.lwdMonth}\r\n                          onChange={month =>\r\n                            this.selectLWDDate('lwdYear', month)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <DayPicker\r\n                          defaultValue=\"Day\"\r\n                          id=\"day\"\r\n                          name=\"lwdDay\"\r\n                          classes=\"form-control\"\r\n                          year={this.state.lwdYear}\r\n                          month={this.state.lwdMonth}\r\n                          endYearGiven\r\n                          value={this.state.lwdDay}\r\n                          onChange={day =>\r\n                            this.selectLWDDate('lwdDay', day)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup> \r\n\r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Offered Salary\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"offeredSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"indian\"\r\n                          checked={\r\n                            this.state.offeredSalary === 'indian' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Indian\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"offeredSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"dollar\"\r\n                          checked={\r\n                            this.state.offeredSalary === 'dollar' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Dollars\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('offeredSalary')\r\n                        )}\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Salary\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"lakh\"\r\n                          name=\"offeredSalaryInLakh\"\r\n                          value={this.state.offeredSalaryInLakh}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >\r\n                        <option value=\"\">lakh</option>\r\n                       <option value={1}>1 lakh</option>\r\n                       <option value={2}>2 lakh</option>\r\n                       <option value={3}>3 lakh</option>\r\n                       <option value={4}>4 lakh</option>\r\n                       <option value={5}>5 lakh</option>    \r\n                       <option value={6}>6 lakh</option>        \r\n                       <option value={7}>7 lakh</option>\r\n                       <option value={8}>8 lakh</option>\r\n                       <option value={9}>9 lakh</option>\r\n                       <option value={10}>10 lakh</option>\r\n                       <option value={11}>11 lakh</option>    \r\n                       <option value={12}>12 lakh</option>                                      \r\n                      </FormControl>      \r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('offeredSalaryInLakh')\r\n                        )}               \r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"thousand\"\r\n                          name=\"offeredSalaryInThousand\"\r\n                          value={this.state.offeredSalaryInThousand}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >  \r\n                         <option value=\"\">thousand</option>\r\n                       <option value={1}>1 thousand</option>\r\n                       <option value={2}>2 thousand</option>\r\n                       <option value={3}>3 thousand</option>\r\n                       <option value={4}>4 thousand</option>\r\n                       <option value={5}>5 thousand</option>    \r\n                       <option value={6}>6 thousand</option>        \r\n                       <option value={7}>7 thousand</option>\r\n                       <option value={8}>8 thousand</option>\r\n                       <option value={9}>9 thousand</option>\r\n                       <option value={10}>10 thousand</option>\r\n                       <option value={11}>11 thousand</option>    \r\n                       <option value={12}>12 thousand</option>                                      \r\n                      </FormControl>  \r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('offeredSalaryInThousand')\r\n                        )}                                \r\n                      </div>                     \r\n                    </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"  \r\n                  className={this.getClasses('offeredDesignation')}                \r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Offered Designation</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a Designation\"\r\n                      name=\"offeredDesignation\"\r\n                      value={this.state.offeredDesignation}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />                    \r\n                  </Col>\r\n                  {renderMessage(\r\n                      this.props.getValidationMessages('offeredDesignation')\r\n                  )}\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\" \r\n                  className={this.getClasses('nextEmployer')}               \r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Next Employer</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add your next employer\"\r\n                      name=\"nextEmployer\"\r\n                      value={this.state.nextEmployer}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />                  \r\n                  </Col>\r\n                  {renderMessage(\r\n                      this.props.getValidationMessages('nextEmployer')\r\n                  )}\r\n                </FormGroup>\r\n              </div>:''} \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.deleteEmployment.bind(this)}              \r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeEmploymentModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddEmployment = validation(strategy)(addEmployment);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addEmployment);","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio  \r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp,\r\n  showErrorToast\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass addProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation:'',\r\n      organisation:'',\r\n      projectModal:true,\r\n      projectId:'',\r\n      associateList: []\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        projectName: 'required'       \r\n      },\r\n      {\r\n        'required.projectName': validationMessages.projectName.required       \r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  }; \r\n\r\n  componentDidMount() {\r\n    let userId= null;\r\n    if(this.props.user){\r\n      userId = this.props.user.userId;\r\n      this.setState({userId: userId});\r\n    } \r\n   \r\n    this.setProjectData(this.props.projectDetail);\r\n    this.getAssociatedListData(userId);\r\n  }\r\n\r\n  getAssociatedListData(userId){\r\n    theRapidHireApiService('getAssociatedListDataByUserId',{userId})\r\n    .then(response => {     \r\n      if (response.data.statusCode === 200) {\r\n         let associateList= this.state.associateList;\r\n         associateList= response.data.resourceData[0];\r\n         this.setState({associateList: associateList});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n  setProjectData = data => {\r\n    \r\n    let startDay = '',\r\n      startMonth = '',\r\n      startYear = '',\r\n      endDay = '',\r\n      endMonth = '',\r\n      endYear = '',\r\n      todaysDate = '';\r\n    if (data) {        \r\n     \r\n      if (data.startDate) {\r\n        startDay = moment(data.startDate).format('D');\r\n        startMonth = Number(moment(data.startDate).format('M')) - 1;\r\n\r\n        startYear = moment(data.startDate).format('YYYY');\r\n      }\r\n\r\n      if (data.endDate) {\r\n        endDay = moment(data.endDate).format('D');\r\n        endMonth = Number(moment(data.endDate).format('M')) - 1;\r\n        endYear = moment(data.endDate).format('YYYY');\r\n      } else {\r\n        todaysDate = '';\r\n      }\r\n\r\n      this.setState({      \r\n        userId:data.userId,\r\n        projectName : data.projectName,\r\n        projectURL : data.projectURL,\r\n        associatedWith : data.associatedWith,\r\n        projectFinished : data.projectFinished,       \r\n        description : data.description,     \r\n        projectId:  data.projectId,\r\n        startDay: startDay,\r\n        startMonth: startMonth,\r\n        startYear: startYear,\r\n        endDay: endDay,\r\n        endMonth: endMonth,\r\n        endYear: endYear,\r\n        //startDate: moment(data.fromDate),\r\n        // endDate: data.toDate ? moment(data.toDate) : emptyToDate,   \r\n        todaysDate: data.toDate ? false : true       \r\n      });     \r\n    }\r\n  };\r\n\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {  \r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    let today = new Date();  \r\n    this.props.validate(function(error) {     \r\n      if (!error) {\r\n        if (\r\n          self.state.fromDate &&\r\n          self.state.fromDate > today &&\r\n          (self.state.toDate && self.state.toDate > today)\r\n        ) {\r\n          showErrorToast(\r\n            '\"From\" and \"To\" date should be less than future date'\r\n          );\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: '',\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (self.state.fromDate && self.state.fromDate > today) {\r\n          showErrorToast('\"From\" date should be less than future date');\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: ''\r\n          });\r\n        } else if (self.state.toDate && self.state.toDate > today) {\r\n          showErrorToast('\"To\" date should be less than future date');\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (\r\n          self.state.fromDate !== '' &&\r\n          self.state.toDate !== '' &&\r\n          self.state.fromDate > self.state.toDate\r\n        ) {\r\n          showErrorToast(\r\n            'The \"to\" date should be greater than or equal to \"from\" date'\r\n          );\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        }else { \r\n          self.setState({ isLoading: true });       \r\n              self.handleSubmit();        \r\n          }\r\n        }    \r\n    });\r\n  };\r\n\r\n  selectStartDate = (type, value) => {\r\n    if (type === 'startYear') {\r\n      this.setState({ startYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startMonth') {\r\n      this.setState({ startMonth: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startDay') {\r\n      this.setState({ startDay: 1 }, () => this.selectDateChange());\r\n    }\r\n  };\r\n\r\n  selectEndDate = (type, value) => {\r\n    if (type === 'endYear') {\r\n      this.setState({ endYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'endMonth') {\r\n      this.setState({ endMonth: value }, () => this.selectDateChange());\r\n    }\r\n    // if (type === 'endDay') {\r\n    //   this.setState({ endDay: 1 }, () => this.selectDateChange());\r\n    // }\r\n  };\r\n \r\n  selectDateChange = () => {\r\n    let fromDate = '';\r\n    let toDate = '';\r\n    let startDay = 1,\r\n      startYear = '',\r\n      startMonth = '',\r\n      endDay = 1,\r\n      endMonth = '',\r\n      endYear = '';\r\n\r\n    if (this.state.startYear && this.state.startMonth) {\r\n      startDay = 1;\r\n      startMonth =\r\n        this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n      startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n    }\r\n\r\n    if (this.state.endYear && this.state.endMonth) {\r\n      endDay = 1;\r\n      endMonth =\r\n        this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n      endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n    }\r\n\r\n    if (toDate && fromDate) {\r\n      if (fromDate.isAfter(toDate)) {      \r\n        this.setState({\r\n          endDay: startDay,\r\n          endMonth: startMonth - 1,\r\n          endYear: startYear,\r\n          fromDate,\r\n          toDate\r\n        });\r\n      } else {\r\n        this.setState({\r\n          fromDate,\r\n          toDate\r\n        });\r\n      }\r\n    }\r\n  }; \r\n\r\n  handleSubmit() {  \r\n\r\n    let projectName = this.state.projectName;\r\n    let projectURL = this.state.projectURL;\r\n    let associatedWith = this.state.associatedWith;\r\n    let projectFinished = this.state.projectFinished;\r\n    let description = this.state.description;\r\n \r\n    let userId = this.props.user.userId;\r\n    let projectId=  this.state.projectId;   \r\n   \r\n    console.log('this.state.startDay -- ',this.state.startDay);\r\n\r\n    let startDay = 1;\r\n    let startMonth =\r\n      this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n    let startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n    let fromDate = '';\r\n    if (startDay && startMonth && startYear) {\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n      fromDate = moment(fromDate).valueOf();\r\n    }\r\n\r\n    let endDay = 1;\r\n    let endMonth =\r\n      this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n    let endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n    let toDate = '';\r\n    if (endDay && endMonth && endYear) {\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n      toDate = moment(toDate).valueOf();\r\n      toDate = this.state.todaysDate ? '' : toDate;\r\n    }    \r\n  \r\n    let data = {\r\n      projectId,\r\n      userId,\r\n      projectName,\r\n      projectURL,\r\n      associatedWith,\r\n      projectFinished,\r\n      description, \r\n      startDate:fromDate,\r\n      endDate:toDate      \r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.projectId || this.state.projectId === '') {\r\n      theRapidHireApiService('addProject', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n           self.closeProjectModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editProject', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n           self.closeProjectModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  currentCheckBox = event => {\r\n    if (event.target.checked) {\r\n      this.setState({\r\n        todaysDate: true,\r\n        endDate: emptyToDate,\r\n        endDay: '',\r\n        endMonth: '',\r\n        endYear: '',\r\n        projectFinished: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        todaysDate: false,\r\n        endYear: moment().format('YYYY'),\r\n        endMonth: moment().format('M') - 1,\r\n        endDay: moment().format('D'),\r\n        projectFinished:false\r\n      });\r\n    }\r\n    // let endDate = null;\r\n    // if (!todaysDate) endDate = emptyToDate;\r\n    // else endDate = '';\r\n    // this.setState({ todaysDate: !todaysDate, endDate: endDate });\r\n  };\r\n\r\n  closeProjectModal = status => {   \r\n    this.setState({\r\n      projectModal: false\r\n      \r\n    });   \r\n    this.props.closeProjectComponent();\r\n  };\r\n\r\n  render() {\r\n\r\n    console.log('this.props.employmentDetail ',this.props.projectDetail);\r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.projectModal}\r\n          onHide={this.closeProjectModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.ProjectId || this.state.ProjectId === ''\r\n                ? 'Add Project'\r\n                : 'Edit Project'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('title')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Project Name</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a project\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('projectName'))}\r\n                  </Col>\r\n                </FormGroup>                     \r\n               \r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date From\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"startYear\"\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.startYear}\r\n                          onChange={year =>\r\n                            this.selectStartDate('startYear', year)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"startMonth\"\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.startYear}\r\n                          value={this.state.startMonth}\r\n                          onChange={month =>\r\n                            this.selectStartDate('startMonth', month)\r\n                          }\r\n                        />\r\n                      </div>                 \r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date To\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"endYear\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.endYear}\r\n                          onChange={year => this.selectEndDate('endYear', year)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"endMonth\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.endYear}\r\n                          value={this.state.endMonth}\r\n                          onChange={month =>\r\n                            this.selectEndDate('endMonth', month)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      {/* <div className=\"form-group\">\r\n                        <DayPicker\r\n                          defaultValue=\"Day\"\r\n                          id=\"day\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          name=\"endDay\"\r\n                          classes=\"form-control\"\r\n                          year={this.state.endYear}\r\n                          month={this.state.endMonth}\r\n                          endYearGiven\r\n                          value={this.state.endDay}\r\n                          onChange={day => this.selectEndDate('endDay', day)}\r\n                        /> \r\n                      </div>*/}\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <Checkbox\r\n                        className=\"checkbox-primary \"\r\n                        onClick={this.currentCheckBox.bind(this)}\r\n                        defaultChecked={this.state.projectFinished ? true : false}\r\n                      >\r\n                        Is project going on?\r\n                        <span className=\"check\" />\r\n                      </Checkbox>\r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                {/* <div>    <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Associated With\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"associatedWith\"\r\n                          name=\"associatedWith\"\r\n                          value={this.state.associatedWith}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">associatedWith</option>\r\n                       {this.state.associateList.map((ass, i) => (\r\n                       <option value={ass}>{ass}</option>\r\n                       ))}                                 \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('associatedWith')\r\n                        )}\r\n                      </div>                                  \r\n                    </div>\r\n                  </Col>\r\n                </FormGroup>\r\n                </div> */}\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Description</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      componentClass=\"textarea\"\r\n                      placeholder=\"description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"1000\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('description')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>    \r\n\r\n                 <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('title')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Project URL</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a projectURL\"\r\n                      name=\"projectURL\"\r\n                      value={this.state.projectURL}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('projectURL'))}\r\n                  </Col>\r\n                </FormGroup>         \r\n               \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeProjectModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddProject = validation(strategy)(addProject);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addProject);\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass addCareerProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation:'',\r\n      organisation:'',\r\n      careerProfileModal:true,\r\n      profileId:'',\r\n      associateList: [],\r\n      locationList: [{\r\n              value: 1 ,\r\n              label: 'Indore'},\r\n              {\r\n                value: 2 ,\r\n                label: 'Bhopal'},\r\n                {\r\n                  value: 2 ,\r\n                  label: 'Dewas'}\r\n              ],\r\n      desiredIndustryList:[{\r\n        value: 1 ,\r\n        label: 'Agriculture'},\r\n        {\r\n          value: 2 ,\r\n          label: 'IT'},\r\n          {\r\n            value: 2 ,\r\n            label: 'Admin'}\r\n        ]      \r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        industry: 'required',       \r\n        functionalArea: 'required',\r\n        role: 'required',\r\n        desiredLocation: 'required',\r\n        desiredIndustry: 'required',\r\n       \r\n      },\r\n      {\r\n        'required.industry': validationMessages.industry.required,        \r\n         'required.functionalArea': validationMessages.functionalArea.required,\r\n        'required.role': validationMessages.role.required,\r\n        'required.desiredLocation': validationMessages.desiredLocation.required,\r\n        'required.desiredIndustry': validationMessages.desiredIndustry.required,\r\n      }\r\n    );\r\n  }  \r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n    //  let userId = this.props.user.userId;\r\n    // }  \r\n    console.log('this.props.employmentDetail ',this.props.careerProfileDetail);\r\n    this.setCareerProfileData(this.props.careerProfileDetail);\r\n   // this.getAssociatedListData(10);\r\n  }\r\n\r\n\r\n  setCareerProfileData = data => { \r\n    if(data){ \r\n      this.setState({      \r\n          userId:data.userId,\r\n          industry : data.industry,\r\n          functionalArea : data.functionalArea,\r\n          role : data.role,\r\n          jobType : data.jobType, \r\n          profileId: data.profileId,      \r\n          employmentType : data.employmentType,     \r\n          desiredShift:  data.desiredShift,\r\n          expectedSalary : data.expectedSalary,       \r\n          expectedSalaryInLakh : data.expectedSalaryInLakh,     \r\n          expectedSalaryInThousand:  data.expectedSalaryInThousand,          \r\n          desiredLocation : data.desiredLocation,       \r\n          desiredIndustry : data.desiredIndustry       \r\n        });     \r\n      }; \r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    console.log(endDate);\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      let imageObject = {\r\n        media: self.state.mediaImgArray || []\r\n      };\r\n\r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        }    \r\n    });\r\n  };  \r\n\r\n  handleSubmit() {\r\n   \r\n   let industry = this.state.industry;\r\n   let functionalArea = this.state.functionalArea;\r\n   let role = this.state.role;\r\n   let jobType = this.state.jobType; \r\n        \r\n   let employmentType = this.state.employmentType;    \r\n   let desiredShift =  this.state.desiredShift;\r\n   let expectedSalary = this.state.expectedSalary;     \r\n   let expectedSalaryInLakh = this.state.expectedSalaryInLakh;    \r\n   let expectedSalaryInThousand =  this.state.expectedSalaryInThousand;\r\n   let desiredLocation= [];\r\n   this.state.desiredLocation.forEach(function(item){\r\n    desiredLocation.push(item.label);\r\n   })    \r\n   let desiredIndustry = [];     \r\n   this.state.desiredIndustry.forEach(function(item){\r\n    desiredIndustry.push(item.label);\r\n   })\r\n \r\n    let userId = this.props.user.userId;\r\n    let profileId=  this.state.profileId;   \r\n\r\n   \r\n    let data = {\r\n      profileId,\r\n      userId,\r\n      industry,\r\n      functionalArea,\r\n      role,\r\n      jobType,\r\n      employmentType, \r\n      desiredShift,\r\n      expectedSalary,\r\n      expectedSalaryInLakh,\r\n      expectedSalaryInThousand,\r\n      desiredLocation,\r\n      desiredIndustry\r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.profileId || this.state.profileId === '') {\r\n      theRapidHireApiService('addCareerProfile', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n            self.closeCareerProfileModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editDesiredProfileData', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n            self.closeCareerProfileModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n \r\n  handleLocationChange = newValue => {\r\n    this.setState({\r\n      desiredLocation: newValue\r\n    });\r\n  };\r\n\r\n  handleDesiredIndustryChange = newValue => {\r\n    this.setState({\r\n      desiredIndustry: newValue\r\n    });\r\n  };\r\n\r\n  \r\n\r\n  closeCareerProfileModal = status => {   \r\n    this.setState({\r\n      careerProfileModal: false\r\n      \r\n    });   \r\n    this.props.closeCareerProfileComponent();\r\n  };\r\n\r\n  render() {\r\n\r\n    console.log('this.props.employmentDetail ',this.props.careerProfileDetail);\r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>  \r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.careerProfileModal}\r\n          onHide={this.closeCareerProfileModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.profileId || this.state.profiletId === ''\r\n                ? 'Add Career Profile'\r\n                : 'Edit Career Profile'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>   \r\n            \r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n               <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Industry\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <FormControl\r\n                              componentClass=\"select\"\r\n                              placeholder=\"industry\"\r\n                              name=\"industry\"\r\n                              value={this.state.industry}                          \r\n                              onChange={this.handleChange}\r\n                              autoComplete=\"off\"\r\n                              maxLength=\"1000\"\r\n                            >                        \r\n                          <option value=\"\">industry</option>\r\n                          <option value={1}>IT</option>                                                     \r\n                    </FormControl>              \r\n                {renderMessage(\r\n                          this.props.getValidationMessages('industry')\r\n                        )}\r\n                </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Functional Area\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"functionalArea\"\r\n                          name=\"functionalArea\"\r\n                          value={this.state.functionalArea}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">functionalArea</option>\r\n                       <option value={1}>IT Specialization</option>\r\n                                                   \r\n                </FormControl>              \r\n                {renderMessage(\r\n                          this.props.getValidationMessages('functionalArea')\r\n                        )}\r\n                  </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Role\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"role\"\r\n                          name=\"role\"\r\n                          value={this.state.role}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">role</option>\r\n                       <option value={1}>Software Developer</option>\r\n                       <option value={2}>Team Lead</option>\r\n                       <option value={3}>IT Analyst</option>\r\n                       <option value={4}>Recruiter</option>                                                       \r\n                </FormControl>              \r\n                {renderMessage(\r\n                          this.props.getValidationMessages('role')\r\n                        )}\r\n               </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n        \r\n\r\n      \r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      JOB Type\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"jobType\"\r\n                          className=\"radio-primary\"\r\n                          value=\"permanent\"\r\n                          checked={\r\n                            this.state.jobType === 'permanent' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Permanet\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"jobType\"\r\n                          className=\"radio-primary\"\r\n                          value=\"dollar\"\r\n                          checked={\r\n                            this.state.jobType === 'contractual' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Contractual\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                   <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Employment Type\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"employmentType\"\r\n                          className=\"radio-primary\"\r\n                          value=\"full\"\r\n                          checked={\r\n                            this.state.employmentType === 'full' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Full Time\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"employmentType\"\r\n                          className=\"radio-primary\"\r\n                          value=\"part\"\r\n                          checked={\r\n                            this.state.employmentType === 'part' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Part Time\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n\r\n                  <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Preffered Shift \r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"desiredShift\"\r\n                          className=\"radio-primary\"\r\n                          value=\"day\"\r\n                          checked={\r\n                            this.state.desiredShift === 'day' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Day\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"desiredShift\"\r\n                          className=\"radio-primary\"\r\n                          value=\"night\"\r\n                          checked={\r\n                            this.state.desiredShift === 'night' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Night\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"desiredShift\"\r\n                          className=\"radio-primary\"\r\n                          value=\"flexible\"\r\n                          checked={\r\n                            this.state.desiredShift === 'flexible' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Flexible\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                      <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Expected Salary\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"expectedSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"indian\"\r\n                          checked={\r\n                            this.state.expectedSalary === 'indian' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Indian\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"expectedSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"dollar\"\r\n                          checked={\r\n                            this.state.expectedSalary === 'dollar' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Dollar\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>             \r\n\r\n                 <FormGroup className={this.getClasses('desiredLocation')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Desired Location\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"\r\n                        multi\r\n                        name=\"desiredLocation\"\r\n                        value={this.state.desiredLocation}\r\n                        onChange={this.handleLocationChange}\r\n                        options={this.state.locationList}\r\n                        placeholder=\"Select all the location that you used along the way\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('desiredLocation'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className={this.getClasses('skills')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Desired Industry\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"\r\n                        multi\r\n                        name=\"desiredIndustry\"\r\n                        value={this.state.desiredIndustry}\r\n                        onChange={this.handleDesiredIndustryChange}\r\n                        options={this.state.desiredIndustryList}\r\n                        placeholder=\"Select all the industry that you used along the way\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('desiredIndustry'))}\r\n                  </Col>\r\n                </FormGroup>             \r\n                \r\n               \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeCareerProfileModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddCareerProfile = validation(strategy)(addCareerProfile);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addCareerProfile);","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\nconst locationList=[\r\n{locationId:1,name:'Indore' },{locationId:2,name:'Bhopal'},{locationId:3,name:'Pune'}]\r\n\r\nclass addPersonalProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation:'',\r\n      organisation:'',\r\n      personalProfileModal:true,\r\n      projectId:'',\r\n      associateList: [],\r\n      profileRoleList:[]\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        profileRole: 'required',\r\n        year:'required',\r\n        month:'required',\r\n        location:'required',\r\n        mobileNo: 'required'\r\n        // level3Competency: 'required',\r\n        // skills: 'required',\r\n        // importance: 'required',\r\n        // //   startDate: 'required',\r\n        // //  endDate: 'required',\r\n        // firstName: ['regex:' + regExpressions.alphaOnly],\r\n        // lastName: ['regex:' + regExpressions.alphaOnly],\r\n        // email: 'email'\r\n      },\r\n      {\r\n        'required.profileRole': validationMessages.profileRole.required,\r\n        'required.year': validationMessages.year.required,\r\n        'required.month': validationMessages.month.required,\r\n        'required.location': validationMessages.location.required,\r\n        'required.mobileNo': validationMessages.mobileNo.required,\r\n        // 'required.level3Competency': validationMessages.competency.required\r\n        // 'required.skills': validationMessages.skills.required,\r\n        // 'required.importance': validationMessages.importance.required,\r\n        // //  'required.startDate': validationMessages.startDate.required,\r\n        // //  'required.endDate': validationMessages.endDate.required,\r\n        // 'email.email': validationMessages.email.invalid,\r\n        // 'regex.firstName': validationMessages.firstName.alphaOnly,\r\n        // 'regex.lastName': validationMessages.lastName.alphaOnly\r\n      }\r\n    );\r\n  }\r\n\r\n \r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n    let userId = this.props.user.userId;\r\n    // }  \r\n    console.log('this.props.employmentDetail ',this.props.userProfile);\r\n    this.setProjectData(this.props.userProfile);\r\n    this.getProfileRoleList();\r\n  }\r\n\r\n  // getAssociatedListData(userId){\r\n  //   theRapidHireApiService('getAssociatedListDataByUserId',{userId})\r\n  //   .then(response => {     \r\n  //     if (response.data.statusCode === 200) {\r\n  //        let associateList= this.state.associateList;\r\n  //        associateList= response.data.resourceData[0];\r\n  //        this.setState({associateList: associateList});\r\n  //     }\r\n  //   })\r\n  //   .catch(err => {\r\n  //     console.log(err);\r\n  //   });\r\n  // }\r\n\r\n\r\n  getProfileRoleList(){\r\n    theRapidHireApiService('getProfileRoleList')\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n        let profileRoleList= this.state.profileRoleList;\r\n        // response.data.result.forEach(function(data){       \r\n        //    profileRoleList.push({label: data.profileRole,value:data.profileRoleId })\r\n        // })   \r\n        profileRoleList=response.data.result ;\r\n        console.log(profileRoleList);    \r\n        this.setState({profileRoleList: profileRoleList});\r\n          }\r\n        })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n  setProjectData = data => {    \r\n    if (data) {  \r\n      this.setState({      \r\n          userId:data.userId,\r\n          userProfileId : data.userProfileId,\r\n          skills:data.skills,\r\n          year: data.experienceInYear,\r\n          month: data.experienceInMonth,\r\n          location: data.currentLocation,\r\n          mobileNo: data.mobileNo,\r\n          profileRole: data.profileRole && data.profileRole[0] && data.profileRole[0].profileRoleId          \r\n        });    \r\n    }\r\n  };\r\n \r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      let imageObject = {\r\n        media: self.state.mediaImgArray || []\r\n      };\r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        }      \r\n    });\r\n  };\r\n\r\n  handleSubmit() {  \r\n\r\n    let profileRoleId = this.state.profileRole;\r\n    let profileRole = [];\r\n    let profileRoleList= this.state.profileRoleList;\r\n    let index= profileRoleList.findIndex(todo => todo.profileRoleId == profileRoleId );\r\n\r\n    profileRole.push(profileRoleList[index]);\r\n\r\n    let experienceInYear = this.state.year;\r\n    let experienceInMonth = this.state.month;\r\n    let currentLocation = this.state.location;\r\n    let mobileNo = this.state.mobileNo;\r\n    let skills = this.state.skills;\r\n    let userId = this.props.user.userId;\r\n    let userProfileId=  this.state.userProfileId; \r\n    let roleId = this.props.user.roleId\r\n    let data = {\r\n      userProfileId,\r\n      userId,\r\n      profileRole,\r\n      experienceInYear,\r\n      experienceInMonth,\r\n      currentLocation,\r\n      mobileNo,\r\n      skills,\r\n      roleId   \r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.userProfileId || this.state.userProfileId === '') {\r\n      theRapidHireApiService('addUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n           self.closePersonalProfileModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editUserProfile', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n           self.closePersonalProfileModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n  \r\n  closePersonalProfileModal = status => {   \r\n    this.setState({\r\n      personalProfileModal: false\r\n      \r\n    });   \r\n    this.props.closePersonalProfileComponent();\r\n  };\r\n\r\n  render() {    \r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.personalProfileModal}\r\n          onHide={this.closePersonalProfileModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.userProfileId || this.state.userProfileId === ''\r\n                ? 'Add Profile'\r\n                : 'Edit Profile'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n              <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                        Profile Role\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"profileRole\"\r\n                          name=\"profileRole\"\r\n                          value={this.state.profileRole}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\" disabled>job role</option>\r\n                       {this.state.profileRoleList.map((ass, i) => (\r\n                       <option value={ass.profileRoleId}>{ass.profileRole}</option>\r\n                       ))}                                 \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('associatedWith')\r\n                        )}\r\n                      </div>                                  \r\n                    </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>                  \r\n               \r\n\r\n                            <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Experience\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"year\"\r\n                          name=\"year\"\r\n                          value={this.state.year}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\" disabled>years</option>\r\n                       <option value={1}>1 years</option>\r\n                       <option value={2}>2 years</option>\r\n                       <option value={3}>3 years</option>\r\n                       <option value={4}>4 years</option>\r\n                       <option value={5}>5 years</option>    \r\n                       <option value={6}>6 years</option>        \r\n                       <option value={7}>7 years</option>\r\n                       <option value={8}>8 years</option>\r\n                       <option value={9}>9 years</option>\r\n                       <option value={10}>10 years</option>\r\n                       <option value={11}>11 years</option>    \r\n                       <option value={12}>12 years</option>                                      \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('year')\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"month\"\r\n                          name=\"month\"\r\n                          value={this.state.month}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >      \r\n                        <option value=\"\" disabled>month</option>\r\n                       <option value={1}>1 month</option>\r\n                       <option value={2}>2 month</option>\r\n                       <option value={3}>3 month</option>\r\n                       <option value={4}>4 month</option>\r\n                       <option value={5}>5 month</option>    \r\n                       <option value={6}>6 month</option>        \r\n                       <option value={7}>7 month</option>\r\n                       <option value={8}>8 month</option>\r\n                       <option value={9}>9 month</option>\r\n                       <option value={10}>10 month</option>\r\n                       <option value={11}>11 month</option>    \r\n                       <option value={12}>12 month</option>                                      \r\n                      </FormControl>                 \r\n                      </div>                     \r\n                    </div>                   \r\n                     {renderMessage(this.props.getValidationMessages('month'))} \r\n                  </Col>\r\n                </FormGroup>\r\n                <div>               \r\n\r\n              <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                      Current Location\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"location\"\r\n                          name=\"location\"\r\n                          value={this.state.location}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">location</option>\r\n                       {locationList.map((ass, i) => (\r\n                          <option value={ass.locationId}>{ass.name}</option>\r\n                       ))}\r\n                                                        \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('associatedWith')\r\n                        )}\r\n                      </div>                                  \r\n                    </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n                </div>\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>MobileNo</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add mobileNo\"\r\n                      name=\"mobileNo\"\r\n                      value={this.state.mobileNo}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('mobileNo')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>           \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closePersonalProfileModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddPersonalProfile = validation(strategy)(addPersonalProfile);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addPersonalProfile);\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass addSkills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,         \r\n      promptRecommendation: false,    \r\n      userId: '',       \r\n      skillsModal:true,\r\n      skillId:'',\r\n      rating:'',\r\n      skillsList:[],\r\n      availableSkills:[]      \r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        skills: 'required',\r\n        rating: 'required'\r\n        // level3Competency: 'required',\r\n        // skills: 'required',\r\n        // importance: 'required',\r\n        // //   startDate: 'required',\r\n        // //  endDate: 'required',\r\n        // firstName: ['regex:' + regExpressions.alphaOnly],\r\n        // lastName: ['regex:' + regExpressions.alphaOnly],\r\n        // email: 'email'\r\n      },\r\n      {\r\n        'required.skills': validationMessages.skills.required,        \r\n         'required.rating': validationMessages.rating.required\r\n        // 'required.skills': validationMessages.skills.required,\r\n        // 'required.importance': validationMessages.importance.required,\r\n        // //  'required.startDate': validationMessages.startDate.required,\r\n        // //  'required.endDate': validationMessages.endDate.required,\r\n        // 'email.email': validationMessages.email.invalid,\r\n        // 'regex.firstName': validationMessages.firstName.alphaOnly,\r\n        // 'regex.lastName': validationMessages.lastName.alphaOnly\r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userId= null;\r\n    if(this.props.user){\r\n      userId = this.props.user.userId;\r\n      this.setState({userId: userId});\r\n    }    \r\n    this.setSkillsData(this.props.skillsDetail);\r\n    // this.getAssociatedListData(10);\r\n    this.getKeySkillsList();\r\n  }\r\n\r\n  getKeySkillsList(userId){\r\n    theRapidHireApiService('getKeySkillsList')\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n         let skillsList= this.state.skillsList;\r\n         let availableSkills= this.props.skillsDetail && this.props.skillsDetail.skills ?this.props.skillsDetail.skills:[] ;\r\n         response.data.result.forEach(function(data){\r\n           let availIndex= availableSkills.findIndex(todo => todo.skillId == data.skillId);\r\n          if(availIndex === -1)\r\n            skillsList.push({label: data.skillName,value:data.skillId })\r\n        })    \r\n        console.log(skillsList);    \r\n         this.setState({skillsList: skillsList});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  setSkillsData = data => { \r\n    console.log(data);\r\n    if(data){ \r\n      this.setState({      \r\n          userId:data.userId,\r\n          availableSkills : data.skills,         \r\n          userProfileId: data.userProfileId\r\n        });     \r\n      }; \r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    console.log(endDate);\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {      \r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        }   \r\n    });\r\n  };  \r\n\r\n  handleSubmit() {   \r\n   let rating = this.state.rating;  \r\n   let availableSkills = this.props.skillsDetail.skills;\r\n   let skills = this.state.skills;  \r\n    console.log(this.state.skills);  \r\n   \r\n    availableSkills.push({'skillId':skills.value,'skillName':skills.label,'rating':rating});   \r\n\r\n    let userId = this.props.user.userId;\r\n    let skillId=  this.state.skillId;   \r\n    let userProfileId= this.props.skillsDetail.userProfileId ?this.props.skillsDetail.userProfileId:\"\";\r\n    \r\n    console.log('userProfileId',userProfileId);\r\n    let data = {\r\n      userProfileId,\r\n      userId,\r\n      skills:availableSkills     \r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.userProfileId || this.state.userProfileId === '') {\r\n      theRapidHireApiService('addUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n            self.closeSkillsModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n            self.closeSkillsModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n\r\n  handleSkillsChange = newValue => {\r\n    this.setState({\r\n      skills: newValue\r\n    });\r\n  };\r\n  \r\n\r\n  closeSkillsModal = status => {   \r\n    this.setState({\r\n      skillsModal: false      \r\n    });   \r\n    this.props.closeSkillsComponent();\r\n  };\r\n\r\n  render() {    \r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.skillsModal}\r\n          onHide={this.closeSkillsModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.profileId || this.state.profiletId === ''\r\n                ? 'Add Career Profile'\r\n                : 'Edit Career Profile'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>   \r\n            \r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>               \r\n                 <FormGroup className={this.getClasses('skills')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Add Skills\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"                        \r\n                        name=\"skills\"\r\n                        value={this.state.skills}\r\n                        onChange={this.handleSkillsChange}\r\n                        options={this.state.skillsList}\r\n                        placeholder=\"Select skill\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('skills'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n              <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Role\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"rating\"\r\n                          name=\"rating\"\r\n                          value={this.state.rating}  \r\n                          defaultValue={parseInt(this.state.rating,10)}                   \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">skills rating</option>\r\n                       <option value={1}>1</option>\r\n                       <option value={2}>2</option>\r\n                       <option value={3}>3</option>\r\n                       <option value={4}>4</option>  \r\n                       <option value={5}>5</option>                                                       \r\n                </FormControl>              \r\n                {renderMessage(\r\n                          this.props.getValidationMessages('rating')\r\n                        )}\r\n               </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n                 \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeSkillsModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddSkills = validation(strategy)(addSkills);\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addSkills);","import React, { Component } from 'react';\nimport Header from '../header/header';\nimport {\n  Button,\n  Media,\n  Row,\n  Col,\n  FormControl,\n  InputGroup\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\n//import SideBar from '../../components/SideBar';\nimport _ from 'lodash';\nimport S3FileUpload from 'react-s3';\nimport { Link } from 'react-router-dom';\n//import Summary from './summary/addSummary';\nimport Education from '../profile/addEducation';\nimport AddEmployment from '../profile/addEmployment';\nimport AddProject from '../profile/addProject';\nimport AddCareerProfile from '../profile/addCareerProfile';\nimport AddPersonalProfile from '../profile/addPersonalProfile';\nimport AddSkills from '../profile/addSkills';\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\";\n//import Img from '../../common/cropper/img';\nimport {\n  showErrorToast,\n  uploadToAzure,\n  limitCharacter,\n  SampleNextArrow,\n  SamplePrevArrow,\n  getThumbImage\n} from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport moment from 'moment';\nimport {\n  actionGetStudentPersonalInfo,\n  actionGetAllCompetency,\n  actionGetAchievementsByUser,\n  actionGetRecommendationsByUser,\n  actionUpdateUserInfo,\n  actionGetAchievementsData\n} from '../../common/core/redux/actions';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\nimport Select from 'react-select';\n\nconst config = {\n  bucketName: 'ankurself',\n  dirName: 'photos', /* optional */\n  region: 'ap-south-1', // Put your aws region here\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\n}\nvar settings=null;\n\nconst skills1=[\n  {label:'Developer',value:1 },\n  {label:'React Developer',value:2 }\n  ]\n\nclass EditProfile extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {      \n      showEmploymentComponent: false,\n      showSkillsComponent: false,\n      showProjectComponent: false,\n      showPCareerProfileComponent: false,     \n      showEducationComponent:false,\n      educationDetail: {}, \n      employmentDetail: {},            \n      skillsDetail: {},     \n      projectDetail: {},    \n      careerProfileDetail: {}, \n      loader1: false,\n      loader2: false,\n      imageSource: '',      \n      employmentListData: [],\n      skillsListData:[],\n      projectListData:[],\n      userData:{},    \n      showDropdown: false,     \n      isActive: 'true',     \n      contentEditable: false,\n      editName: false,\n      name: '',\n      editTagLine: false,\n      profileRoleList:[],\n      userProfile:{}\n    };\n   // this.textInput = React.createRef();    \n  }\n\n  componentWillMount() {\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\n    \n    if(user){\n      let userId =user.userId; \n      this.getEmploymentData(userId);\n      this.getUserDetails(userId);  \n      this.getSkillsData(userId);\n      this.getProjectsData(userId);\n      this.getCareerProfileData(userId);\n      this.getUserProfileData(userId);\n      this.setProfileData(user);\n      this.setState({userId: userId,user:user});\n    }    \n    this.uploadImageToAzure = this.uploadImageToAzure.bind(this);\n  }\n\n  componentWillReceiveProps(res) {\n     this.setProfileData(res.user);   \n  }\n\n  componentDidMount() { \n  \n  }\n\n  setProfileData = data => {\n    //console.log(data);\n    if (data) {\n      let userId = data.userId;\n      let summary = data.summary;\n      let firstName = data.firstName;\n      let lastName = data.lastName;\n      // let tagline = data.tagline.trim();\n      // let editTag = data.tagline.trim();\n      let email= data.email;\n      let tagline = data.tagline ? data.tagline.trim() : null;\n      let editTag = data.tagline ? data.tagline.trim() : null;\n\n      let name =\n        (data.firstName ? data.firstName : '') +\n        ' ' +\n        (data.lastName ? data.lastName : '');\n      let profileImage = data.profilePicture;\n      if (profileImage) {\n        profileImage = profileImage //getThumbImage('medium', profileImage);\n      }\n      let coverImage = data.coverImage;\n      if (coverImage) {\n        coverImage = getThumbImage('original', coverImage);\n      }\n      let isActive = data.isActive;\n      this.setState({\n        editTag,\n        summary,\n        firstName,\n        lastName,\n        userId,\n        email,\n        profileImage,\n        coverImage,\n        tagline,\n        isActive,\n        name\n      });\n    }\n  }; \n\n  //Get Section\n  getUserDetails(userId){\n    theRapidHireApiService('getUserDetails',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n         let userData= this.state.userData;\n         userData= response.data.result[0];     \n         this.setState({userData: userData});        \n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  getEmploymentData(userId){\n    theRapidHireApiService('getEmploymentListById',{userId})\n    .then(response => { \n      console.log(response);    \n      if (response.data.status === 'Success') {\n         let employmentListData= this.state.employmentListData;\n         employmentListData= response.data.result;\n         this.setState({employmentListData: employmentListData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  getSkillsData(userId){\n    theRapidHireApiService('getUserSkillsById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response.data);\n         let skillsListData= this.state.skillsListData;\n         let skillsDetail = response.data.result[0];\n         console.log('skillsDetail',skillsDetail);\n         skillsListData= skillsDetail.skills\n         this.setState({skillsListData,skillsDetail});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  getProjectsData(userId){\n    theRapidHireApiService('getProjectListById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n         let projectListData= this.state.projectListData;\n         projectListData= response.data.result;\n         this.setState({projectListData: projectListData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  getCareerProfileData(userId){\n    theRapidHireApiService('getDesiredProfileListById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n         let careerProfileListData= this.state.careerProfileListData;\n         careerProfileListData= response.data.result[0];\n         this.setState({careerProfileListData: careerProfileListData});\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  getProfileData = () => {\n    let userId = this.state.userId;\n    this.props.actionGetStudentPersonalInfo(userId);\n  };\n\n  getUserProfileData(userId){\n    theRapidHireApiService('getUserSkillsById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response.data);       \n         let userProfile = response.data.result[0];       \n         let profileRole= userProfile.profileRole[0].profileRole;\n         let experience= userProfile.experienceInYear;\n         let mobileNo= userProfile.mobileNo;\n         let currentLocation= userProfile.currentLocation;\n         let videoLink = userProfile.videoLink;\n         this.setState({userProfile:userProfile,\n                    profileRole,\n                    experience,\n                    mobileNo,\n                    currentLocation,\n                    videoLink\n         }); \n         this.setUserProfileData(userProfile);\n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  setUserProfileData = data => {    \n    console.log('data ',data);\n    if (data) { \n      this.setState({     \n          userProfileId : data.userProfileId,\n          skills:data.skills,\n          year: data.experienceInYear,\n          month: data.experienceInMonth,\n          location: data.currentLocation,\n          mobileNo: data.mobileNo,\n          resumeURL: data.resumeURL,\n          resumeName:data.resumeName,\n          profileRole: data.profileRole[0].profileRoleId          \n        });    \n    }\n  };\n\n   //Show Component Section\n   showEducationComponent = event => {    \n    this.setState({\n      showEducationComponent: !this.state.showEducationComponent   \n    });\n    if(!this.state.showEducationComponent){\n       this.setState({educationDetail :  null});\n       //this.getEducationData(this.state.userId);\n    }\n  };\n\n  //Show Component Section\n  showEmploymentComponent = event => {    \n    this.setState({\n      showEmploymentComponent: !this.state.showEmploymentComponent   \n    });\n    if(!this.state.showEmploymentComponent){\n       this.setState({employmentDetail :  null});\n       this.getEmploymentData(this.state.userId);\n    }\n  };\n\n  showSkillsComponent = event => {    \n    this.setState({\n      showSkillsComponent: !this.state.showSkillsComponent   \n    });    \n    \n    if(!this.state.showSkillsComponent){\n     //  this.setState({skillsDetail :  null});\n       this.getSkillsData(this.state.userId);\n    }\n  };\n\n  showSkillsComponent = event => {    \n    this.setState({\n      showSkillsComponent: !this.state.showSkillsComponent   \n    });    \n    \n    if(!this.state.showSkillsComponent){\n     //  this.setState({skillsDetail :  null});\n       this.getSkillsData(this.state.userId);\n    }\n  }; \n\n  showPersonalProfileComponent = event => {    \n    this.setState({\n      showPersonalProfileComponent: !this.state.showPersonalProfileComponent   \n    });    \n    \n    if(!this.state.showPersonalProfileComponent){\n     //  this.setState({skillsDetail :  null});\n       this.getSkillsData(this.state.userId);\n    }\n  }; \n\n  showProjectComponent = event => {    \n    this.setState({\n      showProjectComponent: !this.state.showProjectComponent   \n    });    \n    \n    if(!this.state.showProjectComponent){\n       this.setState({projectDetail :  null});\n       this.getProjectsData(this.state.userId);\n    }\n  };\n\n  showCareerProfileComponent = event => {    \n    this.setState({\n      showCareerProfileComponent: !this.state.showCareerProfileComponent   \n    });    \n    \n    if(!this.state.showCareerProfileComponent){\n       this.setState({careerProfileDetail :  null});\n       this.getCareerProfileData(this.state.userId);\n    }\n  };\n\n \n  editEducationComponent = educationDetail => {\n    console.log(educationDetail);\n    this.setState({\n      educationDetail: educationDetail ,\n      showEducationComponent: !this.state.showEducationComponent    \n    });\n  }\n\n  editEmploymentComponent = employmentDetail => {\n    console.log(employmentDetail);\n    this.setState({\n      employmentDetail: employmentDetail ,\n      showEmploymentComponent: !this.state.showEmploymentComponent    \n    });\n  }\n\n  editSkillsComponent = skillsDetail => {    \n    this.setState({\n      skillsDetail: skillsDetail ,\n      showSkillsComponent: !this.state.showSkillsComponent    \n    });\n  }\n\n  editProjectComponent = projectDetail => {\n    console.log(projectDetail);\n    this.setState({\n      projectDetail: projectDetail ,\n      showProjectComponent: !this.state.showProjectComponent    \n    });\n  }\n\n  editCareerProfileComponent = careerProfileDetail => {\n    console.log(careerProfileDetail);\n    this.setState({\n      careerProfileDetail: careerProfileDetail ,\n      showCareerProfileComponent: !this.state.showCareerProfileComponent    \n    });\n  }  \n  \n  generateSASToken() {\n    theRapidHireApiService('getSASToken')\n      .then(response => {\n        if (response.data.status === 'Success') {\n          let sasToken = response.data.result.sasToken;\n          this.setState({ sasToken });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  toggleDropdown = () => {\n    this.setState({\n      showDropdown: !this.state.showDropdown\n    });\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };  \n\n\n  // Change name by making editable\n  contentEditable = () => {\n    window.scrollTo(500, 0);\n    //console.log(!this.state.contentEditable);\n    this.setState({ contentEditable: !this.state.contentEditable });\n  };\n \n  makeTagLineEditable = () => {\n    let editTag = this.state.tagline ? this.state.tagline : '';\n    this.setState({\n      editTagLine: !this.state.editTagLine,\n      editTag: editTag\n    });\n  };\n\n\n  saveTagLine = () => {\n    let userId = this.state.userId;\n    let tagline = this.state.editTag;\n    let data = {\n      userId,\n      tagline\n    };\n    //if (tagline) {\n    this.props.actionUpdateUserInfo({ tagline });\n    theRapidHireApiService('updateUserTagline', data)\n      .then(response => {\n        if (response.data.status === 'Success') {\n          this.setState({ editTagLine: false });\n        }\n      })\n      .catch(err => {\n        this.setState({ editTagLine: false });\n        console.log(err);\n      });\n    // } else {\n    //   this.setState({ editTagLine: false });\n    // }\n  };\n\n  saveName = () => {\n    let userId = this.state.userId;\n    let name = this.state.name.trim();\n    if (name) {\n      var newArray = name.split(' ').map(function(item, index) {\n        if (item.length > 0) {\n          return item;\n        }\n      });\n\n      let firstName = newArray.length > 0 ? newArray[0] : '';\n      if (newArray.length > 1) {\n        var lastName = newArray.slice(1).join(' ');\n      }\n\n      if (firstName && firstName.length > 35) {\n        showErrorToast(\n          'Your first name should not be more than 35 characters.'\n        );\n      } else if (lastName && lastName.length > 35) {\n        showErrorToast('Your last name should not be more than 35 characters.');\n      } else {\n        let data = {\n          userId,\n          firstName,\n          lastName\n        };\n        this.props.actionUpdateUserInfo({ firstName, lastName });\n        // theRapidHireApiService('updateName', data)\n        //   .then(response => {\n        //     if (response.data.status === 'Success') {\n        //       this.setState({ editName: false });\n        //     }\n        //   })\n        //   .catch(err => {\n        //     this.setState({ editName: false });\n        //     console.log(err);\n        //   });\n      }\n    } else {\n      this.setState({ editName: false });\n    }\n  };\n\n  makeNameEditable = () => {\n    let name =\n      (this.state.firstName ? this.state.firstName : '') +\n      ' ' +\n      (this.state.lastName ? this.state.lastName : '');\n    this.setState({\n      editName: true,\n      name: name\n    });\n  };\n\n\n  //Profile Change \n  uploadImageToAzure(file) {\n    let userId = this.state.userId;\n\n    if (file !== '') {\n        S3FileUpload\n        .uploadFile(file, config)\n        .then(data => {\n          let profileImage = getThumbImage('medium', this.state.imageName);\n              this.setState({ profileImage: profileImage, loader1: false });             \n              this.updateUserData(data.location, userId);\n        })    \n        .catch(err => console.error(err));     \n    }\n  }\n\n  updateUserData = (uploadPath, userId) => {  \n      let profilePicture = uploadPath;\n      let data = {\n        userId,\n        profilePicture\n      };\n      this.props.actionUpdateUserInfo({ profilePicture });\n      theRapidHireApiService('updateProfileImage', data);    \n  };\n  \n  handleImageChange = (action, event) => {\n    let fileName = event.target.files[0].name;\n    S3FileUpload\n    .uploadFile(event.target.files[0], config)\n    .then(data => {\n      \n      let userId= this.state.userId;\n      let profilePicture = data.location;\n      let profileData = {\n        userId,\n        profilePicture\n      };\n      this.props.actionUpdateUserInfo({ profilePicture });\n      theRapidHireApiService('updateProfileImage', profileData);    \n\n    })\n    // this.setState({ imageSource: '' });\n    // const file = event.target.files[0];\n    // const fileName = file.name;\n    // const fileType = file.type;\n    // if (file) {      \n    //   let reader = new FileReader();\n    //   reader.readAsDataURL(event.target.files[0]);\n    //   reader.onload = event => {\n    //     this.setState({\n    //       imageSource: event.target.result,\n    //       imageName: fileName,\n    //       imageType: fileType,\n    //       action: action\n    //     });\n    //   };\n    // }\n  };\n\n  // Upload file to Azure\n  uploadFiles= event => {\n    console.log(event.target.files[0]);\n    let fileName = event.target.files[0].name;\n    S3FileUpload\n    .uploadFile(event.target.files[0], config)\n    .then(data => {\n      let sendData ={\n         userProfileId: this.state.userProfileId,\n         userId: this.state.userId,\n         resumeURL:data.location,\n         resumeName: fileName\n      };     \n      console.log(data);\n      theRapidHireApiService('addResume',sendData)\n      .then(response => {     \n        if (response.data.status === 'Success') {\n          this.getUserProfileData(this.state.userId);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    })    \n    .catch(err => console.error(err));\n  }\n\n  DeleteFile = event => {\n    S3FileUpload\n    .deleteFile(this.state.resumeName, config)\n    .then(response =>{ console.log(response);\n      let sendData ={\n        userProfileId: this.state.userProfileId,\n        userId: this.state.userId,\n        resumeURL:null,\n        resumeName: null\n     };     \n     \n     theRapidHireApiService('addResume',sendData)\n     .then(response => {     \n       if (response.data.status === 'Success') {\n         this.getUserProfileData(this.state.userId);\n       }\n     })\n     .catch(err => {\n       console.log(err);\n     });\n    })\n    .catch(err => console.error(err));\n  }\n \n  render() {\n    return (\n      <div className=\"wrapper\">\n      <Header {...this.props} />     \n      <div className=\"main-panel\">   \n        \n      {/* <ToastContainer\n          autoClose={5000}\n          className=\"custom-toaster-main-cls\"\n          toastClassName=\"custom-toaster-bg\"\n          transition={ZoomInAndOut}\n        />  */}\n        <div className=\"\">   \n       {this.state.imageSource ? (\n          <ImageCropper\n            imageSource={this.state.imageSource}\n            imageName={this.state.imageName}\n            imageType={this.state.imageType}\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\n            modalSize={this.state.action === 1 ? 'medium' : 'large'}\n            cropBoxWidth={this.state.action === 1 ? '200' : '700'}\n            cropBoxHeight={this.state.action === 1 ? '200' : '700'}\n            uploadImageToAzure={this.uploadImageToAzure}\n          />\n        ) : null} \n\n        \n\n  <div className=\"w3-content main-panel1\">\n \n \n <div className=\"w3-row-padding\">\n  \n   <div className=\"w3-third\">\n     <div className=\"w3-white w3-text-grey w3-card-4\">\n      <div className=\"w3-display-container \" style={{overflow:\"hidden\"}}>\n      <img  src={this.state.profileImage} style={{width:\"100%\",\"padding-right\": \"132px\"}} alt=\"Avatar\" />          \n            \n      <div className=\"\">\n      <div className=\"\">\n                    <div className=\"\">    \n         <input  type=\"file\"\n                        onChange={this.handleImageChange.bind(this, 1)}\n                        accept=\"image/*\"\n                        value=\"\"\n                      />\n                      <span className=\"icon-camera icon\" />  \n        </div>  </div>  </div>   \n      </div>      \n      <div className=\"w3-container\">\n      <p><i className=\"fa fa-user fa-fw w3-margin-right w3-large w3-text-teal\"></i>{this.state.firstName} {this.state.lastName}</p>\n        <p><i className=\"fa fa-briefcase fa-fw w3-margin-right w3-large w3-text-teal\"></i>{this.state.profileRole}</p>\n        <p><i className=\"fa fa-home fa-fw w3-margin-right w3-large w3-text-teal\"></i>London, UK</p>\n        <p><i className=\"fa fa-envelope fa-fw w3-margin-right w3-large w3-text-teal\"></i>{this.state.email}</p>\n        <p><i className=\"fa fa-phone fa-fw w3-margin-right w3-large w3-text-teal\"></i>{this.state.mobileNo}</p>\n        <p><i className=\"fa-fw w3-margin-right w3-large w3-text-teal\"></i>\n                    {this.state.profileRole ?         \n                                      <Button\n                                      bsStyle=\"primary no-bold no-round mr-1\"\n                                        onClick={this.showPersonalProfileComponent.bind(\n                                          this                            \n                                        )}\n                                       >\n                                       <span className=\"icon-share2\" />\n                                        Add Information\n                                       </Button>\n                                       :\n                                        <Button onClick={this.showPersonalProfileComponent.bind(\n                                           this                            \n                                              )}\n                                                className=\"btn btn-white with-icon\">\n                                          <span className=\"icon-share2\" />\n                                          Add Information\n                                        </Button>}\n\n                          {this.state.showPersonalProfileComponent ==\n                            true ? (\n                              <AddPersonalProfile\n                                closePersonalProfileComponent={\n                                  this.showPersonalProfileComponent\n                                }           \n                                user={\n                                  this.state.user\n                                }                    \n                                userProfile={\n                                  this.state.userProfile\n                                }\n                              />\n                            ) : (\n                              '')}    \n        </p>\n        {/* <p className=\"w3-large\"><b><i className=\"fa fa-asterisk fa-fw w3-margin-right w3-text-teal\"></i>Skills</b></p>\n        <p>Adobe Photoshop</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"90%\"}}>90%</div>\n        </div>\n        <p>Photography</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"80%\"}}>\n            <div className=\"w3-center w3-text-white\">80%</div>\n          </div>\n        </div>\n        <p>Illustrator</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"75%\"}}>75%</div>\n        </div>\n        <p>Media</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"50%\"}}>50%</div>\n        </div>\n        className\n  \n        <p className=\"w3-large w3-text-theme\"><b><i className=\"fa fa-globe fa-fw w3-margin-right w3-text-teal\"></i>Languages</b></p>\n        <p>English</p>\n        <div className=\"w3-light-grey w3-round-xlarge\">\n          <div className=\"w3-round-xlarge w3-teal\" style={{height:\"24px\",width:\"100%\"}}></div>\n        </div>\n        <p>Spanish</p>\n        <div className=\"w3-light-grey w3-round-xlarge\">\n          <div className=\"w3-round-xlarge w3-teal\" style={{height:\"24px\",width:\"55%\"}}></div>\n        </div>\n        <p>German</p>\n        <div className=\"w3-light-grey w3-round-xlarge\">\n          <div className=\"w3-round-xlarge w3-teal\" style={{height:\"24px\",width:\"25%\"}}></div>\n        </div>\n        className\n      </div> */}\n       </div>\n    </div>  \n  </div>\n\n<div className=\"w3-twothird\">\n\n  <div className=\"w3-container w3-card w3-white w3-margin-bottom\">\n             \n      <h2 className=\"w3-text-grey\">\n               Resume        \n      </h2>\n       <div className=\"centerButton\">   \n        <ul style={{\"list-style\": \"none\"}}><li>\n       <p>   <div style={{\"padding-left\": \"150px\"}}> <input type=\"file\" onChange={this.uploadFiles.bind(this)} />\n         <i className=\"fa fa-cloud-upload fa-fw w3-margin-right w3-xxlarge w3-text-teal\"></i></div> </p></li>\n         <li>\n            <p><a>{this.state.resumeName}</a></p> </li>  </ul>                    \n      </div> \n      {/* <div className=\"centerButton\">\n      <input type=\"file\" onChange={this.uploadFiles.bind(this)} /> </div> */}\n      <div className=\"w3-container\">\n        <h5 className=\"w3-opacity\"><b>\n        { this.state.resumeURL ?  <DownloadLink\n                          filename={this.state.resumeURL}\n                          exportFile={() => \"My cached data\"}\n                      >\n                              Link to download\n                      </DownloadLink> : null}       </b></h5>    \n                      <p>             \n         { this.state.resumeURL ? \n                        <a onClick={this.DeleteFile.bind(this)}>Delete Resume</a>: null}\n                        <br></br>         \n                       </p>       \n       \n      </div>     \n    </div>\n\n    {/* Education */}\n    <div className=\"w3-container w3-card w3-white w3-margin-bottom\">\n    <h2 className=\"w3-text-grey\">Education</h2>\n              <div className=\"centerButton\">                        \n                <Button\n                  bsStyle=\"primary no-bold no-round mr-1\"\n                  className=\"no-bold no-round\"\n                 // disabled={isLoading}\n                  onClick={this.showEducationComponent.bind(this)}\n                >  Add Education\n              </Button>\n              {this.state.showEducationComponent ==\n                              true ? (\n                                <Education\n                                  closeEducationComponent={\n                                    this.showEducationComponent\n                                  }     \n                                  user={\n                                    this.state.user\n                                  }                           \n                                  educationMode={\n                                    this.state.educationDetail\n                                  }\n                                />\n                              ) : (\n              '')}\n              </div>\n     \n         {this.state.employmentListDeducationListDataata && this.state.educationListData.map((data, index) => (                          \n              <div className=\"w3-container\">                        \n                            <h5 className=\"w3-opacity\"><b></b>\n                              <a onClick={this.editEducationComponent.bind(this,data)}>\n                                      <span className=\"pe-7s-pen\" />\n                                    </a>\n                            </h5>\n                            <h6 className=\"w3-text-teal\"><i className=\"fa fa-calendar fa-fw w3-margin-right\"></i>\n                              {moment(parseInt(data.startDate,10)).format(\"DD-MMM-YYYY\")+' ' } to \n                                        {data.endDate ?' '+moment(parseInt(data.endDate,10)).format(\"DD-MMM-YYYY\"):<span className=\"w3-tag w3-teal w3-round\">Present</span>}\n                            </h6>\n                            <p>Lorem ipsum dolor sit amet.</p>                          \n              </div>))}                 \n  </div>\n\n   {/* Experience */}\n     <div className=\"w3-container w3-card w3-white w3-margin-bottom\">\n              <div className=\"centerButton\">                        \n                <Button\n                  bsStyle=\"primary no-bold no-round mr-1\"\n                  className=\"no-bold no-round\"\n                 // disabled={isLoading}\n                  onClick={this.showEmploymentComponent.bind(this)}\n                >  Add Experience\n              </Button>\n              {this.state.showEmploymentComponent ==\n                              true ? (\n                                <AddEmployment\n                                  closeEmploymentComponent={\n                                    this.showEmploymentComponent\n                                  }     \n                                  user={\n                                    this.state.user\n                                  }                           \n                                  employmentDetail={\n                                    this.state.employmentDetail\n                                  }\n                                />\n                              ) : (\n              '')}\n              </div>\n      <h2 className=\"w3-text-grey\">Work Experience</h2>\n         {this.state.employmentListData && this.state.employmentListData.map((data, index) => (                          \n              <div className=\"w3-container\">                        \n                            <h5 className=\"w3-opacity\"><b>{data.designation} / {data.organisation}</b>\n                              <a onClick={this.editEmploymentComponent.bind(this,data)}>\n                                      <span className=\"pe-7s-pen\" />\n                                    </a>\n                            </h5>\n                            <h6 className=\"w3-text-teal\"><i className=\"fa fa-calendar fa-fw w3-margin-right\"></i>\n                              {moment(parseInt(data.startDate,10)).format(\"DD-MMM-YYYY\")+' ' } to \n                                        {data.endDate ?' '+moment(parseInt(data.endDate,10)).format(\"DD-MMM-YYYY\"):<span className=\"w3-tag w3-teal w3-round\">Present</span>}\n                            </h6>\n                            <p></p>                          \n              </div>))}                 \n  </div>\n\n   {/* Skills */}\n   <div className=\"w3-container w3-card w3-white w3-margin-bottom\">\n              <div className=\"centerButton\">                        \n                <Button\n                  bsStyle=\"primary no-bold no-round mr-1\"\n                  className=\"no-bold no-round\"\n                 // disabled={isLoading}\n                  onClick={this.showSkillsComponent.bind(this)}\n                >     Add Skills\n              </Button>\n              {this.state.showSkillsComponent ==true ? (\n                          <AddSkills\n                            closeSkillsComponent={\n                              this.showSkillsComponent\n                            }   \n                            user={\n                              this.state.user\n                            }                            \n                            skillsDetail={\n                              this.state.skillsDetail\n                            }\n                          />\n                        ) : (\n                          '')}\n              </div>                      \n\n      <h2 className=\"w3-text-grey\"><i className=\"fa-fw w3-margin-right w3-xxlarge w3-text-teal\"></i>Skills</h2>\n         {this.state.skillsListData && this.state.skillsListData.map((data, index) => (                          \n              <div className=\"w3-container\">                        \n                            <h5 className=\"w3-opacity\"><b>{data.skillName} / {data.rating}</b>\n                              <a onClick={this.editSkillsComponent.bind(this,data)}>\n                                      <span className=\"pe-7s-pen\" />\n                                    </a>\n                            </h5>                           \n                            <p>Lorem ipsum dolor sit amet.</p>                          \n              </div>))}                 \n  </div>\n    \n\n\n {/* Project */}  \n <div className=\"w3-container w3-card w3-white w3-margin-bottom\">\n              <div className=\"centerButton\">                        \n                <Button\n                  bsStyle=\"primary no-bold no-round mr-1\"\n                  className=\"no-bold no-round\"\n                 // disabled={isLoading}\n                  onClick={this.showProjectComponent.bind(this)}\n                >     Add Project\n              </Button>\n              {this.state.showProjectComponent ==true ? (\n                        <AddProject\n                          closeProjectComponent={\n                            this.showProjectComponent\n                          }\n                          user={\n                            this.state.user\n                          }                        \n                          projectDetail={\n                            this.state.projectDetail\n                          }\n                        />\n                      ) : (\n                        '')}\n              </div>                      \n\n      <h2 className=\"w3-text-grey\"><i className=\"fa-fw w3-margin-right w3-xxlarge w3-text-teal\"></i>Project</h2>\n         {this.state.projectListData && this.state.projectListData.map((data, index) => (                          \n              <div className=\"w3-container\">                        \n                            <h5 className=\"w3-opacity\"><b>{data.projectName} / {data.associatedWith}</b>\n                              <a onClick={this.editProjectComponent.bind(this,data)}>\n                                      <span className=\"pe-7s-pen\" />\n                                    </a>\n                            </h5>\n                            <h6 className=\"w3-text-teal\"><i className=\"fa fa-calendar fa-fw w3-margin-right\"></i>\n                              {moment(parseInt(data.startDate,10)).format(\"DD-MMM-YYYY\")+' ' } to \n                                        {data.endDate ?' '+moment(parseInt(data.endDate,10)).format(\"DD-MMM-YYYY\"):<span className=\"w3-tag w3-teal w3-round\">Present</span>}\n                            </h6>                           \n                            <p>Lorem ipsum dolor sit amet.</p>                          \n              </div>))}                 \n  </div>\n    \n\n\n\n  {/* Desired Career Profile */}  \n <div className=\"w3-container w3-card w3-white\" style={{\"margin-bottom\": \"200px\"}}>\n              <div className=\"centerButton\">                        \n              {this.state.careerProfileListData?null:  <Button\n                  bsStyle=\"primary no-bold no-round mr-1\"\n                  className=\"no-bold no-round\"\n                 // disabled={isLoading}\n                  onClick={this.showCareerProfileComponent.bind(this)}\n                >     Add Career \n              </Button>}\n              {this.state.showCareerProfileComponent ==\n                                true ? (\n                                  <AddCareerProfile\n                                    closeCareerProfileComponent={\n                                      this.showCareerProfileComponent\n                                    }\n                                    user={\n                                      this.state.user\n                                    }                                   \n                                    careerProfileDetail={\n                                      this.state.careerProfileDetail\n                                    }\n                                  />\n                                ) : (\n                                  '')}                           \n              </div>                    \n\n      \n            <div ><span style={{\"font-weight\": 600,\"font-size\": \"20px\",color: \"#333\"}}><i className=\"fa-fw w3-margin-right w3-xxlarge w3-text-teal\"></i>Desired Career Profile</span>\n                                      <span class=\"edit icon\" tabindex=\"0\"><a onClick={this.editCareerProfileComponent.bind(this,this.state.careerProfileListData)}>\n                                      <span className=\"pe-7s-pen\" />\n                                          </a></span>\n            </div>\n     \n            <div className=\"w3-container\">                        \n              <h5 className=\"w3-opacity\"><b>{this.state.careerProfileListData && this.state.careerProfileListData.desiredLocation}</b>                \n              </h5>                                     \n            </div>              \n  </div>\n  \n  </div>  \n </div>  \n </div>\n\n    \n\n\n        \n        \n      </div></div></div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionGetStudentPersonalInfo,\n      actionGetAllCompetency,\n      actionGetAchievementsByUser,\n      actionGetRecommendationsByUser,\n      actionUpdateUserInfo,\n      actionGetAchievementsData\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditProfile);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem, FormGroup, FormControl } from 'react-bootstrap';\n\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\nimport _ from 'lodash';\n\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport {\n  ZoomInAndOut,\n  getThumbImage,\n  getLocalStorage,\n  limitCharacter\n} from '../../common/commonFunctions';\nimport SearchUserList from '../../common/searchDropdown/searchUserList';\nimport ChangePassword from '../../common/changePassword/changePassword';\nimport {\n  actionUserLogout,\n  actionGetHeaderCount,\n  actionUpdateHeaderCount,\n  actionChangePasswordStatus\n} from '../../common/core/redux/actions';\nimport userDefaultImage from '../../assets/img/default-img.PNG';\n\nlet AsyncTypeahead = asyncContainer(Typeahead);\nvar keyCheck=false,renderChangeMenu=false;\nclass Header extends Component { \n\n  logout = () => {\n    this.props.actionUserLogout();\n    this.props.history.push('/');\n  };\n  \n  render() {\n    return (\n    <Navbar fluid={true}>\n      {/* <Navbar.Header>\n        <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\">\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n        </button>\n      </Navbar.Header> */}\n\n      <Navbar.Collapse>\n\n        {/* <Nav>\n          <NavItem><i className=\"fa fa-dashboard\"></i></NavItem>\n          <NavDropdown title={<i className=\"fa fa-globe\" />} id=\"basic-nav-dropdown\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem>\n          </NavDropdown>\n        </Nav> */}\n        <div className=\"separator\"></div>\n        {this.props.user && this.props.user.roleId == 4 ? <Navbar.Form pullLeft>\n          <FormGroup>\n            <span className=\"input-group-addon\"> <Link to=\"/admin/candidate\">Admin</Link></span>           \n          </FormGroup>\n        </Navbar.Form> :null}\n        <Nav pullRight>\n          {/* <NavItem> <Link to=\"/interviewer/timeSlots\">Time Slot </Link></NavItem>\n          <NavDropdown title=\"Dropdown\" id=\"right-nav-bar\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem>\n          </NavDropdown> */}\n          <NavItem onClick={this.logout}>Log out</NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n  }}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    headerCount: state.User.headerCount\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionUserLogout,\n      actionGetHeaderCount,\n      actionUpdateHeaderCount,\n      actionChangePasswordStatus\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\n\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Portal } from 'react-overlays';\nimport {\n  Button,\n  Modal,\n  Form,\n  FormGroup,\n  Checkbox,\n  Col,\n  ControlLabel,\n  FormControl,\n  InputGroup,\n  Radio\n} from 'react-bootstrap';\nimport Header from '../header/header';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.css';\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\n//import DatePicker from 'react-datepicker';\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionGetStudentList } from '../../common/core/redux/actions';\nimport { actionSetStudentAsUser } from '../../common/core/redux/actions';\nimport moment from 'moment';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport classnames from 'classnames';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport _ from 'lodash';\nimport VideoPlayer from 'react-video-js-player';\n\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport {\n  renderMessage,\n  isValidURL,\n  ZoomInAndOut,\n  generateTimestamp\n} from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\n//import MediaList from '../mediaList';\n\nlet validationMessages = CONSTANTS.validationMessages;\nlet regExpressions = CONSTANTS.regExpressions;\nlet badgeImgArray = [];\nlet badgeImgPreview = [];\nlet certificateImgArray = [];\nlet certificateImgPreview = [];\nlet mediaImgArray = [];\nlet mediaImgPreview = [];\nconst emptyToDate = '10000000';\n\n\n\nclass ShowVideo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {   \n        // video: {\n        //     src: this.props.chatLink,\n        //     poster: \"http://www.example.com/path/to/video_poster.jpg\"         \n        // }, \n        showVideoModal:true\n    }; \n  }\n\n  componentWillMount() {   \n      console.log(typeof(this.props.chatLink));\n      console.log(this.props.userId);\n     let videoLink = this.props.chatLink;   \n     this.setState({chatLink:this.props.chatLink });\n  }\n\n\nonPlayerReady(player){\n    console.log(\"Player is ready: \", player);\n    this.player = player;\n}\n\nonVideoPlay(duration){\n    console.log(\"Video played at: \", duration);\n}\n\nonVideoPause(duration){\n    console.log(\"Video paused at: \", duration);\n}\n\nonVideoTimeUpdate(duration){\n    console.log(\"Time updated: \", duration);\n}\n\nonVideoSeeking(duration){\n    console.log(\"Video seeking: \", duration);\n}\n\nonVideoSeeked(from, to){\n    console.log(`Video seeked from ${from} to ${to}`);\n}\n\nonVideoEnd(){\n    console.log(\"Video ended\");\n}\n\n\n\n\n  closeShowVideoModal = status => {   \n    this.setState({\n      showVideoModal: false\n      \n    });   \n    this.props.closeShowVideoComponent();\n  };\n\n  render() {\n    let self = this;\n    const { isLoading } = this.state;  \n     console.log(self.props.chatLink);\n  \n    return (\n      <Modal\n      bsSize=\"large\"\n      show={this.state.showVideoModal}\n      onHide={this.closeShowVideoModal.bind(this, 'close')}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <ToastContainer\n        autoClose={5000}\n        className=\"custom-toaster-main-cls\"\n        toastClassName=\"custom-toaster-bg\"\n        transition={ZoomInAndOut}\n      />\n      <Modal.Header closeButton>\n        <Modal.Title className=\"subtitle text-center\">\n         Video           \n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n         {this.state.chatLink ?     <VideoPlayer\n                        controls={true}\n                        src={this.state.chatLink}\n                       // poster={this.state.video.poster}\n                        width=\"720\"\n                        height=\"420\"\n                        type=\"video/webm\" \n                        onReady={this.onPlayerReady.bind(this)}\n                        onPlay={this.onVideoPlay.bind(this)}\n                        onPause={this.onVideoPause.bind(this)}\n                        onTimeUpdate={this.onVideoTimeUpdate.bind(this)}\n                        onSeeking={this.onVideoSeeking.bind(this)}\n                        onSeeked={this.onVideoSeeked.bind(this)}\n                        onEnd={this.onVideoEnd.bind(this)}\n                    /> : \"Video is not available\"}   \n              </Modal.Body>\n          <Modal.Footer>\n       \n           \n           </Modal.Footer>\n           </Modal>          \n            \n     \n    );\n  }\n}\nShowVideo = validation(strategy)(ShowVideo);\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { actionGetStudentList, actionSetStudentAsUser },\n    dispatch\n  );\n};\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShowVideo);\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Collapse } from 'react-bootstrap';\n\n\n//import backgroundImage from '../../assets/images/sidebar-5.jpg';\n\nclass SideBar extends Component {\n\n   constructor(props){\n     super(props);\n     \n   }\n\n   componentWillMount(){\n    \n    this.setState({jobDescription: this.props.jobDescription});\n\n   }\n\n  state = {};\n\n  render() {\n    let {\n      location,\n      backgroundColor,\n      enableBackgroundImage,\n  //    backgroundImage\n    } = this.props;\n\n    return (\n      <div className=\"usersidebar\">\n\n            <div  >\n \n \n <div className=\"\">\n  \n   <div className=\"\">\n     <div className=\"\">\n      <div className=\"\">\n      <img  src=\"\" style={{width:\"100%\"}} alt=\"Avatar\" />          \n            \n      <div className=\"profile-pic\">\n      <div className=\"editProfile--wrapper\">\n                    <div className=\"\">    \n       \n                      <span className=\"icon-camera icon\" />  \n        </div>  </div>  </div>   \n      </div>      \n      <div className=\"w3-container\">\n      <p><i className=\"fa fa-user fa-fw w3-margin-right w3-large w3-text-teal\"></i></p>\n        <p><i className=\"fa fa-briefcase fa-fw w3-margin-right w3-large w3-text-teal\"></i>Designer</p>\n        <p><i className=\"fa fa-home fa-fw w3-margin-right w3-large w3-text-teal\"></i>London, UK</p>\n        <p><i className=\"fa fa-envelope fa-fw w3-margin-right w3-large w3-text-teal\"></i></p>\n        <p><i className=\"fa fa-phone fa-fw w3-margin-right w3-large w3-text-teal\"></i>1224435534</p>\n        <p><i className=\"fa fa-video-camera fa-fw w3-margin-right w3-large w3-text-teal\"></i>Video Introduction </p>\n  \n        {/* <p className=\"w3-large\"><b><i className=\"fa fa-asterisk fa-fw w3-margin-right w3-text-teal\"></i>Skills</b></p>\n        <p>Adobe Photoshop</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"90%\"}}>90%</div>\n        </div>\n        <p>Photography</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"80%\"}}>\n            <div className=\"w3-center w3-text-white\">80%</div>\n          </div>\n        </div>\n        <p>Illustrator</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"75%\"}}>75%</div>\n        </div>\n        <p>Media</p>\n        <div className=\"w3-light-grey w3-round-xlarge w3-small\">\n          <div className=\"w3-container w3-center w3-round-xlarge w3-teal\" style={{width:\"50%\"}}>50%</div>\n        </div>\n        className\n  \n        <p className=\"w3-large w3-text-theme\"><b><i className=\"fa fa-globe fa-fw w3-margin-right w3-text-teal\"></i>Languages</b></p>\n        <p>English</p>\n        <div className=\"w3-light-grey w3-round-xlarge\">\n          <div className=\"w3-round-xlarge w3-teal\" style={{height:\"24px\",width:\"100%\"}}></div>\n        </div>\n        <p>Spanish</p>\n        <div className=\"w3-light-grey w3-round-xlarge\">\n          <div className=\"w3-round-xlarge w3-teal\" style={{height:\"24px\",width:\"55%\"}}></div>\n        </div>\n        <p>German</p>\n        <div className=\"w3-light-grey w3-round-xlarge\">\n          <div className=\"w3-round-xlarge w3-teal\" style={{height:\"24px\",width:\"25%\"}}></div>\n        </div>\n        className\n      </div> */}\n       </div>\n    </div>  \n  </div> </div>\n  </div>\n      </div>\n    )\n  }\n}\n\n\nexport default SideBar;\n","import React, { Component } from 'react';\r\nimport Header from '../header/header';\r\nimport SideBar from '../header/sidebar';\r\n// import {\r\n//   Button,\r\n//   Media,\r\n//   Row,\r\n//   Col,\r\n//   FormControl,\r\n//   InputGroup\r\n// } from 'react-bootstrap';\r\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Slider from 'react-slick';\r\nimport _ from 'lodash';\r\nimport S3FileUpload from 'react-s3';\r\n\r\n//import Summary from './summary/addSummary';\r\nimport ShowVideo from '../jobDescription/showVideo';\r\n\r\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport DownloadLink from \"react-download-link\";\r\n//import Img from '../../common/cropper/img';\r\nimport {\r\n  showErrorToast,\r\n  uploadToAzure,\r\n  limitCharacter,\r\n  SampleNextArrow,\r\n  SamplePrevArrow,\r\n  getThumbImage,\r\n  ZoomInAndOut\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n\r\nimport {\r\n  actionGetStudentPersonalInfo,\r\n  actionGetAllCompetency,\r\n  actionGetAchievementsByUser,\r\n  actionGetRecommendationsByUser,\r\n  actionUpdateUserInfo,\r\n  actionGetAchievementsData\r\n} from '../../common/core/redux/actions';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport SpiderChart from '../../common/spiderChart/spiderChart';\r\n\r\n\r\nconst config = {\r\n  bucketName: 'ankurself',\r\n  dirName: 'photos', /* optional */\r\n  region: 'ap-south-1', // Put your aws region here\r\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\r\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\r\n}\r\n\r\n\r\nvar settings = {\r\n  dots: false,\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 3,\r\n  swipeToSlide: true,\r\n  nextArrow: <SampleNextArrow props={this.props} />,\r\n  prevArrow: <SamplePrevArrow props={this.props} />,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n        dots: true\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n        initialSlide: 2\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nclass UserMapping extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.state = {      \r\n      showJobDescriptionComponent: false,      \r\n      jobDescriptionDetail: {},        \r\n     \r\n      loader1: false,\r\n      loader2: false,      \r\n      jobDescriptionListData: [],\r\n      showVideoComponent: false,     \r\n      userData:{},     \r\n      showDropdown: false,     \r\n      isActive: 'true',     \r\n      contentEditable: false,\r\n      editName: false,\r\n      name: '',\r\n      editTagLine: false\r\n    };\r\n   /// this.textInput = React.createRef();    \r\n  }\r\n\r\n  componentWillMount() {\r\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\r\n    if(user){\r\n      let userId =user.userId;       \r\n      this.setState({userId: userId,user:user,roleId:user.roleId});\r\n    }    \r\n    let jobDetail= this.props.location.state.jobDetail;\r\n    console.log(jobDetail);\r\n    if(jobDetail){\r\n      if(this.props.user.roleId == 4){\r\n        this.getUserListForMapping(jobDetail.jobDescId);  \r\n      }else{\r\n        this.getUserListForHR(jobDetail.jobDescId);  \r\n      }  \r\n      this.setJobDescriptionData(jobDetail);   \r\n    } \r\n  }\r\n\r\n  setJobDescriptionData(jobDescription){\r\n     this.setState({\r\n      jobDescription:jobDescription,\r\n      description: jobDescription.description,\r\n      title: jobDescription.title,\r\n      jobId:jobDescription.jobDescId \r\n\r\n     });\r\n  }\r\n\r\n  getUserListForMapping(jobId){\r\n    theRapidHireApiService('getUserListForMapping',{jobId})\r\n    .then(response => {     \r\n      if (response.data.status === \"Success\") {\r\n         let jobDescriptionListData= this.state.jobDescriptionListData;\r\n         jobDescriptionListData= response.data.result;\r\n     \r\n         this.setState({jobDescriptionListData: jobDescriptionListData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getUserListForHR(jobId){\r\n    theRapidHireApiService('getUserListForHR',{jobId})\r\n    .then(response => {     \r\n      if (response.data.status === \"Success\") {\r\n         let jobDescriptionListData= this.state.jobDescriptionListData;\r\n         jobDescriptionListData= response.data.result;\r\n     \r\n         this.setState({jobDescriptionListData: jobDescriptionListData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  handleSubmit = (data,action) => {\r\n    let jobMapId=data.jobMapId;\r\n    let jobId=this.state.jobId;\r\n    let candidateId=data.userId;\r\n    let hrId=this.state.userId;\r\n    let status= action;\r\n    let createdBy= this.props.user.userId;\r\n\r\n    let dataMap={\r\n      jobMapId,\r\n      jobId,\r\n      candidateId,\r\n      hrId,\r\n      status,\r\n      createdBy        \r\n    }\r\n    \r\n    if(jobMapId!==\"\" || jobMapId!==null){\r\n        theRapidHireApiService('createJobMap',dataMap)\r\n        .then(response => {     \r\n          if (response.data.status === \"Success\") {\r\n            this.getUserListForMapping(this.state.jobId);   \r\n            //  let jobDescriptionListData= this.state.jobDescriptionListData;\r\n            //  jobDescriptionListData= response.data.result;\r\n        \r\n            //  this.setState({jobDescriptionListData: jobDescriptionListData});\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }else{\r\n      theRapidHireApiService('updateJobMap',dataMap)\r\n      .then(response => {     \r\n        if (response.data.status === \"Success\") {\r\n          this.getUserListForMapping(this.state.jobId);   \r\n          //  let jobDescriptionListData= this.state.jobDescriptionListData;\r\n          //  jobDescriptionListData= response.data.result;\r\n      \r\n          //  this.setState({jobDescriptionListData: jobDescriptionListData});\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n    \r\n\r\n\r\n  contentEditable = () => {\r\n    window.scrollTo(500, 0);\r\n    //console.log(!this.state.contentEditable);\r\n    this.setState({ contentEditable: !this.state.contentEditable });\r\n  };\r\n\r\n  setProfileData = data => {\r\n    //console.log(data);\r\n    if (data) {\r\n      let userId = data.userId;\r\n      let summary = data.summary;\r\n      let firstName = data.firstName;\r\n      let lastName = data.lastName;\r\n      // let tagline = data.tagline.trim();\r\n      // let editTag = data.tagline.trim();\r\n      let tagline = data.tagline ? data.tagline.trim() : null;\r\n      let editTag = data.tagline ? data.tagline.trim() : null;\r\n\r\n      let name =\r\n        (data.firstName ? data.firstName : '') +\r\n        ' ' +\r\n        (data.lastName ? data.lastName : '');\r\n      let profileImage = data.profilePicture;\r\n      if (profileImage) {\r\n        profileImage = getThumbImage('medium', profileImage);\r\n      }\r\n      let coverImage = data.coverImage;\r\n      if (coverImage) {\r\n        coverImage = getThumbImage('original', coverImage);\r\n      }\r\n      let isActive = data.isActive;\r\n      this.setState({\r\n        editTag,\r\n        summary,\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        profileImage,\r\n        coverImage,\r\n        tagline,\r\n        isActive,\r\n        name\r\n      });\r\n    }\r\n  };  \r\n\r\n \r\n  showVideoComponent = index => {   \r\n    let jobDescriptionListData= this.state.jobDescriptionListData;\r\n    if(jobDescriptionListData[index])\r\n     jobDescriptionListData[index]['showVideoComponent']= jobDescriptionListData[index]['showVideoComponent'] ? !jobDescriptionListData[index]['showVideoComponent']: true;\r\n    this.setState({\r\n      jobDescriptionListData: this.state.jobDescriptionListData   \r\n    }); \r\n  };\r\n\r\n  editJobDescriptionComponent = jobDescriptionDetail => {\r\n    console.log(jobDescriptionDetail);\r\n    this.setState({\r\n      jobDescriptionDetail: jobDescriptionDetail ,\r\n      showJobDescriptionComponent: !this.state.showJobDescriptionComponent    \r\n    });\r\n  }\r\n\r\n \r\n\r\n  getProfileData = () => {\r\n    let userId = this.state.userId;\r\n    this.props.actionGetStudentPersonalInfo(userId);\r\n  };\r\n  \r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  toggleDropdown = () => {\r\n    this.setState({\r\n      showDropdown: !this.state.showDropdown\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };  \r\n\r\n\r\n  showVideoHistory = data =>{\r\n    this.props.history.push({\r\n      pathname: '/recruiter/videoHistory',\r\n      state: {\r\n        userId: data.userId\r\n      }\r\n    });\r\n  }\r\n \r\n \r\n  render() {let self= this;\r\n    return (\r\n    //  <div className=\"wrapper\">\r\n   \r\n       /* <SideBar jobDescription={this.state.jobDescription} /> */\r\n      //  <Header {...this.props} />     \r\n        // <div className=\"main-panel\">   \r\n        // <div className=\"w3-content main-panel1\">    \r\n          /* <div className=\"\">\r\n            <div className=\"\">\r\n              <img\r\n                src=\"../../assets/img/svg-loaders/three-dots.svg\"\r\n                width=\"50\"\r\n                alt=\"loader\"\r\n                style={\r\n                  this.state.loader2 === true\r\n                    ? { visibility: 'visible' }\r\n                    : { visibility: 'hidden' }\r\n                }\r\n              />\r\n            </div>\r\n            {!this.state.coverImage ? (\r\n              <img className=\"bannerImg\" src=\"\" alt=\"\" />\r\n            ) : (\r\n              <img className=\"bannerImg\" src={this.state.coverImage} alt=\"\" />\r\n            )}\r\n          \r\n\r\n          <div className=\"\">                      \r\n            <div className=\"\">\r\n              <ul className=\"\">     \r\n                  <li className=\"\">\r\n                    <div className=\"\">\r\n                      <p>Desired Career Profile</p>\r\n                    </div>\r\n\r\n                    <div className=\"\">\r\n                    <div className=\"\">\r\n                    <a  onClick={this.showJobDescriptionComponent.bind(\r\n                            this                            \r\n                          )}\r\n                          className={                           \r\n                              'btn btn-primary with-icon smallBtn mr-1'                            \r\n                          }\r\n                          style={{ cursor: 'pointer' }}>\r\n                          {' '}\r\n                          <span className=\"icon-plus\" /> {this.state.title}\r\n                        </a>\r\n                                       \r\n    \r\n\r\n                             {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map((data, index) => (\r\n                                  <div key={index} className=\"relative--box\">\r\n                                  <ul>\r\n                                      <li>{data.title}</li>\r\n                                </ul>\r\n                                  <div className=\"content-box--edit text-left\">\r\n                                    <a\r\n                                      onClick={this.editJobDescriptionComponent.bind(\r\n                                        this,\r\n                                        data\r\n                                      )}\r\n                                    >\r\n                                      <span className=\"icon-edit_pencil icon\" />\r\n                                    </a>\r\n                                  </div>  \r\n                                  </div>                               \r\n                                ))\r\n                            }                    \r\n                    </div></div>\r\n                  </li>\r\n        \r\n              </ul>\r\n            </div>\r\n            </div>\r\n      \r\n             \r\n          </div>\r\n          <ul>\r\n        {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map((data, index) => (\r\n           \r\n           <li>   <div className=\"ankurNewBox\">\r\n                <div key={index} className=\"relative--box\">\r\n                                  <ul>\r\n                                      <li>{data.firstName}</li>\r\n                                </ul>\r\n                                  <div className=\"content-box--edit text-left\">\r\n                                    <a\r\n                                      onClick={this.editJobDescriptionComponent.bind(\r\n                                        this,\r\n                                        data,\r\n                                        null\r\n                                      )}\r\n                                    >\r\n                                      <span className=\"icon-edit_pencil icon\" />\r\n                                    </a>\r\n                                  </div>  \r\n                                  </div>  \r\n                                {this.props.user.userId !== this.state.userId ?      \r\n                                 <div className=\"buttonAnkur\">\r\n                                   <a\r\n                                      onClick={this.handleSubmit.bind(\r\n                                        this,\r\n                                        data,\r\n                                        null\r\n                                      )}\r\n                                    >\r\n                                     Go For Map\r\n                                    </a>\r\n                  </div> : \r\n                  <div>\r\n                                <div className=\"buttonAnkur\">\r\n                                  <a\r\n                                    onClick={this.handleSubmit.bind(\r\n                                      this,\r\n                                      data,\r\n                                      'Shortlist'\r\n                                    )}\r\n                                  >\r\n                                  Shortlist\r\n                                  </a>\r\n                                  </div>\r\n                                  \r\n                                  <div className=\"buttonAnkur\">\r\n                                  <a\r\n                                    onClick={this.handleSubmit.bind(\r\n                                      this,\r\n                                      data,\r\n                                      'Rejected'\r\n                                    )}\r\n                                  >\r\n                                  Rejected\r\n                                  </a>\r\n                                  </div>\r\n                      </div>\r\n                      }    \r\n              </div>  \r\n              </li>\r\n            ))}  </ul>\r\n        </div> */\r\n\r\n\r\n/* <div className=\"card\">\r\n    <div className=\"content table-responsive table-full-width\">\r\n      <table className=\"table table-bigboy\">\r\n        <thead>\r\n          <tr>          \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map(item => (\r\n            <tr>\r\n              <td style={{float:\"\"}}>\r\n                <div className=\"img-container\" style={{width:\"100px\"}}>\r\n                  <img src={item.profilePicture}  />\r\n                </div>\r\n              </td>\r\n              <td className=\"text-left td-name\">\r\n                {item.firstName} {item.lastName}\r\n              </td>\r\n              <td className=\"td-name\">\r\n                {item.firstName} {item.lastName}\r\n              </td>\r\n               <td>\r\n               <Button\r\n                  bsStyle=\"primary no-bold no-round mr-1\"\r\n                  className=\"no-bold no-round\"\r\n               \r\n                \r\n                >    Watch\r\n              </Button>\r\n              </td>\r\n             \r\n              <td className=\"td-actions\">\r\n               \r\n              </td>\r\n            </tr>\r\n          ))}\r\n\r\n\r\n           \r\n          \r\n\r\n\r\n        </tbody>\r\n      </table>\r\n    </div></div> */\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <div className=\"wrapper\">\r\n     <ToastContainer\r\n        autoClose={5000}\r\n        className=\"custom-toaster-main-cls\"\r\n        toastClassName=\"custom-toaster-bg\"\r\n        transition={ZoomInAndOut}\r\n      />\r\n        <Header {...this.props} />     \r\n          <div className=\"main-panel\">          \r\n        \r\n\r\n        <div className=\"w3-content main-panel1\">\r\n        \r\n          <div className=\"container main\">\r\n           \r\n\r\n            {/* <div className=\"button--wrapper mb-1 text-center flex flex-1 justify-center dashBtnCenter\">\r\n              <button\r\n                className=\"btn btn-with-border with-icon smallBtn mr-1\"\r\n                onClick={this.viewSampleProfile}\r\n              >\r\n                View Sample Profile\r\n              </button>              \r\n              <button\r\n                className=\"btn btn-with-border with-icon smallBtn\"\r\n                onClick={this.addStudentModel}\r\n              >\r\n                <span className=\"icon-plus\" />\r\n                add student\r\n              </button>\r\n            </div> */}\r\n            {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map(function(data, index) {\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className=\"suggestion-usd\"\r\n                    id={'student_' + data.userId}\r\n                  >\r\n                    <div className=\"student-img deflt-icon centeredBox flex\">\r\n                      {data.profilePicture ? (\r\n                        <img\r\n                          src={data.profilePicture}\r\n                          alt=\"\"\r\n                          className=\"img-responsive\"\r\n                        />\r\n                      ) : (\r\n                        <div className=\"pp-default\">\r\n                          <span className=\"icon-user_default2\" />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"student-info flex justify-content-space-between\">\r\n                      <div className=\"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\">\r\n                        <div className=\"flex-1\">\r\n                          <h3>\r\n                            {data.firstName\r\n                              ? data.firstName +\r\n                                ' ' +\r\n                                (data.lastName ? data.lastName : '')\r\n                              : null}\r\n                          </h3>\r\n                          <p>{data.email}</p>\r\n                          <p>{data.experience}</p>\r\n                        </div>\r\n\r\n                         <div className=\"flex-1\">\r\n                          <h6>\r\n                            {data.profileRole[0] && data.profileRole[0].profileRole ? data.profileRole[0].profileRole :null}                            \r\n                          </h6>\r\n                          {data.skills && data.skills.map(item => ( <p className=\"p--name wrap-long-words\">{\r\n                                                                                    limitCharacter(item.skillName,8)}</p>))}\r\n                        </div>\r\n\r\n                        <div className=\"btn-group flex align-center\">                 \r\n                        {self.props.user.roleId == 4 ?\r\n                            <button onClick={self.handleSubmit.bind(\r\n                                    self,\r\n                                    data,\r\n                                    null                          \r\n                                  )} \r\n                              className=\"btn btn-primary no-round\"\r\n                            //  onClick={self.handleClickProfile.bind(self, data)}\r\n                            >\r\n                              Map\r\n                            </button>                       \r\n                          :\r\n                          <button onClick={self.showVideoComponent.bind(\r\n                            self,\r\n                            index                            \r\n                          )} \r\n                            className=\"btn btn-primary no-round\"\r\n                          //  onClick={self.handleClickProfile.bind(self, data)}\r\n                          >\r\n                           Watch\r\n                          </button>}\r\n                          {data.showVideoComponent ==\r\n                              true ? (\r\n                                <ShowVideo\r\n                                  closeShowVideoComponent={\r\n                                    self.showVideoComponent\r\n                                  }                                 \r\n                                  chatLink={\r\n                                    data.chatLink\r\n                                  }\r\n                                  userId={data.userId}\r\n                                />\r\n                              ) : (\r\n                                '')}\r\n                          &nbsp; &nbsp;\r\n\r\n                          \r\n                          <button onClick={self.showVideoHistory.bind(\r\n                            self,\r\n                            data                            \r\n                          )} \r\n                            className=\"btn btn-primary no-round\"\r\n                          //  onClick={self.handleClickProfile.bind(self, data)}\r\n                          >\r\n                           History\r\n                          </button>\r\n                                              \r\n                          <DropdownButton\r\n                            className=\"burger-trigger\"\r\n                            title={<span className=\"icon-burger\" />}\r\n                            id=\"1\"\r\n                          >\r\n                            <MenuItem\r\n                              // onSelect={self.addParentModel.bind(\r\n                              //   this,\r\n                              //   data.userId\r\n                              // )}\r\n                            >\r\n                              <i className=\"m-ico icon-plus\" />\r\n                              Add Parent\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                              onSelect={() =>\r\n                                self.props.history.push({\r\n                                  pathname: '/parent/list',\r\n                                  state: { studentData: data }\r\n                                })\r\n                              }\r\n                            >\r\n                              <i className=\"m-ico icon-parent\" /> Parent List\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                              onSelect={() =>\r\n                                self.props.history.push({\r\n                                  pathname: '/student/profilelog',\r\n                                  state: { profileOwner: data.userId }\r\n                                })\r\n                              }\r\n                            >\r\n                              <i className=\"m-ico icon-profile-sharing\" />{' '}\r\n                              Profile Sharing Log\r\n                            </MenuItem>\r\n\r\n                            <MenuItem\r\n                            //   onSelect={self.deleteStudent.bind(\r\n                            //     this,\r\n                            //     data.userId,\r\n                            //     self.props.parent.userId\r\n                            //   )}\r\n                            >\r\n                              <i className=\"m-ico icon-delete\" /> Delete\r\n                            </MenuItem>\r\n                          </DropdownButton>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* <div className=\"flex align-center justify-content-space-bettween tag-wrap\">\r\n                        <div className=\"promo-tag br-light\">\r\n                          Skills <span>{data.accomplishment}</span>\r\n                        </div>\r\n                       \r\n                        <div className=\"promo-tag\">\r\n                          Location <span>{data.recommendation}</span>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>         \r\n          {/* {this.state.addStudentModel ? (\r\n            <AddMoreStudent\r\n              addStudentModel={this.state.addStudentModel}\r\n              closeAddStudentModel={this.addStudentModel}\r\n            />\r\n          ) : null} */}\r\n        </div></div>\r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    // </div></div>\r\n    //   </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    otherUser: state.User.otherUserInfoData,\r\n    student: state.Student\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      actionGetStudentPersonalInfo,\r\n      actionGetAllCompetency,\r\n      actionGetAchievementsByUser,\r\n      actionGetRecommendationsByUser,\r\n      actionUpdateUserInfo,\r\n      actionGetAchievementsData\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserMapping);\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\nimport Header from '../header/header';\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionGetStudentList } from '../../common/core/redux/actions';\r\nimport { actionSetStudentAsUser } from '../../common/core/redux/actions';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp,\r\n  showSuccessToast\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass AddJobDescription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      jobDescriptionDetail: {},     \r\n      jobDescriptionListData: [],     \r\n      designation:'',\r\n      organisation:'',\r\n      profileRoleList:[],\r\n      titleNotAvailable:false,\r\n      jobDescriptionModal:true,\r\n      jobDescId:'',\r\n      associateList: [],\r\n      skillsList:[],\r\n      locationList: [{\r\n              value: 1 ,\r\n              label: 'Indore'},\r\n              {\r\n                value: 2 ,\r\n                label: 'Bhopal'},\r\n                {\r\n                  value: 2 ,\r\n                  label: 'Dewas'}\r\n              ]              \r\n         \r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n      //  projectName: 'required'\r\n       \r\n        // level3Competency: 'required',\r\n        // skills: 'required',\r\n        // importance: 'required',\r\n        // //   startDate: 'required',\r\n        // //  endDate: 'required',\r\n        // firstName: ['regex:' + regExpressions.alphaOnly],\r\n        // lastName: ['regex:' + regExpressions.alphaOnly],\r\n        // email: 'email'\r\n      },\r\n      {\r\n   //     'required.designation': validationMessages.designation.required\r\n        \r\n        // 'required.level3Competency': validationMessages.competency.required\r\n        // 'required.skills': validationMessages.skills.required,\r\n        // 'required.importance': validationMessages.importance.required,\r\n        // //  'required.startDate': validationMessages.startDate.required,\r\n        // //  'required.endDate': validationMessages.endDate.required,\r\n        // 'email.email': validationMessages.email.invalid,\r\n        // 'regex.firstName': validationMessages.firstName.alphaOnly,\r\n        // 'regex.lastName': validationMessages.lastName.alphaOnly\r\n      }\r\n    );\r\n    this.getKeySkillsList();\r\n    this.getProfileRoleList();\r\n  }\r\n\r\n\r\n  getProfileRoleList(){\r\n    theRapidHireApiService('getProfileRoleList')\r\n    .then(response => {     \r\n      console.log(response);\r\n      if (response.data.status === 'Success') {\r\n        let profileRoleList= this.state.profileRoleList;\r\n        response.data.result.forEach(function(data){       \r\n           profileRoleList.push({label: data.profileRole,value:data.profileRoleId })\r\n        })  \r\n       \r\n        this.setState({profileRoleList: profileRoleList});\r\n          }\r\n        })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getKeySkillsList(){\r\n    theRapidHireApiService('getKeySkillsList')\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n         let skillsList= this.state.skillsList;      \r\n         response.data.result.forEach(function(data){        \r\n            skillsList.push({label: data.skillName,value:data.skillId })\r\n        })   \r\n       \r\n         this.setState({skillsList: skillsList});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  setProfileData = data => {\r\n    //console.log(data);\r\n    if (data) {\r\n      let userId = data.userId;\r\n      let summary = data.summary;\r\n      let firstName = data.firstName;\r\n      let lastName = data.lastName;\r\n      // let tagline = data.tagline.trim();\r\n      // let editTag = data.tagline.trim();\r\n      let tagline = data.tagline ? data.tagline.trim() : null;\r\n      let editTag = data.tagline ? data.tagline.trim() : null;\r\n\r\n      let name =\r\n        (data.firstName ? data.firstName : '') +\r\n        ' ' +\r\n        (data.lastName ? data.lastName : '');\r\n      let profileImage = data.profilePicture;\r\n      if (profileImage) {\r\n        profileImage =  profileImage;\r\n      }\r\n      let coverImage = data.coverImage;\r\n      if (coverImage) {\r\n        coverImage =  coverImage;\r\n      }\r\n      let isActive = data.isActive;\r\n      this.setState({\r\n        editTag,\r\n        summary,\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        profileImage,\r\n        coverImage,\r\n        tagline,\r\n        isActive,\r\n        name\r\n      });\r\n    }\r\n  };  \r\n\r\n  closeAchievementyModal = status => {\r\n    \r\n    this.setState({      \r\n    });\r\n    \r\n  };\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n     let userId = this.props.userData.userId;\r\n     this.setState({userId:userId})\r\n    // }  \r\n    console.log('this.props.employmentDetail ',this.props.jobDescriptionDetail);\r\n    this.setJobDescriptionData(this.props.jobDescriptionDetail);\r\n    this.getKeySkillsList();\r\n    this.getJobDescriptionDetails(userId);\r\n  }\r\n\r\n  getJobDescriptionDetails(userId){\r\n    theRapidHireApiService('getJobDescriptonListById',{userId})\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n         let jobDescriptionListData= this.state.jobDescriptionListData;\r\n         jobDescriptionListData= response.data.result[0];         \r\n         this.setState({jobDescriptionListData: jobDescriptionListData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  setJobDescriptionData = data => { \r\n    if(data){ \r\n      this.setState({      \r\n           recruiterId:data.recruiterId  ,\r\n           title : data.title,\r\n           companyId:data.companyId,\r\n           description : data.description,\r\n           noOfPosition : data.noOfPosition,\r\n           minExperience : data.minExperience,                \r\n           maxExperience : data.maxExperience,    \r\n           location :data.location,      \r\n           skills:data.skills,\r\n           postedBy:data.postedBy,\r\n           jobDescId:data.jobDescId                   \r\n        })       \r\n      }; \r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    console.log(endDate);\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      let imageObject = {\r\n        media: self.state.mediaImgArray || []\r\n      };\r\n\r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        } else {\r\n          self.handleSubmit();\r\n        }      \r\n    });\r\n  };  \r\n\r\n  handleSubmit() {     \r\n   let description = this.state.description;\r\n   let noOfPosition = parseInt(this.state.noOfPosition,10);\r\n   let minExperience = parseInt(this.state.minExperience,10);   \r\n   let maxExperience = parseInt(this.state.maxExperience,10);    \r\n   let location= [];\r\n   this.state.location.forEach(function(item){\r\n    location.push(item.label);\r\n   })    \r\n   let skills = [];     \r\n   this.state.skills.forEach(function(item){\r\n    skills.push({skillId:item.value,skillName:item.label});\r\n   })   \r\n\r\n   let title = this.state.profileRole && this.state.profileRole.label !== CONSTANTS.OTHER? this.state.profileRole.label: this.state.title;\r\n   let titleId= this.state.profileRole && this.state.profileRole.label !== CONSTANTS.OTHER ? this.state.profileRole.value: null\r\n   \r\n    let userId = this.state.userId;\r\n    let postedBy = this.props.user.userId;\r\n    let jobDescId=  this.state.jobDescId;   \r\n\r\n   \r\n    let data = {\r\n      title,\r\n      titleId,\r\n      userId,\r\n      description,\r\n      jobDescId,    \r\n      noOfPosition,\r\n      minExperience,\r\n      maxExperience,\r\n      location,\r\n      postedBy,\r\n      skills\r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.jobDescId || this.state.jobDescId === '') {\r\n      theRapidHireApiService('addJobDescription', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n            showSuccessToast('Job Description added');\r\n            self.closeJobDescriptionModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('getJobDescriptonListById', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n            self.closeJobDescriptionModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n\r\n  handleProfileRoleChange = newValue => {\r\n    if(newValue.label == CONSTANTS.OTHER){      \r\n        this.setState({titleNotAvailable: true});\r\n    }else{\r\n      this.setState({titleNotAvailable: false});\r\n    }\r\n    this.setState({\r\n      profileRole: newValue\r\n    });    \r\n  };\r\n\r\n \r\n  handleLocationChange = newValue => {\r\n    this.setState({\r\n      location: newValue\r\n    });\r\n  };\r\n\r\n  handleSkillsChange = newValue => {\r\n    this.setState({\r\n      skills: newValue\r\n    });\r\n  };\r\n  \r\n\r\n  closeJobDescriptionModal = status => {   \r\n    this.setState({\r\n      jobDescriptionModal: false\r\n      \r\n    });   \r\n    this.props.closeJobDescriptionComponent();\r\n  };\r\n\r\n  render() {\r\n    let self = this;\r\n    const { isLoading } = this.state;\r\n    const cssClasses = {\r\n      root: 'input-group mb-1',\r\n      input: 'form-control'\r\n    };\r\n    const inputProps = {\r\n      value: this.state.streetAddress1,\r\n      onChange: this.onChange,\r\n      placeholder: 'Street Address1',\r\n      type: 'text'\r\n    };\r\n    const defaultStyles = {\r\n      root: {\r\n        position: 'relative',\r\n        paddingBottom: '0px'\r\n      },\r\n      input: {\r\n        display: 'inline-block',\r\n        width: '100%',\r\n        padding: '10px'\r\n      },\r\n      autocompleteContainer: {\r\n        position: 'absolute',\r\n        top: '100%',\r\n        backgroundColor: 'white',\r\n        border: '1px solid #555555',\r\n        width: '100%'\r\n      },\r\n      autocompleteItem: {\r\n        backgroundColor: '#ffffff',\r\n        padding: '10px',\r\n        color: '#555555',\r\n        cursor: 'pointer'\r\n      },\r\n      autocompleteItemActive: {\r\n        backgroundColor: '#fafafa'\r\n      }\r\n    };\r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n      bsSize=\"large\"\r\n      show={this.state.jobDescriptionModal}\r\n      onHide={this.closeJobDescriptionModal.bind(this, 'close')}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <ToastContainer\r\n        autoClose={5000}\r\n        className=\"custom-toaster-main-cls\"\r\n        toastClassName=\"custom-toaster-bg\"\r\n        transition={ZoomInAndOut}\r\n      />\r\n      <Modal.Header closeButton>\r\n        <Modal.Title className=\"subtitle text-center\">\r\n          Add Job Description           \r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}> \r\n\r\n               <FormGroup className={this.getClasses('profileRole')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                  select title\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"                        \r\n                        name=\"location\"\r\n                        value={this.state.profileRole}\r\n                        onChange={this.handleProfileRoleChange}\r\n                        options={this.state.profileRoleList}\r\n                        placeholder=\"Select all the location that you used along the way\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('profileRole'))}\r\n                  </Col>\r\n                </FormGroup>             \r\n              {this.state.titleNotAvailable == true ?\r\n                  <FormGroup\r\n                      controlId=\"formControlsTextarea\"\r\n                      className={this.getClasses('title')}\r\n                    >\r\n                      <Col componentClass={ControlLabel} sm={3}>\r\n                        <ControlLabel>Title</ControlLabel>\r\n                      </Col>\r\n                      <Col sm={9}>\r\n                        <FormControl\r\n                          placeholder=\"Add a title\"\r\n                          name=\"title\"\r\n                          value={this.state.title}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"100\"\r\n                        />\r\n                        {renderMessage(this.props.getValidationMessages('tile'))}\r\n                      </Col>\r\n                    </FormGroup>:\r\n                null}\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Description</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      componentClass=\"textarea\"\r\n                      placeholder=\"Add a description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('description'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className={this.getClasses('skills')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                   Skills\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        multi\r\n                        className=\"form-control\"                        \r\n                        name=\"skills\"\r\n                        value={this.state.skills}\r\n                        onChange={this.handleSkillsChange}\r\n                        options={this.state.skillsList}\r\n                        placeholder=\"Select skill\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('skills'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                 <FormGroup className={this.getClasses('location')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Desired Location\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"\r\n                        multi\r\n                        name=\"location\"\r\n                        value={this.state.location}\r\n                        onChange={this.handleLocationChange}\r\n                        options={this.state.locationList}\r\n                        placeholder=\"Select all the location that you used along the way\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('location'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n              <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Experience\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"minExperience\"\r\n                          name=\"minExperience\"\r\n                          value={this.state.minExperience}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">min exp</option>\r\n                       <option value={1}>1</option>\r\n                       <option value={2}>2</option>\r\n                       <option value={3}>3</option>\r\n                       <option value={4}>4</option>\r\n                       <option value={5}>5</option>    \r\n                       <option value={6}>6</option>        \r\n                       <option value={7}>7</option>\r\n                       <option value={8}>8</option>\r\n                       <option value={9}>9</option>\r\n                       <option value={10}>10</option>\r\n                       <option value={11}>11</option>    \r\n                       <option value={12}>12</option>                                      \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('expectedSalaryInlakh')\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"maxExperience\"\r\n                          name=\"maxExperience\"\r\n                          value={this.state.maxExperience}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >      \r\n                        <option value=\"\">max exp</option>\r\n                       <option value={1}>1</option>\r\n                       <option value={2}>2</option>\r\n                       <option value={3}>3</option>\r\n                       <option value={4}>4</option>\r\n                       <option value={5}>5</option>    \r\n                       <option value={6}>6</option>        \r\n                       <option value={7}>7</option>\r\n                       <option value={8}>8</option>\r\n                       <option value={9}>9</option>\r\n                       <option value={10}>10</option>\r\n                       <option value={11}>11</option>    \r\n                       <option value={12}>12</option>                                      \r\n                      </FormControl>                 \r\n                      </div>                     \r\n                    </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>        \r\n    \r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('noOfPosition')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>No Of position needed</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"No. of Positions\"\r\n                      name=\"noOfPosition\"\r\n                      value={this.state.noOfPosition}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('noOfPosition'))}\r\n                  </Col>\r\n                </FormGroup>        \r\n               \r\n              </Col>      </Form>      \r\n              </Modal.Body>\r\n          <Modal.Footer>\r\n       \r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeJobDescriptionModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n           \r\n           </Modal.Footer>\r\n           </Modal>          \r\n            \r\n     \r\n    );\r\n  }\r\n}\r\nAddJobDescription = validation(strategy)(AddJobDescription);\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    { actionGetStudentList, actionSetStudentAsUser },\r\n    dispatch\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddJobDescription);\r\n","import React, { Component } from 'react';\r\nimport Header from '../header/header';\r\nimport {\r\n  Button,\r\n  Media,\r\n  Row,\r\n  Col,\r\n  FormControl,\r\n  InputGroup\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n//import { ToastContainer } from 'react-toastify';\r\nimport Slider from 'react-slick';\r\nimport _ from 'lodash';\r\nimport S3FileUpload from 'react-s3';\r\n\r\n//import Summary from './summary/addSummary';\r\nimport AddJobDescription from '../jobDescription/addJobDescription';\r\n\r\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport DownloadLink from \"react-download-link\";\r\n//import Img from '../../common/cropper/img';\r\nimport {\r\n  showErrorToast,\r\n  uploadToAzure,\r\n  limitCharacter,\r\n  SampleNextArrow,\r\n  SamplePrevArrow,\r\n  getThumbImage\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n\r\nimport {\r\n  actionGetStudentPersonalInfo,\r\n  actionGetAllCompetency,\r\n  actionGetAchievementsByUser,\r\n  actionGetRecommendationsByUser,\r\n  actionUpdateUserInfo,\r\n  actionGetAchievementsData\r\n} from '../../common/core/redux/actions';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport SpiderChart from '../../common/spiderChart/spiderChart';\r\n\r\n\r\nconst config = {\r\n  bucketName: 'ankurself',\r\n  dirName: 'photos', /* optional */\r\n  region: 'ap-south-1', // Put your aws region here\r\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\r\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\r\n}\r\n\r\n\r\nvar settings = {\r\n  dots: false,\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 3,\r\n  swipeToSlide: true,\r\n  nextArrow: <SampleNextArrow props={this.props} />,\r\n  prevArrow: <SamplePrevArrow props={this.props} />,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n        dots: true\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n        initialSlide: 2\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nclass JobDescription extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.state = {      \r\n      showJobDescriptionComponent: false,      \r\n      jobDescriptionDetail: {},        \r\n     \r\n      loader1: false,\r\n      loader2: false,      \r\n      jobDescriptionListData: [],     \r\n      userData:{},     \r\n      showDropdown: false,     \r\n      isActive: 'true',     \r\n      contentEditable: false,\r\n      editName: false,\r\n      name: '',\r\n      editTagLine: false\r\n    };\r\n   \r\n  }\r\n\r\n  componentWillMount() {\r\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\r\n    if(user){\r\n      let userId =user.userId;       \r\n      this.setState({userId: userId,user:user,roleId: user.roleId});\r\n      this.getJobDescriptionDetails(userId);   \r\n    }    \r\n  }\r\n\r\n  getJobDescriptionDetails(userId){\r\n    theRapidHireApiService('getJobDescriptonListById',{userId})\r\n    .then(response => {     \r\n      if (response.data.status === \"Success\") {\r\n         let jobDescriptionListData= this.state.jobDescriptionListData;\r\n         jobDescriptionListData= response.data.result;\r\n     \r\n         this.setState({jobDescriptionListData: jobDescriptionListData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  contentEditable = () => {\r\n    window.scrollTo(500, 0);\r\n    //console.log(!this.state.contentEditable);\r\n    this.setState({ contentEditable: !this.state.contentEditable });\r\n  };\r\n\r\n  setProfileData = data => {\r\n    //console.log(data);\r\n    if (data) {\r\n      let userId = data.userId;\r\n      let summary = data.summary;\r\n      let firstName = data.firstName;\r\n      let lastName = data.lastName;\r\n      // let tagline = data.tagline.trim();\r\n      // let editTag = data.tagline.trim();\r\n      let tagline = data.tagline ? data.tagline.trim() : null;\r\n      let editTag = data.tagline ? data.tagline.trim() : null;\r\n\r\n      let name =\r\n        (data.firstName ? data.firstName : '') +\r\n        ' ' +\r\n        (data.lastName ? data.lastName : '');\r\n      let profileImage = data.profilePicture;\r\n      if (profileImage) {\r\n        profileImage = getThumbImage('medium', profileImage);\r\n      }\r\n      let coverImage = data.coverImage;\r\n      if (coverImage) {\r\n        coverImage = getThumbImage('original', coverImage);\r\n      }\r\n      let isActive = data.isActive;\r\n      this.setState({\r\n        editTag,\r\n        summary,\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        profileImage,\r\n        coverImage,\r\n        tagline,\r\n        isActive,\r\n        name\r\n      });\r\n    }\r\n  };  \r\n\r\n \r\n  showJobDescriptionComponent = event => {    \r\n    this.setState({\r\n      showJobDescriptionComponent: !this.state.showJobDescriptionComponent   \r\n    });    \r\n    \r\n    if(!this.state.showJobDescriptionComponent){\r\n       this.setState({jobDescriptionDetail :  null});\r\n       this.getJobDescriptionDetails(this.state.userId);\r\n    }\r\n  };\r\n\r\n  editJobDescriptionComponent = jobDescriptionDetail => {\r\n    console.log(jobDescriptionDetail);\r\n    this.setState({\r\n      jobDescriptionDetail: jobDescriptionDetail ,\r\n      showJobDescriptionComponent: !this.state.showJobDescriptionComponent    \r\n    });\r\n  }\r\n\r\n\r\n \r\n\r\n  getProfileData = () => {\r\n    let userId = this.state.userId;\r\n    this.props.actionGetStudentPersonalInfo(userId);\r\n  };\r\n  \r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  toggleDropdown = () => {\r\n    this.setState({\r\n      showDropdown: !this.state.showDropdown\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };  \r\n\r\n\r\n  tagUserForJob = data =>{\r\n     this.props.history.push({\r\n      pathname: '/recruiter/userMapping',\r\n      state: {\r\n        jobDetail: data                                        \r\n      }\r\n     })    \r\n  }\r\n \r\n \r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n       <Header {...this.props} />     \r\n        <div className=\"main-panel\">   \r\n          <div className=\"w3-content main-panel1\">         \r\n\r\n                   <div style={{\"margin-bottom\": \"10px\",position: \"absolute\", right: \"250px\",\"padding-top\": \"10px\"}}>\r\n                    <a  onClick={this.showJobDescriptionComponent.bind(\r\n                            this                            \r\n                          )} \r\n                          className={                           \r\n                              'btn btn-primary with-icon smallBtn mr-1 '                            \r\n                          }\r\n                          style={{ cursor: 'pointer' }}>\r\n                          {' '}\r\n                          <span className=\"icon-plus\" /> Add Job Description\r\n                        </a>\r\n                   </div>  \r\n                          {this.state.showJobDescriptionComponent ==\r\n                              true ? (\r\n                                <AddJobDescription\r\n                                  closeJobDescriptionComponent={\r\n                                    this.showJobDescriptionComponent\r\n                                  }                                 \r\n                                  jobDescriptionDetail={\r\n                                    this.state.jobDescriptionDetail\r\n                                  }\r\n                                  userData={this.state.user}\r\n                                />\r\n                              ) : (\r\n                                '')}\r\n                   \r\n               \r\n\r\n<div className=\"card\">\r\n        <div className=\"header\">\r\n          <h4 className=\"title\">Job Description List</h4>\r\n          <p className=\"category\"></p>\r\n        </div>\r\n        <div className=\"content table-responsive table-full-width\">\r\n          <table className=\"table table-hover table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Role</th>\r\n                <th>Location</th>\r\n                <th className=\"text-right\">No of Position</th>\r\n                <th className=\"text-right\">Experience</th>\r\n                <th className=\"text-right\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map((data, index) => (\r\n                <tr >\r\n                  <td>{data.title}</td>\r\n                  <td>{data.location[0]}</td>\r\n                  <td className=\"text-right\">{data.noOfPosition}</td>\r\n                  <td className=\"text-right\">{data.maxExperience}</td>\r\n                  <td className=\"text-right\">\r\n                  <Button onClick={this.tagUserForJob.bind(this,data)}>\r\n                          {this.props.user.roleId==4 ? \"Go For Map\" : \"View Student\"}\r\n                   </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n      </div>\r\n        </div>\r\n      </div>  </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    otherUser: state.User.otherUserInfoData,\r\n    student: state.Student\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      actionGetStudentPersonalInfo,\r\n      actionGetAllCompetency,\r\n      actionGetAchievementsByUser,\r\n      actionGetRecommendationsByUser,\r\n      actionUpdateUserInfo,\r\n      actionGetAchievementsData\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JobDescription);\r\n","import React, { Component } from 'react';\nimport Header from '../header/header';\nimport SideBar from '../header/sidebar';\n// import {\n//   Button,\n//   Media,\n//   Row,\n//   Col,\n//   FormControl,\n//   InputGroup\n// } from 'react-bootstrap';\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n//import { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\nimport _ from 'lodash';\n\nimport VideoPlayer from 'react-video-js-player';\n//import Summary from './summary/addSummary';\nimport ShowVideo from '../jobDescription/showVideo';\n\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\";\n//import Img from '../../common/cropper/img';\nimport {\n  showErrorToast,\n  uploadToAzure,\n  limitCharacter,\n  SampleNextArrow,\n  SamplePrevArrow,\n  getThumbImage\n} from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\n\nimport {\n  actionGetStudentPersonalInfo,\n  actionGetAllCompetency,\n  actionGetAchievementsByUser,\n  actionGetRecommendationsByUser,\n  actionUpdateUserInfo,\n  actionGetAchievementsData\n} from '../../common/core/redux/actions';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\n\n\n\nvar settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 3,\n  swipeToSlide: true,\n  nextArrow: <SampleNextArrow props={this.props} />,\n  prevArrow: <SamplePrevArrow props={this.props} />,\n  responsive: [\n    {\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    },\n    {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2\n      }\n    },\n    {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }\n  ]\n};\n\nconst hasGetUserMedia = !!(navigator.getUserMedia || navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia || navigator.msGetUserMedia);\n\nclass VideoHistory extends Component {\n  constructor(props, context) {\n    super(props);\n   \n    this.state = {  \n        video: {\n            src: \"http://www.example.com/path/to/video.mp4\",\n            poster: \"http://www.example.com/path/to/video_poster.jpg\"\n        },    \n      showJobDescriptionComponent: false,      \n      jobDescriptionDetail: {},        \n     \n      loader1: false,\n      loader2: false,      \n      jobDescriptionListData: [],     \n      userData:{},     \n      showDropdown: false,     \n      isActive: 'true',     \n      contentEditable: false,\n      editName: false,\n      name: '',\n      editTagLine: false,\n      showVideo:false\n    };\n    var wRegion = \"ap-south-1\";\n    var poolid = 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c';\n    var s3bucketName = \"ankurself\";\n    var audioPath = \"/audio-files\";\n    var s3bucketName = \"ankurself\";\n    var audioPath = \"/audio-files\";\n    var audioStoreWithBucket=s3bucketName+audioPath;\n    //AudioStream = new AudioStream(wRegion,poolid,s3bucketName+audioPath)\n\n    this.region = \"ap-south-1\"; //s3 region\n    this.IdentityPoolId = 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c'; //identity pool id\n    this.bucketName = audioStoreWithBucket; //audio file store\n    this.s3=null; //variable defination for s3\n    this.dateinfo = new Date();\n    this.timestampData = this.dateinfo.getTime(); //timestamp used for file uniqueness\n    this.etag = []; // etag is used to save the parts of the single upload file\n    this.recordedChunks = []; //empty Array\n    this.booleanStop = false; // this is for final multipart complete\n    this.incr = 0; // multipart requires incremetal so that they can merge all parts by ascending order\n    this.filename = this.timestampData.toString() + \".webm\"; //unique filename\n    this.uploadId = \"\"; // upload id is required in multipart\n    this.recorder=null; //initializing recorder variable\n    this.player=null;\n    //To use microphone it shud be {audio: true}\n    this.audioConstraints = {\n      //  audio: true,\n        video: true\n    };\n\n  }\n\n  componentWillMount() {\n    //let userId = this.props.user.userId;\n    \n    document.body.classList.add('light-theme');\n    document.body.classList.add('absoluteHeader');\n    document.body.classList.remove('home');\n    document.body.classList.remove('fixedHeader');\n    console.log(this.props.location);\n    this.getSlotDetails(this.props.location.state.userId);\n  }\n\n\n  getSlotDetails(userId){   \n    theRapidHireApiService('getTimeSlotByUser',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response);\n        let slotVideoData = response.data.result[0];\n        let videoLinkInterviewer= slotVideoData.videoChatLinkInterviewer;\n        let videoLinkUser= slotVideoData.videoChatLinkUser;\n    //     let bookedSlotData=[];\n    //     bookedSlotData = response.data.result;\n      this.setState({videoLinkInterviewer,videoLinkUser});\n      }\n     \n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentWillReceiveProps(res) {\n  \n  }\n\n  componentDidMount() {\n\n     if(!hasGetUserMedia) {\n      alert(\"Your browser cannot stream from your webcam. Please switch to Chrome or Firefox.\");\n      return;\n    }\n    const script = document.createElement(\"script\");\n\n    script.src = \"https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js\";\n    script.async = true;\n\n    document.body.appendChild(script)\n    if (this.props.student.achievementData) {\n      console.log(this.props.student.achievementData);\n    }\n\n  }\n\n \n\n  onPlayerReady(player){\n    console.log(\"Player is ready: \", player);\n    this.player = player;\n}\n\nonVideoPlay(duration){\n    console.log(\"Video played at: \", duration);\n}\n\nonVideoPause(duration){\n    console.log(\"Video paused at: \", duration);\n}\n\nonVideoTimeUpdate(duration){\n    console.log(\"Time updated: \", duration);\n}\n\nonVideoSeeking(duration){\n    console.log(\"Video seeking: \", duration);\n}\n\nonVideoSeeked(from, to){\n    console.log(`Video seeked from ${from} to ${to}`);\n}\n\nonVideoEnd(){\n    console.log(\"Video ended\");\n}\n\n\n\n  render() {\n    const videoConstraints = {\n        facingMode: \"user\"\n      };\n    return (\n        <div className=\"wrapper\">\n        <Header {...this.props} />     \n          <div className=\"main-panel\">   \n        <div>\n                  <VideoPlayer\n                    controls={true}\n                    src={this.state.videoLinkInterviewer}\n                    poster={this.state.video.poster}\n                    width=\"720\"\n                    height=\"420\"\n                    onReady={this.onPlayerReady.bind(this)}\n                    onPlay={this.onVideoPlay.bind(this)}\n                    onPause={this.onVideoPause.bind(this)}\n                    onTimeUpdate={this.onVideoTimeUpdate.bind(this)}\n                    onSeeking={this.onVideoSeeking.bind(this)}\n                    onSeeked={this.onVideoSeeked.bind(this)}\n                    onEnd={this.onVideoEnd.bind(this)}\n                />  \n\n                  <VideoPlayer\n                    controls={true}\n                    src={this.state.videoChatLinkUser}\n                    poster={this.state.video.poster}\n                    width=\"720\"\n                    height=\"420\"\n                    onReady={this.onPlayerReady.bind(this)}\n                    onPlay={this.onVideoPlay.bind(this)}\n                    onPause={this.onVideoPause.bind(this)}\n                    onTimeUpdate={this.onVideoTimeUpdate.bind(this)}\n                    onSeeking={this.onVideoSeeking.bind(this)}\n                    onSeeked={this.onVideoSeeked.bind(this)}\n                    onEnd={this.onVideoEnd.bind(this)}\n                />  \n            \n            </div>\n        </div>    \n     \n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionGetStudentPersonalInfo,\n      actionGetAllCompetency,\n      actionGetAchievementsByUser,\n      actionGetRecommendationsByUser,\n      actionUpdateUserInfo,\n      actionGetAchievementsData\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(VideoHistory);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem, FormGroup, FormControl } from 'react-bootstrap';\n\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport { asyncContainer, Typeahead } from 'react-bootstrap-typeahead';\nimport _ from 'lodash';\n\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport {\n  ZoomInAndOut,\n  getThumbImage,\n  getLocalStorage,\n  limitCharacter\n} from '../../common/commonFunctions';\nimport SearchUserList from '../../common/searchDropdown/searchUserList';\nimport ChangePassword from '../../common/changePassword/changePassword';\nimport {\n  actionUserLogout,\n  actionGetHeaderCount,\n  actionUpdateHeaderCount,\n  actionChangePasswordStatus\n} from '../../common/core/redux/actions';\nimport userDefaultImage from '../../assets/img/default-img.PNG';\n\nlet AsyncTypeahead = asyncContainer(Typeahead);\nvar keyCheck=false,renderChangeMenu=false;\nclass Header extends Component { \n\n  logout = () => {\n    this.props.actionUserLogout();\n    this.props.history.push('/');\n  };\n  \n  render() {\n    return (\n    <Navbar fluid={true}>\n      {/* <Navbar.Header>\n        <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\">\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n          <span className=\"icon-bar\"></span>\n        </button>\n      </Navbar.Header> */}\n\n      <Navbar.Collapse>\n\n        {/* <Nav>\n          <NavItem><i className=\"fa fa-dashboard\"></i></NavItem>\n          <NavDropdown title={<i className=\"fa fa-globe\" />} id=\"basic-nav-dropdown\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem>\n          </NavDropdown>\n        </Nav> */}\n        <div className=\"separator\"></div>\n        {/* <Navbar.Form pullLeft>\n          <FormGroup>\n            <span className=\"input-group-addon\"><i className=\"fa fa-search\"></i></span>\n            <FormControl type=\"text\" placeholder=\"Type to search\" />\n          </FormGroup>\n        </Navbar.Form> */}\n        <Nav pullRight>\n          {/* <NavItem> <Link to=\"/interviewer/timeSlots\">Time Slot </Link></NavItem> */}\n          <NavItem>   <Link to=\"/admin/candidate\">USER </Link> </NavItem>\n\n          <NavItem>   <Link to=\"/admin/hruser\">HR </Link> </NavItem>\n\n            \n          {/* <NavDropdown title=\"Dropdown\" id=\"right-nav-bar\">\n            <MenuItem>Action</MenuItem>\n            <MenuItem>Another action</MenuItem>\n            <MenuItem>Something else here</MenuItem>\n            <MenuItem divider />\n            <MenuItem>Separated link</MenuItem>\n          </NavDropdown> */}\n          <NavItem onClick={this.logout}>Log out</NavItem>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );   \n  }}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    headerCount: state.User.headerCount\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionUserLogout,\n      actionGetHeaderCount,\n      actionUpdateHeaderCount,\n      actionChangePasswordStatus\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n\n\n","import React, { Component } from 'react';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionGetStudentList } from '../../common/core/redux/actions';\r\nimport { actionSetStudentAsUser } from '../../common/core/redux/actions';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl\r\n} from 'react-bootstrap';\r\n\r\nimport {\r\n  renderMessage,\r\n  setLocalStorage,\r\n  showSuccessToast,\r\n  showErrorToast\r\n} from '../../common/commonFunctions';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\n\r\nclass AddMoreStudent extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      isLoading: false,\r\n      studentMailList: [{ email: '' }],\r\n      streetAddress1: '',\r\n      streetAddress2: '',\r\n      city: '',\r\n      state: '',\r\n      country: '',\r\n      zipcode: ''\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  //  this.handleAddMail = this.handleAddMail.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.addStudentModelFun = this.addStudentModelFun.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        firstName: ['required', 'regex:' + regExpressions.alphaOnly],\r\n        lastName: ['regex:' + regExpressions.alphaOnly],\r\n        email: 'required|email'\r\n      },\r\n      {\r\n        'required.firstName': validationMessages.firstName.required,\r\n        'regex.firstName': validationMessages.firstName.alphaOnly,\r\n        'regex.lastName': validationMessages.lastName.alphaOnly,\r\n        'required.email': validationMessages.email.required,\r\n        'email.email': validationMessages.email.invalid\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.parent) {\r\n      this.props.parent['token'] = this.props.user['token'];\r\n    }\r\n    if (this.props.user) {\r\n      let user = this.props.parent ? this.props.parent : this.props.user;\r\n      this.setState({\r\n        user: user,\r\n        parentFirstName: user.firstName,\r\n        parentLastName: user.lastName\r\n      });\r\n      if (this.props.user) {\r\n        this.setState({\r\n          addStudentModel: this.props.addStudentModel\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      console.log('error', error);\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        self.handleSubmit();\r\n      }\r\n    });\r\n  };\r\n \r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  submitData = event => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.validateData();\r\n    }\r\n  };\r\n\r\n  //   checkStudentName = (index, event) => {\r\n  //     let studentMailList = this.state.studentMailList;\r\n  //     let self = this;\r\n  //     if (event.target.value === '') return false;\r\n\r\n  //     var filter = /^[A-Za-z\\s]+$/;\r\n  //     if (!filter.test(event.target.value)) {\r\n  //       studentMailList[index]['firstName'] = '';\r\n  //       this.setState({ studentMailList: studentMailList });\r\n  //       showErrorToast('Invalid Student Name.');\r\n  //     }\r\n  //   };\r\n\r\n  existMail = event => {\r\n    let students = this.state.user.students;\r\n    let studentMailList = this.state.studentMailList;\r\n    let self = this;  \r\n\r\n    if (event.target.value === '') return false;\r\n\r\n\r\n  };\r\n\r\n  handleSubmit() {\r\n    let self = this;\r\n    let createdBy = this.state.user.userId;\r\n    let roleId = 1;\r\n    let firstName = this.state.firstName;\r\n    let lastName = this.state.lastName;\r\n    let isActive = this.state.user.isActive;\r\n    let email= this.state.email;    \r\n    console.log('state ', this.state);\r\n    let data = {\r\n      userId:'',\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      roleId,   \r\n      createdBy      \r\n    };\r\n\r\n    theRapidHireApiService('signupUser', data)\r\n      .then(response1 => {        \r\n            self.setState({ isLoading: false });                    \r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  addStudentModelFun() {\r\n    this.setState({ addStudentModel: this.state.addStudentModel });\r\n    this.props.closeAddStudentModel();\r\n  }\r\n\r\n  render() {\r\n    let self = this;\r\n    const { isLoading } = this.state;\r\n    const cssClasses = {\r\n      root: 'input-group mb-1',\r\n      input: 'form-control'\r\n    };\r\n    const inputProps = {\r\n      value: this.state.streetAddress1,\r\n      onChange: this.onChange,\r\n      placeholder: 'Street Address1',\r\n      type: 'text'\r\n    };\r\n    const defaultStyles = {\r\n      root: {\r\n        position: 'relative',\r\n        paddingBottom: '0px'\r\n      },\r\n      input: {\r\n        display: 'inline-block',\r\n        width: '100%',\r\n        padding: '10px'\r\n      },\r\n      autocompleteContainer: {\r\n        position: 'absolute',\r\n        top: '100%',\r\n        backgroundColor: 'white',\r\n        border: '1px solid #555555',\r\n        width: '100%'\r\n      },\r\n      autocompleteItem: {\r\n        backgroundColor: '#ffffff',\r\n        padding: '10px',\r\n        color: '#555555',\r\n        cursor: 'pointer'\r\n      },\r\n      autocompleteItemActive: {\r\n        backgroundColor: '#fafafa'\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          //   bsSize=\"medium\"\r\n          show={this.state.addStudentModel}\r\n          onHide={this.addStudentModelFun}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Add New Candidate\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={12}>\r\n                <FormGroup\r\n                  className={`centeredRightLabel ${this.getClasses(\r\n                    'firstName'\r\n                  )}`}\r\n                >\r\n                  <Col sm={4}>First Name</Col>\r\n                  <Col sm={8}>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      placeholder=\"First Name\"\r\n                      value={this.state.firstName}\r\n                      //     onBlur={self.checkStudentName.bind(self, index)}\r\n                      onChange={self.handleChange.bind(self)}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"35\"\r\n                    />\r\n\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('firstName')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup\r\n                  className={`centeredRightLabel ${this.getClasses(\r\n                    'lastName'\r\n                  )}`}\r\n                >\r\n                  <Col sm={4}>Last Name</Col>\r\n                  <Col sm={8}>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      placeholder=\"Last Name\"\r\n                      value={this.state.lastName}\r\n                      //     onBlur={self.checkStudentName.bind(self, index)}\r\n                      onChange={self.handleChange.bind(self)}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"35\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('lastName')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup\r\n                  className={`centeredRightLabel ${this.getClasses('email')}`}\r\n                >\r\n                  <Col sm={4}>Email</Col>\r\n                  <Col sm={8}>\r\n                    <FormControl\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email \"\r\n                      value={this.state.email}\r\n                      onBlur={self.existMail.bind(self)}\r\n                      onChange={self.handleChange.bind(self)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('email'))}\r\n                  </Col>\r\n                </FormGroup>\r\n              </Col>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary no-bold no-round mr-1\"\r\n              className=\"no-bold no-round\"\r\n              disabled={isLoading}\r\n              onClick={!isLoading ? this.validateData : null}\r\n            >\r\n              {isLoading ? 'Loading...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default no-bold no-round\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.addStudentModelFun}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    { actionGetStudentList, actionSetStudentAsUser },\r\n    dispatch\r\n  );\r\n};\r\n\r\nAddMoreStudent = validation(strategy)(AddMoreStudent);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddMoreStudent);\r\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\nimport {\n  setLocalStorage,\n  uploadToAzure,\n  getThumbImage\n} from '../../common/commonFunctions';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport Header from '../header/header';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport AddMoreStudent from './addMoreStudent';\nimport {\n  actionSetStudentAsUser,\n  actionGetStudentPersonalInfo,\n  actionGetStudentUpdatedInfo,\n  actionRemoveStudent,\n  actionUpdateParentInfo\n} from '../../common/core/redux/actions';\n\nimport sampleProfile from '../../assets/img/sample-profile.jpg';\n\nclass Candidate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sasToken: '',\n      loader1: false,\n      loader2: false,\n      imageSource: '',\n      imageName: '',\n      imageType: '',\n      addStudentModel: false,\n      addParentModel: false,\n      studentId: ''\n    };\n\n    this.handleClickProfile = this.handleClickProfile.bind(this);\n    this.uploadImageToAzure = this.uploadImageToAzure.bind(this);\n    this.addStudentModel = this.addStudentModel.bind(this);\n    this.addParentModel = this.addParentModel.bind(this);\n    setLocalStorage(\n      'userInfo',\n      this.props.parent ? this.props.parent : this.props.user\n    );\n  }\n\n  componentWillMount() {\n    document.body.classList.add('light-theme');\n    document.body.classList.add('absoluteHeader');\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.setState({\n        user: this.props.user\n      });\n\n      let studentList =\n        this.props.parent && this.props.parent.students\n          ? this.props.parent.students\n          : this.props.user.students || [];\n\n      this.setProfileData(this.props.user);\n      this.setStudentData(studentList);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setParentProfileData(nextProps.parent);\n  }\n\n  setProfileData = data => {\n    if (data) {\n      let userId = data.userId;\n\n      let firstName = data.firstName;\n      let lastName = data.lastName;\n\n      let profileImage = data.profilePicture;\n      if (profileImage) {\n        profileImage = profileImage;\n      }\n      let coverImage = data.coverImage;\n      if (coverImage) {\n        coverImage = getThumbImage('original', coverImage);\n      }\n      this.setState({\n        firstName,\n        lastName,\n        userId,\n        profileImage,\n        coverImage\n      });\n    }\n  };\n\n\n  setStudentData(studentList) {  \n   \n\n      var userId = this.props.user.userId;\n\n      theRapidHireApiService('getCandidateList', { userId })\n        .then(response => {\n            console.log(response);\n          if (\n            response &&\n            response.data.status === 'Success' &&\n            response.data.result.length > 0\n          ) {\n           console.log(response);\n            let student = this.state.studentList;\n           \n            studentList = response.data.result;\n            this.setState({ studentList: studentList });\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    \n  }\n\n  handleClickProfile = otherUserInfoData => {\n    otherUserInfoData['token'] = this.props.user['token'];\n    let candidateAndHrDataJson = {     \n        otherUserInfoData: otherUserInfoData\n    };\n    this.props.actionSetStudentAsUser(candidateAndHrDataJson);\n    this.props.history.push('/user/profile');\n  };\n\n  handleChange = event => {\n    let self = this;\n    let studentList = self.state.studentList;\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    var str_array = name.split('_');\n    let id1 = str_array[1];\n    let id2 = str_array[2];\n\n    let userId = str_array[1];\n    let data = {\n      isActive: value,\n      userId,\n      index: id2\n    };\n\n    theRapidHireApiService('updateUserStatus', data)\n      .then(response => {\n        if (response && response.data.status === 'Success') {\n          self.props.actionGetStudentUpdatedInfo(data);\n        }\n      })\n      .catch(error => {});\n    studentList[id2].isActive = !studentList[id2].isActive;\n    self.setState({\n      isActive: false,\n      studentLis: studentList\n    });\n  };\n\n  handleImageChange = (action, event) => {\n    this.setState({ imageSource: '' });\n    const file = event.target.files[0];\n    const fileName = file.name;\n    const fileType = file.type;\n    if (file) {\n      this.generateSASToken();\n      let reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = event => {\n        this.setState({\n          imageSource: event.target.result,\n          imageName: fileName,\n          imageType: fileType,\n          action: action\n        });\n      };\n    }\n  };\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken')\n      .then(response => {\n        if (response.data.status === 'Success') {\n          let sasToken = response.data.result.sasToken;\n          this.setState({ sasToken });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  uploadImageToAzure(file) {\n    let userId = this.state.userId;\n    let type = this.state.action;\n    let sasToken = this.state.sasToken;\n\n    if (file !== '') {\n      type === 1\n        ? this.setState({ loader1: true, profileImage: '' })\n        : this.setState({ loader2: true, coverImage: '' });\n      uploadToAzure(\n        type,\n        userId,\n        file,\n        sasToken,\n        (error, result, uploadPath) => {\n          if (error) {\n            return;\n          }\n          if (result) {\n            if (type === 1) {\n              let profileImage = `${CONSTANTS.azureBlobURI}/${\n                CONSTANTS.azureContainer\n              }/${uploadPath}`;\n              this.setState({ profileImage: profileImage, loader1: false });\n            }\n\n            if (type === 2) {\n              let coverImage = `${CONSTANTS.azureBlobURI}/${\n                CONSTANTS.azureContainer\n              }/${uploadPath}`;\n\n              this.setState({ coverImage: coverImage, loader2: false });\n            }\n            this.updateUserData(type, uploadPath, userId);\n            console.log('upload is successful', uploadPath);\n          }\n        }\n      );\n    }\n  }\n\n  updateUserData = (type, uploadPath, userId) => {\n    if (type === 1) {\n      let profilePicture = uploadPath;\n      let data = {\n        userId,\n        profilePicture\n      };\n      this.props.actionUpdateParentInfo({ profilePicture });\n      theRapidHireApiService('updateProfileImage', data);\n    }\n\n    if (type === 2) {\n      let coverImage = uploadPath;\n      let data = {\n        userId,\n        coverImage\n      };\n      this.props.actionUpdateParentInfo({ coverImage });\n      theRapidHireApiService('updateCoverImage', data);\n    }\n  };\n\n  addStudentModel() {\n    this.setState({ addStudentModel: !this.state.addStudentModel });\n    let studentList =\n      this.props.parent && this.props.parent.students\n        ? this.props.parent.students\n        : this.props.user.students || [];\n\n    this.setStudentData(studentList);\n  }\n\n  addParentModel(studentId) {\n    console.log(studentId);\n    this.setState({\n      addParentModel: !this.state.addParentModel,\n      studentId\n    });\n  }\n\n  removeStudent = (data, index) => {\n    let _this = this;\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className=\"custom-ui\">\n            <h1>Are you sure?</h1>\n            <p>You want to delete this student?</p>\n            <button onClick={onClose}>No</button>\n            <button\n              onClick={() => {\n                let userId = data.userId;\n                let isArchived = true;\n                let userData = {\n                  userId,\n                  isArchived\n                };\n\n                theRapidHireApiService('removeStudentUser', userData).then(response => {                                 \n                  if(response && response.data && response.data.status == \"Success\"){                   \n                    _this.props.actionRemoveStudent(userData);\n                     onClose();\n                    _this.resetStudentList(userId);\n                  }else{\n                    onClose();\n                  }  \n                }).catch(error => {               \n                  console.log('err', error);\n                });    \n            }}\n            >\n              Yes, Delete it!\n            </button>\n          </div>\n        );\n      }\n    });\n  };\n\n  resetStudentList(userId) {\n    let studentList = this.state.studentList || [];\n    studentList.splice(\n      studentList.findIndex(todo => todo.userId === parseInt(userId, 10)),\n      1\n    );\n    this.setState({ studentList: studentList });\n  }\n\n  viewSampleProfile = () => {\n    this.setState({\n      showProfile: !this.state.showProfile\n    });\n  };\n\n  deleteStudent = (studentId, parentId) => {\n    if (studentId && parentId) {\n      let _this = this;\n      confirmAlert({\n        customUI: ({ onClose }) => {\n          return (\n            <div className=\"custom-ui\">\n              <p>Are you sure you want to delete this student?</p>\n              <button onClick={onClose}>No</button>\n              <button\n                onClick={() => {\n                  let userData = {\n                    studentId,\n                    parentId\n                  };\n                  theRapidHireApiService('removeStudentUser', userData).then(response => {                                 \n                    if(response && response.data && response.data.status == \"Success\"){\n                      let userData = {\n                        userId: studentId,\n                        parentId\n                      }; \n                      _this.props.actionRemoveStudent(userData);\n                       onClose();\n                      _this.resetStudentList(studentId);\n                    }else{\n                      onClose();\n                    }  \n                  }).catch(error => {               \n                    console.log('err', error);\n                  });                 \n                }}\n              >\n                Yes, Delete it!\n              </button>\n            </div>\n          );\n        }\n      });\n    }\n  };\n\n  render() {\n    let self = this;\n    return (\n      <div className=\"wrapper\">\n        <Header {...this.props} />     \n          <div className=\"main-panel\">          \n        \n\n        <div className=\"w3-content main-panel1\">\n        \n          <div className=\"container main\">\n           \n\n            <div className=\"button--wrapper mb-1 text-center flex flex-1 justify-center dashBtnCenter\">\n              {/* <button\n                className=\"btn btn-with-border with-icon smallBtn mr-1\"\n                onClick={this.viewSampleProfile}\n              >\n                View Sample Profile\n              </button> */}\n              {/* <button\n                className=\"btn btn-with-border with-icon smallBtn mr-1\"\n                onClick={this.addParentModel}\n              >\n                <span className=\"icon-plus\" />\n                add parent\n              </button> */}\n              <button\n                className=\"btn btn-with-border with-icon smallBtn\"\n                onClick={this.addStudentModel}\n              >\n                <span className=\"icon-plus\" />\n                add user\n              </button>\n            </div>\n            {this.state.studentList &&\n              this.state.studentList.map(function(data, index) {\n                return (\n                  <div\n                    key={index}\n                    className=\"suggestion-usd\"\n                    id={'student_' + data.userId}\n                  >\n                    <div className=\"student-img deflt-icon centeredBox flex\">\n                      {data.profilePicture ? (\n                        <img\n                          src={data.profilePicture}\n                          alt=\"\"\n                          className=\"img-responsive\"\n                        />\n                      ) : (\n                        <div className=\"pp-default\">\n                          <span className=\"icon-user_default2\" />\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"student-info flex justify-content-space-between\">\n                      <div className=\"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\">\n                        <div className=\"flex-1\">\n                          <h3>\n                            {data.firstName\n                              ? data.firstName +\n                                ' ' +\n                                (data.lastName ? data.lastName : '')\n                              : null}\n                          </h3>\n                          <p>{data.email}</p>\n                        </div>\n\n                        <div className=\"btn-group flex align-center\">\n                 \n                          <div\n                            className={\n                              data.isActive\n                                ? 'toggleWrapper active'\n                                : 'toggleWrapper'\n                            }\n                          >\n                            <label htmlFor=\"#\">Active</label>\n                            <div className=\"item\">\n                              <input\n                                type=\"checkbox\"\n                                name={`isActive_${data.userId}_${index}`}\n                                onChange={self.handleChange}\n                                checked={data.isActive ? true : false}\n                                id={`toggle_today_summary${index}`}\n                              />\n                              <div className=\"toggle\">\n                                <label htmlFor={`toggle_today_summary${index}`}>\n                                  <i />\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                          <button\n                            className=\"btn btn-primary no-round\"\n                            onClick={self.handleClickProfile.bind(self, data)}\n                          >\n                            Go to profile\n                          </button>\n                          &nbsp; &nbsp;\n                      \n                          <DropdownButton\n                            className=\"burger-trigger\"\n                            title={<span className=\"icon-burger\" />}\n                            id=\"1\"\n                          >\n                            <MenuItem\n                              onSelect={self.addParentModel.bind(\n                                this,\n                                data.userId\n                              )}\n                            >\n                              <i className=\"m-ico icon-plus\" />\n                              Add Parent\n                            </MenuItem>\n                            <MenuItem\n                              onSelect={() =>\n                                self.props.history.push({\n                                  pathname: '/parent/list',\n                                  state: { studentData: data }\n                                })\n                              }\n                            >\n                              <i className=\"m-ico icon-parent\" /> Parent List\n                            </MenuItem>\n                            <MenuItem\n                              onSelect={() =>\n                                self.props.history.push({\n                                  pathname: '/student/profilelog',\n                                  state: { profileOwner: data.userId }\n                                })\n                              }\n                            >\n                              <i className=\"m-ico icon-profile-sharing\" />{' '}\n                              Profile Sharing Log\n                            </MenuItem>\n\n                            <MenuItem\n                            //   onSelect={self.deleteStudent.bind(\n                            //     this,\n                            //     data.userId,\n                            //     self.props.parent.userId\n                            //   )}\n                            >\n                              <i className=\"m-ico icon-delete\" /> Delete\n                            </MenuItem>\n                          </DropdownButton>\n                        </div>\n                      </div>\n\n                      <div className=\"flex align-center justify-content-space-bettween tag-wrap\">\n                        <div className=\"promo-tag br-light\">\n                          Accomplishments <span>{data.accomplishment}</span>\n                        </div>\n                        {/* <div className=\"promo-tag br-light\">\n                          Endorsement <span>{data.endorsement}</span>\n                        </div> */}\n                        <div className=\"promo-tag\">\n                          Recommendation <span>{data.recommendation}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>         \n          {this.state.addStudentModel ? (\n            <AddMoreStudent\n              addStudentModel={this.state.addStudentModel}\n              closeAddStudentModel={this.addStudentModel}\n            />\n          ) : null}\n        </div></div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    headerCount: state.User.headerCount\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionSetStudentAsUser,\n      actionGetStudentPersonalInfo,\n      actionGetStudentUpdatedInfo,\n      actionRemoveStudent,  \n      actionUpdateParentInfo\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Candidate);\n","import React, { Component } from 'react';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionGetStudentList } from '../../common/core/redux/actions';\r\nimport { actionSetStudentAsUser } from '../../common/core/redux/actions';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Select from 'react-select';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl\r\n} from 'react-bootstrap';\r\n\r\nimport {\r\n  renderMessage,\r\n  setLocalStorage,\r\n  showSuccessToast,\r\n  showErrorToast,\r\n  ZoomInAndOut\r\n} from '../../common/commonFunctions';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\n\r\nclass AddMoreStudent extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      isLoading: false,\r\n      studentMailList: [{ email: '' }],\r\n      streetAddress1: '',\r\n      streetAddress2: '',\r\n      city: '',\r\n      state: '',\r\n      country: '',\r\n      zipcode: '',\r\n      companyDetail:[]\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  //  this.handleAddMail = this.handleAddMail.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.addStudentModelFun = this.addStudentModelFun.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        firstName: ['required', 'regex:' + regExpressions.alphaOnly],\r\n        lastName: ['regex:' + regExpressions.alphaOnly],\r\n        email: 'required|email'\r\n      },\r\n      {\r\n        'required.firstName': validationMessages.firstName.required,\r\n        'regex.firstName': validationMessages.firstName.alphaOnly,\r\n        'regex.lastName': validationMessages.lastName.alphaOnly,\r\n        'required.email': validationMessages.email.required,\r\n        'email.email': validationMessages.email.invalid\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.parent) {\r\n      this.props.parent['token'] = this.props.user['token'];\r\n    }\r\n    if (this.props.user) {\r\n      let user = this.props.parent ? this.props.parent : this.props.user;\r\n      this.setState({\r\n        user: user,\r\n        parentFirstName: user.firstName,\r\n        parentLastName: user.lastName\r\n      });\r\n      if (this.props.user) {\r\n        this.setState({\r\n          addStudentModel: this.props.addStudentModel\r\n        });\r\n      }\r\n    }\r\n    this.getCompanyList();\r\n  }\r\n\r\n  getCompanyList(){\r\n    theRapidHireApiService('getCompanyList')\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n         let companyDetail= this.state.companyDetail;\r\n         response.data.result.forEach(function(data){         \r\n         \r\n            companyDetail.push({label: data.companyName,value:data.companyId })\r\n        })     \r\n         this.setState({companyDetail: companyDetail});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  handleCompanyChange = newValue => {\r\n    if(newValue.value == 1){\r\n       \r\n        // this.validatorTypes.rules['companyName'] = 'required|companyName';\r\n        // this.validatorTypes.messages['required.companyName'] =\r\n        //                                         'Please enter companyName';\r\n        this.setState({otherCompanyName: true});\r\n    }else{\r\n        // this.validatorTypes.rules['companyName'] = '';\r\n        // this.validatorTypes.messages['required.companyName'] =\r\n        //                                         'Please enter companyName';\r\n    }\r\n        this.setState({\r\n        company: newValue\r\n        });\r\n    \r\n  };\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      console.log('error', error);\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        self.handleSubmit();\r\n      }\r\n    });\r\n  };\r\n \r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  submitData = event => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.validateData();\r\n    }\r\n  };\r\n\r\n  //   checkStudentName = (index, event) => {\r\n  //     let studentMailList = this.state.studentMailList;\r\n  //     let self = this;\r\n  //     if (event.target.value === '') return false;\r\n\r\n  //     var filter = /^[A-Za-z\\s]+$/;\r\n  //     if (!filter.test(event.target.value)) {\r\n  //       studentMailList[index]['firstName'] = '';\r\n  //       this.setState({ studentMailList: studentMailList });\r\n  //       showErrorToast('Invalid Student Name.');\r\n  //     }\r\n  //   };\r\n\r\n  existMail = event => {\r\n    let students = this.state.user.students;\r\n    let studentMailList = this.state.studentMailList;\r\n    let self = this;  \r\n\r\n    if (event.target.value === '') return false;\r\n\r\n\r\n  };\r\n\r\n  handleSubmit() {\r\n    let self = this;\r\n    let createdBy = this.state.user.userId;\r\n    let roleId = 3;\r\n    let firstName = this.state.firstName;\r\n    let lastName = this.state.lastName;\r\n    let isActive = this.state.user.isActive;\r\n    let email= this.state.email;    \r\n    let companyName = this.state.company && this.state.company.value !== 1? this.state.company.label: this.state.companyName;\r\n    let companyId= this.state.company && this.state.company.value !== 1 ? this.state.company.value: null\r\n    console.log('state ', this.state);\r\n    let data = {\r\n      userId:'',\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      roleId,   \r\n      companyId,\r\n      companyName,\r\n      createdBy      \r\n    };\r\n\r\n    theRapidHireApiService('signupHR', data)\r\n      .then(response1 => {        \r\n            self.setState({ isLoading: false });   \r\n                        \r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  addStudentModelFun() {\r\n    this.setState({ addStudentModel: this.state.addStudentModel });\r\n    this.props.closeAddStudentModel();\r\n  }\r\n\r\n  render() {\r\n    let self = this;\r\n    const { isLoading } = this.state;\r\n    const cssClasses = {\r\n      root: 'input-group mb-1',\r\n      input: 'form-control'\r\n    };\r\n    const inputProps = {\r\n      value: this.state.streetAddress1,\r\n      onChange: this.onChange,\r\n      placeholder: 'Street Address1',\r\n      type: 'text'\r\n    };\r\n    const defaultStyles = {\r\n      root: {\r\n        position: 'relative',\r\n        paddingBottom: '0px'\r\n      },\r\n      input: {\r\n        display: 'inline-block',\r\n        width: '100%',\r\n        padding: '10px'\r\n      },\r\n      autocompleteContainer: {\r\n        position: 'absolute',\r\n        top: '100%',\r\n        backgroundColor: 'white',\r\n        border: '1px solid #555555',\r\n        width: '100%'\r\n      },\r\n      autocompleteItem: {\r\n        backgroundColor: '#ffffff',\r\n        padding: '10px',\r\n        color: '#555555',\r\n        cursor: 'pointer'\r\n      },\r\n      autocompleteItemActive: {\r\n        backgroundColor: '#fafafa'\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n         <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        />\r\n        <Modal\r\n          //   bsSize=\"medium\"\r\n          show={this.state.addStudentModel}\r\n          onHide={this.addStudentModelFun}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Add New Candidate\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={12}>\r\n\r\n                <FormGroup className={`centeredRightLabel ${this.getClasses('company')}`}>\r\n              <label className=\"form-label\">Add Company</label>\r\n              \r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"                        \r\n                        name=\"company\"\r\n                        value={this.state.company}\r\n                        onChange={this.handleCompanyChange}\r\n                        options={this.state.companyDetail}\r\n                        placeholder=\"Select company\"\r\n                      />\r\n                    </div>                   \r\n                   \r\n                    {renderMessage(this.props.getValidationMessages('company'))}\r\n                </FormGroup>\r\n\r\n                {this.state.otherCompanyName === true ?\r\n\r\n                <FormGroup className={`centeredRightLabel ${this.getClasses('companyName')}`}>\r\n                    <label className=\"form-label\">Company Name</label>\r\n                  \r\n                    <FormControl\r\n                        type=\"text\"\r\n                        placeholder=\"Company Name\"\r\n                        name=\"companyName\"\r\n                        value={this.state.companyName}\r\n                        onChange={this.handleChange}\r\n                        autoComplete=\"off\"\r\n                        maxLength=\"35\"\r\n                    />\r\n                  \r\n                    {renderMessage(this.props.getValidationMessages('companyName'))}\r\n                </FormGroup> : null}\r\n\r\n                <FormGroup\r\n                  className={`centeredRightLabel ${this.getClasses(\r\n                    'firstName'\r\n                  )}`}\r\n                >\r\n                  <Col sm={4}>First Name</Col>\r\n                  <Col sm={8}>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      name=\"firstName\"\r\n                      placeholder=\"First Name\"\r\n                      value={this.state.firstName}\r\n                      //     onBlur={self.checkStudentName.bind(self, index)}\r\n                      onChange={self.handleChange.bind(self)}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"35\"\r\n                    />\r\n\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('firstName')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup\r\n                  className={`centeredRightLabel ${this.getClasses(\r\n                    'lastName'\r\n                  )}`}\r\n                >\r\n                  <Col sm={4}>Last Name</Col>\r\n                  <Col sm={8}>\r\n                    <FormControl\r\n                      type=\"text\"\r\n                      name=\"lastName\"\r\n                      placeholder=\"Last Name\"\r\n                      value={this.state.lastName}\r\n                      //     onBlur={self.checkStudentName.bind(self, index)}\r\n                      onChange={self.handleChange.bind(self)}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"35\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('lastName')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup\r\n                  className={`centeredRightLabel ${this.getClasses('email')}`}\r\n                >\r\n                  <Col sm={4}>Email</Col>\r\n                  <Col sm={8}>\r\n                    <FormControl\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email \"\r\n                      value={this.state.email}\r\n                      onBlur={self.existMail.bind(self)}\r\n                      onChange={self.handleChange.bind(self)}\r\n                      autoComplete=\"off\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('email'))}\r\n                  </Col>\r\n                </FormGroup>\r\n              </Col>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary no-bold no-round mr-1\"\r\n              className=\"no-bold no-round\"\r\n              disabled={isLoading}\r\n              onClick={!isLoading ? this.validateData : null}\r\n            >\r\n              {isLoading ? 'Loading...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default no-bold no-round\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.addStudentModelFun}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    { actionGetStudentList, actionSetStudentAsUser },\r\n    dispatch\r\n  );\r\n};\r\n\r\nAddMoreStudent = validation(strategy)(AddMoreStudent);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddMoreStudent);\r\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\nimport {\n  setLocalStorage,\n  uploadToAzure,\n  getThumbImage\n} from '../../common/commonFunctions';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport Header from '../header/header';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport AddMoreStudent from './addMoreStudent';\nimport {\n  actionSetStudentAsUser,\n  actionGetStudentPersonalInfo,\n  actionGetStudentUpdatedInfo,\n  actionRemoveStudent,\n  actionUpdateParentInfo\n} from '../../common/core/redux/actions';\n\nimport sampleProfile from '../../assets/img/sample-profile.jpg';\n\nclass Hruser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sasToken: '',\n      loader1: false,\n      loader2: false,\n      imageSource: '',\n      imageName: '',\n      imageType: '',\n      addStudentModel: false,\n      addParentModel: false,\n      studentId: ''\n    };\n\n    this.handleClickProfile = this.handleClickProfile.bind(this);\n    this.uploadImageToAzure = this.uploadImageToAzure.bind(this);\n    this.addStudentModel = this.addStudentModel.bind(this);\n    this.addParentModel = this.addParentModel.bind(this);\n    setLocalStorage(\n      'userInfo',\n      this.props.parent ? this.props.parent : this.props.user\n    );\n  }\n\n  componentWillMount() {\n    document.body.classList.add('light-theme');\n    document.body.classList.add('absoluteHeader');\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.setState({\n        user: this.props.user\n      });\n\n      let studentList =\n        this.props.parent && this.props.parent.students\n          ? this.props.parent.students\n          : this.props.user.students || [];\n\n      this.setProfileData(this.props.user);\n      this.setStudentData(studentList);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n   // this.setParentProfileData(nextProps.parent);\n  }\n\n  setProfileData = data => {\n    if (data) {\n      let userId = data.userId;\n\n      let firstName = data.firstName;\n      let lastName = data.lastName;\n\n      let profileImage = data.profilePicture;\n      if (profileImage) {\n        profileImage = profileImage;\n      }\n      let coverImage = data.coverImage;\n      if (coverImage) {\n        coverImage = getThumbImage('original', coverImage);\n      }\n      this.setState({\n        firstName,\n        lastName,\n        userId,\n        profileImage,\n        coverImage\n      });\n    }\n  };\n\n\n  setStudentData(studentList) {  \n\n      var userId = this.props.user.userId;\n\n      theRapidHireApiService('getHrList', { userId })\n        .then(response => {\n            console.log(response);\n          if (\n            response &&\n            response.data.status === 'Success' &&\n            response.data.result.length > 0\n          ) {\n           console.log(response);\n            let student = this.state.studentList;\n           \n            studentList = response.data.result;\n            this.setState({ studentList: studentList });\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    \n  }\n\n  handleClickProfile = otherUserInfoData => {\n    otherUserInfoData['token'] = this.props.user['token'];\n    let candidateAndHrDataJson = {     \n        otherUserInfoData: otherUserInfoData\n    };\n    this.props.actionSetStudentAsUser(candidateAndHrDataJson);\n    this.props.history.push('/recruiter/jobDesription');\n  };\n\n  handleChange = event => {\n    let self = this;\n    let studentList = self.state.studentList;\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    var str_array = name.split('_');\n    let id1 = str_array[1];\n    let id2 = str_array[2];\n\n    let userId = str_array[1];\n    let data = {\n      isActive: value,\n      userId,\n      index: id2\n    };\n\n    theRapidHireApiService('updateUserStatus', data)\n      .then(response => {\n        if (response && response.data.status === 'Success') {\n          self.props.actionGetStudentUpdatedInfo(data);\n        }\n      })\n      .catch(error => {});\n    studentList[id2].isActive = !studentList[id2].isActive;\n    self.setState({\n      isActive: false,\n      studentLis: studentList\n    });\n  };\n\n  handleImageChange = (action, event) => {\n    this.setState({ imageSource: '' });\n    const file = event.target.files[0];\n    const fileName = file.name;\n    const fileType = file.type;\n    if (file) {\n      this.generateSASToken();\n      let reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = event => {\n        this.setState({\n          imageSource: event.target.result,\n          imageName: fileName,\n          imageType: fileType,\n          action: action\n        });\n      };\n    }\n  };\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken')\n      .then(response => {\n        if (response.data.status === 'Success') {\n          let sasToken = response.data.result.sasToken;\n          this.setState({ sasToken });\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  uploadImageToAzure(file) {\n    let userId = this.state.userId;\n    let type = this.state.action;\n    let sasToken = this.state.sasToken;\n\n    if (file !== '') {\n      type === 1\n        ? this.setState({ loader1: true, profileImage: '' })\n        : this.setState({ loader2: true, coverImage: '' });\n      uploadToAzure(\n        type,\n        userId,\n        file,\n        sasToken,\n        (error, result, uploadPath) => {\n          if (error) {\n            return;\n          }\n          if (result) {\n            if (type === 1) {\n              let profileImage = `${CONSTANTS.azureBlobURI}/${\n                CONSTANTS.azureContainer\n              }/${uploadPath}`;\n              this.setState({ profileImage: profileImage, loader1: false });\n            }\n\n            if (type === 2) {\n              let coverImage = `${CONSTANTS.azureBlobURI}/${\n                CONSTANTS.azureContainer\n              }/${uploadPath}`;\n\n              this.setState({ coverImage: coverImage, loader2: false });\n            }\n            this.updateUserData(type, uploadPath, userId);\n            console.log('upload is successful', uploadPath);\n          }\n        }\n      );\n    }\n  }\n\n  updateUserData = (type, uploadPath, userId) => {\n    if (type === 1) {\n      let profilePicture = uploadPath;\n      let data = {\n        userId,\n        profilePicture\n      };\n      this.props.actionUpdateParentInfo({ profilePicture });\n      theRapidHireApiService('updateProfileImage', data);\n    }\n\n    if (type === 2) {\n      let coverImage = uploadPath;\n      let data = {\n        userId,\n        coverImage\n      };\n      this.props.actionUpdateParentInfo({ coverImage });\n      theRapidHireApiService('updateCoverImage', data);\n    }\n  };\n\n  addStudentModel() {\n    this.setState({ addStudentModel: !this.state.addStudentModel });\n    let studentList =\n      this.props.parent && this.props.parent.students\n        ? this.props.parent.students\n        : this.props.user.students || [];\n\n    this.setStudentData(studentList);\n  }\n\n  addParentModel(studentId) {\n    console.log(studentId);\n    this.setState({\n      addParentModel: !this.state.addParentModel,\n      studentId\n    });\n  }\n\n  removeStudent = (data, index) => {\n    let _this = this;\n    confirmAlert({\n      customUI: ({ onClose }) => {\n        return (\n          <div className=\"custom-ui\">\n            <h1>Are you sure?</h1>\n            <p>You want to delete this student?</p>\n            <button onClick={onClose}>No</button>\n            <button\n              onClick={() => {\n                let userId = data.userId;\n                let isArchived = true;\n                let userData = {\n                  userId,\n                  isArchived\n                };\n\n                theRapidHireApiService('removeStudentUser', userData).then(response => {                                 \n                  if(response && response.data && response.data.status == \"Success\"){                   \n                    _this.props.actionRemoveStudent(userData);\n                     onClose();\n                    _this.resetStudentList(userId);\n                  }else{\n                    onClose();\n                  }  \n                }).catch(error => {               \n                  console.log('err', error);\n                });    \n            }}\n            >\n              Yes, Delete it!\n            </button>\n          </div>\n        );\n      }\n    });\n  };\n\n  resetStudentList(userId) {\n    let studentList = this.state.studentList || [];\n    studentList.splice(\n      studentList.findIndex(todo => todo.userId === parseInt(userId, 10)),\n      1\n    );\n    this.setState({ studentList: studentList });\n  }\n\n  viewSampleProfile = () => {\n    this.setState({\n      showProfile: !this.state.showProfile\n    });\n  };\n\n  deleteStudent = (studentId, parentId) => {\n    if (studentId && parentId) {\n      let _this = this;\n      confirmAlert({\n        customUI: ({ onClose }) => {\n          return (\n            <div className=\"custom-ui\">\n              <p>Are you sure you want to delete this student?</p>\n              <button onClick={onClose}>No</button>\n              <button\n                onClick={() => {\n                  let userData = {\n                    studentId,\n                    parentId\n                  };\n                  theRapidHireApiService('removeStudentUser', userData).then(response => {                                 \n                    if(response && response.data && response.data.status == \"Success\"){\n                      let userData = {\n                        userId: studentId,\n                        parentId\n                      }; \n                      _this.props.actionRemoveStudent(userData);\n                       onClose();\n                      _this.resetStudentList(studentId);\n                    }else{\n                      onClose();\n                    }  \n                  }).catch(error => {               \n                    console.log('err', error);\n                  });                 \n                }}\n              >\n                Yes, Delete it!\n              </button>\n            </div>\n          );\n        }\n      });\n    }\n  };\n\n  render() {\n    let self = this;\n    return (\n      <div className=\"wrapper\">\n       <Header {...this.props} />     \n        <div className=\"main-panel\">   \n          <div className=\"w3-content main-panel1\">   \n        \n         \n           \n            <div className=\"button--wrapper mb-1 text-center flex flex-1 justify-center dashBtnCenter\">            \n              <button\n                className=\"btn btn-with-border with-icon smallBtn\"\n                onClick={this.addStudentModel}\n              >\n                <span className=\"icon-plus\" />\n                add HR\n              </button>\n            </div>\n            {this.state.studentList &&\n              this.state.studentList.map(function(data, index) {\n                return (\n                  <div\n                    key={index}\n                    className=\"suggestion-usd\"\n                    id={'student_' + data.userId}\n                  >\n                    <div className=\"student-img deflt-icon centeredBox flex\">\n                      {data.profilePicture ? (\n                        <img\n                          src={data.profilePicture}\n                          alt=\"\"\n                          className=\"img-responsive\"\n                        />\n                      ) : (\n                        <div className=\"pp-default\">\n                          <span className=\"icon-user_default2\" />\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"student-info flex justify-content-space-between\">\n                      <div className=\"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\">\n                        <div className=\"flex-1\">\n                          <h3>\n                            {data.firstName\n                              ? data.firstName +\n                                ' ' +\n                                (data.lastName ? data.lastName : '')\n                              : null}\n                          </h3>\n                          <p>{data.email}</p>\n                        </div>\n\n                        <div className=\"btn-group flex align-center\">\n                 \n                          <div\n                            className={\n                              data.isActive\n                                ? 'toggleWrapper active'\n                                : 'toggleWrapper'\n                            }\n                          >\n                            <label htmlFor=\"#\">Active</label>\n                            <div className=\"item\">\n                              <input\n                                type=\"checkbox\"\n                                name={`isActive_${data.userId}_${index}`}\n                                onChange={self.handleChange}\n                                checked={data.isActive ? true : false}\n                                id={`toggle_today_summary${index}`}\n                              />\n                              <div className=\"toggle\">\n                                <label htmlFor={`toggle_today_summary${index}`}>\n                                  <i />\n                                </label>\n                              </div>\n                            </div>\n                          </div>\n                          <button\n                            className=\"btn btn-primary no-round\"\n                            onClick={self.handleClickProfile.bind(self, data)}\n                          >\n                            Go to profile\n                          </button>\n                          &nbsp; &nbsp;\n                      \n                          <DropdownButton\n                            className=\"burger-trigger\"\n                            title={<span className=\"icon-burger\" />}\n                            id=\"1\"\n                          >\n                            <MenuItem\n                              onSelect={self.addParentModel.bind(\n                                this,\n                                data.userId\n                              )}\n                            >\n                              <i className=\"m-ico icon-plus\" />\n                              Add Parent\n                            </MenuItem>\n                            <MenuItem\n                              onSelect={() =>\n                                self.props.history.push({\n                                  pathname: '/parent/list',\n                                  state: { studentData: data }\n                                })\n                              }\n                            >\n                              <i className=\"m-ico icon-parent\" /> Parent List\n                            </MenuItem>\n                            <MenuItem\n                              onSelect={() =>\n                                self.props.history.push({\n                                  pathname: '/student/profilelog',\n                                  state: { profileOwner: data.userId }\n                                })\n                              }\n                            >\n                              <i className=\"m-ico icon-profile-sharing\" />{' '}\n                              Profile Sharing Log\n                            </MenuItem>\n\n                            <MenuItem\n                            //   onSelect={self.deleteStudent.bind(\n                            //     this,\n                            //     data.userId,\n                            //     self.props.parent.userId\n                            //   )}\n                            >\n                              <i className=\"m-ico icon-delete\" /> Delete\n                            </MenuItem>\n                          </DropdownButton>\n                        </div>\n                      </div>\n\n                      <div className=\"flex align-center justify-content-space-bettween tag-wrap\">\n                        <div className=\"promo-tag br-light\">\n                          Accomplishments <span>{data.accomplishment}</span>\n                        </div>\n                        {/* <div className=\"promo-tag br-light\">\n                          Endorsement <span>{data.endorsement}</span>\n                        </div> */}\n                        <div className=\"promo-tag\">\n                          Recommendation <span>{data.recommendation}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n          </div>         \n          {this.state.addStudentModel ? (\n            <AddMoreStudent\n              addStudentModel={this.state.addStudentModel}\n              closeAddStudentModel={this.addStudentModel}\n            />\n          ) : null}\n          {/* <Modal\n            show={this.state.showProfile}\n            onHide={this.viewSampleProfile}\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>Sample Profile</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div>\n                <img src={sampleProfile} />\n              </div>\n            </Modal.Body>\n          </Modal> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    headerCount: state.User.headerCount\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      actionSetStudentAsUser,\n      actionGetStudentPersonalInfo,\n      actionGetStudentUpdatedInfo,\n      actionRemoveStudent,  \n      actionUpdateParentInfo\n    },\n    dispatch\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Hruser);\n","import React, { Component } from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\n//import createHistory from 'history/createBrowserHistory';\r\n\r\nimport { getLocalStorage } from './common/commonFunctions';\r\n\r\n/******************** Common Routing ****************************/\r\n\r\nimport Login from './common/authorization/login';\r\nimport Signup from './common/authorization/signUp';\r\nimport HRSignup from './common/authorization/hrSignUp';\r\nimport ChangePassword from './common/changePassword/changePassword';\r\nimport ForgotPassword from './common/forgotPassword/resetPassword';\r\n\r\n/******************** User Routing ****************************/\r\nimport UserDashboard from './user/dashboard/dashboard';\r\nimport UserEditProfile from './user/profile/editProfile';\r\nimport TimeSlotUser from './user/profile/timeSlots';\r\nimport SlotArrangement from './user/profile/slotArrangement';\r\n\r\nimport Video from './video/video';\r\n\r\nimport App from './videoChat/js/app';\r\n\r\n/******************** Interviewer Routing ****************************/\r\nimport TimeSlot from './interviewer/profile/timeSlots';\r\nimport InterviewerDashboard from './interviewer/dashboard/dashboard';\r\nimport InterviewerEditProfile from './interviewer/profile/editProfile';\r\n\r\n\r\n/******************** Recruiter Routing ****************************/\r\nimport UserMapping from './recruiter/jobDescription/userMapping';\r\nimport JobDescription from './recruiter/jobDescription/jobDescription';\r\nimport VideoHistory from './recruiter/jobDescription/videoHistory';\r\n\r\n/******************** Admin Routing ****************************/\r\n//import Dashboard from './admin/dashboard/dashboard';\r\nimport Candidate from './admin/candidate/candidate';\r\nimport Hruser from './admin/hruser/hruser';\r\n// import ReactGA from 'react-ga';\r\nvar createHistory= require(\"history\").createBrowserHistory;\r\n// const history = createHistory();\r\n// ReactGA.initialize('UA-139519546-1');\r\n// history.listen(location => ReactGA.pageview(location.pathname));\r\n\r\nclass theRapidHireRoute extends Component {\r\n  componentWillMount() {\r\n    this.getUserInfo();\r\n  }\r\n\r\n  getUserInfo() {\r\n    let userInfo = getLocalStorage('userInfo');\r\n    if (userInfo) {\r\n      if (userInfo.token) {\r\n        let access_token = userInfo.token;\r\n        this.setState({ access_token: access_token });\r\n        // if(userInfo && this.props.match.params){\r\n        //   if(userInfo.userId == this.props.match.params.userId && this.props.match.params.recommendationId){\r\n        //     this.props.history.push({\r\n        //       pathname: '/recommendationRequest',\r\n        //       state: { requestRecommendedId: this.props.match.params.recommendationId,userId: this.props.match.params.userId}\r\n        //     });\r\n        //   }\r\n        // }else{\r\n\r\n        // }\r\n        //this.props.history.push('/home');\r\n      }\r\n    } else {\r\n      this.props.history.push('/');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        {/* Common routes for parent and student */}\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/signup\" component={Signup} />\r\n        <Route exact path=\"/hrsignup\" component={HRSignup} />\r\n        <Route exact path=\"/forgot\" component={ForgotPassword} />\r\n        <Route exact path=\"/changepassword\" component={ChangePassword} />\r\n\r\n      \r\n\r\n    \r\n        <Route exact path=\"/user/dashboard\" component={UserDashboard} />\r\n        <Route exact path=\"/user/profile\" component={UserEditProfile} />\r\n        <Route exact path=\"/interviewer/timeSlots\" component={TimeSlot} />\r\n        <Route exact path=\"/user/timeSlots\" component={TimeSlotUser} />\r\n        <Route exact path=\"/user/slotArrangement\" component={SlotArrangement} />\r\n        <Route exact path=\"/recruiter/jobDesription\" component={JobDescription} />\r\n        <Route exact path=\"/video\" component={Video} />\r\n        \r\n        \r\n        <Route exact path=\"/interviewer/interviewerProfile\" component={InterviewerEditProfile} />\r\n        <Route exact path=\"/interviewer/dashboard\" component={InterviewerDashboard} />\r\n       \r\n        <Route exact path=\"/js/app\" component={App} />\r\n\r\n        <Route exact path=\"/recruiter/userMapping\" component={UserMapping} />\r\n        <Route exact path=\"/recruiter/videoHistory\" component={VideoHistory} />\r\n\r\n\r\n        {/* Admin Routes */}\r\n        <Route exact path=\"/admin/candidate\" component={Candidate} />\r\n        <Route exact path=\"/admin/hruser\" component={Hruser} />\r\n     \r\n      </Switch>\r\n    );\r\n  }\r\n}\r\nexport default theRapidHireRoute;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promise from 'redux-promise';\r\n\r\nimport reducers from './common/core/redux/reducers';\r\nimport TheRapidHireRoute from './theRapidHireRoute';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore);\r\nconst store = createStoreWithMiddleware(reducers);\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <Route component={TheRapidHireRoute} />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\nregisterServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/sample-profile.ea9153b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default_achievement.88af0f79.jpg\";","var map = {\n\t\"./de\": 310,\n\t\"./de.js\": 310,\n\t\"./el\": 311,\n\t\"./el.js\": 311,\n\t\"./en\": 205,\n\t\"./en.js\": 205,\n\t\"./es\": 312,\n\t\"./es.js\": 312,\n\t\"./fr\": 313,\n\t\"./fr.js\": 313,\n\t\"./it\": 314,\n\t\"./it.js\": 314,\n\t\"./ja\": 315,\n\t\"./ja.js\": 315,\n\t\"./nb_NO\": 316,\n\t\"./nb_NO.js\": 316,\n\t\"./pl\": 317,\n\t\"./pl.js\": 317,\n\t\"./ru\": 318,\n\t\"./ru.js\": 318,\n\t\"./tr\": 319,\n\t\"./tr.js\": 319,\n\t\"./zh\": 320,\n\t\"./zh.js\": 320,\n\t\"./zh_TW\": 321,\n\t\"./zh_TW.js\": 321\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 571;","module.exports = __webpack_public_path__ + \"static/media/default-img.619dd2bc.PNG\";"],"sourceRoot":""}