{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\common\\\\forgotPassword\\\\resetPassword.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport classnames from 'classnames';\nimport { Button, FormGroup, InputGroup, FormControl } from 'react-bootstrap'; //import HeaderBeforeLogin from './headerBeforeLogin';\n\nimport theRapidHireApiService from '../core/api/apiService';\nimport { ZoomInAndOut, renderMessage } from '../commonFunctions';\nimport CONSTANTS from '../core/config/appConfig';\nimport Sidebar from '../authorization/sideBar';\nlet validationMessages = CONSTANTS.validationMessages;\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValidatorData = () => {\n      return this.state;\n    };\n\n    this.getClasses = field => {\n      return classnames({\n        error: !this.props.isValid(field)\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.submitData = event => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        this.handleButtonState();\n      }\n    };\n\n    this.state = {\n      isLoading: false,\n      email: ''\n    };\n    this.handleButtonState = this.handleButtonState.bind(this);\n    this.getValidatorData = this.getValidatorData.bind(this);\n    this.getClasses = this.getClasses.bind(this);\n    this.validatorTypes = strategy.createSchema({\n      email: 'required|email'\n    }, {\n      'required.email': validationMessages.email.required,\n      'email.email': validationMessages.email.invalid\n    });\n  }\n\n  handleButtonState() {\n    let self = this;\n    self.props.validate(function (error) {\n      if (!error) {\n        self.setState({\n          isLoading: true\n        });\n        self.handleSubmit();\n      }\n    });\n  }\n\n  handleSubmit() {\n    let self = this;\n    let email = self.state.email.toLowerCase().trim();\n    theRapidHireApiService('forgotPassword', {\n      email\n    }).then(response => {\n      if (response.data.status === 'Success') {\n        self.setState({\n          email: '',\n          isLoading: false\n        });\n        setTimeout(() => {\n          self.props.history.push('/');\n        }, 4000);\n      } else {\n        self.setState({\n          isLoading: false\n        });\n      }\n    }).catch(err => {\n      self.setState({\n        isLoading: false\n      });\n      console.log(err);\n    });\n  }\n\n  render() {\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"formContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"centeredBox p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"forgotPasswordForm bg-transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex align-center mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      className: \"md-icon mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon-back_arrow2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"legend\", {\n      className: \"color-blue mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Forgot Password\")), React.createElement(\"p\", {\n      className: \"lead mb-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Reset your password by filling in your email address. You will then receive an email with new password.\"))), React.createElement(FormGroup, {\n      className: this.getClasses('email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(InputGroup.Addon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon-email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(FormControl, {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      onKeyPress: this.submitData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), renderMessage(this.props.getValidationMessages('email'))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bsStyle: \"primary\",\n      className: \"centeredBtn btn-lg\",\n      disabled: isLoading,\n      onClick: !isLoading ? this.handleButtonState : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, isLoading ? 'In Progress...' : 'Reset'))))), \" \"))));\n  }\n\n}\n\nResetPassword = validation(strategy)(ResetPassword);\nexport default ResetPassword;","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\common\\forgotPassword\\resetPassword.js"],"names":["React","Component","Link","ToastContainer","validation","strategy","classnames","Button","FormGroup","InputGroup","FormControl","theRapidHireApiService","ZoomInAndOut","renderMessage","CONSTANTS","Sidebar","validationMessages","ResetPassword","constructor","props","getValidatorData","state","getClasses","field","error","isValid","handleChange","event","setState","target","name","value","submitData","key","preventDefault","handleButtonState","isLoading","email","bind","validatorTypes","createSchema","required","invalid","self","validate","handleSubmit","toLowerCase","trim","then","response","data","status","setTimeout","history","push","catch","err","console","log","render","getValidationMessages"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport { Button, FormGroup, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\n//import HeaderBeforeLogin from './headerBeforeLogin';\r\nimport theRapidHireApiService from '../core/api/apiService';\r\nimport { ZoomInAndOut, renderMessage } from '../commonFunctions';\r\nimport CONSTANTS from '../core/config/appConfig';\r\nimport Sidebar from '../authorization/sideBar';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      email: ''\r\n    };\r\n\r\n    this.handleButtonState = this.handleButtonState.bind(this);\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        email: 'required|email'\r\n      },\r\n      {\r\n        'required.email': validationMessages.email.required,\r\n        'email.email': validationMessages.email.invalid\r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  submitData = event => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.handleButtonState();\r\n    }\r\n  };\r\n\r\n  handleButtonState() {\r\n    let self = this;\r\n    self.props.validate(function(error) {\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        self.handleSubmit();\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    let self = this;\r\n    let email = self.state.email.toLowerCase().trim();\r\n    theRapidHireApiService('forgotPassword', { email })\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          self.setState({ email: '', isLoading: false });\r\n          setTimeout(() => {\r\n            self.props.history.push('/');\r\n          }, 4000);\r\n        } else {\r\n          self.setState({ isLoading: false });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        self.setState({ isLoading: false });\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <div className=\"wrapper\">        \r\n      <div className=\"main-panel\">     \r\n        <div className=\"login_card\">\r\n           <div className=\"header\">\r\n        <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        />\r\n        <div className=\"formContent\">\r\n          <div className=\"centeredBox p-5\">\r\n            <form className=\"forgotPasswordForm bg-transparent\">\r\n              <FormGroup>\r\n                {/* <legend className=\"color-blue\">\r\n                  <Link to=\"/login\">\r\n                    <span className=\"icon-edit_pencil icon icon-shift\" />\r\n                  </Link>{' '}\r\n                  Forgot Password\r\n                </legend> */}\r\n\r\n                <div className=\"flex align-center mb-1\">\r\n                  <Link to=\"/login\" className=\"md-icon mr-1\">\r\n                    <span className=\"icon-back_arrow2\" />\r\n                  </Link>\r\n                  <legend className=\"color-blue mb-0\">Forgot Password</legend>\r\n                </div>\r\n\r\n                <p className=\"lead mb-50\">\r\n                  <strong>\r\n                    Reset your password by filling in your email address. You\r\n                    will then receive an email with new password.\r\n                  </strong>\r\n                </p>\r\n              </FormGroup>\r\n              <FormGroup className={this.getClasses('email')}>\r\n                <InputGroup>\r\n                  <InputGroup.Addon>\r\n                    <span className=\"icon-email\" />\r\n                  </InputGroup.Addon>\r\n                  <FormControl\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    onKeyPress={this.submitData}\r\n                  />\r\n                </InputGroup>\r\n                {renderMessage(this.props.getValidationMessages('email'))}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button\r\n                  bsStyle=\"primary\"\r\n                  className=\"centeredBtn btn-lg\"\r\n                  disabled={isLoading}\r\n                  onClick={!isLoading ? this.handleButtonState : null}\r\n                >\r\n                  {isLoading ? 'In Progress...' : 'Reset'}\r\n                </Button>\r\n              </FormGroup>\r\n            </form>\r\n          </div>\r\n        </div> </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword = validation(strategy)(ResetPassword);\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}