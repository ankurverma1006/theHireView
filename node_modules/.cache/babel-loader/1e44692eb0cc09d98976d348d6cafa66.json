{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\interviewer\\\\profile\\\\timeSlots.js\";\nimport React, { Component } from 'react';\nimport Header from '../header/header';\nimport { Button, Media, Row, Col, FormControl, FormGroup, InputGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Week, Month, Agenda, TimelineViews, TimelineMonth, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\nimport moment from 'moment';\nimport { extend, createElement } from '@syncfusion/ej2-base';\nimport '@syncfusion/ej2-base/styles/material.css';\nimport '@syncfusion/ej2-buttons/styles/material.css';\nimport '@syncfusion/ej2-calendars/styles/material.css';\nimport '@syncfusion/ej2-dropdowns/styles/material.css';\nimport '@syncfusion/ej2-inputs/styles/material.css';\nimport '@syncfusion/ej2-lists/styles/material.css';\nimport '@syncfusion/ej2-navigations/styles/material.css';\nimport '@syncfusion/ej2-popups/styles/material.css'; //import \"@syncfusion/ej2-split-buttons/styles/material.css\";\n\nimport '@syncfusion/ej2-react-schedule/styles/material.css';\nimport { ToastContainer } from 'react-toastify'; //import '../node_modules/@syncfusion/ej2/material.css';\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\n\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from 'react-download-link'; //import Img from '../../common/cropper/img';\n\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'; //import moment from 'moment';\n\nimport { showErrorToast, ZoomInAndOut } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\n\nclass TimeSlots extends Component {\n  constructor(props) {\n    super(...arguments);\n\n    this.handleChange = date => {\n      console.log(date);\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      startDate: new Date(),\n      timeData: []\n    };\n  }\n\n  componentDidMount() {\n    let user = this.props.otherUser ? this.props.otherUser : this.props.user;\n\n    if (user) {\n      let userId = user.userId;\n      this.setState({\n        userId: userId,\n        user: user\n      });\n      this.getUserProfileData(userId);\n      this.getSlotDetails(userId);\n    }\n  }\n\n  getUserProfileData(userId) {\n    theRapidHireApiService('getUserSkillsById', {\n      userId\n    }).then(response => {\n      if (response.data.status === 'Success') {\n        console.log(response.data);\n        let userProfile = response.data.result[0];\n        this.setState({\n          userProfile: userProfile\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getSlotDetails(userId) {\n    let interviewerId = userId;\n    theRapidHireApiService('getTimeSlotByInterviewer', {\n      interviewerId\n    }).then(response => {\n      if (response.data.status === 'Success') {\n        console.log(response);\n        let timeData = [];\n        response.data.result.forEach(function (item, index) {\n          let launchDate = new Date(item.startTimeStamp);\n          let day = launchDate.getUTCDate();\n          let month = launchDate.getMonth();\n          let year = launchDate.getFullYear();\n          let min = launchDate.getMinutes();\n          let hour = launchDate.getHours();\n          let startDate = new Date(year, month, day, hour, min);\n          launchDate = new Date(item.endTimeStamp);\n          day = launchDate.getUTCDate();\n          month = launchDate.getMonth();\n          year = launchDate.getFullYear();\n          min = launchDate.getMinutes();\n          hour = launchDate.getHours();\n          let endDate = new Date(year, month, day, hour, min);\n          timeData.push({\n            Subject: item.userId ? 'Booked' : 'Available',\n            slotId: item.slotId,\n            text: 'Photogenic',\n            userId: item.userId,\n            StartTime: startDate,\n            EndTime: endDate,\n            Color: item.userId ? '#1aaa55' : '#7fa900'\n          });\n        });\n        this.setState({\n          timeData: timeData\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  onPopupOpen(args) {\n    console.log(args);\n\n    if (moment(args.data.StartTime).valueOf() < moment().valueOf()) {\n      args.cancel = true;\n      showErrorToast('Selected time can not be less than current time.');\n      return false;\n    }\n\n    console.log(args.data.StartTime);\n    let self = this;\n    let startDate = new Date(args.data.StartTime);\n    let endDate = new Date(args.data.EndTime);\n    console.log(moment(args.data.StartTime));\n    let data = {\n      slotRegisteredDate: new Date(moment(args.data.StartTime).format('DD-MMM-YYYY')).valueOf(),\n      startTimeStamp: moment(startDate).valueOf(),\n      endTimeStamp: moment(endDate).valueOf(),\n      interviewerId: this.state.userId\n    };\n\n    if (!args.data.slotId) {\n      theRapidHireApiService('createSlot', data).then(response => {\n        if (response.data.status === 'Success') {\n          self.setState({\n            isLoading: false\n          });\n          self.getSlotDetails(self.state.userId);\n        }\n      }).catch(error => {\n        // self.setState({ isLoading: false });\n        console.log(error);\n      });\n    } else {\n      let slotId = args.data.slotId;\n      console.log(!args.data.userId);\n\n      if (!args.data.userId) {\n        theRapidHireApiService('deleteTimeSlotByInterviewer', {\n          slotId\n        }).then(response => {\n          if (response.data.status === 'Success') {\n            self.setState({\n              isLoading: false\n            });\n            self.getSlotDetails(self.state.userId);\n          }\n        }).catch(error => {\n          // self.setState({ isLoading: false });\n          console.log(error);\n        });\n      } else {\n        showErrorToast('Booked Slot can not be removed.');\n      }\n    }\n\n    if (args.elementType == 'workCells' || args.elementType == 'monthCells') {\n      let weekEnds = [0, 6];\n\n      if (weekEnds.indexOf(args.date.getDay()) >= 0) {\n        let ele = createElement('div', {\n          innerHTML: \"<img src='https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg' />\",\n          className: 'templatewrap'\n        });\n        args.element.appendChild(ele);\n      }\n    }\n\n    args.cancel = true;\n  }\n\n  onRenderCell(args) {}\n\n  render() {\n    let self = this;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-content main-panel1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.state.userProfile ? React.createElement(ScheduleComponent, {\n      width: \"100%\",\n      height: \"800px\",\n      ref: schedule => this.scheduleObj = schedule,\n      popupOpen: this.onPopupOpen.bind(this),\n      showQuickInfo: false //  eventRendered={this.onEventRendered.bind(this)} selectedDate={new Date(2018, 3, 1)}\n      ,\n      onChange: this.handleChange.bind(this),\n      eventSettings: {\n        dataSource: this.state.timeData\n      },\n      renderCell: this.onRenderCell.bind(this),\n      cssClass: \"schedule-cell-dimension\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(ViewsDirective, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(ViewDirective, {\n      option: \"Day\",\n      startHour: \"09:30\",\n      endHour: \"18:00\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(ViewDirective, {\n      option: \"Week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(ViewDirective, {\n      option: \"Agenda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })), React.createElement(ResourcesDirective, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(ResourceDirective, {\n      field: \"slotId\",\n      title: \"Slot\",\n      name: \"Slot\",\n      allowMultiple: false,\n      textField: \"text\",\n      dataSource: self.state.timeData,\n      idField: \"id\",\n      colorField: \"Color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })), React.createElement(Inject, {\n      services: [Week, Agenda],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"container main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Kindly complete profile first\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nexport default connect(mapStateToProps, null)(TimeSlots);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\interviewer\\profile\\timeSlots.js"],"names":["React","Component","Header","Button","Media","Row","Col","FormControl","FormGroup","InputGroup","connect","Week","Month","Agenda","TimelineViews","TimelineMonth","ScheduleComponent","ViewsDirective","ViewDirective","ResourcesDirective","ResourceDirective","Inject","moment","extend","createElement","ToastContainer","ImageCropper","DownloadLink","DatePickerComponent","TimePickerComponent","showErrorToast","ZoomInAndOut","theRapidHireApiService","CONSTANTS","TimeSlots","constructor","props","arguments","handleChange","date","console","log","setState","startDate","state","isOpen","Date","timeData","componentDidMount","user","otherUser","userId","getUserProfileData","getSlotDetails","then","response","data","status","userProfile","result","catch","err","interviewerId","forEach","item","index","launchDate","startTimeStamp","day","getUTCDate","month","getMonth","year","getFullYear","min","getMinutes","hour","getHours","endTimeStamp","endDate","push","Subject","slotId","text","StartTime","EndTime","Color","onPopupOpen","args","valueOf","cancel","self","slotRegisteredDate","format","isLoading","error","elementType","weekEnds","indexOf","getDay","ele","innerHTML","className","element","appendChild","onRenderCell","render","schedule","scheduleObj","bind","dataSource","mapStateToProps","User","userData","parent","parentData","otherUserInfoData","student","Student"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../header/header';\r\nimport {\r\n  Button,\r\n  Media,\r\n  Row,\r\n  Col,\r\n  FormControl,\r\n  FormGroup,\r\n  InputGroup\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  Week,\r\n  Month,\r\n  Agenda,\r\n  TimelineViews,\r\n  TimelineMonth,\r\n  ScheduleComponent,\r\n  ViewsDirective,\r\n  ViewDirective,\r\n  ResourcesDirective,\r\n  ResourceDirective,\r\n  Inject\r\n} from '@syncfusion/ej2-react-schedule';\r\n\r\nimport moment from 'moment';\r\n\r\nimport { extend, createElement } from '@syncfusion/ej2-base';\r\nimport '@syncfusion/ej2-base/styles/material.css';\r\nimport '@syncfusion/ej2-buttons/styles/material.css';\r\nimport '@syncfusion/ej2-calendars/styles/material.css';\r\nimport '@syncfusion/ej2-dropdowns/styles/material.css';\r\nimport '@syncfusion/ej2-inputs/styles/material.css';\r\nimport '@syncfusion/ej2-lists/styles/material.css';\r\nimport '@syncfusion/ej2-navigations/styles/material.css';\r\nimport '@syncfusion/ej2-popups/styles/material.css';\r\n//import \"@syncfusion/ej2-split-buttons/styles/material.css\";\r\nimport '@syncfusion/ej2-react-schedule/styles/material.css';\r\nimport { ToastContainer } from 'react-toastify';\r\n//import '../node_modules/@syncfusion/ej2/material.css';\r\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport DownloadLink from 'react-download-link';\r\n//import Img from '../../common/cropper/img';\r\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\n//import moment from 'moment';\r\nimport { showErrorToast, ZoomInAndOut } from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n\r\nclass TimeSlots extends Component {\r\n  constructor(props) {\r\n    super(...arguments);\r\n    this.state = {\r\n      isOpen: false,\r\n      startDate: new Date(),\r\n      timeData: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let user = this.props.otherUser ? this.props.otherUser : this.props.user;\r\n    if (user) {\r\n      let userId = user.userId;\r\n      this.setState({ userId: userId, user: user });\r\n      this.getUserProfileData(userId);\r\n      this.getSlotDetails(userId);\r\n    }\r\n  }\r\n\r\n  getUserProfileData(userId) {\r\n    theRapidHireApiService('getUserSkillsById', { userId })\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          console.log(response.data);\r\n          let userProfile = response.data.result[0];\r\n          this.setState({ userProfile: userProfile });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  getSlotDetails(userId) {\r\n    let interviewerId = userId;\r\n    theRapidHireApiService('getTimeSlotByInterviewer', { interviewerId })\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          console.log(response);\r\n          let timeData = [];\r\n          response.data.result.forEach(function(item, index) {\r\n            let launchDate = new Date(item.startTimeStamp);\r\n            let day = launchDate.getUTCDate();\r\n            let month = launchDate.getMonth();\r\n            let year = launchDate.getFullYear();\r\n            let min = launchDate.getMinutes();\r\n            let hour = launchDate.getHours();\r\n\r\n            let startDate = new Date(year, month, day, hour, min);\r\n\r\n            launchDate = new Date(item.endTimeStamp);\r\n            day = launchDate.getUTCDate();\r\n            month = launchDate.getMonth();\r\n            year = launchDate.getFullYear();\r\n            min = launchDate.getMinutes();\r\n            hour = launchDate.getHours();\r\n\r\n            let endDate = new Date(year, month, day, hour, min);\r\n\r\n            timeData.push({\r\n              Subject: item.userId ? 'Booked' : 'Available',\r\n              slotId: item.slotId,\r\n              text: 'Photogenic',\r\n              userId: item.userId,\r\n              StartTime: startDate,\r\n              EndTime: endDate,\r\n              Color: item.userId ? '#1aaa55' : '#7fa900'\r\n            });\r\n          });\r\n          this.setState({ timeData: timeData });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleChange = date => {\r\n    console.log(date);\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n\r\n  onPopupOpen(args) {\r\n    console.log(args);\r\n\r\n    if (moment(args.data.StartTime).valueOf() < moment().valueOf()) {\r\n      args.cancel = true;\r\n      showErrorToast('Selected time can not be less than current time.');\r\n      return false;\r\n    }\r\n\r\n    console.log(args.data.StartTime);\r\n    let self = this;\r\n    let startDate = new Date(args.data.StartTime);\r\n\r\n    let endDate = new Date(args.data.EndTime);\r\n\r\n    console.log(moment(args.data.StartTime));\r\n\r\n    let data = {\r\n      slotRegisteredDate: new Date(\r\n        moment(args.data.StartTime).format('DD-MMM-YYYY')\r\n      ).valueOf(),\r\n      startTimeStamp: moment(startDate).valueOf(),\r\n      endTimeStamp: moment(endDate).valueOf(),\r\n      interviewerId: this.state.userId\r\n    };\r\n    if (!args.data.slotId) {\r\n      theRapidHireApiService('createSlot', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {\r\n            self.setState({ isLoading: false });\r\n            self.getSlotDetails(self.state.userId);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          // self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      let slotId = args.data.slotId;\r\n      console.log(!args.data.userId);\r\n      if (!args.data.userId) {\r\n        theRapidHireApiService('deleteTimeSlotByInterviewer', { slotId })\r\n          .then(response => {\r\n            if (response.data.status === 'Success') {\r\n              self.setState({ isLoading: false });\r\n              self.getSlotDetails(self.state.userId);\r\n            }\r\n          })\r\n          .catch(error => {\r\n            // self.setState({ isLoading: false });\r\n            console.log(error);\r\n          });\r\n      } else {\r\n        showErrorToast('Booked Slot can not be removed.');\r\n      }\r\n    }\r\n    if (args.elementType == 'workCells' || args.elementType == 'monthCells') {\r\n      let weekEnds = [0, 6];\r\n      if (weekEnds.indexOf(args.date.getDay()) >= 0) {\r\n        let ele = createElement('div', {\r\n          innerHTML:\r\n            \"<img src='https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg' />\",\r\n          className: 'templatewrap'\r\n        });\r\n        args.element.appendChild(ele);\r\n      }\r\n    }\r\n    args.cancel = true;\r\n  }\r\n\r\n  onRenderCell(args) {}\r\n\r\n  render() {\r\n    let self = this;\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        />\r\n        <Header {...this.props} />\r\n        <div className=\"main-panel\">\r\n          <div className=\"w3-content main-panel1\">\r\n            {this.state.userProfile ? (\r\n              <ScheduleComponent\r\n                width=\"100%\"\r\n                height=\"800px\"\r\n                ref={schedule => (this.scheduleObj = schedule)}\r\n                popupOpen={this.onPopupOpen.bind(this)}\r\n                showQuickInfo={false}\r\n                //  eventRendered={this.onEventRendered.bind(this)} selectedDate={new Date(2018, 3, 1)}\r\n                onChange={this.handleChange.bind(this)}\r\n                eventSettings={{ dataSource: this.state.timeData }}\r\n                renderCell={this.onRenderCell.bind(this)}\r\n                cssClass=\"schedule-cell-dimension\"\r\n              >\r\n                <ViewsDirective>\r\n                  <ViewDirective\r\n                    option=\"Day\"\r\n                    startHour=\"09:30\"\r\n                    endHour=\"18:00\"\r\n                  />\r\n                  <ViewDirective option=\"Week\" />\r\n                  <ViewDirective option=\"Agenda\" />\r\n                </ViewsDirective>\r\n                <ResourcesDirective>\r\n                  <ResourceDirective\r\n                    field=\"slotId\"\r\n                    title=\"Slot\"\r\n                    name=\"Slot\"\r\n                    allowMultiple={false}\r\n                    textField=\"text\"\r\n                    dataSource={self.state.timeData}\r\n                    idField=\"id\"\r\n                    colorField=\"Color\"\r\n                  ></ResourceDirective>\r\n                </ResourcesDirective>\r\n                <Inject services={[Week, Agenda]} />\r\n              </ScheduleComponent>\r\n            ) : (\r\n              <div className=\"container main\">\r\n                Kindly complete profile first\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    otherUser: state.User.otherUserInfoData,\r\n    student: state.Student\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(TimeSlots);\r\n"]},"metadata":{},"sourceType":"module"}