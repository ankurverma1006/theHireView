{"ast":null,"code":"var _jsxFileName = \"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/interviewer/profile/addSkills.js\";\nimport React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Portal } from 'react-overlays';\nimport { Button, Modal, Form, FormGroup, Checkbox, Col, ControlLabel, FormControl, InputGroup, Radio } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.css';\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date'; //import DatePicker from 'react-datepicker';\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\n\nimport moment from 'moment';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport classnames from 'classnames';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport _ from 'lodash';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport { renderMessage, isValidURL, ZoomInAndOut, generateTimestamp } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService'; //import MediaList from '../mediaList';\n\nlet validationMessages = CONSTANTS.validationMessages;\nlet regExpressions = CONSTANTS.regExpressions;\nlet badgeImgArray = [];\nlet badgeImgPreview = [];\nlet certificateImgArray = [];\nlet certificateImgPreview = [];\nlet mediaImgArray = [];\nlet mediaImgPreview = [];\nconst emptyToDate = '10000000';\n\nclass addSkills extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValidatorData = () => {\n      return this.state;\n    };\n\n    this.getClasses = field => {\n      return classnames({\n        error: !this.props.isValid(field)\n      });\n    };\n\n    this.setSkillsData = data => {\n      console.log(data);\n\n      if (data) {\n        this.setState({\n          userId: data.userId,\n          availableSkills: data.skills,\n          userProfileId: data.userProfileId\n        });\n      }\n\n      ;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeStart = startDate => {\n      this.handleDateChange({\n        startDate\n      });\n    };\n\n    this.handleChangeEnd = endDate => {\n      this.handleDateChange({\n        endDate\n      });\n    };\n\n    this.handleDateChange = ({\n      startDate,\n      endDate\n    }) => {\n      console.log(endDate);\n      startDate = startDate || this.state.startDate;\n      endDate = endDate || this.state.endDate;\n\n      if (startDate && endDate) {\n        if (startDate.isAfter(endDate)) {\n          endDate = startDate;\n        }\n      }\n\n      this.setState({\n        startDate,\n        endDate\n      });\n    };\n\n    this.validateData = () => {\n      let self = this;\n      this.props.validate(function (error) {\n        if (!error) {\n          self.setState({\n            isLoading: true\n          });\n          self.handleSubmit();\n        }\n      });\n    };\n\n    this.closeImageModal = () => {\n      this.setState({\n        imagesModal: !this.state.imagesModal\n      });\n    };\n\n    this.handleSkillsChange = newValue => {\n      this.setState({\n        skills: newValue\n      });\n    };\n\n    this.closeSkillsModal = status => {\n      this.setState({\n        skillsModal: false\n      });\n      this.props.closeSkillsComponent();\n    };\n\n    this.state = {\n      isLoading: false,\n      promptRecommendation: false,\n      userId: '',\n      skillsModal: true,\n      skillId: '',\n      rating: '',\n      skillsList: [],\n      availableSkills: []\n    };\n    this.getValidatorData = this.getValidatorData.bind(this);\n    this.getClasses = this.getClasses.bind(this);\n    this.validatorTypes = strategy.createSchema({\n      skills: 'required',\n      rating: 'required' // level3Competency: 'required',\n      // skills: 'required',\n      // importance: 'required',\n      // //   startDate: 'required',\n      // //  endDate: 'required',\n      // firstName: ['regex:' + regExpressions.alphaOnly],\n      // lastName: ['regex:' + regExpressions.alphaOnly],\n      // email: 'email'\n\n    }, {\n      'required.skills': validationMessages.skills.required,\n      'required.rating': validationMessages.rating.required // 'required.skills': validationMessages.skills.required,\n      // 'required.importance': validationMessages.importance.required,\n      // //  'required.startDate': validationMessages.startDate.required,\n      // //  'required.endDate': validationMessages.endDate.required,\n      // 'email.email': validationMessages.email.invalid,\n      // 'regex.firstName': validationMessages.firstName.alphaOnly,\n      // 'regex.lastName': validationMessages.lastName.alphaOnly\n\n    });\n  }\n\n  componentDidMount() {\n    let userId = null;\n\n    if (this.props.user) {\n      userId = this.props.user.userId;\n      this.setState({\n        userId: userId\n      });\n    }\n\n    this.setSkillsData(this.props.skillsDetail); // this.getAssociatedListData(10);\n\n    this.getKeySkillsList();\n  }\n\n  getKeySkillsList(userId) {\n    theRapidHireApiService('getKeySkillsList').then(response => {\n      if (response.data.status === 'Success') {\n        let skillsList = this.state.skillsList;\n        let availableSkills = this.props.skillsDetail && this.props.skillsDetail.skills ? this.props.skillsDetail.skills : [];\n        response.data.result.forEach(function (data) {\n          let availIndex = availableSkills.findIndex(todo => todo.skillId == data.skillId);\n          if (availIndex === -1) skillsList.push({\n            label: data.skillName,\n            value: data.skillId\n          });\n        });\n        console.log(skillsList);\n        this.setState({\n          skillsList: skillsList\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken').then(response => {\n      if (response.data.status === 'Success') {\n        let sasToken = response.data.result.sasToken;\n        this.setState({\n          sasToken\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleSubmit() {\n    let rating = this.state.rating;\n    let availableSkills = this.props.skillsDetail.skills;\n    let skills = this.state.skills;\n    console.log(this.state.skills);\n    availableSkills.push({\n      'skillId': skills.value,\n      'skillName': skills.label,\n      'rating': rating\n    });\n    let userId = this.props.user.userId;\n    let skillId = this.state.skillId;\n    let userProfileId = this.props.skillsDetail.userProfileId ? this.props.skillsDetail.userProfileId : \"\";\n    console.log('userProfileId', userProfileId);\n    let data = {\n      userProfileId,\n      userId,\n      skills: availableSkills\n    };\n    let self = this;\n\n    if (!this.state.userProfileId || this.state.userProfileId === '') {\n      theRapidHireApiService('addUserSkills', data).then(response => {\n        if (response.data.status === 'Success') {\n          self.setState({\n            isLoading: false\n          });\n          self.closeSkillsModal('save');\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    } else {\n      theRapidHireApiService('editUserSkills', data).then(response => {\n        if (response.data.status === 'Success') {\n          self.closeSkillsModal('save');\n          self.setState({\n            isLoading: false\n          });\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const CalendarContainer = ({\n      children\n    }) => {\n      const el = document.getElementById('calendar-portal');\n      return React.createElement(Portal, {\n        container: el,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, children);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      bsSize: \"large\",\n      show: this.state.skillsModal,\n      onHide: this.closeSkillsModal.bind(this, 'close'),\n      backdrop: \"static\",\n      keyboard: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, !this.state.profileId || this.state.profiletId === '' ? 'Add Career Profile' : 'Edit Career Profile')), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(Form, {\n      horizontal: true,\n      className: \"lightBgForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: this.getClasses('skills'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Add Skills\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon-down_arrow selectIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }), React.createElement(Select, {\n      className: \"form-control\",\n      name: \"skills\",\n      value: this.state.skills,\n      onChange: this.handleSkillsChange,\n      options: this.state.skillsList,\n      placeholder: \"Select skill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    })), renderMessage(this.props.getValidationMessages('skills')))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Role\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon-down_arrow selectIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      componentClass: \"select\",\n      placeholder: \"rating\",\n      name: \"rating\",\n      value: this.state.rating,\n      defaultValue: parseInt(this.state.rating, 10),\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, \"skills rating\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"5\")), renderMessage(this.props.getValidationMessages('rating')))))), React.createElement(\"div\", {\n      className: \"flex align-center justify-content-between fullWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bsStyle: \"primary\",\n      className: \"no-bold no-round\",\n      disabled: this.state.isLoading,\n      onClick: !this.state.isLoading ? this.validateData : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, this.state.isLoading ? 'In Progress...' : 'Save'), React.createElement(Button, {\n      bsStyle: \"default\",\n      className: \"no-bold no-round\",\n      onClick: this.closeSkillsModal.bind(this, 'close'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(Modal //  bsSize=\"medium\"\n    , {\n      show: this.state.imagesModal,\n      onHide: this.closeImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"Photos Gallery\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bstyle: \"default no-round\",\n      onClick: this.closeImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\naddSkills = validation(strategy)(addSkills);\n\nconst mapStateToProps = state => {\n  return {//  user: state.User.userData    \n  };\n};\n\nexport default connect(mapStateToProps, null)(addSkills);","map":{"version":3,"sources":["/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/interviewer/profile/addSkills.js"],"names":["React","Component","ToastContainer","Portal","Button","Modal","Form","FormGroup","Checkbox","Col","ControlLabel","FormControl","InputGroup","Radio","connect","Select","YearPicker","MonthPicker","DayPicker","moment","validation","strategy","classnames","ImageCropper","achievementDefaultImage","_","CONSTANTS","renderMessage","isValidURL","ZoomInAndOut","generateTimestamp","theRapidHireApiService","validationMessages","regExpressions","badgeImgArray","badgeImgPreview","certificateImgArray","certificateImgPreview","mediaImgArray","mediaImgPreview","emptyToDate","addSkills","constructor","props","getValidatorData","state","getClasses","field","error","isValid","setSkillsData","data","console","log","setState","userId","availableSkills","skills","userProfileId","handleChange","event","target","value","type","checked","name","handleChangeStart","startDate","handleDateChange","handleChangeEnd","endDate","isAfter","validateData","self","validate","isLoading","handleSubmit","closeImageModal","imagesModal","handleSkillsChange","newValue","closeSkillsModal","status","skillsModal","closeSkillsComponent","promptRecommendation","skillId","rating","skillsList","bind","validatorTypes","createSchema","required","componentDidMount","user","skillsDetail","getKeySkillsList","then","response","result","forEach","availIndex","findIndex","todo","push","label","skillName","catch","err","generateSASToken","sasToken","render","CalendarContainer","children","el","document","getElementById","profileId","profiletId","getValidationMessages","parseInt","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,GANF,EAOEC,YAPF,EAQEC,WARF,EASEC,UATF,EAUEC,KAVF,QAWO,iBAXP;AAYA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,oCAAP;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,SAAlC,QAAmD,qBAAnD,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,uBAAP,MAAoC,0CAApC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SACEC,aADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,iBAJF,QAKO,8BALP;AAMA,OAAOC,sBAAP,MAAmC,kCAAnC,C,CACA;;AAEA,IAAIC,kBAAkB,GAAGN,SAAS,CAACM,kBAAnC;AACA,IAAIC,cAAc,GAAGP,SAAS,CAACO,cAA/B;AACA,IAAIC,aAAa,GAAG,EAApB;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,mBAAmB,GAAG,EAA1B;AACA,IAAIC,qBAAqB,GAAG,EAA5B;AACA,IAAIC,aAAa,GAAG,EAApB;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,MAAMC,WAAW,GAAG,UAApB;;AAIA,MAAMC,SAAN,SAAwBxC,SAAxB,CAAkC;AAChCyC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA0CnBC,gBA1CmB,GA0CA,MAAM;AACvB,aAAO,KAAKC,KAAZ;AACD,KA5CkB;;AAAA,SA8CnBC,UA9CmB,GA8CNC,KAAK,IAAI;AACpB,aAAOzB,UAAU,CAAC;AAChB0B,QAAAA,KAAK,EAAE,CAAC,KAAKL,KAAL,CAAWM,OAAX,CAAmBF,KAAnB;AADQ,OAAD,CAAjB;AAGD,KAlDkB;;AAAA,SAmFnBG,aAnFmB,GAmFHC,IAAI,IAAI;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAGA,IAAH,EAAQ;AACN,aAAKG,QAAL,CAAc;AACVC,UAAAA,MAAM,EAACJ,IAAI,CAACI,MADF;AAEVC,UAAAA,eAAe,EAAGL,IAAI,CAACM,MAFb;AAGVC,UAAAA,aAAa,EAAEP,IAAI,CAACO;AAHV,SAAd;AAKC;;AAAA;AACJ,KA5FkB;;AAAA,SA8FnBC,YA9FmB,GA8FJC,KAAK,IAAI;AACtB,YAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,YAAMC,KAAK,GAAGD,MAAM,CAACE,IAAP,KAAgB,UAAhB,GAA6BF,MAAM,CAACG,OAApC,GAA8CH,MAAM,CAACC,KAAnE;AACA,YAAMG,IAAI,GAAGJ,MAAM,CAACI,IAApB;AAEA,WAAKX,QAAL,CAAc;AACZ,SAACW,IAAD,GAAQH;AADI,OAAd;AAGD,KAtGkB;;AAAA,SAwGnBI,iBAxGmB,GAwGCC,SAAS,IAAI;AAC/B,WAAKC,gBAAL,CAAsB;AAAED,QAAAA;AAAF,OAAtB;AACD,KA1GkB;;AAAA,SA4GnBE,eA5GmB,GA4GDC,OAAO,IAAI;AAC3B,WAAKF,gBAAL,CAAsB;AAAEE,QAAAA;AAAF,OAAtB;AACD,KA9GkB;;AAAA,SAgHnBF,gBAhHmB,GAgHA,CAAC;AAAED,MAAAA,SAAF;AAAaG,MAAAA;AAAb,KAAD,KAA4B;AAC7ClB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,OAAZ;AACAH,MAAAA,SAAS,GAAGA,SAAS,IAAI,KAAKtB,KAAL,CAAWsB,SAApC;AACAG,MAAAA,OAAO,GAAGA,OAAO,IAAI,KAAKzB,KAAL,CAAWyB,OAAhC;;AACA,UAAIH,SAAS,IAAIG,OAAjB,EAA0B;AACxB,YAAIH,SAAS,CAACI,OAAV,CAAkBD,OAAlB,CAAJ,EAAgC;AAC9BA,UAAAA,OAAO,GAAGH,SAAV;AACD;AACF;;AACD,WAAKb,QAAL,CAAc;AAAEa,QAAAA,SAAF;AAAaG,QAAAA;AAAb,OAAd;AACD,KA1HkB;;AAAA,SAyInBE,YAzImB,GAyIJ,MAAM;AACnB,UAAIC,IAAI,GAAG,IAAX;AACA,WAAK9B,KAAL,CAAW+B,QAAX,CAAoB,UAAS1B,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAL,EAAY;AACVyB,UAAAA,IAAI,CAACnB,QAAL,CAAc;AAAEqB,YAAAA,SAAS,EAAE;AAAb,WAAd;AACIF,UAAAA,IAAI,CAACG,YAAL;AACH;AACJ,OALD;AAMD,KAjJkB;;AAAA,SAmMnBC,eAnMmB,GAmMD,MAAM;AACtB,WAAKvB,QAAL,CAAc;AACZwB,QAAAA,WAAW,EAAE,CAAC,KAAKjC,KAAL,CAAWiC;AADb,OAAd;AAGD,KAvMkB;;AAAA,SA0MnBC,kBA1MmB,GA0MEC,QAAQ,IAAI;AAC/B,WAAK1B,QAAL,CAAc;AACZG,QAAAA,MAAM,EAAEuB;AADI,OAAd;AAGD,KA9MkB;;AAAA,SAiNnBC,gBAjNmB,GAiNAC,MAAM,IAAI;AAC3B,WAAK5B,QAAL,CAAc;AACZ6B,QAAAA,WAAW,EAAE;AADD,OAAd;AAGA,WAAKxC,KAAL,CAAWyC,oBAAX;AACD,KAtNkB;;AAEjB,SAAKvC,KAAL,GAAa;AACX8B,MAAAA,SAAS,EAAE,KADA;AAEXU,MAAAA,oBAAoB,EAAE,KAFX;AAGX9B,MAAAA,MAAM,EAAE,EAHG;AAIX4B,MAAAA,WAAW,EAAC,IAJD;AAKXG,MAAAA,OAAO,EAAC,EALG;AAMXC,MAAAA,MAAM,EAAC,EANI;AAOXC,MAAAA,UAAU,EAAC,EAPA;AAQXhC,MAAAA,eAAe,EAAC;AARL,KAAb;AAWA,SAAKZ,gBAAL,GAAwB,KAAKA,gBAAL,CAAsB6C,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAK3C,UAAL,GAAkB,KAAKA,UAAL,CAAgB2C,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,cAAL,GAAsBrE,QAAQ,CAACsE,YAAT,CACpB;AACElC,MAAAA,MAAM,EAAE,UADV;AAEE8B,MAAAA,MAAM,EAAE,UAFV,CAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAVF,KADoB,EAapB;AACE,yBAAmBvD,kBAAkB,CAACyB,MAAnB,CAA0BmC,QAD/C;AAEG,yBAAmB5D,kBAAkB,CAACuD,MAAnB,CAA0BK,QAFhD,CAGE;AACA;AACA;AACA;AACA;AACA;AACA;;AATF,KAboB,CAAtB;AAyBD;;AAYDC,EAAAA,iBAAiB,GAAG;AAClB,QAAItC,MAAM,GAAE,IAAZ;;AACA,QAAG,KAAKZ,KAAL,CAAWmD,IAAd,EAAmB;AACjBvC,MAAAA,MAAM,GAAG,KAAKZ,KAAL,CAAWmD,IAAX,CAAgBvC,MAAzB;AACA,WAAKD,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEA;AAAT,OAAd;AACD;;AACD,SAAKL,aAAL,CAAmB,KAAKP,KAAL,CAAWoD,YAA9B,EANkB,CAOlB;;AACA,SAAKC,gBAAL;AACD;;AAEDA,EAAAA,gBAAgB,CAACzC,MAAD,EAAQ;AACtBxB,IAAAA,sBAAsB,CAAC,kBAAD,CAAtB,CACCkE,IADD,CACMC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAAC/C,IAAT,CAAc+B,MAAd,KAAyB,SAA7B,EAAwC;AACrC,YAAIM,UAAU,GAAE,KAAK3C,KAAL,CAAW2C,UAA3B;AACA,YAAIhC,eAAe,GAAE,KAAKb,KAAL,CAAWoD,YAAX,IAA2B,KAAKpD,KAAL,CAAWoD,YAAX,CAAwBtC,MAAnD,GAA2D,KAAKd,KAAL,CAAWoD,YAAX,CAAwBtC,MAAnF,GAA0F,EAA/G;AACAyC,QAAAA,QAAQ,CAAC/C,IAAT,CAAcgD,MAAd,CAAqBC,OAArB,CAA6B,UAASjD,IAAT,EAAc;AACzC,cAAIkD,UAAU,GAAE7C,eAAe,CAAC8C,SAAhB,CAA0BC,IAAI,IAAIA,IAAI,CAACjB,OAAL,IAAgBnC,IAAI,CAACmC,OAAvD,CAAhB;AACD,cAAGe,UAAU,KAAK,CAAC,CAAnB,EACEb,UAAU,CAACgB,IAAX,CAAgB;AAACC,YAAAA,KAAK,EAAEtD,IAAI,CAACuD,SAAb;AAAuB5C,YAAAA,KAAK,EAACX,IAAI,CAACmC;AAAlC,WAAhB;AACH,SAJA;AAKDlC,QAAAA,OAAO,CAACC,GAAR,CAAYmC,UAAZ;AACC,aAAKlC,QAAL,CAAc;AAACkC,UAAAA,UAAU,EAAEA;AAAb,SAAd;AACF;AACF,KAbD,EAcCmB,KAdD,CAcOC,GAAG,IAAI;AACZxD,MAAAA,OAAO,CAACC,GAAR,CAAYuD,GAAZ;AACD,KAhBD;AAiBD;;AA2CDC,EAAAA,gBAAgB,GAAG;AACjB9E,IAAAA,sBAAsB,CAAC,aAAD,CAAtB,CACGkE,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAAC/C,IAAT,CAAc+B,MAAd,KAAyB,SAA7B,EAAwC;AACtC,YAAI4B,QAAQ,GAAGZ,QAAQ,CAAC/C,IAAT,CAAcgD,MAAd,CAAqBW,QAApC;AACA,aAAKxD,QAAL,CAAc;AAAEwD,UAAAA;AAAF,SAAd;AACD;AACF,KANH,EAOGH,KAPH,CAOSC,GAAG,IAAI;AACZxD,MAAAA,OAAO,CAACC,GAAR,CAAYuD,GAAZ;AACD,KATH;AAUD;;AAYDhC,EAAAA,YAAY,GAAG;AACd,QAAIW,MAAM,GAAG,KAAK1C,KAAL,CAAW0C,MAAxB;AACA,QAAI/B,eAAe,GAAG,KAAKb,KAAL,CAAWoD,YAAX,CAAwBtC,MAA9C;AACA,QAAIA,MAAM,GAAG,KAAKZ,KAAL,CAAWY,MAAxB;AACCL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWY,MAAvB;AAEAD,IAAAA,eAAe,CAACgD,IAAhB,CAAqB;AAAC,iBAAU/C,MAAM,CAACK,KAAlB;AAAwB,mBAAYL,MAAM,CAACgD,KAA3C;AAAiD,gBAASlB;AAA1D,KAArB;AAEA,QAAIhC,MAAM,GAAG,KAAKZ,KAAL,CAAWmD,IAAX,CAAgBvC,MAA7B;AACA,QAAI+B,OAAO,GAAG,KAAKzC,KAAL,CAAWyC,OAAzB;AACA,QAAI5B,aAAa,GAAE,KAAKf,KAAL,CAAWoD,YAAX,CAAwBrC,aAAxB,GAAuC,KAAKf,KAAL,CAAWoD,YAAX,CAAwBrC,aAA/D,GAA6E,EAAhG;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BK,aAA5B;AACA,QAAIP,IAAI,GAAG;AACTO,MAAAA,aADS;AAETH,MAAAA,MAFS;AAGTE,MAAAA,MAAM,EAACD;AAHE,KAAX;AAMA,QAAIiB,IAAI,GAAG,IAAX;;AAEA,QAAI,CAAC,KAAK5B,KAAL,CAAWa,aAAZ,IAA6B,KAAKb,KAAL,CAAWa,aAAX,KAA6B,EAA9D,EAAkE;AAChE3B,MAAAA,sBAAsB,CAAC,eAAD,EAAkBoB,IAAlB,CAAtB,CACG8C,IADH,CACQC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAAC/C,IAAT,CAAc+B,MAAd,KAAyB,SAA7B,EAAwC;AACtCT,UAAAA,IAAI,CAACnB,QAAL,CAAc;AAAEqB,YAAAA,SAAS,EAAE;AAAb,WAAd;AACAF,UAAAA,IAAI,CAACQ,gBAAL,CAAsB,MAAtB;AACD;AACF,OANH,EAOG0B,KAPH,CAOS3D,KAAK,IAAI;AACdyB,QAAAA,IAAI,CAACnB,QAAL,CAAc;AAAEqB,UAAAA,SAAS,EAAE;AAAb,SAAd;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,OAVH;AAWD,KAZD,MAYO;AACLjB,MAAAA,sBAAsB,CAAC,gBAAD,EAAmBoB,IAAnB,CAAtB,CACG8C,IADH,CACQC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAAC/C,IAAT,CAAc+B,MAAd,KAAyB,SAA7B,EAAwC;AACtCT,UAAAA,IAAI,CAACQ,gBAAL,CAAsB,MAAtB;AACAR,UAAAA,IAAI,CAACnB,QAAL,CAAc;AAAEqB,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD;AACF,OANH,EAOGgC,KAPH,CAOS3D,KAAK,IAAI;AACdyB,QAAAA,IAAI,CAACnB,QAAL,CAAc;AAAEqB,UAAAA,SAAS,EAAE;AAAb,SAAd;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACD,OAVH;AAWD;AACF;;AAuBD+D,EAAAA,MAAM,GAAG;AACP,UAAMC,iBAAiB,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AAC1C,YAAMC,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAX;AACA,aAAO,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEF,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBD,QAAxB,CAAP;AACD,KAHD;;AAKA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAC,OADT;AAEE,MAAA,IAAI,EAAE,KAAKpE,KAAL,CAAWsC,WAFnB;AAGE,MAAA,MAAM,EAAE,KAAKF,gBAAL,CAAsBQ,IAAtB,CAA2B,IAA3B,EAAiC,OAAjC,CAHV;AAIE,MAAA,QAAQ,EAAC,QAJX;AAKE,MAAA,QAAQ,EAAE,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,cAAD;AACE,MAAA,SAAS,EAAE,IADb;AAEE,MAAA,SAAS,EAAC,yBAFZ;AAGE,MAAA,cAAc,EAAC,mBAHjB;AAIE,MAAA,UAAU,EAAE5D,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAaE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,SAAS,EAAC,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,KAAKgB,KAAL,CAAWwE,SAAZ,IAAyB,KAAKxE,KAAL,CAAWyE,UAAX,KAA0B,EAAnD,GACG,oBADH,GAEG,qBAHN,CADF,CAbF,EAoBE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,SAAS,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAKxE,UAAL,CAAgB,QAAhB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,GAAD;AAAK,MAAA,cAAc,EAAEpC,YAArB;AAAmC,MAAA,EAAE,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAIC,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAE,KAAKmC,KAAL,CAAWY,MAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKsB,kBAJjB;AAKE,MAAA,OAAO,EAAE,KAAKlC,KAAL,CAAW2C,UALtB;AAME,MAAA,WAAW,EAAC,cANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAYG7D,aAAa,CAAC,KAAKgB,KAAL,CAAW4E,qBAAX,CAAiC,QAAjC,CAAD,CAZhB,CAJD,CADH,EAqBA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,cAAc,EAAE7G,YAArB;AAAmC,MAAA,EAAE,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAII,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEJ,oBAAC,WAAD;AACU,MAAA,cAAc,EAAC,QADzB;AAEU,MAAA,WAAW,EAAC,QAFtB;AAGU,MAAA,IAAI,EAAC,QAHf;AAIU,MAAA,KAAK,EAAE,KAAKmC,KAAL,CAAW0C,MAJ5B;AAKU,MAAA,YAAY,EAAEiC,QAAQ,CAAC,KAAK3E,KAAL,CAAW0C,MAAZ,EAAmB,EAAnB,CALhC;AAMU,MAAA,QAAQ,EAAE,KAAK5B,YANzB;AAOU,MAAA,YAAY,EAAC,KAPvB;AAQU,MAAA,SAAS,EAAC,MARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUO;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVP,EAWO;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXP,EAYO;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAZP,EAaO;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbP,EAcO;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAdP,EAeO;AAAQ,MAAA,KAAK,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAfP,CAFI,EAmBHhC,aAAa,CACJ,KAAKgB,KAAL,CAAW4E,qBAAX,CAAiC,QAAjC,CADI,CAnBV,CADF,CAJJ,CArBA,CADF,EAsDE;AAAK,MAAA,SAAS,EAAC,qDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtDF,CAFF,CApBF,EA+EE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAGE,MAAA,QAAQ,EAAE,KAAK1E,KAAL,CAAW8B,SAHvB;AAIE,MAAA,OAAO,EAAE,CAAC,KAAK9B,KAAL,CAAW8B,SAAZ,GAAwB,KAAKH,YAA7B,GAA4C,IAJvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAK3B,KAAL,CAAW8B,SAAX,GAAuB,gBAAvB,GAA0C,MAN7C,CADF,EASE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAGE,MAAA,OAAO,EAAE,KAAKM,gBAAL,CAAsBQ,IAAtB,CAA2B,IAA3B,EAAiC,OAAjC,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CA/EF,CAfF,EAiHE,oBAAC,KAAD,CACE;AADF;AAEE,MAAA,IAAI,EAAE,KAAK5C,KAAL,CAAWiC,WAFnB;AAGE,MAAA,MAAM,EAAE,KAAKD,eAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,KAAP;AAAa,MAAA,SAAS,EAAC,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CALF,EAUE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAYE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,kBAAf;AAAkC,MAAA,OAAO,EAAE,KAAKA,eAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAZF,CAjHF,CADF;AAuID;;AAtW+B;;AAwWlCpC,SAAS,GAAGrB,UAAU,CAACC,QAAD,CAAV,CAAqBoB,SAArB,CAAZ;;AACA,MAAMgF,eAAe,GAAG5E,KAAK,IAAI;AAC/B,SAAO,CACP;AADO,GAAP;AAGD,CAJD;;AAMA,eAAe/B,OAAO,CACpB2G,eADoB,EAEpB,IAFoB,CAAP,CAGbhF,SAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass addSkills extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,         \r\n      promptRecommendation: false,    \r\n      userId: '',       \r\n      skillsModal:true,\r\n      skillId:'',\r\n      rating:'',\r\n      skillsList:[],\r\n      availableSkills:[]      \r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        skills: 'required',\r\n        rating: 'required'\r\n        // level3Competency: 'required',\r\n        // skills: 'required',\r\n        // importance: 'required',\r\n        // //   startDate: 'required',\r\n        // //  endDate: 'required',\r\n        // firstName: ['regex:' + regExpressions.alphaOnly],\r\n        // lastName: ['regex:' + regExpressions.alphaOnly],\r\n        // email: 'email'\r\n      },\r\n      {\r\n        'required.skills': validationMessages.skills.required,        \r\n         'required.rating': validationMessages.rating.required\r\n        // 'required.skills': validationMessages.skills.required,\r\n        // 'required.importance': validationMessages.importance.required,\r\n        // //  'required.startDate': validationMessages.startDate.required,\r\n        // //  'required.endDate': validationMessages.endDate.required,\r\n        // 'email.email': validationMessages.email.invalid,\r\n        // 'regex.firstName': validationMessages.firstName.alphaOnly,\r\n        // 'regex.lastName': validationMessages.lastName.alphaOnly\r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let userId= null;\r\n    if(this.props.user){\r\n      userId = this.props.user.userId;\r\n      this.setState({userId: userId});\r\n    }    \r\n    this.setSkillsData(this.props.skillsDetail);\r\n    // this.getAssociatedListData(10);\r\n    this.getKeySkillsList();\r\n  }\r\n\r\n  getKeySkillsList(userId){\r\n    theRapidHireApiService('getKeySkillsList')\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n         let skillsList= this.state.skillsList;\r\n         let availableSkills= this.props.skillsDetail && this.props.skillsDetail.skills ?this.props.skillsDetail.skills:[] ;\r\n         response.data.result.forEach(function(data){\r\n           let availIndex= availableSkills.findIndex(todo => todo.skillId == data.skillId);\r\n          if(availIndex === -1)\r\n            skillsList.push({label: data.skillName,value:data.skillId })\r\n        })    \r\n        console.log(skillsList);    \r\n         this.setState({skillsList: skillsList});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  setSkillsData = data => { \r\n    console.log(data);\r\n    if(data){ \r\n      this.setState({      \r\n          userId:data.userId,\r\n          availableSkills : data.skills,         \r\n          userProfileId: data.userProfileId\r\n        });     \r\n      }; \r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    console.log(endDate);\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {      \r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        }   \r\n    });\r\n  };  \r\n\r\n  handleSubmit() {   \r\n   let rating = this.state.rating;  \r\n   let availableSkills = this.props.skillsDetail.skills;\r\n   let skills = this.state.skills;  \r\n    console.log(this.state.skills);  \r\n   \r\n    availableSkills.push({'skillId':skills.value,'skillName':skills.label,'rating':rating});   \r\n\r\n    let userId = this.props.user.userId;\r\n    let skillId=  this.state.skillId;   \r\n    let userProfileId= this.props.skillsDetail.userProfileId ?this.props.skillsDetail.userProfileId:\"\";\r\n    \r\n    console.log('userProfileId',userProfileId);\r\n    let data = {\r\n      userProfileId,\r\n      userId,\r\n      skills:availableSkills     \r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.userProfileId || this.state.userProfileId === '') {\r\n      theRapidHireApiService('addUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n            self.closeSkillsModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n            self.closeSkillsModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n\r\n  handleSkillsChange = newValue => {\r\n    this.setState({\r\n      skills: newValue\r\n    });\r\n  };\r\n  \r\n\r\n  closeSkillsModal = status => {   \r\n    this.setState({\r\n      skillsModal: false      \r\n    });   \r\n    this.props.closeSkillsComponent();\r\n  };\r\n\r\n  render() {    \r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.skillsModal}\r\n          onHide={this.closeSkillsModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.profileId || this.state.profiletId === ''\r\n                ? 'Add Career Profile'\r\n                : 'Edit Career Profile'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>   \r\n            \r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>               \r\n                 <FormGroup className={this.getClasses('skills')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Add Skills\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"                        \r\n                        name=\"skills\"\r\n                        value={this.state.skills}\r\n                        onChange={this.handleSkillsChange}\r\n                        options={this.state.skillsList}\r\n                        placeholder=\"Select skill\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('skills'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n              <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Role\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"rating\"\r\n                          name=\"rating\"\r\n                          value={this.state.rating}  \r\n                          defaultValue={parseInt(this.state.rating,10)}                   \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">skills rating</option>\r\n                       <option value={1}>1</option>\r\n                       <option value={2}>2</option>\r\n                       <option value={3}>3</option>\r\n                       <option value={4}>4</option>  \r\n                       <option value={5}>5</option>                                                       \r\n                </FormControl>              \r\n                {renderMessage(\r\n                          this.props.getValidationMessages('rating')\r\n                        )}\r\n               </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n                 \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeSkillsModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddSkills = validation(strategy)(addSkills);\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addSkills);"]},"metadata":{},"sourceType":"module"}