{"ast":null,"code":"import _classCallCheck from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _ from'lodash';import Emitter from'./Emitter';/**\n * Manage all media devices\n */var MediaDevice=/*#__PURE__*/function(_Emitter){_inherits(MediaDevice,_Emitter);function MediaDevice(){_classCallCheck(this,MediaDevice);return _possibleConstructorReturn(this,_getPrototypeOf(MediaDevice).apply(this,arguments));}_createClass(MediaDevice,[{key:\"start\",/**\n   * Start media devices and send stream\n   */value:function start(){var _this=this;var constraints={video:{facingMode:'user',height:{min:360,ideal:720,max:1080}},audio:true};navigator.mediaDevices.getUserMedia(constraints).then(function(stream){_this.stream=stream;_this.emit('stream',stream);}).catch(function(err){if(err instanceof DOMException){alert('Cannot open webcam and/or microphone');}else{console.log(err);}});return this;}/**\n   * Turn on/off a device\n   * @param {String} type - Type of the device\n   * @param {Boolean} [on] - State of the device\n   */},{key:\"toggle\",value:function toggle(type,on){var len=arguments.length;if(this.stream){this.stream[\"get\".concat(type,\"Tracks\")]().forEach(function(track){var state=len===2?on:!track.enabled;_.set(track,'enabled',state);});}return this;}/**\n   * Stop all media track of devices\n   */},{key:\"stop\",value:function stop(){if(this.stream){this.stream.getTracks().forEach(function(track){return track.stop();});}return this;}}]);return MediaDevice;}(Emitter);export default MediaDevice;","map":{"version":3,"sources":["/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/videoChat/js/MediaDevice.js"],"names":["_","Emitter","MediaDevice","constraints","video","facingMode","height","min","ideal","max","audio","navigator","mediaDevices","getUserMedia","then","stream","emit","catch","err","DOMException","alert","console","log","type","on","len","arguments","length","forEach","track","state","enabled","set","getTracks","stop"],"mappings":"45BAAA,MAAOA,CAAAA,CAAP,KAAc,QAAd,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA;;MAGMC,CAAAA,W,6PACJ;;2BAGQ,gBACN,GAAMC,CAAAA,WAAW,CAAG,CAClBC,KAAK,CAAE,CACLC,UAAU,CAAE,MADP,CAELC,MAAM,CAAE,CAAEC,GAAG,CAAE,GAAP,CAAYC,KAAK,CAAE,GAAnB,CAAwBC,GAAG,CAAE,IAA7B,CAFH,CADW,CAKlBC,KAAK,CAAE,IALW,CAApB,CAQAC,SAAS,CAACC,YAAV,CACGC,YADH,CACgBV,WADhB,EAEGW,IAFH,CAEQ,SAACC,MAAD,CAAY,CAChB,KAAI,CAACA,MAAL,CAAcA,MAAd,CACA,KAAI,CAACC,IAAL,CAAU,QAAV,CAAoBD,MAApB,EACD,CALH,EAMGE,KANH,CAMS,SAACC,GAAD,CAAS,CACd,GAAIA,GAAG,WAAYC,CAAAA,YAAnB,CAAiC,CAC/BC,KAAK,CAAC,sCAAD,CAAL,CACD,CAFD,IAEO,CACLC,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EACD,CACF,CAZH,EAcA,MAAO,KAAP,CACD,CAED;;;;2CAKOK,I,CAAMC,E,CAAI,CACf,GAAMC,CAAAA,GAAG,CAAGC,SAAS,CAACC,MAAtB,CACA,GAAI,KAAKZ,MAAT,CAAiB,CACf,KAAKA,MAAL,cAAkBQ,IAAlB,cAAkCK,OAAlC,CAA0C,SAACC,KAAD,CAAW,CACnD,GAAMC,CAAAA,KAAK,CAAGL,GAAG,GAAK,CAAR,CAAYD,EAAZ,CAAiB,CAACK,KAAK,CAACE,OAAtC,CACA/B,CAAC,CAACgC,GAAF,CAAMH,KAAN,CAAa,SAAb,CAAwBC,KAAxB,EACD,CAHD,EAID,CACD,MAAO,KAAP,CACD,CAED;;wCAGO,CACL,GAAI,KAAKf,MAAT,CAAiB,CACf,KAAKA,MAAL,CAAYkB,SAAZ,GAAwBL,OAAxB,CAAgC,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACK,IAAN,EAAJ,EAArC,EACD,CACD,MAAO,KAAP,CACD,C,yBAtDuBjC,O,EAyD1B,cAAeC,CAAAA,WAAf","sourcesContent":["import _ from 'lodash';\nimport Emitter from './Emitter';\n\n/**\n * Manage all media devices\n */\nclass MediaDevice extends Emitter {\n  /**\n   * Start media devices and send stream\n   */\n  start() {\n    const constraints = {\n      video: {\n        facingMode: 'user',\n        height: { min: 360, ideal: 720, max: 1080 }\n      },\n      audio: true\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then((stream) => {\n        this.stream = stream;\n        this.emit('stream', stream);\n      })\n      .catch((err) => {\n        if (err instanceof DOMException) {\n          alert('Cannot open webcam and/or microphone');\n        } else {\n          console.log(err);\n        }\n      });\n\n    return this;\n  }\n\n  /**\n   * Turn on/off a device\n   * @param {String} type - Type of the device\n   * @param {Boolean} [on] - State of the device\n   */\n  toggle(type, on) {\n    const len = arguments.length;\n    if (this.stream) {\n      this.stream[`get${type}Tracks`]().forEach((track) => {\n        const state = len === 2 ? on : !track.enabled;\n        _.set(track, 'enabled', state);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Stop all media track of devices\n   */\n  stop() {\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n    }\n    return this;\n  }\n}\n\nexport default MediaDevice;\n"]},"metadata":{},"sourceType":"module"}