{"ast":null,"code":"import _defineProperty from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{ToastContainer}from'react-toastify';import{Portal}from'react-overlays';import{Button,Modal,Form,FormGroup,Checkbox,Col,ControlLabel,FormControl,InputGroup,Radio}from'react-bootstrap';import Header from'../header/header';import Select from'react-select';import'react-select/dist/react-select.css';import{YearPicker,MonthPicker,DayPicker}from'react-dropdown-date';//import DatePicker from 'react-datepicker';\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\nimport{connect}from'react-redux';import{bindActionCreators}from'redux';import{actionGetStudentList}from'../../common/core/redux/actions';import{actionSetStudentAsUser}from'../../common/core/redux/actions';import moment from'moment';import validation from'react-validation-mixin';import strategy from'react-validatorjs-strategy';import classnames from'classnames';import ImageCropper from'../../common/cropper/imageCropper';import achievementDefaultImage from'../../assets/img/default_achievement.jpg';import _ from'lodash';import CONSTANTS from'../../common/core/config/appConfig';import{renderMessage,isValidURL,ZoomInAndOut,generateTimestamp,showSuccessToast}from'../../common/commonFunctions';import theRapidHireApiService from'../../common/core/api/apiService';//import MediaList from '../mediaList';\nvar validationMessages=CONSTANTS.validationMessages;var regExpressions=CONSTANTS.regExpressions;var badgeImgArray=[];var badgeImgPreview=[];var certificateImgArray=[];var certificateImgPreview=[];var mediaImgArray=[];var mediaImgPreview=[];var emptyToDate='10000000';var AddJobDescription=/*#__PURE__*/function(_Component){_inherits(AddJobDescription,_Component);function AddJobDescription(props){var _this;_classCallCheck(this,AddJobDescription);_this=_possibleConstructorReturn(this,_getPrototypeOf(AddJobDescription).call(this,props));_this.setProfileData=function(data){//console.log(data);\nif(data){var userId=data.userId;var summary=data.summary;var firstName=data.firstName;var lastName=data.lastName;// let tagline = data.tagline.trim();\n// let editTag = data.tagline.trim();\nvar tagline=data.tagline?data.tagline.trim():null;var editTag=data.tagline?data.tagline.trim():null;var name=(data.firstName?data.firstName:'')+' '+(data.lastName?data.lastName:'');var profileImage=data.profilePicture;if(profileImage){profileImage=profileImage;}var coverImage=data.coverImage;if(coverImage){coverImage=coverImage;}var isActive=data.isActive;_this.setState({editTag:editTag,summary:summary,firstName:firstName,lastName:lastName,userId:userId,profileImage:profileImage,coverImage:coverImage,tagline:tagline,isActive:isActive,name:name});}};_this.closeAchievementyModal=function(status){_this.setState({});};_this.getValidatorData=function(){return _this.state;};_this.getClasses=function(field){return classnames({error:!_this.props.isValid(field)});};_this.setJobDescriptionData=function(data){if(data){_this.setState({recruiterId:data.recruiterId,title:data.title,companyId:data.companyId,description:data.description,noOfPosition:data.noOfPosition,minExperience:data.minExperience,maxExperience:data.maxExperience,location:data.location,skills:data.skills,postedBy:data.postedBy,jobDescId:data.jobDescId});};};_this.handleChange=function(event){var target=event.target;var value=target.type==='checkbox'?target.checked:target.value;var name=target.name;_this.setState(_defineProperty({},name,value));};_this.handleChangeStart=function(startDate){_this.handleDateChange({startDate:startDate});};_this.handleChangeEnd=function(endDate){_this.handleDateChange({endDate:endDate});};_this.handleDateChange=function(_ref){var startDate=_ref.startDate,endDate=_ref.endDate;console.log(endDate);startDate=startDate||_this.state.startDate;endDate=endDate||_this.state.endDate;if(startDate&&endDate){if(startDate.isAfter(endDate)){endDate=startDate;}}_this.setState({startDate:startDate,endDate:endDate});};_this.validateData=function(){var self=_assertThisInitialized(_this);_this.props.validate(function(error){var imageObject={media:self.state.mediaImgArray||[]};if(!error){self.setState({isLoading:true});self.handleSubmit();}else{self.handleSubmit();}});};_this.closeImageModal=function(){_this.setState({imagesModal:!_this.state.imagesModal});};_this.handleProfileRoleChange=function(newValue){if(newValue.label==CONSTANTS.OTHER){_this.setState({titleNotAvailable:true});}else{_this.setState({titleNotAvailable:false});}_this.setState({profileRole:newValue});};_this.handleLocationChange=function(newValue){_this.setState({location:newValue});};_this.handleSkillsChange=function(newValue){_this.setState({skills:newValue});};_this.closeJobDescriptionModal=function(status){_this.setState({jobDescriptionModal:false});_this.props.closeJobDescriptionComponent();};_this.state={isLoading:false,startDate:'',endDate:'',promptRecommendation:false,userId:'',todaysDate:false,jobDescriptionDetail:{},jobDescriptionListData:[],designation:'',organisation:'',profileRoleList:[],titleNotAvailable:false,jobDescriptionModal:true,jobDescId:'',associateList:[],skillsList:[],locationList:[{value:1,label:'Indore'},{value:2,label:'Bhopal'},{value:2,label:'Dewas'}]};_this.getValidatorData=_this.getValidatorData.bind(_assertThisInitialized(_this));_this.getClasses=_this.getClasses.bind(_assertThisInitialized(_this));_this.validatorTypes=strategy.createSchema({//  projectName: 'required'\n// level3Competency: 'required',\n// skills: 'required',\n// importance: 'required',\n// //   startDate: 'required',\n// //  endDate: 'required',\n// firstName: ['regex:' + regExpressions.alphaOnly],\n// lastName: ['regex:' + regExpressions.alphaOnly],\n// email: 'email'\n},{//     'required.designation': validationMessages.designation.required\n// 'required.level3Competency': validationMessages.competency.required\n// 'required.skills': validationMessages.skills.required,\n// 'required.importance': validationMessages.importance.required,\n// //  'required.startDate': validationMessages.startDate.required,\n// //  'required.endDate': validationMessages.endDate.required,\n// 'email.email': validationMessages.email.invalid,\n// 'regex.firstName': validationMessages.firstName.alphaOnly,\n// 'regex.lastName': validationMessages.lastName.alphaOnly\n});_this.getKeySkillsList();_this.getProfileRoleList();return _this;}_createClass(AddJobDescription,[{key:\"getProfileRoleList\",value:function getProfileRoleList(){var _this2=this;theRapidHireApiService('getProfileRoleList').then(function(response){console.log(response);if(response.data.status==='Success'){var profileRoleList=_this2.state.profileRoleList;response.data.result.forEach(function(data){profileRoleList.push({label:data.profileRole,value:data.profileRoleId});});_this2.setState({profileRoleList:profileRoleList});}}).catch(function(err){console.log(err);});}},{key:\"getKeySkillsList\",value:function getKeySkillsList(){var _this3=this;theRapidHireApiService('getKeySkillsList').then(function(response){if(response.data.status==='Success'){var skillsList=_this3.state.skillsList;response.data.result.forEach(function(data){skillsList.push({label:data.skillName,value:data.skillId});});_this3.setState({skillsList:skillsList});}}).catch(function(err){console.log(err);});}},{key:\"componentDidMount\",value:function componentDidMount(){// if(this.props.user){\nvar userId=this.props.userData.userId;this.setState({userId:userId});// }  \nconsole.log('this.props.employmentDetail ',this.props.jobDescriptionDetail);this.setJobDescriptionData(this.props.jobDescriptionDetail);this.getKeySkillsList();this.getJobDescriptionDetails(userId);}},{key:\"getJobDescriptionDetails\",value:function getJobDescriptionDetails(userId){var _this4=this;theRapidHireApiService('getJobDescriptonListById',{userId:userId}).then(function(response){if(response.data.status==='Success'){var jobDescriptionListData=_this4.state.jobDescriptionListData;jobDescriptionListData=response.data.result[0];_this4.setState({jobDescriptionListData:jobDescriptionListData});}}).catch(function(err){console.log(err);});}},{key:\"generateSASToken\",value:function generateSASToken(){var _this5=this;theRapidHireApiService('getSASToken').then(function(response){if(response.data.status==='Success'){var sasToken=response.data.result.sasToken;_this5.setState({sasToken:sasToken});}}).catch(function(err){console.log(err);});}},{key:\"handleSubmit\",value:function handleSubmit(){var description=this.state.description;var noOfPosition=parseInt(this.state.noOfPosition,10);var minExperience=parseInt(this.state.minExperience,10);var maxExperience=parseInt(this.state.maxExperience,10);var location=[];this.state.location.forEach(function(item){location.push(item.label);});var skills=[];this.state.skills.forEach(function(item){skills.push({skillId:item.value,skillName:item.label});});var title=this.state.profileRole&&this.state.profileRole.label!==CONSTANTS.OTHER?this.state.profileRole.label:this.state.title;var titleId=this.state.profileRole&&this.state.profileRole.label!==CONSTANTS.OTHER?this.state.profileRole.value:null;var userId=this.state.userId;var postedBy=this.props.user.userId;var jobDescId=this.state.jobDescId;var data={title:title,titleId:titleId,userId:userId,description:description,jobDescId:jobDescId,noOfPosition:noOfPosition,minExperience:minExperience,maxExperience:maxExperience,location:location,postedBy:postedBy,skills:skills};var self=this;if(!this.state.jobDescId||this.state.jobDescId===''){theRapidHireApiService('addJobDescription',data).then(function(response){if(response.data.status==='Success'){self.setState({isLoading:false});showSuccessToast('Job Description added');self.closeJobDescriptionModal('save');}}).catch(function(error){self.setState({isLoading:false});console.log(error);});}else{theRapidHireApiService('getJobDescriptonListById',data).then(function(response){if(response.data.status==='Success'){self.closeJobDescriptionModal('save');self.setState({isLoading:false});}}).catch(function(error){self.setState({isLoading:false});console.log(error);});}}},{key:\"render\",value:function render(){var self=this;var isLoading=this.state.isLoading;var cssClasses={root:'input-group mb-1',input:'form-control'};var inputProps={value:this.state.streetAddress1,onChange:this.onChange,placeholder:'Street Address1',type:'text'};var defaultStyles={root:{position:'relative',paddingBottom:'0px'},input:{display:'inline-block',width:'100%',padding:'10px'},autocompleteContainer:{position:'absolute',top:'100%',backgroundColor:'white',border:'1px solid #555555',width:'100%'},autocompleteItem:{backgroundColor:'#ffffff',padding:'10px',color:'#555555',cursor:'pointer'},autocompleteItemActive:{backgroundColor:'#fafafa'}};var CalendarContainer=function CalendarContainer(_ref2){var children=_ref2.children;var el=document.getElementById('calendar-portal');return React.createElement(Portal,{container:el},children);};return React.createElement(Modal,{bsSize:\"large\",show:this.state.jobDescriptionModal,onHide:this.closeJobDescriptionModal.bind(this,'close'),backdrop:\"static\",keyboard:false},React.createElement(ToastContainer,{autoClose:5000,className:\"custom-toaster-main-cls\",toastClassName:\"custom-toaster-bg\",transition:ZoomInAndOut}),React.createElement(Modal.Header,{closeButton:true},React.createElement(Modal.Title,{className:\"subtitle text-center\"},\"Add Job Description\")),React.createElement(Modal.Body,null,React.createElement(Form,{horizontal:true,className:\"lightBgForm\"},React.createElement(Col,{sm:10},React.createElement(FormGroup,{className:this.getClasses('profileRole')},React.createElement(Col,{componentClass:ControlLabel,sm:3},\"select title\"),React.createElement(Col,{sm:9},React.createElement(\"div\",{className:\"custom-select\"},React.createElement(\"span\",{className:\"icon-down_arrow selectIcon\"}),React.createElement(Select,{className:\"form-control\",name:\"location\",value:this.state.profileRole,onChange:this.handleProfileRoleChange,options:this.state.profileRoleList,placeholder:\"Select all the location that you used along the way\"})),renderMessage(this.props.getValidationMessages('profileRole')))),this.state.titleNotAvailable==true?React.createElement(FormGroup,{controlId:\"formControlsTextarea\",className:this.getClasses('title')},React.createElement(Col,{componentClass:ControlLabel,sm:3},React.createElement(ControlLabel,null,\"Title\")),React.createElement(Col,{sm:9},React.createElement(FormControl,{placeholder:\"Add a title\",name:\"title\",value:this.state.title,onChange:this.handleChange,autoComplete:\"off\",maxLength:\"100\"}),renderMessage(this.props.getValidationMessages('tile')))):null,React.createElement(FormGroup,{controlId:\"formControlsTextarea\",className:this.getClasses('description')},React.createElement(Col,{componentClass:ControlLabel,sm:3},React.createElement(ControlLabel,null,\"Description\")),React.createElement(Col,{sm:9},React.createElement(FormControl,{componentClass:\"textarea\",placeholder:\"Add a description\",name:\"description\",value:this.state.description,onChange:this.handleChange,autoComplete:\"off\",maxLength:\"100\"}),renderMessage(this.props.getValidationMessages('description')))),React.createElement(FormGroup,{className:this.getClasses('skills')},React.createElement(Col,{componentClass:ControlLabel,sm:3},\"Skills\"),React.createElement(Col,{sm:9},React.createElement(\"div\",{className:\"custom-select\"},React.createElement(\"span\",{className:\"icon-down_arrow selectIcon\"}),React.createElement(Select,{multi:true,className:\"form-control\",name:\"skills\",value:this.state.skills,onChange:this.handleSkillsChange,options:this.state.skillsList,placeholder:\"Select skill\"})),renderMessage(this.props.getValidationMessages('skills')))),React.createElement(FormGroup,{className:this.getClasses('location')},React.createElement(Col,{componentClass:ControlLabel,sm:3},\"Desired Location\"),React.createElement(Col,{sm:9},React.createElement(\"div\",{className:\"custom-select\"},React.createElement(\"span\",{className:\"icon-down_arrow selectIcon\"}),React.createElement(Select,{className:\"form-control\",multi:true,name:\"location\",value:this.state.location,onChange:this.handleLocationChange,options:this.state.locationList,placeholder:\"Select all the location that you used along the way\"})),renderMessage(this.props.getValidationMessages('location')))),React.createElement(FormGroup,{className:\"addDateInput\"},React.createElement(Col,{componentClass:ControlLabel,sm:3},\"Experience\"),React.createElement(Col,{sm:9},React.createElement(\"div\",{className:\"dob\"},React.createElement(\"div\",{className:\"form-group\"},React.createElement(FormControl,{componentClass:\"select\",placeholder:\"minExperience\",name:\"minExperience\",value:this.state.minExperience,onChange:this.handleChange,autoComplete:\"off\",maxLength:\"1000\"},React.createElement(\"option\",{value:\"\"},\"min exp\"),React.createElement(\"option\",{value:1},\"1\"),React.createElement(\"option\",{value:2},\"2\"),React.createElement(\"option\",{value:3},\"3\"),React.createElement(\"option\",{value:4},\"4\"),React.createElement(\"option\",{value:5},\"5\"),React.createElement(\"option\",{value:6},\"6\"),React.createElement(\"option\",{value:7},\"7\"),React.createElement(\"option\",{value:8},\"8\"),React.createElement(\"option\",{value:9},\"9\"),React.createElement(\"option\",{value:10},\"10\"),React.createElement(\"option\",{value:11},\"11\"),React.createElement(\"option\",{value:12},\"12\")),renderMessage(this.props.getValidationMessages('expectedSalaryInlakh'))),React.createElement(\"div\",{className:\"form-group\"},React.createElement(FormControl,{componentClass:\"select\",placeholder:\"maxExperience\",name:\"maxExperience\",value:this.state.maxExperience,onChange:this.handleChange,autoComplete:\"off\",maxLength:\"1000\"},React.createElement(\"option\",{value:\"\"},\"max exp\"),React.createElement(\"option\",{value:1},\"1\"),React.createElement(\"option\",{value:2},\"2\"),React.createElement(\"option\",{value:3},\"3\"),React.createElement(\"option\",{value:4},\"4\"),React.createElement(\"option\",{value:5},\"5\"),React.createElement(\"option\",{value:6},\"6\"),React.createElement(\"option\",{value:7},\"7\"),React.createElement(\"option\",{value:8},\"8\"),React.createElement(\"option\",{value:9},\"9\"),React.createElement(\"option\",{value:10},\"10\"),React.createElement(\"option\",{value:11},\"11\"),React.createElement(\"option\",{value:12},\"12\")))))),React.createElement(FormGroup,{controlId:\"formControlsTextarea\",className:this.getClasses('noOfPosition')},React.createElement(Col,{componentClass:ControlLabel,sm:3},React.createElement(ControlLabel,null,\"No Of position needed\")),React.createElement(Col,{sm:9},React.createElement(FormControl,{placeholder:\"No. of Positions\",name:\"noOfPosition\",value:this.state.noOfPosition,onChange:this.handleChange,autoComplete:\"off\",maxLength:\"100\"}),renderMessage(this.props.getValidationMessages('noOfPosition'))))),\"      \")),React.createElement(Modal.Footer,null,React.createElement(Button,{bsStyle:\"primary\",className:\"no-bold no-round\",disabled:this.state.isLoading,onClick:!this.state.isLoading?this.validateData:null},this.state.isLoading?'In Progress...':'Save'),React.createElement(Button,{bsStyle:\"default\",className:\"no-bold no-round\",onClick:this.closeJobDescriptionModal.bind(this,'close')},\"Close\")));}}]);return AddJobDescription;}(Component);AddJobDescription=validation(strategy)(AddJobDescription);var mapStateToProps=function mapStateToProps(state){return{user:state.User.userData,parent:state.User.parentData};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({actionGetStudentList:actionGetStudentList,actionSetStudentAsUser:actionSetStudentAsUser},dispatch);};export default connect(mapStateToProps,mapDispatchToProps)(AddJobDescription);","map":{"version":3,"sources":["/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/recruiter/jobDescription/addJobDescription.js"],"names":["React","Component","ToastContainer","Portal","Button","Modal","Form","FormGroup","Checkbox","Col","ControlLabel","FormControl","InputGroup","Radio","Header","Select","YearPicker","MonthPicker","DayPicker","connect","bindActionCreators","actionGetStudentList","actionSetStudentAsUser","moment","validation","strategy","classnames","ImageCropper","achievementDefaultImage","_","CONSTANTS","renderMessage","isValidURL","ZoomInAndOut","generateTimestamp","showSuccessToast","theRapidHireApiService","validationMessages","regExpressions","badgeImgArray","badgeImgPreview","certificateImgArray","certificateImgPreview","mediaImgArray","mediaImgPreview","emptyToDate","AddJobDescription","props","setProfileData","data","userId","summary","firstName","lastName","tagline","trim","editTag","name","profileImage","profilePicture","coverImage","isActive","setState","closeAchievementyModal","status","getValidatorData","state","getClasses","field","error","isValid","setJobDescriptionData","recruiterId","title","companyId","description","noOfPosition","minExperience","maxExperience","location","skills","postedBy","jobDescId","handleChange","event","target","value","type","checked","handleChangeStart","startDate","handleDateChange","handleChangeEnd","endDate","console","log","isAfter","validateData","self","validate","imageObject","media","isLoading","handleSubmit","closeImageModal","imagesModal","handleProfileRoleChange","newValue","label","OTHER","titleNotAvailable","profileRole","handleLocationChange","handleSkillsChange","closeJobDescriptionModal","jobDescriptionModal","closeJobDescriptionComponent","promptRecommendation","todaysDate","jobDescriptionDetail","jobDescriptionListData","designation","organisation","profileRoleList","associateList","skillsList","locationList","bind","validatorTypes","createSchema","getKeySkillsList","getProfileRoleList","then","response","result","forEach","push","profileRoleId","catch","err","skillName","skillId","userData","getJobDescriptionDetails","sasToken","parseInt","item","titleId","user","cssClasses","root","input","inputProps","streetAddress1","onChange","placeholder","defaultStyles","position","paddingBottom","display","width","padding","autocompleteContainer","top","backgroundColor","border","autocompleteItem","color","cursor","autocompleteItemActive","CalendarContainer","children","el","document","getElementById","getValidationMessages","mapStateToProps","User","parent","parentData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\nimport Header from '../header/header';\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionGetStudentList } from '../../common/core/redux/actions';\r\nimport { actionSetStudentAsUser } from '../../common/core/redux/actions';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp,\r\n  showSuccessToast\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass AddJobDescription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      jobDescriptionDetail: {},     \r\n      jobDescriptionListData: [],     \r\n      designation:'',\r\n      organisation:'',\r\n      profileRoleList:[],\r\n      titleNotAvailable:false,\r\n      jobDescriptionModal:true,\r\n      jobDescId:'',\r\n      associateList: [],\r\n      skillsList:[],\r\n      locationList: [{\r\n              value: 1 ,\r\n              label: 'Indore'},\r\n              {\r\n                value: 2 ,\r\n                label: 'Bhopal'},\r\n                {\r\n                  value: 2 ,\r\n                  label: 'Dewas'}\r\n              ]              \r\n         \r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n      //  projectName: 'required'\r\n       \r\n        // level3Competency: 'required',\r\n        // skills: 'required',\r\n        // importance: 'required',\r\n        // //   startDate: 'required',\r\n        // //  endDate: 'required',\r\n        // firstName: ['regex:' + regExpressions.alphaOnly],\r\n        // lastName: ['regex:' + regExpressions.alphaOnly],\r\n        // email: 'email'\r\n      },\r\n      {\r\n   //     'required.designation': validationMessages.designation.required\r\n        \r\n        // 'required.level3Competency': validationMessages.competency.required\r\n        // 'required.skills': validationMessages.skills.required,\r\n        // 'required.importance': validationMessages.importance.required,\r\n        // //  'required.startDate': validationMessages.startDate.required,\r\n        // //  'required.endDate': validationMessages.endDate.required,\r\n        // 'email.email': validationMessages.email.invalid,\r\n        // 'regex.firstName': validationMessages.firstName.alphaOnly,\r\n        // 'regex.lastName': validationMessages.lastName.alphaOnly\r\n      }\r\n    );\r\n    this.getKeySkillsList();\r\n    this.getProfileRoleList();\r\n  }\r\n\r\n\r\n  getProfileRoleList(){\r\n    theRapidHireApiService('getProfileRoleList')\r\n    .then(response => {     \r\n      console.log(response);\r\n      if (response.data.status === 'Success') {\r\n        let profileRoleList= this.state.profileRoleList;\r\n        response.data.result.forEach(function(data){       \r\n           profileRoleList.push({label: data.profileRole,value:data.profileRoleId })\r\n        })  \r\n       \r\n        this.setState({profileRoleList: profileRoleList});\r\n          }\r\n        })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getKeySkillsList(){\r\n    theRapidHireApiService('getKeySkillsList')\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n         let skillsList= this.state.skillsList;      \r\n         response.data.result.forEach(function(data){        \r\n            skillsList.push({label: data.skillName,value:data.skillId })\r\n        })   \r\n       \r\n         this.setState({skillsList: skillsList});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  setProfileData = data => {\r\n    //console.log(data);\r\n    if (data) {\r\n      let userId = data.userId;\r\n      let summary = data.summary;\r\n      let firstName = data.firstName;\r\n      let lastName = data.lastName;\r\n      // let tagline = data.tagline.trim();\r\n      // let editTag = data.tagline.trim();\r\n      let tagline = data.tagline ? data.tagline.trim() : null;\r\n      let editTag = data.tagline ? data.tagline.trim() : null;\r\n\r\n      let name =\r\n        (data.firstName ? data.firstName : '') +\r\n        ' ' +\r\n        (data.lastName ? data.lastName : '');\r\n      let profileImage = data.profilePicture;\r\n      if (profileImage) {\r\n        profileImage =  profileImage;\r\n      }\r\n      let coverImage = data.coverImage;\r\n      if (coverImage) {\r\n        coverImage =  coverImage;\r\n      }\r\n      let isActive = data.isActive;\r\n      this.setState({\r\n        editTag,\r\n        summary,\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        profileImage,\r\n        coverImage,\r\n        tagline,\r\n        isActive,\r\n        name\r\n      });\r\n    }\r\n  };  \r\n\r\n  closeAchievementyModal = status => {\r\n    \r\n    this.setState({      \r\n    });\r\n    \r\n  };\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n     let userId = this.props.userData.userId;\r\n     this.setState({userId:userId})\r\n    // }  \r\n    console.log('this.props.employmentDetail ',this.props.jobDescriptionDetail);\r\n    this.setJobDescriptionData(this.props.jobDescriptionDetail);\r\n    this.getKeySkillsList();\r\n    this.getJobDescriptionDetails(userId);\r\n  }\r\n\r\n  getJobDescriptionDetails(userId){\r\n    theRapidHireApiService('getJobDescriptonListById',{userId})\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n         let jobDescriptionListData= this.state.jobDescriptionListData;\r\n         jobDescriptionListData= response.data.result[0];         \r\n         this.setState({jobDescriptionListData: jobDescriptionListData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  setJobDescriptionData = data => { \r\n    if(data){ \r\n      this.setState({      \r\n           recruiterId:data.recruiterId  ,\r\n           title : data.title,\r\n           companyId:data.companyId,\r\n           description : data.description,\r\n           noOfPosition : data.noOfPosition,\r\n           minExperience : data.minExperience,                \r\n           maxExperience : data.maxExperience,    \r\n           location :data.location,      \r\n           skills:data.skills,\r\n           postedBy:data.postedBy,\r\n           jobDescId:data.jobDescId                   \r\n        })       \r\n      }; \r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    console.log(endDate);\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      let imageObject = {\r\n        media: self.state.mediaImgArray || []\r\n      };\r\n\r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        } else {\r\n          self.handleSubmit();\r\n        }      \r\n    });\r\n  };  \r\n\r\n  handleSubmit() {     \r\n   let description = this.state.description;\r\n   let noOfPosition = parseInt(this.state.noOfPosition,10);\r\n   let minExperience = parseInt(this.state.minExperience,10);   \r\n   let maxExperience = parseInt(this.state.maxExperience,10);    \r\n   let location= [];\r\n   this.state.location.forEach(function(item){\r\n    location.push(item.label);\r\n   })    \r\n   let skills = [];     \r\n   this.state.skills.forEach(function(item){\r\n    skills.push({skillId:item.value,skillName:item.label});\r\n   })   \r\n\r\n   let title = this.state.profileRole && this.state.profileRole.label !== CONSTANTS.OTHER? this.state.profileRole.label: this.state.title;\r\n   let titleId= this.state.profileRole && this.state.profileRole.label !== CONSTANTS.OTHER ? this.state.profileRole.value: null\r\n   \r\n    let userId = this.state.userId;\r\n    let postedBy = this.props.user.userId;\r\n    let jobDescId=  this.state.jobDescId;   \r\n\r\n   \r\n    let data = {\r\n      title,\r\n      titleId,\r\n      userId,\r\n      description,\r\n      jobDescId,    \r\n      noOfPosition,\r\n      minExperience,\r\n      maxExperience,\r\n      location,\r\n      postedBy,\r\n      skills\r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.jobDescId || this.state.jobDescId === '') {\r\n      theRapidHireApiService('addJobDescription', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n            showSuccessToast('Job Description added');\r\n            self.closeJobDescriptionModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('getJobDescriptonListById', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n            self.closeJobDescriptionModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n\r\n  handleProfileRoleChange = newValue => {\r\n    if(newValue.label == CONSTANTS.OTHER){      \r\n        this.setState({titleNotAvailable: true});\r\n    }else{\r\n      this.setState({titleNotAvailable: false});\r\n    }\r\n    this.setState({\r\n      profileRole: newValue\r\n    });    \r\n  };\r\n\r\n \r\n  handleLocationChange = newValue => {\r\n    this.setState({\r\n      location: newValue\r\n    });\r\n  };\r\n\r\n  handleSkillsChange = newValue => {\r\n    this.setState({\r\n      skills: newValue\r\n    });\r\n  };\r\n  \r\n\r\n  closeJobDescriptionModal = status => {   \r\n    this.setState({\r\n      jobDescriptionModal: false\r\n      \r\n    });   \r\n    this.props.closeJobDescriptionComponent();\r\n  };\r\n\r\n  render() {\r\n    let self = this;\r\n    const { isLoading } = this.state;\r\n    const cssClasses = {\r\n      root: 'input-group mb-1',\r\n      input: 'form-control'\r\n    };\r\n    const inputProps = {\r\n      value: this.state.streetAddress1,\r\n      onChange: this.onChange,\r\n      placeholder: 'Street Address1',\r\n      type: 'text'\r\n    };\r\n    const defaultStyles = {\r\n      root: {\r\n        position: 'relative',\r\n        paddingBottom: '0px'\r\n      },\r\n      input: {\r\n        display: 'inline-block',\r\n        width: '100%',\r\n        padding: '10px'\r\n      },\r\n      autocompleteContainer: {\r\n        position: 'absolute',\r\n        top: '100%',\r\n        backgroundColor: 'white',\r\n        border: '1px solid #555555',\r\n        width: '100%'\r\n      },\r\n      autocompleteItem: {\r\n        backgroundColor: '#ffffff',\r\n        padding: '10px',\r\n        color: '#555555',\r\n        cursor: 'pointer'\r\n      },\r\n      autocompleteItemActive: {\r\n        backgroundColor: '#fafafa'\r\n      }\r\n    };\r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n      bsSize=\"large\"\r\n      show={this.state.jobDescriptionModal}\r\n      onHide={this.closeJobDescriptionModal.bind(this, 'close')}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <ToastContainer\r\n        autoClose={5000}\r\n        className=\"custom-toaster-main-cls\"\r\n        toastClassName=\"custom-toaster-bg\"\r\n        transition={ZoomInAndOut}\r\n      />\r\n      <Modal.Header closeButton>\r\n        <Modal.Title className=\"subtitle text-center\">\r\n          Add Job Description           \r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}> \r\n\r\n               <FormGroup className={this.getClasses('profileRole')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                  select title\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"                        \r\n                        name=\"location\"\r\n                        value={this.state.profileRole}\r\n                        onChange={this.handleProfileRoleChange}\r\n                        options={this.state.profileRoleList}\r\n                        placeholder=\"Select all the location that you used along the way\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('profileRole'))}\r\n                  </Col>\r\n                </FormGroup>             \r\n              {this.state.titleNotAvailable == true ?\r\n                  <FormGroup\r\n                      controlId=\"formControlsTextarea\"\r\n                      className={this.getClasses('title')}\r\n                    >\r\n                      <Col componentClass={ControlLabel} sm={3}>\r\n                        <ControlLabel>Title</ControlLabel>\r\n                      </Col>\r\n                      <Col sm={9}>\r\n                        <FormControl\r\n                          placeholder=\"Add a title\"\r\n                          name=\"title\"\r\n                          value={this.state.title}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"100\"\r\n                        />\r\n                        {renderMessage(this.props.getValidationMessages('tile'))}\r\n                      </Col>\r\n                    </FormGroup>:\r\n                null}\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Description</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      componentClass=\"textarea\"\r\n                      placeholder=\"Add a description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('description'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className={this.getClasses('skills')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                   Skills\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        multi\r\n                        className=\"form-control\"                        \r\n                        name=\"skills\"\r\n                        value={this.state.skills}\r\n                        onChange={this.handleSkillsChange}\r\n                        options={this.state.skillsList}\r\n                        placeholder=\"Select skill\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('skills'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                 <FormGroup className={this.getClasses('location')}>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Desired Location\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <Select\r\n                        className=\"form-control\"\r\n                        multi\r\n                        name=\"location\"\r\n                        value={this.state.location}\r\n                        onChange={this.handleLocationChange}\r\n                        options={this.state.locationList}\r\n                        placeholder=\"Select all the location that you used along the way\"\r\n                      />\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('location'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n              <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Experience\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"minExperience\"\r\n                          name=\"minExperience\"\r\n                          value={this.state.minExperience}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">min exp</option>\r\n                       <option value={1}>1</option>\r\n                       <option value={2}>2</option>\r\n                       <option value={3}>3</option>\r\n                       <option value={4}>4</option>\r\n                       <option value={5}>5</option>    \r\n                       <option value={6}>6</option>        \r\n                       <option value={7}>7</option>\r\n                       <option value={8}>8</option>\r\n                       <option value={9}>9</option>\r\n                       <option value={10}>10</option>\r\n                       <option value={11}>11</option>    \r\n                       <option value={12}>12</option>                                      \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('expectedSalaryInlakh')\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"maxExperience\"\r\n                          name=\"maxExperience\"\r\n                          value={this.state.maxExperience}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >      \r\n                        <option value=\"\">max exp</option>\r\n                       <option value={1}>1</option>\r\n                       <option value={2}>2</option>\r\n                       <option value={3}>3</option>\r\n                       <option value={4}>4</option>\r\n                       <option value={5}>5</option>    \r\n                       <option value={6}>6</option>        \r\n                       <option value={7}>7</option>\r\n                       <option value={8}>8</option>\r\n                       <option value={9}>9</option>\r\n                       <option value={10}>10</option>\r\n                       <option value={11}>11</option>    \r\n                       <option value={12}>12</option>                                      \r\n                      </FormControl>                 \r\n                      </div>                     \r\n                    </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>        \r\n    \r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('noOfPosition')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>No Of position needed</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"No. of Positions\"\r\n                      name=\"noOfPosition\"\r\n                      value={this.state.noOfPosition}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('noOfPosition'))}\r\n                  </Col>\r\n                </FormGroup>        \r\n               \r\n              </Col>      </Form>      \r\n              </Modal.Body>\r\n          <Modal.Footer>\r\n       \r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeJobDescriptionModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n           \r\n           </Modal.Footer>\r\n           </Modal>          \r\n            \r\n     \r\n    );\r\n  }\r\n}\r\nAddJobDescription = validation(strategy)(AddJobDescription);\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    { actionGetStudentList, actionSetStudentAsUser },\r\n    dispatch\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AddJobDescription);\r\n"]},"metadata":{},"sourceType":"module"}