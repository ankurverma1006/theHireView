{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\interviewer\\\\dashboard\\\\dashboard.js\";\nimport React, { Component } from 'react';\nimport Header from '../header/header';\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\nimport _ from 'lodash';\nimport S3FileUpload from 'react-s3';\nimport moment from 'moment'; //import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\n\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\"; //import Img from '../../common/cropper/img';\n\nimport { showErrorToast, uploadToAzure, limitCharacter, SampleNextArrow, SamplePrevArrow, getThumbImage, ZoomInAndOut } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport { actionGetStudentPersonalInfo, actionGetAllCompetency, actionGetAchievementsByUser, actionGetRecommendationsByUser, actionUpdateUserInfo, actionGetAchievementsData } from '../../common/core/redux/actions';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\nconst config = {\n  bucketName: 'ankurself',\n  dirName: 'photos',\n\n  /* optional */\n  region: 'ap-south-1',\n  // Put your aws region here\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\n};\nvar settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 3,\n  swipeToSlide: true,\n  //nextArrow: <SampleNextArrow props={this.props} />,\n  //prevArrow: <SamplePrevArrow props={this.props} />,\n  responsive: [{\n    breakpoint: 1024,\n    settings: {\n      slidesToShow: 3,\n      slidesToScroll: 3,\n      infinite: true,\n      dots: true\n    }\n  }, {\n    breakpoint: 600,\n    settings: {\n      slidesToShow: 2,\n      slidesToScroll: 2,\n      initialSlide: 2\n    }\n  }, {\n    breakpoint: 480,\n    settings: {\n      slidesToShow: 1,\n      slidesToScroll: 1\n    }\n  }]\n};\n\nclass Dashboard extends Component {\n  constructor(props, context) {\n    super(props);\n\n    this.handleSubmit = (data, action) => {\n      let jobMapId = data.jobMapId;\n      let jobId = this.state.jobId;\n      let candidateId = data.userId;\n      let hrId = this.state.userId;\n      let status = action;\n      let createdBy = this.props.user.userId;\n      let dataMap = {\n        jobMapId,\n        jobId,\n        candidateId,\n        hrId,\n        status,\n        createdBy\n      };\n\n      if (jobMapId !== \"\" || jobMapId !== null) {\n        theRapidHireApiService('createJobMap', dataMap).then(response => {\n          if (response.data.status === \"Success\") {\n            this.getUserListForMapping(this.state.jobId); //  let jobDescriptionListData= this.state.jobDescriptionListData;\n            //  jobDescriptionListData= response.data.result;\n            //  this.setState({jobDescriptionListData: jobDescriptionListData});\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        theRapidHireApiService('updateJobMap', dataMap).then(response => {\n          if (response.data.status === \"Success\") {\n            this.getUserListForMapping(this.state.jobId); //  let jobDescriptionListData= this.state.jobDescriptionListData;\n            //  jobDescriptionListData= response.data.result;\n            //  this.setState({jobDescriptionListData: jobDescriptionListData});\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.contentEditable = () => {\n      window.scrollTo(500, 0); //console.log(!this.state.contentEditable);\n\n      this.setState({\n        contentEditable: !this.state.contentEditable\n      });\n    };\n\n    this.setProfileData = data => {\n      //console.log(data);\n      if (data) {\n        let userId = data.userId;\n        let summary = data.summary;\n        let firstName = data.firstName;\n        let lastName = data.lastName; // let tagline = data.tagline.trim();\n        // let editTag = data.tagline.trim();\n\n        let tagline = data.tagline ? data.tagline.trim() : null;\n        let editTag = data.tagline ? data.tagline.trim() : null;\n        let name = (data.firstName ? data.firstName : '') + ' ' + (data.lastName ? data.lastName : '');\n        let profileImage = data.profilePicture;\n\n        if (profileImage) {\n          profileImage = getThumbImage('medium', profileImage);\n        }\n\n        let coverImage = data.coverImage;\n\n        if (coverImage) {\n          coverImage = getThumbImage('original', coverImage);\n        }\n\n        let isActive = data.isActive;\n        this.setState({\n          editTag,\n          summary,\n          firstName,\n          lastName,\n          userId,\n          profileImage,\n          coverImage,\n          tagline,\n          isActive,\n          name\n        });\n      }\n    };\n\n    this.joinVideoChat = data => {\n      console.log(data);\n      let videoKeyClient = data.videoKeyUser;\n      let videoKeySelf = data.videoKeyInterviewer;\n      this.props.history.push({\n        pathname: '/js/app',\n        state: {\n          videoKeySelf: videoKeySelf,\n          videoKeyClient: videoKeyClient,\n          slotId: data.slotId\n        }\n      });\n    };\n\n    this.editJobDescriptionComponent = jobDescriptionDetail => {\n      console.log(jobDescriptionDetail);\n      this.setState({\n        jobDescriptionDetail: jobDescriptionDetail,\n        showJobDescriptionComponent: !this.state.showJobDescriptionComponent\n      });\n    };\n\n    this.getProfileData = () => {\n      let userId = this.state.userId;\n      this.props.actionGetStudentPersonalInfo(userId);\n    };\n\n    this.toggleDropdown = () => {\n      this.setState({\n        showDropdown: !this.state.showDropdown\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      showJobDescriptionComponent: false,\n      jobDescriptionDetail: {},\n      loader1: false,\n      loader2: false,\n      jobDescriptionListData: [],\n      showVideoComponent: false,\n      userData: {},\n      showDropdown: false,\n      isActive: 'true',\n      contentEditable: false,\n      editName: false,\n      name: '',\n      editTagLine: false\n    }; /// this.textInput = React.createRef();    \n  }\n\n  componentWillMount() {\n    let user = this.props.otherUser ? this.props.otherUser : this.props.user;\n\n    if (user) {\n      this.getSlotDetails(user.userId);\n    }\n  }\n\n  componentWillReceiveProps(res) {}\n\n  componentDidMount() {}\n\n  getSlotDetails(userId) {\n    let interviewerId = userId;\n    theRapidHireApiService('getTimeSlotByInterviewer', {\n      interviewerId\n    }).then(response => {\n      if (response.data.status === 'Success') {\n        console.log(response);\n        let bookedSlotData = [];\n        bookedSlotData = response.data.result;\n        this.setState({\n          bookedSlotData: bookedSlotData\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getUserListForMapping(jobId) {\n    theRapidHireApiService('getUserListForMapping', {\n      jobId\n    }).then(response => {\n      if (response.data.status === \"Success\") {\n        let jobDescriptionListData = this.state.jobDescriptionListData;\n        jobDescriptionListData = response.data.result;\n        this.setState({\n          jobDescriptionListData: jobDescriptionListData\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken').then(response => {\n      if (response.data.status === 'Success') {\n        let sasToken = response.data.result.sasToken;\n        this.setState({\n          sasToken\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let self = this;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }), React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-content main-panel1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, this.state.bookedSlotData && this.state.bookedSlotData.map(function (data, index) {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"suggestion-usd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"student-img deflt-icon centeredBox flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Your Slot has been booked with Rapid Hire Company\"), React.createElement(\"div\", {\n        className: \"student-info flex justify-content-space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"flex-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, moment(parseInt(data.startTimeStamp, 10)).format(\"hh:mm:ss\")), moment(parseInt(data.endTimeStamp, 10)).format(\"hh:mm:ss\")), React.createElement(\"div\", {\n        className: \"btn-group flex align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: self.joinVideoChat.bind(self, data),\n        className: \"btn btn-primary no-round\" //  onClick={self.handleClickProfile.bind(self, data)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"Join Video\"), \"\\xA0 \\xA0\", React.createElement(DropdownButton, {\n        className: \"burger-trigger\",\n        title: React.createElement(\"span\", {\n          className: \"icon-burger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }),\n        id: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(MenuItem // onSelect={self.addParentModel.bind(\n      //   this,\n      //   data.userId\n      // )}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"m-ico icon-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }), \"Add Parent\"), React.createElement(MenuItem, {\n        onSelect: () => self.props.history.push({\n          pathname: '/parent/list',\n          state: {\n            studentData: data\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"m-ico icon-parent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }), \" Parent List\"), React.createElement(MenuItem, {\n        onSelect: () => self.props.history.push({\n          pathname: '/student/profilelog',\n          state: {\n            profileOwner: data.userId\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"m-ico icon-profile-sharing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }), ' ', \"Profile Sharing Log\"), React.createElement(MenuItem //   onSelect={self.deleteStudent.bind(\n      //     this,\n      //     data.userId,\n      //     self.props.parent.userId\n      //   )}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"m-ico icon-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }), \" Delete\"))))));\n    }))))) // </div></div>\n    //   </div>\n    ;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    actionGetStudentPersonalInfo,\n    actionGetAllCompetency,\n    actionGetAchievementsByUser,\n    actionGetRecommendationsByUser,\n    actionUpdateUserInfo,\n    actionGetAchievementsData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\interviewer\\dashboard\\dashboard.js"],"names":["React","Component","Header","Modal","DropdownButton","MenuItem","connect","bindActionCreators","ToastContainer","Slider","_","S3FileUpload","moment","ImageCropper","DownloadLink","showErrorToast","uploadToAzure","limitCharacter","SampleNextArrow","SamplePrevArrow","getThumbImage","ZoomInAndOut","theRapidHireApiService","CONSTANTS","actionGetStudentPersonalInfo","actionGetAllCompetency","actionGetAchievementsByUser","actionGetRecommendationsByUser","actionUpdateUserInfo","actionGetAchievementsData","achievementDefaultImage","SpiderChart","config","bucketName","dirName","region","accessKeyId","secretAccessKey","settings","dots","infinite","speed","slidesToShow","swipeToSlide","responsive","breakpoint","slidesToScroll","initialSlide","Dashboard","constructor","props","context","handleSubmit","data","action","jobMapId","jobId","state","candidateId","userId","hrId","status","createdBy","user","dataMap","then","response","getUserListForMapping","catch","err","console","log","contentEditable","window","scrollTo","setState","setProfileData","summary","firstName","lastName","tagline","trim","editTag","name","profileImage","profilePicture","coverImage","isActive","joinVideoChat","videoKeyClient","videoKeyUser","videoKeySelf","videoKeyInterviewer","history","push","pathname","slotId","editJobDescriptionComponent","jobDescriptionDetail","showJobDescriptionComponent","getProfileData","toggleDropdown","showDropdown","handleChange","event","target","value","loader1","loader2","jobDescriptionListData","showVideoComponent","userData","editName","editTagLine","componentWillMount","otherUser","getSlotDetails","componentWillReceiveProps","res","componentDidMount","interviewerId","bookedSlotData","result","generateSASToken","sasToken","render","self","map","index","parseInt","startTimeStamp","format","endTimeStamp","bind","studentData","profileOwner","mapStateToProps","User","parent","parentData","otherUserInfoData","student","Student","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../header/header';\r\n\r\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Slider from 'react-slick';\r\nimport _ from 'lodash';\r\nimport S3FileUpload from 'react-s3';\r\nimport moment from 'moment';\r\n\r\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport DownloadLink from \"react-download-link\";\r\n//import Img from '../../common/cropper/img';\r\nimport {\r\n  showErrorToast,\r\n  uploadToAzure,\r\n  limitCharacter,\r\n  SampleNextArrow,\r\n  SamplePrevArrow,\r\n  getThumbImage,\r\n  ZoomInAndOut\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n\r\nimport {\r\n  actionGetStudentPersonalInfo,\r\n  actionGetAllCompetency,\r\n  actionGetAchievementsByUser,\r\n  actionGetRecommendationsByUser,\r\n  actionUpdateUserInfo,\r\n  actionGetAchievementsData\r\n} from '../../common/core/redux/actions';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport SpiderChart from '../../common/spiderChart/spiderChart';\r\n\r\n\r\nconst config = {\r\n  bucketName: 'ankurself',\r\n  dirName: 'photos', /* optional */\r\n  region: 'ap-south-1', // Put your aws region here\r\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\r\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\r\n}\r\n\r\n\r\nvar settings = {\r\n  dots: false,\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 3,\r\n  swipeToSlide: true,\r\n  //nextArrow: <SampleNextArrow props={this.props} />,\r\n  //prevArrow: <SamplePrevArrow props={this.props} />,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n        dots: true\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n        initialSlide: 2\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.state = {      \r\n      showJobDescriptionComponent: false,      \r\n      jobDescriptionDetail: {},        \r\n     \r\n      loader1: false,\r\n      loader2: false,      \r\n      jobDescriptionListData: [],\r\n      showVideoComponent: false,     \r\n      userData:{},     \r\n      showDropdown: false,     \r\n      isActive: 'true',     \r\n      contentEditable: false,\r\n      editName: false,\r\n      name: '',\r\n      editTagLine: false\r\n    };\r\n   /// this.textInput = React.createRef();    \r\n  }\r\n\r\n  componentWillMount() {\r\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\r\n    \r\n    if(user){\r\n      this.getSlotDetails(user.userId);        \r\n    } \r\n   \r\n  }\r\n\r\n  componentWillReceiveProps(res) {\r\n    \r\n  }\r\n\r\n  componentDidMount() {  \r\n    \r\n  }\r\n\r\n  getSlotDetails(userId){   \r\n    let interviewerId= userId ;\r\n    theRapidHireApiService('getTimeSlotByInterviewer',{interviewerId})\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n        console.log(response);\r\n        let bookedSlotData=[];\r\n        bookedSlotData = response.data.result;\r\n      this.setState({bookedSlotData:bookedSlotData});\r\n      }\r\n     \r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getUserListForMapping(jobId){\r\n    theRapidHireApiService('getUserListForMapping',{jobId})\r\n    .then(response => {     \r\n      if (response.data.status === \"Success\") {\r\n         let jobDescriptionListData= this.state.jobDescriptionListData;\r\n         jobDescriptionListData= response.data.result;\r\n     \r\n         this.setState({jobDescriptionListData: jobDescriptionListData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n  handleSubmit = (data,action) => {\r\n    let jobMapId=data.jobMapId;\r\n    let jobId=this.state.jobId;\r\n    let candidateId=data.userId;\r\n    let hrId=this.state.userId;\r\n    let status= action;\r\n    let createdBy= this.props.user.userId;\r\n\r\n    let dataMap={\r\n      jobMapId,\r\n      jobId,\r\n      candidateId,\r\n      hrId,\r\n      status,\r\n      createdBy        \r\n    }\r\n    \r\n    if(jobMapId!==\"\" || jobMapId!==null){\r\n        theRapidHireApiService('createJobMap',dataMap)\r\n        .then(response => {     \r\n          if (response.data.status === \"Success\") {\r\n            this.getUserListForMapping(this.state.jobId);   \r\n            //  let jobDescriptionListData= this.state.jobDescriptionListData;\r\n            //  jobDescriptionListData= response.data.result;\r\n        \r\n            //  this.setState({jobDescriptionListData: jobDescriptionListData});\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }else{\r\n      theRapidHireApiService('updateJobMap',dataMap)\r\n      .then(response => {     \r\n        if (response.data.status === \"Success\") {\r\n          this.getUserListForMapping(this.state.jobId);   \r\n          //  let jobDescriptionListData= this.state.jobDescriptionListData;\r\n          //  jobDescriptionListData= response.data.result;\r\n      \r\n          //  this.setState({jobDescriptionListData: jobDescriptionListData});\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n    \r\n\r\n\r\n  contentEditable = () => {\r\n    window.scrollTo(500, 0);\r\n    //console.log(!this.state.contentEditable);\r\n    this.setState({ contentEditable: !this.state.contentEditable });\r\n  };\r\n\r\n  setProfileData = data => {\r\n    //console.log(data);\r\n    if (data) {\r\n      let userId = data.userId;\r\n      let summary = data.summary;\r\n      let firstName = data.firstName;\r\n      let lastName = data.lastName;\r\n      // let tagline = data.tagline.trim();\r\n      // let editTag = data.tagline.trim();\r\n      let tagline = data.tagline ? data.tagline.trim() : null;\r\n      let editTag = data.tagline ? data.tagline.trim() : null;\r\n\r\n      let name =\r\n        (data.firstName ? data.firstName : '') +\r\n        ' ' +\r\n        (data.lastName ? data.lastName : '');\r\n      let profileImage = data.profilePicture;\r\n      if (profileImage) {\r\n        profileImage = getThumbImage('medium', profileImage);\r\n      }\r\n      let coverImage = data.coverImage;\r\n      if (coverImage) {\r\n        coverImage = getThumbImage('original', coverImage);\r\n      }\r\n      let isActive = data.isActive;\r\n      this.setState({\r\n        editTag,\r\n        summary,\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        profileImage,\r\n        coverImage,\r\n        tagline,\r\n        isActive,\r\n        name\r\n      });\r\n    }\r\n  };  \r\n\r\n \r\n  joinVideoChat = data => {   \r\n    console.log(data);\r\n\r\n    let videoKeyClient= data.videoKeyUser;\r\n    \r\n    let videoKeySelf= data.videoKeyInterviewer;\r\n    \r\n    this.props.history.push({\r\n        pathname: '/js/app',\r\n        state: { videoKeySelf:videoKeySelf,videoKeyClient:videoKeyClient,slotId:data.slotId}});    \r\n      \r\n  };\r\n\r\n  editJobDescriptionComponent = jobDescriptionDetail => {\r\n    console.log(jobDescriptionDetail);\r\n    this.setState({\r\n      jobDescriptionDetail: jobDescriptionDetail ,\r\n      showJobDescriptionComponent: !this.state.showJobDescriptionComponent    \r\n    });\r\n  }\r\n\r\n \r\n\r\n  getProfileData = () => {\r\n    let userId = this.state.userId;\r\n    this.props.actionGetStudentPersonalInfo(userId);\r\n  };\r\n  \r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  toggleDropdown = () => {\r\n    this.setState({\r\n      showDropdown: !this.state.showDropdown\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };  \r\n\r\n \r\n \r\n  render() {let self= this;\r\n    return ( \r\n    \r\n    <div className=\"wrapper\">\r\n     <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        /> \r\n        <Header {...this.props} />     \r\n          <div className=\"main-panel\">          \r\n        \r\n\r\n        <div className=\"w3-content main-panel1\">\r\n        \r\n          <div className=\"container main\">\r\n           \r\n\r\n            {/* <div className=\"button--wrapper mb-1 text-center flex flex-1 justify-center dashBtnCenter\">\r\n              <button\r\n                className=\"btn btn-with-border with-icon smallBtn mr-1\"\r\n                onClick={this.viewSampleProfile}\r\n              >\r\n                View Sample Profile\r\n              </button>             \r\n              <button\r\n                className=\"btn btn-with-border with-icon smallBtn\"\r\n                onClick={this.addStudentModel}\r\n              >\r\n                <span className=\"icon-plus\" />\r\n                add student\r\n              </button>\r\n            </div> */}\r\n            {this.state.bookedSlotData && this.state.bookedSlotData.map(function(data, index) {\r\n                return (                 \r\n                     \r\n                  <div\r\n                    key={index}\r\n                    className=\"suggestion-usd\"\r\n                   \r\n                  >\r\n                    <div className=\"student-img deflt-icon centeredBox flex\">\r\n                       Your Slot has been booked with Rapid Hire Company\r\n                    </div>\r\n                    <div className=\"student-info flex justify-content-space-between\">\r\n                      <div className=\"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\">\r\n                        <div className=\"flex-1\">\r\n                          <h3>\r\n                            {/* {data.firstName\r\n                              ? data.firstName +\r\n                                ' ' +\r\n                                (data.lastName ? data.lastName : '')\r\n                              : null} */}\r\n                          </h3>\r\n                          <p></p>\r\n                          <p></p>\r\n                        </div>\r\n\r\n                         <div className=\"flex-1\">\r\n                          <h6>\r\n                            {moment(parseInt(data.startTimeStamp,10)).format(\"hh:mm:ss\")}                      \r\n                          </h6>\r\n                          {moment(parseInt(data.endTimeStamp,10)).format(\"hh:mm:ss\")}\r\n                        </div>\r\n\r\n                        <div className=\"btn-group flex align-center\">                 \r\n                        \r\n                          <button onClick={self.joinVideoChat.bind(\r\n                            self,\r\n                            data                            \r\n                          )} \r\n                            className=\"btn btn-primary no-round\"\r\n                          //  onClick={self.handleClickProfile.bind(self, data)}\r\n                          >\r\n                           Join Video\r\n                          </button>\r\n                          {/* {self.state.showVideoComponent ==\r\n                              true ? (\r\n                                <ShowVideo\r\n                                  closeShowVideoComponent={\r\n                                    self.showVideoComponent\r\n                                  }                                 \r\n                                  videoLink={\r\n                                    data.videoLink\r\n                                  }\r\n                                />\r\n                              ) : (\r\n                                '')} */}\r\n                          &nbsp; &nbsp;\r\n                      \r\n                          <DropdownButton\r\n                            className=\"burger-trigger\"\r\n                            title={<span className=\"icon-burger\" />}\r\n                            id=\"1\"\r\n                          >\r\n                            <MenuItem\r\n                              // onSelect={self.addParentModel.bind(\r\n                              //   this,\r\n                              //   data.userId\r\n                              // )}\r\n                            >\r\n                              <i className=\"m-ico icon-plus\" />\r\n                              Add Parent\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                              onSelect={() =>\r\n                                self.props.history.push({\r\n                                  pathname: '/parent/list',\r\n                                  state: { studentData: data }\r\n                                })\r\n                              }\r\n                            >\r\n                              <i className=\"m-ico icon-parent\" /> Parent List\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                              onSelect={() =>\r\n                                self.props.history.push({\r\n                                  pathname: '/student/profilelog',\r\n                                  state: { profileOwner: data.userId }\r\n                                })\r\n                              }\r\n                            >\r\n                              <i className=\"m-ico icon-profile-sharing\" />{' '}\r\n                              Profile Sharing Log\r\n                            </MenuItem>\r\n\r\n                            <MenuItem\r\n                            //   onSelect={self.deleteStudent.bind(\r\n                            //     this,\r\n                            //     data.userId,\r\n                            //     self.props.parent.userId\r\n                            //   )}\r\n                            >\r\n                              <i className=\"m-ico icon-delete\" /> Delete\r\n                            </MenuItem>\r\n                          </DropdownButton>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* <div className=\"flex align-center justify-content-space-bettween tag-wrap\">\r\n                        <div className=\"promo-tag br-light\">\r\n                          Skills <span>{data.accomplishment}</span>\r\n                        </div>\r\n                       \r\n                        <div className=\"promo-tag\">\r\n                          Location <span>{data.recommendation}</span>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>         \r\n          {/* {this.state.addStudentModel ? (\r\n            <AddMoreStudent\r\n              addStudentModel={this.state.addStudentModel}\r\n              closeAddStudentModel={this.addStudentModel}\r\n            />\r\n          ) : null} */}\r\n        </div></div>\r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    // </div></div>\r\n    //   </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    otherUser: state.User.otherUserInfoData,\r\n    student: state.Student\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      actionGetStudentPersonalInfo,\r\n      actionGetAllCompetency,\r\n      actionGetAchievementsByUser,\r\n      actionGetRecommendationsByUser,\r\n      actionUpdateUserInfo,\r\n      actionGetAchievementsData\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}