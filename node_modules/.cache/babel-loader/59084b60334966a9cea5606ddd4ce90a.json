{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\videoChat\\\\js\\\\CallWindow.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'proptypes';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport _ from 'lodash';\nimport { Player } from 'video-react'; //import 'video-react/dist/video-react.css'; // import css\n\nclass CallWindow extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onDragStart = (event, taskName) => {\n      console.log('dragstart on div: ', taskName);\n      event.dataTransfer.setData(\"taskName\", taskName);\n    };\n\n    this.onDragOver = event => {\n      event.preventDefault();\n    };\n\n    this.onDrop = (event, cat) => {\n      let taskName = event.dataTransfer.getData(\"taskName\");\n      const saveSkiilTag = this.props.saveSkiilTag;\n      console.log('taskName -- ', taskName);\n      console.log(this.props);\n      this.props.saveSkillTag(taskName);\n      let tasks = this.state.tasks.filter(task => {\n        if (task.taskName == taskName) {\n          task.type = cat;\n        }\n\n        return task;\n      });\n      this.setState(_objectSpread({}, this.state, {\n        tasks\n      }));\n    };\n\n    this.state = {\n      Video: true,\n      Audio: true,\n      Audio: {\n        echoCancellation: true\n      },\n      tasks: [{\n        id: \"1\",\n        taskName: \"Read book\",\n        type: \"inProgress\",\n        backgroundColor: \"red\"\n      }, {\n        id: \"2\",\n        taskName: \"Pay bills\",\n        type: \"inProgress\",\n        backgroundColor: \"green\"\n      }, {\n        id: \"3\",\n        taskName: \"Go to the gym\",\n        type: \"Done\",\n        backgroundColor: \"blue\"\n      }, {\n        id: \"4\",\n        taskName: \"Play baseball\",\n        type: \"Done\",\n        backgroundColor: \"green\"\n      }],\n      skillTag: []\n    };\n    this.btns = [{\n      type: 'Video',\n      icon: 'fa-video-camera'\n    }, {\n      type: 'Audio',\n      icon: 'fa-microphone'\n    }];\n  }\n\n  componentDidMount() {\n    this.setMediaStream();\n  } // componentWillReceiveProps(nextProps) {\n  //   const { config: currentConfig } = this.props;\n  //   // Initialize when the call started\n  //   if (!currentConfig && nextProps.config) {\n  //     const { config, mediaDevice } = nextProps;\n  //     _.forEach(config, (conf, type) => mediaDevice.toggle(_.capitalize(type), conf));\n  //     this.setState({\n  //       Video: config.video,\n  //       Audio: config.audio\n  //     });\n  //   }\n  // }\n\n\n  componentDidUpdate() {\n    this.setMediaStream();\n  }\n\n  setMediaStream() {\n    const _this$props = this.props,\n          peerSrc = _this$props.peerSrc,\n          localSrc = _this$props.localSrc;\n    if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\n    if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc;\n  }\n  /**\r\n   * Turn on/off a media device\r\n   * @param {String} deviceType - Type of the device eg: Video, Audio\r\n   */\n\n\n  toggleMediaDevice(deviceType) {\n    const mediaDevice = this.props.mediaDevice;\n\n    const deviceState = _.get(this.state, deviceType);\n\n    this.setState({\n      [deviceType]: !deviceState\n    });\n    mediaDevice.toggle(deviceType);\n  }\n\n  renderControlButtons() {\n    const getClass = (icon, type) => classnames(\"btn-action fa \".concat(icon), {\n      disable: !_.get(this.state, type)\n    });\n\n    return this.btns.map(btn => React.createElement(\"button\", {\n      key: \"btn\".concat(btn.type),\n      type: \"button\",\n      className: getClass(btn.icon, btn.type),\n      onClick: () => this.toggleMediaDevice(btn.type),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    var tasks = {\n      inProgress: [],\n      Done: []\n    };\n    let self = this;\n    this.state.tasks.forEach(task => {\n      tasks[task.type].push(React.createElement(\"div\", {\n        key: task.id,\n        onDragStart: event => this.onDragStart(event, task.taskName),\n        draggable: true,\n        className: \"draggable\",\n        style: {\n          backgroundColor: task.bgcolor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, task.taskName));\n    });\n    const _this$props2 = this.props,\n          status = _this$props2.status,\n          endCall = _this$props2.endCall,\n          startCallInterviewer = _this$props2.startCallInterviewer,\n          saveSkiilTag = _this$props2.saveSkiilTag;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames('call-window', status),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"*/}\", React.createElement(\"video\", {\n      id: \"peerVideo\",\n      ref: el => this.peerVideo = el,\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"video\", {\n      id: \"localVideo\",\n      ref: el => this.localVideo = el,\n      autoPlay: true,\n      muted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"video-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.renderControlButtons(), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-action hangup fa fa-phone\",\n      onClick: () => endCall(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), this.props.user && this.props.user.roleId == 2 ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-action startup fa fa-phone\",\n      onClick: () => startCallInterviewer(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nCallWindow.propTypes = {\n  status: PropTypes.string.isRequired,\n  localSrc: PropTypes.object,\n  // eslint-disable-line\n  peerSrc: PropTypes.object,\n  // eslint-disable-line\n  config: PropTypes.object,\n  // eslint-disable-line\n  mediaDevice: PropTypes.object,\n  // eslint-disable-line\n  endCall: PropTypes.func.isRequired,\n  startCallInterviewer: PropTypes.func.isRequired,\n  saveSkiilTag: PropTypes.func.isRequired\n}; // export default CallWindow;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData\n  };\n};\n\nexport default connect(mapStateToProps, null)(CallWindow);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\videoChat\\js\\CallWindow.js"],"names":["React","Component","PropTypes","connect","classnames","_","Player","CallWindow","constructor","props","context","onDragStart","event","taskName","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","saveSkiilTag","saveSkillTag","tasks","state","filter","task","type","setState","Video","Audio","echoCancellation","id","backgroundColor","skillTag","btns","icon","componentDidMount","setMediaStream","componentDidUpdate","peerSrc","localSrc","peerVideo","srcObject","localVideo","toggleMediaDevice","deviceType","mediaDevice","deviceState","get","toggle","renderControlButtons","getClass","disable","map","btn","render","inProgress","Done","self","forEach","push","bgcolor","status","endCall","startCallInterviewer","el","user","roleId","propTypes","string","isRequired","object","config","func","mapStateToProps","User","userData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'proptypes';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport _ from 'lodash';\r\nimport { Player } from 'video-react';\r\n//import 'video-react/dist/video-react.css'; // import css\r\n\r\n\r\nclass CallWindow extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      Video: true,\r\n      Audio: true,\r\n      Audio: {echoCancellation:true},\r\n      tasks: [\r\n        {id: \"1\", taskName:\"Read book\",type:\"inProgress\", backgroundColor: \"red\"},\r\n        {id: \"2\", taskName:\"Pay bills\", type:\"inProgress\", backgroundColor:\"green\"},\r\n        {id: \"3\", taskName:\"Go to the gym\", type:\"Done\", backgroundColor:\"blue\"},\r\n        {id: \"4\", taskName:\"Play baseball\", type:\"Done\", backgroundColor:\"green\"}\r\n    ],\r\n     skillTag:[]          \r\n    };\r\n\r\n    this.btns = [\r\n      { type: 'Video', icon: 'fa-video-camera' },\r\n      { type: 'Audio', icon: 'fa-microphone' }\r\n    ];  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.setMediaStream();   \r\n   }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   const { config: currentConfig } = this.props;\r\n  //   // Initialize when the call started\r\n  //   if (!currentConfig && nextProps.config) {\r\n  //     const { config, mediaDevice } = nextProps;\r\n  //     _.forEach(config, (conf, type) => mediaDevice.toggle(_.capitalize(type), conf));\r\n\r\n  //     this.setState({\r\n  //       Video: config.video,\r\n  //       Audio: config.audio\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  componentDidUpdate() {\r\n    this.setMediaStream();\r\n  }\r\n \r\n  setMediaStream() {\r\n    const { peerSrc, localSrc } = this.props;\r\n    if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\r\n    if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc; \r\n\r\n \r\n  }\r\n\r\n  /**\r\n   * Turn on/off a media device\r\n   * @param {String} deviceType - Type of the device eg: Video, Audio\r\n   */\r\n  toggleMediaDevice(deviceType) {\r\n    const { mediaDevice } = this.props;\r\n    const deviceState = _.get(this.state, deviceType);\r\n    this.setState({ [deviceType]: !deviceState });\r\n    mediaDevice.toggle(deviceType);\r\n  }\r\n\r\n  renderControlButtons() {\r\n    const getClass = (icon, type) => classnames(`btn-action fa ${icon}`, {\r\n      disable: !_.get(this.state, type)\r\n    });\r\n\r\n    return this.btns.map(btn => (\r\n      <button\r\n        key={`btn${btn.type}`}\r\n        type=\"button\"\r\n        className={getClass(btn.icon, btn.type)}\r\n        onClick={() => this.toggleMediaDevice(btn.type)}\r\n      />\r\n    ));\r\n  }\r\n\r\n  onDragStart = (event, taskName) => {\r\n    console.log('dragstart on div: ', taskName);\r\n    event.dataTransfer.setData(\"taskName\", taskName);\r\n}\r\nonDragOver = (event) => {\r\n    event.preventDefault();\r\n}\r\n\r\nonDrop = (event, cat) => {\r\n    let taskName = event.dataTransfer.getData(\"taskName\");\r\n    const { saveSkiilTag } = this.props;\r\n    console.log('taskName -- ',taskName);\r\n    console.log(this.props);\r\n    this.props.saveSkillTag(taskName);\r\n\r\n    let tasks = this.state.tasks.filter((task) => {\r\n        if (task.taskName == taskName) {\r\n            task.type = cat;\r\n        }\r\n        return task;\r\n    });\r\n\r\n    this.setState({\r\n        ...this.state,\r\n        tasks\r\n    });\r\n}\r\n\r\n  render() {\r\n    var tasks = {\r\n      inProgress: [],\r\n      Done: []\r\n    }\r\n    let self= this;\r\n\r\n  this.state.tasks.forEach ((task) => {\r\n    tasks[task.type].push(\r\n      <div key={task.id} \r\n      onDragStart = {(event) => this.onDragStart(event, task.taskName)}\r\n        draggable\r\n        className=\"draggable\"\r\n        style = {{backgroundColor: task.bgcolor}}>\r\n        {task.taskName}\r\n      </div>\r\n    );\r\n  });\r\n\r\n    \r\n    const { status, endCall,startCallInterviewer,saveSkiilTag } = this.props;\r\n    return (\r\n   <div>      \r\n      <div className={classnames('call-window', status)}>     \r\n    \r\n\r\n      {/* <div className=\"drag-container\">\r\n\t        <h2 className=\"head\">To Do List Drag & Drop</h2>\r\n\t\t    <div className=\"inProgress\"\r\n\t    \t\tonDragOver={(event)=>this.onDragOver(event)}\r\n      \t\t\tonDrop={(event)=>{this.onDrop(event, \"inProgress\")}}>\r\n\t          <span className=\"group-header\">In Progress</span>\r\n\t          {tasks.inProgress}\r\n\t        </div>\r\n\t        <div className=\"droppable\"\r\n\t        \tonDragOver={(event)=>this.onDragOver(event)}\r\n          \t\tonDrop={(event)=>this.onDrop(event, \"Done\")}>\r\n\t          <span className=\"group-header\">Done</span>\r\n          \r\n\t          {tasks.Done}\r\n\t        </div>\t        \r\n\t      </div>  */}\r\n\r\n      \r\n       */}        \r\n        \r\n       <video id=\"peerVideo\" ref={el => this.peerVideo = el} autoPlay />\r\n        {/* <Player\r\n          ref={player => {\r\n            this.player = player;\r\n          }}\r\n          autoPlay\r\n        >\r\n          <source src={this.state.peerSrc} /></Player>  */}\r\n\r\n        <video id=\"localVideo\" ref={el => this.localVideo = el} autoPlay muted />\r\n        <div className=\"video-control\">\r\n          {this.renderControlButtons()}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-action hangup fa fa-phone\"\r\n            onClick={() => endCall(true)}\r\n          />       \r\n    {this.props.user && this.props.user.roleId == 2 ?\r\n           <button\r\n            type=\"button\"\r\n            className=\"btn-action startup fa fa-phone\"\r\n            onClick={() => startCallInterviewer(true)}\r\n          ></button>: null}\r\n        </div> \r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCallWindow.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  localSrc: PropTypes.object, // eslint-disable-line\r\n  peerSrc: PropTypes.object, // eslint-disable-line\r\n  config: PropTypes.object, // eslint-disable-line\r\n  mediaDevice: PropTypes.object, // eslint-disable-line\r\n  endCall: PropTypes.func.isRequired,\r\n  startCallInterviewer: PropTypes.func.isRequired,\r\n  saveSkiilTag: PropTypes.func.isRequired\r\n};\r\n\r\n// export default CallWindow;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(CallWindow);"]},"metadata":{},"sourceType":"module"}