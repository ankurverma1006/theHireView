{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{ToastContainer}from'react-toastify';import{Portal}from'react-overlays';import{Button,Modal,Form,FormGroup,Checkbox,Col,ControlLabel,FormControl,InputGroup,Radio}from'react-bootstrap';import Select from'react-select';import'react-select/dist/react-select.css';import{YearPicker,MonthPicker,DayPicker}from'react-dropdown-date';import{connect}from'react-redux';//import DatePicker from 'react-datepicker';\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\nimport moment from'moment';import validation from'react-validation-mixin';import strategy from'react-validatorjs-strategy';import classnames from'classnames';import ImageCropper from'../../common/cropper/imageCropper';import achievementDefaultImage from'../../assets/img/default_achievement.jpg';import _ from'lodash';import CONSTANTS from'../../common/core/config/appConfig';import{renderMessage,isValidURL,ZoomInAndOut,generateTimestamp}from'../../common/commonFunctions';import theRapidHireApiService from'../../common/core/api/apiService';//import MediaList from '../mediaList';\nvar validationMessages=CONSTANTS.validationMessages;var regExpressions=CONSTANTS.regExpressions;var badgeImgArray=[];var badgeImgPreview=[];var certificateImgArray=[];var certificateImgPreview=[];var mediaImgArray=[];var mediaImgPreview=[];var emptyToDate='10000000';var locationList=[{locationId:1,name:'Indore'},{locationId:2,name:'Bhopal'},{locationId:3,name:'Pune'}];var addPersonalProfile=/*#__PURE__*/function(_Component){_inherits(addPersonalProfile,_Component);function addPersonalProfile(props){var _this;_classCallCheck(this,addPersonalProfile);_this=_possibleConstructorReturn(this,_getPrototypeOf(addPersonalProfile).call(this,props));_this.getValidatorData=function(){return _this.state;};_this.getClasses=function(field){return classnames({error:!_this.props.isValid(field)});};_this.setProjectData=function(data){if(data){_this.setState({userId:data.userId,userProfileId:data.userProfileId,skills:data.skills,year:data.experienceInYear,month:data.experienceInMonth,location:data.currentLocation,mobileNo:data.mobileNo,profileRole:data.profileRole&&data.profileRole[0]&&data.profileRole[0].profileRoleId});}};_this.validateData=function(){var self=_assertThisInitialized(_this);_this.props.validate(function(error){var imageObject={media:self.state.mediaImgArray||[]};if(!error){self.setState({isLoading:true});self.handleSubmit();}});};_this.closeImageModal=function(){_this.setState({imagesModal:!_this.state.imagesModal});};_this.handleChange=function(event){var target=event.target;var value=target.type==='checkbox'?target.checked:target.value;var name=target.name;_this.setState(_defineProperty({},name,value));};_this.closePersonalProfileModal=function(status){_this.setState({personalProfileModal:false});_this.props.closePersonalProfileComponent();};_this.state={isLoading:false,startDate:'',endDate:'',promptRecommendation:false,userId:'',todaysDate:false,startYear:moment().format('YYYY'),startMonth:moment().format('M')-1,startDay:moment().format('D'),endYear:moment().format('YYYY'),endMonth:moment().format('M')-1,endDay:moment().format('D'),lwdYear:moment().format('YYYY'),lwdMonth:moment().format('M')-1,lwdDay:moment().format('D'),designation:'',organisation:'',personalProfileModal:true,projectId:'',associateList:[],profileRoleList:[]};_this.getValidatorData=_this.getValidatorData.bind(_assertThisInitialized(_this));_this.getClasses=_this.getClasses.bind(_assertThisInitialized(_this));_this.validatorTypes=strategy.createSchema({profileRole:'required',year:'required',month:'required',location:'required',mobileNo:'required'},{'required.profileRole':validationMessages.profileRole.required,'required.year':validationMessages.year.required,'required.month':validationMessages.month.required,'required.location':validationMessages.location.required,'required.mobileNo':validationMessages.mobileNo.required});return _this;}_createClass(addPersonalProfile,[{key:\"componentDidMount\",value:function componentDidMount(){// if(this.props.user){\nvar userId=this.props.user.userId;// }\nconsole.log('this.props.employmentDetail ',this.props.userProfile);this.setProjectData(this.props.userProfile);this.getProfileRoleList();}// getAssociatedListData(userId){\n//   theRapidHireApiService('getAssociatedListDataByUserId',{userId})\n//   .then(response => {\n//     if (response.data.statusCode === 200) {\n//        let associateList= this.state.associateList;\n//        associateList= response.data.resourceData[0];\n//        this.setState({associateList: associateList});\n//     }\n//   })\n//   .catch(err => {\n//     console.log(err);\n//   });\n// }\n},{key:\"getProfileRoleList\",value:function getProfileRoleList(){var _this2=this;theRapidHireApiService('getProfileRoleList').then(function(response){if(response.data.status==='Success'){var profileRoleList=_this2.state.profileRoleList;// response.data.result.forEach(function(data){\n//    profileRoleList.push({label: data.profileRole,value:data.profileRoleId })\n// })\nprofileRoleList=response.data.result;console.log(profileRoleList);_this2.setState({profileRoleList:profileRoleList});}}).catch(function(err){console.log(err);});}},{key:\"generateSASToken\",value:function generateSASToken(){var _this3=this;theRapidHireApiService('getSASToken').then(function(response){if(response.data.status==='Success'){var sasToken=response.data.result.sasToken;_this3.setState({sasToken:sasToken});}}).catch(function(err){console.log(err);});}},{key:\"handleSubmit\",value:function handleSubmit(){var profileRoleId=this.state.profileRole;var profileRole=[];var profileRoleList=this.state.profileRoleList;var index=profileRoleList.findIndex(function(todo){return todo.profileRoleId==profileRoleId;});profileRole.push(profileRoleList[index]);var experienceInYear=this.state.year;var experienceInMonth=this.state.month;var currentLocation=this.state.location;var mobileNo=this.state.mobileNo;var skills=this.state.skills;var userId=this.props.user.userId;var userProfileId=this.state.userProfileId;var roleId=this.props.user.roleId;var data={userProfileId:userProfileId,userId:userId,profileRole:profileRole,experienceInYear:experienceInYear,experienceInMonth:experienceInMonth,currentLocation:currentLocation,mobileNo:mobileNo,skills:skills,roleId:roleId};var self=this;if(!this.state.userProfileId||this.state.userProfileId===''){theRapidHireApiService('addUserSkills',data).then(function(response){if(response.data.status==='Success'){self.setState({isLoading:false});self.closePersonalProfileModal('save');}}).catch(function(error){self.setState({isLoading:false});console.log(error);});}else{theRapidHireApiService('editUserProfile',data).then(function(response){if(response.data.status==='Success'){self.closePersonalProfileModal('save');self.setState({isLoading:false});}}).catch(function(error){self.setState({isLoading:false});console.log(error);});}}},{key:\"render\",value:function render(){var CalendarContainer=function CalendarContainer(_ref){var children=_ref.children;var el=document.getElementById('calendar-portal');return React.createElement(Portal,{container:el},children);};return React.createElement(\"div\",null,React.createElement(Modal,{bsSize:\"large\",show:this.state.personalProfileModal,onHide:this.closePersonalProfileModal.bind(this,'close'),backdrop:\"static\",keyboard:false},React.createElement(ToastContainer,{autoClose:5000,className:\"custom-toaster-main-cls\",toastClassName:\"custom-toaster-bg\",transition:ZoomInAndOut}),React.createElement(Modal.Header,{closeButton:true},React.createElement(Modal.Title,{className:\"subtitle text-center\"},!this.state.userProfileId||this.state.userProfileId===''?'Add Profile':'Edit Profile')),React.createElement(Modal.Body,null,React.createElement(Form,{horizontal:true,className:\"lightBgForm\"},React.createElement(Col,{sm:10},React.createElement(FormGroup,{className:\"addDateInput\"},React.createElement(Col,{componentClass:ControlLabel,sm:3},\"Profile Role\"),React.createElement(Col,{sm:9},React.createElement(\"div\",{className:\"dob\"},React.createElement(\"div\",{className:\"form-group\"},React.createElement(FormControl,{componentClass:\"select\",placeholder:\"profileRole\",name:\"profileRole\",value:this.state.profileRole,onChange:this.handleChange,autoComplete:\"off\",maxLength:\"1000\"},React.createElement(\"option\",{value:\"\",disabled:true},\"job role\"),this.state.profileRoleList.map(function(ass,i){return React.createElement(\"option\",{value:ass.profileRoleId},ass.profileRole);})),renderMessage(this.props.getValidationMessages('associatedWith')))))),React.createElement(FormGroup,{className:\"addDateInput\"},React.createElement(Col,{componentClass:ControlLabel,sm:3},\"Experience\"),React.createElement(Col,{sm:9},React.createElement(\"div\",{className:\"dob\"},React.createElement(\"div\",{className:\"form-group\"},React.createElement(FormControl,{componentClass:\"select\",placeholder:\"year\",name:\"year\",value:this.state.year,onChange:this.handleChange,autoComplete:\"off\",maxLength:\"1000\"},React.createElement(\"option\",{value:\"\",disabled:true},\"years\"),React.createElement(\"option\",{value:1},\"1 years\"),React.createElement(\"option\",{value:2},\"2 years\"),React.createElement(\"option\",{value:3},\"3 years\"),React.createElement(\"option\",{value:4},\"4 years\"),React.createElement(\"option\",{value:5},\"5 years\"),React.createElement(\"option\",{value:6},\"6 years\"),React.createElement(\"option\",{value:7},\"7 years\"),React.createElement(\"option\",{value:8},\"8 years\"),React.createElement(\"option\",{value:9},\"9 years\"),React.createElement(\"option\",{value:10},\"10 years\"),React.createElement(\"option\",{value:11},\"11 years\"),React.createElement(\"option\",{value:12},\"12 years\")),renderMessage(this.props.getValidationMessages('year'))),React.createElement(\"div\",{className:\"form-group\"},React.createElement(FormControl,{componentClass:\"select\",placeholder:\"month\",name:\"month\",value:this.state.month,onChange:this.handleChange,autoComplete:\"off\",maxLength:\"1000\"},React.createElement(\"option\",{value:\"\",disabled:true},\"month\"),React.createElement(\"option\",{value:1},\"1 month\"),React.createElement(\"option\",{value:2},\"2 month\"),React.createElement(\"option\",{value:3},\"3 month\"),React.createElement(\"option\",{value:4},\"4 month\"),React.createElement(\"option\",{value:5},\"5 month\"),React.createElement(\"option\",{value:6},\"6 month\"),React.createElement(\"option\",{value:7},\"7 month\"),React.createElement(\"option\",{value:8},\"8 month\"),React.createElement(\"option\",{value:9},\"9 month\"),React.createElement(\"option\",{value:10},\"10 month\"),React.createElement(\"option\",{value:11},\"11 month\"),React.createElement(\"option\",{value:12},\"12 month\")))),renderMessage(this.props.getValidationMessages('month')))),React.createElement(\"div\",null,React.createElement(FormGroup,{className:\"addDateInput\"},React.createElement(Col,{componentClass:ControlLabel,sm:3},\"Current Location\"),React.createElement(Col,{sm:9},React.createElement(\"div\",{className:\"dob\"},React.createElement(\"div\",{className:\"form-group\"},React.createElement(FormControl,{componentClass:\"select\",placeholder:\"location\",name:\"location\",value:this.state.location,onChange:this.handleChange,autoComplete:\"off\",maxLength:\"1000\"},React.createElement(\"option\",{value:\"\"},\"location\"),locationList.map(function(ass,i){return React.createElement(\"option\",{value:ass.locationId},ass.name);})),renderMessage(this.props.getValidationMessages('associatedWith'))))))),React.createElement(FormGroup,{controlId:\"formControlsTextarea\",className:this.getClasses('description')},React.createElement(Col,{componentClass:ControlLabel,sm:3},React.createElement(ControlLabel,null,\"MobileNo\")),React.createElement(Col,{sm:9},React.createElement(FormControl,{placeholder:\"Add mobileNo\",name:\"mobileNo\",value:this.state.mobileNo,onChange:this.handleChange,autoComplete:\"off\",maxLength:\"100\"}),renderMessage(this.props.getValidationMessages('mobileNo'))))),React.createElement(\"div\",{className:\"flex align-center justify-content-between fullWidth\"}))),React.createElement(Modal.Footer,null,React.createElement(Button,{bsStyle:\"primary\",className:\"no-bold no-round\",disabled:this.state.isLoading,onClick:!this.state.isLoading?this.validateData:null},this.state.isLoading?'In Progress...':'Save'),React.createElement(Button,{bsStyle:\"default\",className:\"no-bold no-round\",onClick:this.closePersonalProfileModal.bind(this,'close')},\"Close\"))),React.createElement(Modal//  bsSize=\"medium\"\n,{show:this.state.imagesModal,onHide:this.closeImageModal},React.createElement(Modal.Header,{closeButton:true},React.createElement(Modal.Title,{className:\"subtitle text-center\"},\"Photos Gallery\")),React.createElement(Modal.Body,null),React.createElement(Modal.Footer,null,React.createElement(Button,{bstyle:\"default no-round\",onClick:this.closeImageModal},\"Close\"))));}}]);return addPersonalProfile;}(Component);addPersonalProfile=validation(strategy)(addPersonalProfile);var mapStateToProps=function mapStateToProps(state){return{//  user: state.User.userData\n};};export default connect(mapStateToProps,null)(addPersonalProfile);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\interviewer\\profile\\addPersonalProfile.js"],"names":["React","Component","ToastContainer","Portal","Button","Modal","Form","FormGroup","Checkbox","Col","ControlLabel","FormControl","InputGroup","Radio","Select","YearPicker","MonthPicker","DayPicker","connect","moment","validation","strategy","classnames","ImageCropper","achievementDefaultImage","_","CONSTANTS","renderMessage","isValidURL","ZoomInAndOut","generateTimestamp","theRapidHireApiService","validationMessages","regExpressions","badgeImgArray","badgeImgPreview","certificateImgArray","certificateImgPreview","mediaImgArray","mediaImgPreview","emptyToDate","locationList","locationId","name","addPersonalProfile","props","getValidatorData","state","getClasses","field","error","isValid","setProjectData","data","setState","userId","userProfileId","skills","year","experienceInYear","month","experienceInMonth","location","currentLocation","mobileNo","profileRole","profileRoleId","validateData","self","validate","imageObject","media","isLoading","handleSubmit","closeImageModal","imagesModal","handleChange","event","target","value","type","checked","closePersonalProfileModal","status","personalProfileModal","closePersonalProfileComponent","startDate","endDate","promptRecommendation","todaysDate","startYear","format","startMonth","startDay","endYear","endMonth","endDay","lwdYear","lwdMonth","lwdDay","designation","organisation","projectId","associateList","profileRoleList","bind","validatorTypes","createSchema","required","user","console","log","userProfile","getProfileRoleList","then","response","result","catch","err","sasToken","index","findIndex","todo","push","roleId","CalendarContainer","children","el","document","getElementById","map","ass","i","getValidationMessages","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\nconst locationList = [\r\n  { locationId: 1, name: 'Indore' },\r\n  { locationId: 2, name: 'Bhopal' },\r\n  { locationId: 3, name: 'Pune' }\r\n];\r\n\r\nclass addPersonalProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,\r\n      userId: '',\r\n      todaysDate: false,\r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation: '',\r\n      organisation: '',\r\n      personalProfileModal: true,\r\n      projectId: '',\r\n      associateList: [],\r\n      profileRoleList: []\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        profileRole: 'required',\r\n        year: 'required',\r\n        month: 'required',\r\n        location: 'required',\r\n        mobileNo: 'required'\r\n      },\r\n      {\r\n        'required.profileRole': validationMessages.profileRole.required,\r\n        'required.year': validationMessages.year.required,\r\n        'required.month': validationMessages.month.required,\r\n        'required.location': validationMessages.location.required,\r\n        'required.mobileNo': validationMessages.mobileNo.required\r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n    let userId = this.props.user.userId;\r\n    // }\r\n    console.log('this.props.employmentDetail ', this.props.userProfile);\r\n    this.setProjectData(this.props.userProfile);\r\n    this.getProfileRoleList();\r\n  }\r\n\r\n  // getAssociatedListData(userId){\r\n  //   theRapidHireApiService('getAssociatedListDataByUserId',{userId})\r\n  //   .then(response => {\r\n  //     if (response.data.statusCode === 200) {\r\n  //        let associateList= this.state.associateList;\r\n  //        associateList= response.data.resourceData[0];\r\n  //        this.setState({associateList: associateList});\r\n  //     }\r\n  //   })\r\n  //   .catch(err => {\r\n  //     console.log(err);\r\n  //   });\r\n  // }\r\n\r\n  getProfileRoleList() {\r\n    theRapidHireApiService('getProfileRoleList')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let profileRoleList = this.state.profileRoleList;\r\n          // response.data.result.forEach(function(data){\r\n          //    profileRoleList.push({label: data.profileRole,value:data.profileRoleId })\r\n          // })\r\n          profileRoleList = response.data.result;\r\n          console.log(profileRoleList);\r\n          this.setState({ profileRoleList: profileRoleList });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  setProjectData = data => {\r\n    if (data) {\r\n      this.setState({\r\n        userId: data.userId,\r\n        userProfileId: data.userProfileId,\r\n        skills: data.skills,\r\n        year: data.experienceInYear,\r\n        month: data.experienceInMonth,\r\n        location: data.currentLocation,\r\n        mobileNo: data.mobileNo,\r\n        profileRole:\r\n          data.profileRole &&\r\n          data.profileRole[0] &&\r\n          data.profileRole[0].profileRoleId\r\n      });\r\n    }\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      let imageObject = {\r\n        media: self.state.mediaImgArray || []\r\n      };\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        self.handleSubmit();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit() {\r\n    let profileRoleId = this.state.profileRole;\r\n    let profileRole = [];\r\n    let profileRoleList = this.state.profileRoleList;\r\n    let index = profileRoleList.findIndex(\r\n      todo => todo.profileRoleId == profileRoleId\r\n    );\r\n\r\n    profileRole.push(profileRoleList[index]);\r\n\r\n    let experienceInYear = this.state.year;\r\n    let experienceInMonth = this.state.month;\r\n    let currentLocation = this.state.location;\r\n    let mobileNo = this.state.mobileNo;\r\n    let skills = this.state.skills;\r\n    let userId = this.props.user.userId;\r\n    let userProfileId = this.state.userProfileId;\r\n    let roleId = this.props.user.roleId;\r\n    let data = {\r\n      userProfileId,\r\n      userId,\r\n      profileRole,\r\n      experienceInYear,\r\n      experienceInMonth,\r\n      currentLocation,\r\n      mobileNo,\r\n      skills,\r\n      roleId\r\n    };\r\n\r\n    let self = this;\r\n\r\n    if (!this.state.userProfileId || this.state.userProfileId === '') {\r\n      theRapidHireApiService('addUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {\r\n            self.setState({ isLoading: false });\r\n            self.closePersonalProfileModal('save');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editUserProfile', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {\r\n            self.closePersonalProfileModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  closePersonalProfileModal = status => {\r\n    this.setState({\r\n      personalProfileModal: false\r\n    });\r\n    this.props.closePersonalProfileComponent();\r\n  };\r\n\r\n  render() {\r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.personalProfileModal}\r\n          onHide={this.closePersonalProfileModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.userProfileId || this.state.userProfileId === ''\r\n                ? 'Add Profile'\r\n                : 'Edit Profile'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Profile Role\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"profileRole\"\r\n                          name=\"profileRole\"\r\n                          value={this.state.profileRole}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            job role\r\n                          </option>\r\n                          {this.state.profileRoleList.map((ass, i) => (\r\n                            <option value={ass.profileRoleId}>\r\n                              {ass.profileRole}\r\n                            </option>\r\n                          ))}\r\n                        </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('associatedWith')\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Experience\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"year\"\r\n                          name=\"year\"\r\n                          value={this.state.year}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            years\r\n                          </option>\r\n                          <option value={1}>1 years</option>\r\n                          <option value={2}>2 years</option>\r\n                          <option value={3}>3 years</option>\r\n                          <option value={4}>4 years</option>\r\n                          <option value={5}>5 years</option>\r\n                          <option value={6}>6 years</option>\r\n                          <option value={7}>7 years</option>\r\n                          <option value={8}>8 years</option>\r\n                          <option value={9}>9 years</option>\r\n                          <option value={10}>10 years</option>\r\n                          <option value={11}>11 years</option>\r\n                          <option value={12}>12 years</option>\r\n                        </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('year')\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"month\"\r\n                          name=\"month\"\r\n                          value={this.state.month}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            month\r\n                          </option>\r\n                          <option value={1}>1 month</option>\r\n                          <option value={2}>2 month</option>\r\n                          <option value={3}>3 month</option>\r\n                          <option value={4}>4 month</option>\r\n                          <option value={5}>5 month</option>\r\n                          <option value={6}>6 month</option>\r\n                          <option value={7}>7 month</option>\r\n                          <option value={8}>8 month</option>\r\n                          <option value={9}>9 month</option>\r\n                          <option value={10}>10 month</option>\r\n                          <option value={11}>11 month</option>\r\n                          <option value={12}>12 month</option>\r\n                        </FormControl>\r\n                      </div>\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('month'))}\r\n                  </Col>\r\n                </FormGroup>\r\n                <div>\r\n                  <FormGroup className=\"addDateInput\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Current Location\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"dob\">\r\n                        <div className=\"form-group\">\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            placeholder=\"location\"\r\n                            name=\"location\"\r\n                            value={this.state.location}\r\n                            onChange={this.handleChange}\r\n                            autoComplete=\"off\"\r\n                            maxLength=\"1000\"\r\n                          >\r\n                            <option value=\"\">location</option>\r\n                            {locationList.map((ass, i) => (\r\n                              <option value={ass.locationId}>{ass.name}</option>\r\n                            ))}\r\n                          </FormControl>\r\n                          {renderMessage(\r\n                            this.props.getValidationMessages('associatedWith')\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                    </Col>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>MobileNo</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add mobileNo\"\r\n                      name=\"mobileNo\"\r\n                      value={this.state.mobileNo}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('mobileNo')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closePersonalProfileModal.bind(this, 'close')}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body></Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddPersonalProfile = validation(strategy)(addPersonalProfile);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //  user: state.User.userData\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addPersonalProfile);\r\n"]},"metadata":{},"sourceType":"module"}