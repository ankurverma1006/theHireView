{"ast":null,"code":"import _defineProperty from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Link}from'react-router-dom';import{ToastContainer}from'react-toastify';import validation from'react-validation-mixin';import strategy from'react-validatorjs-strategy';import classnames from'classnames';import{Button,FormGroup,InputGroup,FormControl}from'react-bootstrap';//import HeaderBeforeLogin from './headerBeforeLogin';\nimport theRapidHireApiService from'../core/api/apiService';import{ZoomInAndOut,renderMessage}from'../commonFunctions';import CONSTANTS from'../core/config/appConfig';import Sidebar from'../authorization/sideBar';var validationMessages=CONSTANTS.validationMessages;var ResetPassword=/*#__PURE__*/function(_Component){_inherits(ResetPassword,_Component);function ResetPassword(props){var _this;_classCallCheck(this,ResetPassword);_this=_possibleConstructorReturn(this,_getPrototypeOf(ResetPassword).call(this,props));_this.getValidatorData=function(){return _this.state;};_this.getClasses=function(field){return classnames({error:!_this.props.isValid(field)});};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.submitData=function(event){if(event.key==='Enter'){event.preventDefault();_this.handleButtonState();}};_this.state={isLoading:false,email:''};_this.handleButtonState=_this.handleButtonState.bind(_assertThisInitialized(_this));_this.getValidatorData=_this.getValidatorData.bind(_assertThisInitialized(_this));_this.getClasses=_this.getClasses.bind(_assertThisInitialized(_this));_this.validatorTypes=strategy.createSchema({email:'required|email'},{'required.email':validationMessages.email.required,'email.email':validationMessages.email.invalid});return _this;}_createClass(ResetPassword,[{key:\"handleButtonState\",value:function handleButtonState(){var self=this;self.props.validate(function(error){if(!error){self.setState({isLoading:true});self.handleSubmit();}});}},{key:\"handleSubmit\",value:function handleSubmit(){var self=this;var email=self.state.email.toLowerCase().trim();theRapidHireApiService('forgotPassword',{email:email}).then(function(response){if(response.data.status==='Success'){self.setState({email:'',isLoading:false});setTimeout(function(){self.props.history.push('/');},4000);}else{self.setState({isLoading:false});}}).catch(function(err){self.setState({isLoading:false});console.log(err);});}},{key:\"render\",value:function render(){var isLoading=this.state.isLoading;return React.createElement(\"div\",{className:\"wrapper\"},React.createElement(\"div\",{className:\"main-panel\"},React.createElement(\"div\",{className:\"login_card\"},React.createElement(\"div\",{className:\"header\"},React.createElement(ToastContainer,{autoClose:5000,className:\"custom-toaster-main-cls\",toastClassName:\"custom-toaster-bg\",transition:ZoomInAndOut}),React.createElement(\"div\",{className:\"formContent\"},React.createElement(\"div\",{className:\"centeredBox p-5\"},React.createElement(\"form\",{className:\"forgotPasswordForm bg-transparent\"},React.createElement(FormGroup,null,React.createElement(\"div\",{className:\"flex align-center mb-1\"},React.createElement(Link,{to:\"/login\",className:\"md-icon mr-1\"},React.createElement(\"span\",{className:\"icon-back_arrow2\"})),React.createElement(\"legend\",{className:\"color-blue mb-0\"},\"Forgot Password\")),React.createElement(\"p\",{className:\"lead mb-50\"},React.createElement(\"strong\",null,\"Reset your password by filling in your email address. You will then receive an email with new password.\"))),React.createElement(FormGroup,{className:this.getClasses('email')},React.createElement(InputGroup,null,React.createElement(InputGroup.Addon,null,React.createElement(\"span\",{className:\"icon-email\"})),React.createElement(FormControl,{type:\"email\",placeholder:\"Email\",name:\"email\",value:this.state.email,onChange:this.handleChange,autoComplete:\"off\",onKeyPress:this.submitData})),renderMessage(this.props.getValidationMessages('email'))),React.createElement(FormGroup,null,React.createElement(Button,{bsStyle:\"primary\",className:\"centeredBtn btn-lg\",disabled:isLoading,onClick:!isLoading?this.handleButtonState:null},isLoading?'In Progress...':'Reset'))))),\" \"))));}}]);return ResetPassword;}(Component);ResetPassword=validation(strategy)(ResetPassword);export default ResetPassword;","map":{"version":3,"sources":["/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/common/forgotPassword/resetPassword.js"],"names":["React","Component","Link","ToastContainer","validation","strategy","classnames","Button","FormGroup","InputGroup","FormControl","theRapidHireApiService","ZoomInAndOut","renderMessage","CONSTANTS","Sidebar","validationMessages","ResetPassword","props","getValidatorData","state","getClasses","field","error","isValid","handleChange","event","setState","target","name","value","submitData","key","preventDefault","handleButtonState","isLoading","email","bind","validatorTypes","createSchema","required","invalid","self","validate","handleSubmit","toLowerCase","trim","then","response","data","status","setTimeout","history","push","catch","err","console","log","getValidationMessages"],"mappings":"0xCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,MAAT,CAAiBC,SAAjB,CAA4BC,UAA5B,CAAwCC,WAAxC,KAA2D,iBAA3D,CAEA;AACA,MAAOC,CAAAA,sBAAP,KAAmC,wBAAnC,CACA,OAASC,YAAT,CAAuBC,aAAvB,KAA4C,oBAA5C,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CAEA,GAAIC,CAAAA,kBAAkB,CAAGF,SAAS,CAACE,kBAAnC,C,GAEMC,CAAAA,a,uEACJ,uBAAYC,KAAZ,CAAmB,+CACjB,+EAAMA,KAAN,GADiB,MAuBnBC,gBAvBmB,CAuBA,UAAM,CACvB,MAAO,OAAKC,KAAZ,CACD,CAzBkB,OA2BnBC,UA3BmB,CA2BN,SAAAC,KAAK,CAAI,CACpB,MAAOhB,CAAAA,UAAU,CAAC,CAChBiB,KAAK,CAAE,CAAC,MAAKL,KAAL,CAAWM,OAAX,CAAmBF,KAAnB,CADQ,CAAD,CAAjB,CAGD,CA/BkB,OAiCnBG,YAjCmB,CAiCJ,SAAAC,KAAK,CAAI,CACtB,MAAKC,QAAL,oBAAiBD,KAAK,CAACE,MAAN,CAAaC,IAA9B,CAAqCH,KAAK,CAACE,MAAN,CAAaE,KAAlD,GACD,CAnCkB,OAqCnBC,UArCmB,CAqCN,SAAAL,KAAK,CAAI,CACpB,GAAIA,KAAK,CAACM,GAAN,GAAc,OAAlB,CAA2B,CACzBN,KAAK,CAACO,cAAN,GACA,MAAKC,iBAAL,GACD,CACF,CA1CkB,CAGjB,MAAKd,KAAL,CAAa,CACXe,SAAS,CAAE,KADA,CAEXC,KAAK,CAAE,EAFI,CAAb,CAKA,MAAKF,iBAAL,CAAyB,MAAKA,iBAAL,CAAuBG,IAAvB,+BAAzB,CACA,MAAKlB,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBkB,IAAtB,+BAAxB,CACA,MAAKhB,UAAL,CAAkB,MAAKA,UAAL,CAAgBgB,IAAhB,+BAAlB,CAEA,MAAKC,cAAL,CAAsBjC,QAAQ,CAACkC,YAAT,CACpB,CACEH,KAAK,CAAE,gBADT,CADoB,CAIpB,CACE,iBAAkBpB,kBAAkB,CAACoB,KAAnB,CAAyBI,QAD7C,CAEE,cAAexB,kBAAkB,CAACoB,KAAnB,CAAyBK,OAF1C,CAJoB,CAAtB,CAZiB,aAqBlB,C,uFAuBmB,CAClB,GAAIC,CAAAA,IAAI,CAAG,IAAX,CACAA,IAAI,CAACxB,KAAL,CAAWyB,QAAX,CAAoB,SAASpB,KAAT,CAAgB,CAClC,GAAI,CAACA,KAAL,CAAY,CACVmB,IAAI,CAACf,QAAL,CAAc,CAAEQ,SAAS,CAAE,IAAb,CAAd,EACAO,IAAI,CAACE,YAAL,GACD,CACF,CALD,EAMD,C,mDAEc,CACb,GAAIF,CAAAA,IAAI,CAAG,IAAX,CACA,GAAIN,CAAAA,KAAK,CAAGM,IAAI,CAACtB,KAAL,CAAWgB,KAAX,CAAiBS,WAAjB,GAA+BC,IAA/B,EAAZ,CACAnC,sBAAsB,CAAC,gBAAD,CAAmB,CAAEyB,KAAK,CAALA,KAAF,CAAnB,CAAtB,CACGW,IADH,CACQ,SAAAC,QAAQ,CAAI,CAChB,GAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAyB,SAA7B,CAAwC,CACtCR,IAAI,CAACf,QAAL,CAAc,CAAES,KAAK,CAAE,EAAT,CAAaD,SAAS,CAAE,KAAxB,CAAd,EACAgB,UAAU,CAAC,UAAM,CACfT,IAAI,CAACxB,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,EACD,CAFS,CAEP,IAFO,CAAV,CAGD,CALD,IAKO,CACLX,IAAI,CAACf,QAAL,CAAc,CAAEQ,SAAS,CAAE,KAAb,CAAd,EACD,CACF,CAVH,EAWGmB,KAXH,CAWS,SAAAC,GAAG,CAAI,CACZb,IAAI,CAACf,QAAL,CAAc,CAAEQ,SAAS,CAAE,KAAb,CAAd,EACAqB,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAdH,EAeD,C,uCAEQ,IACCpB,CAAAA,SADD,CACe,KAAKf,KADpB,CACCe,SADD,CAEP,MACE,4BAAK,SAAS,CAAC,SAAf,EACA,2BAAK,SAAS,CAAC,YAAf,EACE,2BAAK,SAAS,CAAC,YAAf,EACG,2BAAK,SAAS,CAAC,QAAf,EACH,oBAAC,cAAD,EACE,SAAS,CAAE,IADb,CAEE,SAAS,CAAC,yBAFZ,CAGE,cAAc,CAAC,mBAHjB,CAIE,UAAU,CAAEvB,YAJd,EADG,CAOH,2BAAK,SAAS,CAAC,aAAf,EACE,2BAAK,SAAS,CAAC,iBAAf,EACE,4BAAM,SAAS,CAAC,mCAAhB,EACE,oBAAC,SAAD,MAQE,2BAAK,SAAS,CAAC,wBAAf,EACE,oBAAC,IAAD,EAAM,EAAE,CAAC,QAAT,CAAkB,SAAS,CAAC,cAA5B,EACE,4BAAM,SAAS,CAAC,kBAAhB,EADF,CADF,CAIE,8BAAQ,SAAS,CAAC,iBAAlB,oBAJF,CARF,CAeE,yBAAG,SAAS,CAAC,YAAb,EACE,4IADF,CAfF,CADF,CAuBE,oBAAC,SAAD,EAAW,SAAS,CAAE,KAAKS,UAAL,CAAgB,OAAhB,CAAtB,EACE,oBAAC,UAAD,MACE,oBAAC,UAAD,CAAY,KAAZ,MACE,4BAAM,SAAS,CAAC,YAAhB,EADF,CADF,CAIE,oBAAC,WAAD,EACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,OAFd,CAGE,IAAI,CAAC,OAHP,CAIE,KAAK,CAAE,KAAKD,KAAL,CAAWgB,KAJpB,CAKE,QAAQ,CAAE,KAAKX,YALjB,CAME,YAAY,CAAC,KANf,CAOE,UAAU,CAAE,KAAKM,UAPnB,EAJF,CADF,CAeGlB,aAAa,CAAC,KAAKK,KAAL,CAAWwC,qBAAX,CAAiC,OAAjC,CAAD,CAfhB,CAvBF,CAwCE,oBAAC,SAAD,MACE,oBAAC,MAAD,EACE,OAAO,CAAC,SADV,CAEE,SAAS,CAAC,oBAFZ,CAGE,QAAQ,CAAEvB,SAHZ,CAIE,OAAO,CAAE,CAACA,SAAD,CAAa,KAAKD,iBAAlB,CAAsC,IAJjD,EAMGC,SAAS,CAAG,gBAAH,CAAsB,OANlC,CADF,CAxCF,CADF,CADF,CAPG,KADH,CADF,CADA,CADF,CAsED,C,2BAnJyBlC,S,EAsJ5BgB,aAAa,CAAGb,UAAU,CAACC,QAAD,CAAV,CAAqBY,aAArB,CAAhB,CACA,cAAeA,CAAAA,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport { Button, FormGroup, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\n//import HeaderBeforeLogin from './headerBeforeLogin';\r\nimport theRapidHireApiService from '../core/api/apiService';\r\nimport { ZoomInAndOut, renderMessage } from '../commonFunctions';\r\nimport CONSTANTS from '../core/config/appConfig';\r\nimport Sidebar from '../authorization/sideBar';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\n\r\nclass ResetPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      email: ''\r\n    };\r\n\r\n    this.handleButtonState = this.handleButtonState.bind(this);\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        email: 'required|email'\r\n      },\r\n      {\r\n        'required.email': validationMessages.email.required,\r\n        'email.email': validationMessages.email.invalid\r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  submitData = event => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.handleButtonState();\r\n    }\r\n  };\r\n\r\n  handleButtonState() {\r\n    let self = this;\r\n    self.props.validate(function(error) {\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        self.handleSubmit();\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    let self = this;\r\n    let email = self.state.email.toLowerCase().trim();\r\n    theRapidHireApiService('forgotPassword', { email })\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          self.setState({ email: '', isLoading: false });\r\n          setTimeout(() => {\r\n            self.props.history.push('/');\r\n          }, 4000);\r\n        } else {\r\n          self.setState({ isLoading: false });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        self.setState({ isLoading: false });\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <div className=\"wrapper\">        \r\n      <div className=\"main-panel\">     \r\n        <div className=\"login_card\">\r\n           <div className=\"header\">\r\n        <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        />\r\n        <div className=\"formContent\">\r\n          <div className=\"centeredBox p-5\">\r\n            <form className=\"forgotPasswordForm bg-transparent\">\r\n              <FormGroup>\r\n                {/* <legend className=\"color-blue\">\r\n                  <Link to=\"/login\">\r\n                    <span className=\"icon-edit_pencil icon icon-shift\" />\r\n                  </Link>{' '}\r\n                  Forgot Password\r\n                </legend> */}\r\n\r\n                <div className=\"flex align-center mb-1\">\r\n                  <Link to=\"/login\" className=\"md-icon mr-1\">\r\n                    <span className=\"icon-back_arrow2\" />\r\n                  </Link>\r\n                  <legend className=\"color-blue mb-0\">Forgot Password</legend>\r\n                </div>\r\n\r\n                <p className=\"lead mb-50\">\r\n                  <strong>\r\n                    Reset your password by filling in your email address. You\r\n                    will then receive an email with new password.\r\n                  </strong>\r\n                </p>\r\n              </FormGroup>\r\n              <FormGroup className={this.getClasses('email')}>\r\n                <InputGroup>\r\n                  <InputGroup.Addon>\r\n                    <span className=\"icon-email\" />\r\n                  </InputGroup.Addon>\r\n                  <FormControl\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    onKeyPress={this.submitData}\r\n                  />\r\n                </InputGroup>\r\n                {renderMessage(this.props.getValidationMessages('email'))}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button\r\n                  bsStyle=\"primary\"\r\n                  className=\"centeredBtn btn-lg\"\r\n                  disabled={isLoading}\r\n                  onClick={!isLoading ? this.handleButtonState : null}\r\n                >\r\n                  {isLoading ? 'In Progress...' : 'Reset'}\r\n                </Button>\r\n              </FormGroup>\r\n            </form>\r\n          </div>\r\n        </div> </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword = validation(strategy)(ResetPassword);\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}