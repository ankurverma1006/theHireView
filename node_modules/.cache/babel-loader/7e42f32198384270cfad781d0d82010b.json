{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\common\\\\authorization\\\\signUp.js\";\nimport React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { Button, FormGroup, InputGroup, FormControl, Nav, NavItem } from 'react-bootstrap'; // import { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\n\nimport Sidebar from './sideBar';\nimport theRapidHireApiService from '../core/api/apiService';\nimport { ZoomInAndOut, renderMessage, showErrorToast } from '../commonFunctions';\nimport CONSTANTS from '../core/config/appConfig';\nimport moment from 'moment'; //import DatePicker from 'react-datepicker';\n//import DatePicker from '../../assets/react-datepicker';\n\nlet validationMessages = CONSTANTS.validationMessages;\nlet regExpressions = CONSTANTS.regExpressions;\nlet i = 0;\n\nclass Signup extends Component {\n  constructor(props, context) {\n    super(props);\n\n    this.getRoles = () => {\n      theRapidHireApiService('roleType', '').then(response => {\n        if (response.data.status === 'Success') {\n          this.setState({\n            roles: response.data.result\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.submitData = event => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        this.validateData();\n      }\n    };\n\n    this.validateData = () => {\n      let self = this;\n      this.props.validate(function (error) {\n        if (!error) {\n          var email = self.state.email ? self.state.email.toLowerCase().trim() : '';\n          self.setState({\n            isLoading: true\n          });\n          self.handleSubmit();\n        }\n      });\n    };\n\n    this.handleSelect = eventKey => {\n      if (eventKey !== this.state.roleId) {\n        this.setState({\n          firstName: '',\n          lastName: '',\n          email: '',\n          parentEmail: '',\n          parentFirstName: '',\n          parentLastName: '',\n          birthDate: '',\n          month: '',\n          day: '',\n          year: ''\n        });\n      }\n\n      this.setState({\n        roleId: eventKey == 2 ? 2 : 1,\n        eventKey: eventKey\n      });\n      this.props.clearValidations();\n      this.setValidatorTypes(eventKey);\n    };\n\n    this.handleResetForm = () => {\n      this.setState(this.initialState);\n    };\n\n    this.state = {\n      isLoading: false,\n      firstName: '',\n      lastName: '',\n      email: '',\n      parentEmail: '',\n      parentFirstName: '',\n      parentLastName: '',\n      roles: [],\n      roleId: this.props.location.state && this.props.location.state.eventKey && this.props.location.state.eventKey === 2 ? 2 : 1,\n      eventKey: this.props.location.state && this.props.location.state.eventKey && this.props.location.state.eventKey === 2 ? 2 : 3,\n      birthDate: '',\n      isOpen: false,\n      year: '',\n      month: '',\n      day: '',\n      parentField: false,\n      dob: ''\n    };\n    this.initialState = this.state;\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getValidatorData = this.getValidatorData.bind(this);\n    this.getClasses = this.getClasses.bind(this);\n    this.setValidatorTypes = this.setValidatorTypes.bind(this);\n  }\n\n  async componentWillMount() {\n    this.getRoles();\n    this.setValidatorTypes(this.props.location.state && this.props.location.state.eventKey && this.props.location.state.eventKey === 2 ? 2 : 3);\n  }\n\n  componentDidMount() {\n    this.setDatePickerPlaceHolder();\n  }\n\n  setValidatorTypes(type) {\n    let elementObject = {\n      firstName: ['required', 'regex:' + regExpressions.alphaOnly],\n      lastName: ['required', 'regex:' + regExpressions.alphaOnly],\n      email: 'required|email'\n    };\n    let messageObject = {\n      'required.firstName': validationMessages.firstName.required,\n      'regex.firstName': validationMessages.firstName.alphaOnly,\n      'required.lastName': validationMessages.lastName.required,\n      'regex.lastName': validationMessages.lastName.alphaOnly,\n      'required.email': validationMessages.email.required,\n      'email.email': validationMessages.email.invalid\n    };\n\n    if (parseInt(type, 10) === 3) {}\n\n    if (parseInt(type, 10) === 2) {}\n\n    this.validatorTypes = strategy.createSchema(elementObject, messageObject);\n  }\n\n  getValidatorData() {\n    return this.state;\n  }\n\n  getClasses(field) {\n    return classnames({\n      error: !this.props.isValid(field)\n    });\n  }\n\n  setDatePickerPlaceHolder() {\n    try {\n      if (!this.state.birthDate) document.getElementsByName('date')[0].style.visibility = 'visible';else {\n        document.getElementsByName('date')[0].style.visibility = 'hidden';\n      }\n    } catch (error) {}\n  }\n\n  handleSubmit() {\n    console.log('handleSubmit');\n    let firstName = this.state.firstName.trim();\n    let lastName = this.state.lastName.trim();\n    let email = this.state.email.toLowerCase().trim();\n    let roleId = this.state.roleId;\n    let self = this;\n    let data = {\n      firstName,\n      lastName,\n      email,\n      roleId // dob\n\n    };\n    theRapidHireApiService('signupUser', data).then(response => {\n      if (response.data.status === 'Success') {\n        self.handleResetForm();\n        setTimeout(function () {\n          self.props.history.push('/login');\n        }, 5000);\n      } else {\n        self.setState({\n          isLoading: false\n        });\n      }\n    }).catch(err => {\n      self.setState({\n        isLoading: false\n      });\n      console.log(err);\n    });\n  }\n\n  render() {\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"banner-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"formContent forgotPasswordForm bg-transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"centeredBox p-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex align-center mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/login\",\n      className: \"md-icon mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon-back_arrow2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), React.createElement(\"legend\", {\n      className: \"color-blue mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Back To Login\")), React.createElement(Nav, {\n      bsStyle: \"tabs\",\n      activeKey: this.state.eventKey == 2 ? 2 : 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      eventKey: 2,\n      onClick: this.handleSelect.bind(this, '2'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Interviewer SIGN UP\"), React.createElement(NavItem, {\n      eventKey: 3,\n      onClick: this.handleSelect.bind(this, '3'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"User SIGN UP\"), React.createElement(NavItem, {\n      eventKey: 4,\n      onClick: () => this.props.history.push('/hrsignup'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"HR SIGN UP\")), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: this.getClasses('firstName'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(FormControl, {\n      type: \"text\",\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"35\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('firstName'))), React.createElement(FormGroup, {\n      className: this.getClasses('lastName'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(FormControl, {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      value: this.state.lastName,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"35\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('lastName'))), React.createElement(FormGroup, {\n      className: this.getClasses('email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"Email\"), React.createElement(FormControl, {\n      type: \"Email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      onKeyPress: this.submitData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('email'))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bsStyle: \"primary\",\n      className: \"centeredBtn btn-lg\",\n      disabled: isLoading,\n      onClick: !isLoading ? this.validateData : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, isLoading ? 'In Progress...' : 'Sign Up'))))), \" \"), \" \")));\n  }\n\n}\n\nSignup = validation(strategy)(Signup);\nexport default Signup;","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\common\\authorization\\signUp.js"],"names":["React","Component","ToastContainer","validation","strategy","Link","classnames","Button","FormGroup","InputGroup","FormControl","Nav","NavItem","Sidebar","theRapidHireApiService","ZoomInAndOut","renderMessage","showErrorToast","CONSTANTS","moment","validationMessages","regExpressions","i","Signup","constructor","props","context","getRoles","then","response","data","status","setState","roles","result","catch","err","console","log","handleChange","event","target","name","value","submitData","key","preventDefault","validateData","self","validate","error","email","state","toLowerCase","trim","isLoading","handleSubmit","handleSelect","eventKey","roleId","firstName","lastName","parentEmail","parentFirstName","parentLastName","birthDate","month","day","year","clearValidations","setValidatorTypes","handleResetForm","initialState","location","isOpen","parentField","dob","bind","getValidatorData","getClasses","componentWillMount","componentDidMount","setDatePickerPlaceHolder","type","elementObject","alphaOnly","messageObject","required","invalid","parseInt","validatorTypes","createSchema","field","isValid","document","getElementsByName","style","visibility","setTimeout","history","push","render","getValidationMessages"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport { Link } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  InputGroup,\r\n  FormControl,\r\n  Nav,\r\n  NavItem\r\n} from 'react-bootstrap';\r\n// import { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\n\r\nimport Sidebar from './sideBar';\r\nimport theRapidHireApiService from '../core/api/apiService';\r\nimport {\r\n  ZoomInAndOut,\r\n  renderMessage,\r\n  showErrorToast\r\n} from '../commonFunctions';\r\nimport CONSTANTS from '../core/config/appConfig';\r\nimport moment from 'moment';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../assets/react-datepicker';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet i = 0;\r\n\r\nclass Signup extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      parentEmail: '',\r\n      parentFirstName: '',\r\n      parentLastName: '',\r\n      roles: [],\r\n      roleId:\r\n        this.props.location.state &&\r\n        this.props.location.state.eventKey &&\r\n        this.props.location.state.eventKey === 2\r\n          ? 2\r\n          : 1,\r\n      eventKey:\r\n        this.props.location.state &&\r\n        this.props.location.state.eventKey &&\r\n        this.props.location.state.eventKey === 2\r\n          ? 2\r\n          : 3,\r\n      birthDate: '',\r\n      isOpen: false,\r\n      year: '',\r\n      month: '',\r\n      day: '',\r\n      parentField: false,\r\n      dob: ''\r\n    };\r\n\r\n    this.initialState = this.state;\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.setValidatorTypes = this.setValidatorTypes.bind(this);\r\n  }\r\n\r\n  async componentWillMount() {\r\n    this.getRoles();\r\n    this.setValidatorTypes(\r\n      this.props.location.state &&\r\n      this.props.location.state.eventKey &&\r\n      this.props.location.state.eventKey === 2\r\n        ? 2\r\n        : 3\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.setDatePickerPlaceHolder();\r\n  }\r\n\r\n  setValidatorTypes(type) {\r\n    let elementObject = {\r\n      firstName: ['required', 'regex:' + regExpressions.alphaOnly],\r\n      lastName: ['required', 'regex:' + regExpressions.alphaOnly],\r\n      email: 'required|email'\r\n    };\r\n\r\n    let messageObject = {\r\n      'required.firstName': validationMessages.firstName.required,\r\n      'regex.firstName': validationMessages.firstName.alphaOnly,\r\n      'required.lastName': validationMessages.lastName.required,\r\n      'regex.lastName': validationMessages.lastName.alphaOnly,\r\n      'required.email': validationMessages.email.required,\r\n      'email.email': validationMessages.email.invalid\r\n    };\r\n\r\n    if (parseInt(type, 10) === 3) {     \r\n    }\r\n\r\n    if (parseInt(type, 10) === 2) {    \r\n    }\r\n    this.validatorTypes = strategy.createSchema(elementObject, messageObject);\r\n  }\r\n\r\n  getValidatorData() {\r\n    return this.state;\r\n  }\r\n\r\n  getClasses(field) {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  }\r\n\r\n  getRoles = () => {\r\n    theRapidHireApiService('roleType', '')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          this.setState({ roles: response.data.result });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  setDatePickerPlaceHolder() {\r\n    try {\r\n      if (!this.state.birthDate)\r\n        document.getElementsByName('date')[0].style.visibility = 'visible';\r\n      else {\r\n        document.getElementsByName('date')[0].style.visibility = 'hidden';\r\n      }\r\n    } catch (error) {}\r\n  }\r\n\r\n  submitData = event => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.validateData();\r\n    }\r\n  };\r\n\r\n  validateData = () => {\r\n    let self = this;   \r\n    this.props.validate(function(error) {\r\n      if (!error) {\r\n        var email = self.state.email\r\n          ? self.state.email.toLowerCase().trim()\r\n          : '';       \r\n        \r\n          self.setState({ isLoading: true });\r\n          self.handleSubmit();\r\n        }      \r\n    });\r\n  };\r\n \r\n  handleSelect = eventKey => {\r\n    if (eventKey !== this.state.roleId) {\r\n      this.setState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        parentEmail: '',\r\n        parentFirstName: '',\r\n        parentLastName: '',\r\n        birthDate: '',\r\n        month: '',\r\n        day: '',\r\n        year: ''\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      roleId: eventKey == 2 ? 2 : 1,\r\n      eventKey: eventKey\r\n    });\r\n    this.props.clearValidations();\r\n    this.setValidatorTypes(eventKey);\r\n  };\r\n\r\n  handleResetForm = () => {\r\n    this.setState(this.initialState);\r\n  };\r\n\r\n  handleSubmit() {\r\n    console.log('handleSubmit');\r\n    let firstName = this.state.firstName.trim();\r\n    let lastName = this.state.lastName.trim();\r\n    let email = this.state.email.toLowerCase().trim();\r\n    let roleId = this.state.roleId;   \r\n\r\n    let self = this;    \r\n     \r\n      let data = {\r\n        firstName,\r\n        lastName,\r\n        email,      \r\n        roleId\r\n       // dob\r\n      };\r\n\r\n      theRapidHireApiService('signupUser', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {\r\n            self.handleResetForm();\r\n            setTimeout(function() {\r\n              self.props.history.push('/login');\r\n            }, 5000);\r\n          } else {\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          self.setState({ isLoading: false });\r\n          console.log(err);\r\n        });  \r\n\r\n  }\r\n  \r\n\r\n  \r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <div className=\"wrapper\">   \r\n       <div className=\"main-panel\">   \r\n            <div className=\"banner\">\r\n              <div className=\"overlay\"></div>\r\n              <div className=\"banner-content\">\r\n              </div>\r\n            </div> \r\n          </div>        \r\n          <div className=\"\">     \r\n            <div className=\"login_card\">\r\n               <div className=\"header\">\r\n       \r\n        <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        />\r\n        \r\n        <div className=\"formContent forgotPasswordForm bg-transparent\">\r\n          <div className=\"centeredBox p-6\">\r\n          <div className=\"flex align-center mb-1\">\r\n                  <Link to=\"/login\" className=\"md-icon mr-1\">\r\n                    <span className=\"icon-back_arrow2\" />\r\n                  </Link>\r\n                  <legend className=\"color-blue mb-0\">Back To Login</legend>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Nav bsStyle=\"tabs\" activeKey={this.state.eventKey == 2 ? 2 : 3}>            \r\n\r\n              <NavItem eventKey={2} onClick={this.handleSelect.bind(this, '2')}>\r\n              Interviewer SIGN UP\r\n              </NavItem>\r\n\r\n              <NavItem eventKey={3} onClick={this.handleSelect.bind(this, '3')}>\r\n                User SIGN UP\r\n              </NavItem>\r\n              <NavItem\r\n                  eventKey={4}\r\n                  onClick={() => this.props.history.push('/hrsignup')}\r\n                >\r\n                  HR SIGN UP\r\n                </NavItem>\r\n            </Nav>\r\n            <form>\r\n              {/* <div className=\"signupText\">\r\n                Sign up to theRapidHire as\r\n                <ButtonToolbar>\r\n                  <DropdownButton\r\n                    bsSize=\"xsmall\"\r\n                    title={this.state.roleId === 1 ? 'Student' : 'Parent'}\r\n                    id=\"dropdown-size-large\"\r\n                  >\r\n                    {this.state.roles.length > 0\r\n                      ? this.state.roles.map((role, index) => (\r\n                          <MenuItem\r\n                            key={index}\r\n                            eventKey={role.roleTypeId}\r\n                            onSelect={this.handleSelect}\r\n                          >\r\n                            {role.roleName}\r\n                          </MenuItem>\r\n                        ))\r\n                      : ''}\r\n                  </DropdownButton>\r\n                </ButtonToolbar>\r\n              </div> */}\r\n\r\n              <FormGroup className={this.getClasses('firstName')}>\r\n                <label className=\"form-label\">First Name</label>\r\n               \r\n                  {/* <InputGroup.Addon>\r\n                    <span className=\"icon-username\" />\r\n                  </InputGroup.Addon> */}\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"First Name\"\r\n                    name=\"firstName\"\r\n                    value={this.state.firstName}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    maxLength=\"35\"\r\n                  />\r\n               \r\n                {renderMessage(this.props.getValidationMessages('firstName'))}\r\n              </FormGroup>\r\n\r\n              <FormGroup className={this.getClasses('lastName')}>\r\n                <label className=\"form-label\">Last Name</label>\r\n                {/* <InputGroup>\r\n                  <InputGroup.Addon>\r\n                    <span className=\"icon-username\" />\r\n                  </InputGroup.Addon> */}\r\n                  <FormControl\r\n                    type=\"text\"\r\n                    placeholder=\"Last Name\"\r\n                    name=\"lastName\"\r\n                    value={this.state.lastName}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    maxLength=\"35\"\r\n                  />             \r\n                {renderMessage(this.props.getValidationMessages('lastName'))}\r\n              </FormGroup>\r\n\r\n              <FormGroup className={this.getClasses('email')}>\r\n                <label className=\"form-label\">Email</label>              \r\n                  <FormControl\r\n                    type=\"Email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    onKeyPress={this.submitData}\r\n                  />               \r\n                {renderMessage(this.props.getValidationMessages('email'))}\r\n              </FormGroup>\r\n\r\n              {/* {this.state.roleId === 1 ? (\r\n                <FormGroup>\r\n                  <label className=\"form-label\">Date Of Birth</label>\r\n                  <div className=\"dob\">\r\n                    <div className={`form-group ${this.getClasses('year')}`}>\r\n                      <YearPicker\r\n                        id=\"year\"\r\n                        name=\"year\"\r\n                        classes=\"form-control\"\r\n                        defaultValue=\"Year\"\r\n                        start={1970}\r\n                        end={moment().year()}\r\n                        reverse\r\n                        value={this.state.year}\r\n                        onChange={year => this.selectDate('year', year)}\r\n                      />\r\n                      {renderMessage(this.props.getValidationMessages('year'))}\r\n                    </div>\r\n\r\n                    <div className={`form-group ${this.getClasses('month')}`}>\r\n                      <MonthPicker\r\n                        id=\"month\"\r\n                        name=\"month\"\r\n                        classes=\"form-control\"\r\n                        defaultValue=\"Month\"\r\n                        short\r\n                        endYearGiven\r\n                        year={this.state.year}\r\n                        value={this.state.month}\r\n                        onChange={month => this.selectDate('month', month)}\r\n                      />\r\n\r\n                      {renderMessage(this.props.getValidationMessages('month'))}\r\n                    </div>\r\n\r\n                    <div className={`form-group ${this.getClasses('day')}`}>\r\n                      <DayPicker\r\n                        defaultValue=\"Day\"\r\n                        id=\"day\"\r\n                        name=\"day\"\r\n                        classes=\"form-control\"\r\n                        year={this.state.year}\r\n                        month={this.state.month}\r\n                        endYearGiven\r\n                        value={this.state.day}\r\n                        onChange={day => this.selectDate('day', day)}\r\n                      />\r\n                      {renderMessage(this.props.getValidationMessages('day'))}\r\n                    </div>\r\n                  </div>\r\n                  <span\r\n                    className=\"error\"\r\n                    id=\"dateOfBirth\"\r\n                    style={{ display: 'none' }}\r\n                  >\r\n                    Please enter valid date of birth\r\n                  </span>                  \r\n                </FormGroup>\r\n              ) : (\r\n                ''\r\n              )} */}\r\n   \r\n              <FormGroup>\r\n                <Button\r\n                  bsStyle=\"primary\"\r\n                  className=\"centeredBtn btn-lg\"\r\n                  disabled={isLoading}\r\n                  onClick={!isLoading ? this.validateData : null}\r\n                >\r\n                  {isLoading ? 'In Progress...' : 'Sign Up'}\r\n                </Button>\r\n              </FormGroup>\r\n            </form>\r\n          </div>\r\n        </div> </div> </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSignup = validation(strategy)(Signup);\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}