{"ast":null,"code":"var _jsxFileName = \"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/interviewer/profile/timeSlots.js\";\nimport React, { Component } from 'react';\nimport Header from '../header/header';\nimport { Button, Media, Row, Col, FormControl, FormGroup, InputGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { Week, Month, Agenda, TimelineViews, TimelineMonth, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\nimport moment from 'moment';\nimport { extend } from '@syncfusion/ej2-base';\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\"; //import \"@syncfusion/ej2-split-buttons/styles/material.css\";\n\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\"; //import '../node_modules/@syncfusion/ej2/material.css';\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\n\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\"; //import Img from '../../common/cropper/img';\n\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'; //import moment from 'moment';\n\nimport { showErrorToast, ZoomInAndOut } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\n\nclass TimeSlots extends Component {\n  constructor(props) {\n    super(...arguments);\n\n    this.handleChange = date => {\n      console.log(date);\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      startDate: new Date(),\n      timeData: []\n    };\n  }\n\n  componentDidMount() {\n    let user = this.props.otherUser ? this.props.otherUser : this.props.user;\n\n    if (user) {\n      let userId = user.userId;\n      this.setState({\n        userId: userId,\n        user: user\n      });\n      this.getUserProfileData(userId);\n      this.getSlotDetails(userId);\n    }\n  }\n\n  getUserProfileData(userId) {\n    theRapidHireApiService('getUserSkillsById', {\n      userId\n    }).then(response => {\n      if (response.data.status === 'Success') {\n        console.log(response.data);\n        let userProfile = response.data.result[0];\n        this.setState({\n          userProfile: userProfile\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getSlotDetails(userId) {\n    let interviewerId = userId;\n    theRapidHireApiService('getTimeSlotByInterviewer', {\n      interviewerId\n    }).then(response => {\n      if (response.data.status === 'Success') {\n        console.log(response);\n        let timeData = [];\n        response.data.result.forEach(function (item, index) {\n          let launchDate = new Date(item.startTimeStamp);\n          let day = launchDate.getUTCDate();\n          let month = launchDate.getMonth();\n          let year = launchDate.getFullYear();\n          let min = launchDate.getMinutes();\n          let hour = launchDate.getHours();\n          let startDate = new Date(year, month, day, hour, min);\n          launchDate = new Date(item.endTimeStamp);\n          day = launchDate.getUTCDate();\n          month = launchDate.getMonth();\n          year = launchDate.getFullYear();\n          min = launchDate.getMinutes();\n          hour = launchDate.getHours();\n          let endDate = new Date(year, month, day, hour, min);\n          timeData.push({\n            slotId: item.slotId,\n            text: 'Photogenic',\n            userId: item.userId,\n            StartTime: startDate,\n            EndTime: endDate,\n            Color: item.userId ? '#1aaa55' : '#7fa900'\n          });\n        });\n        this.setState({\n          timeData: timeData\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  onPopupOpen(args) {\n    console.log(args);\n\n    if (moment(args.data.StartTime).valueOf() < moment().valueOf()) {\n      args.cancel = true;\n      showErrorToast('Selected time can not be less than current time.');\n      return false;\n    }\n\n    console.log(args.data.StartTime);\n    let self = this;\n    let startDate = new Date(args.data.StartTime);\n    let endDate = new Date(args.data.EndTime);\n    console.log(moment(args.data.StartTime));\n    let data = {\n      slotRegisteredDate: new Date(moment(args.data.StartTime).format(\"DD-MMM-YYYY\")).valueOf(),\n      startTimeStamp: moment(startDate).valueOf(),\n      endTimeStamp: moment(endDate).valueOf(),\n      interviewerId: this.state.userId\n    };\n\n    if (!args.data.slotId) {\n      theRapidHireApiService('createSlot', data).then(response => {\n        if (response.data.status === \"Success\") {\n          self.setState({\n            isLoading: false\n          });\n          self.getSlotDetails(self.state.userId);\n        }\n      }).catch(error => {\n        // self.setState({ isLoading: false });\n        console.log(error);\n      });\n    } else {\n      let slotId = args.data.slotId;\n      console.log(args.data);\n      theRapidHireApiService('deleteTimeSlotByInterviewer', {\n        slotId\n      }).then(response => {\n        if (response.data.status === \"Success\") {\n          self.setState({\n            isLoading: false\n          });\n          self.getSlotDetails(self.state.userId);\n        }\n      }).catch(error => {\n        // self.setState({ isLoading: false });\n        console.log(error);\n      });\n    }\n\n    args.cancel = true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-content main-panel1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.state.userProfile ? React.createElement(ScheduleComponent, {\n      width: \"100%\",\n      height: \"800px\",\n      ref: schedule => this.scheduleObj = schedule,\n      popupOpen: this.onPopupOpen.bind(this),\n      showQuickInfo: false //  eventRendered={this.onEventRendered.bind(this)} selectedDate={new Date(2018, 3, 1)}\n      ,\n      onChange: this.handleChange.bind(this),\n      eventSettings: {\n        dataSource: this.state.timeData\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(ViewsDirective, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(ViewDirective, {\n      option: \"Day\",\n      startHour: \"09:30\",\n      endHour: \"18:00\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(ViewDirective, {\n      option: \"Week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(ViewDirective, {\n      option: \"Agenda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(ResourcesDirective, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(ResourceDirective, {\n      field: \"slotId\",\n      title: \"Slot\",\n      name: \"Slot\",\n      allowMultiple: false,\n      textField: \"text\",\n      dataSource: this.state.timeData,\n      idField: \"id\",\n      colorField: \"Color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(Inject, {\n      services: [Week, Agenda],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"container main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Kindly complete profile first\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nexport default connect(mapStateToProps, null)(TimeSlots);","map":{"version":3,"sources":["/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/interviewer/profile/timeSlots.js"],"names":["React","Component","Header","Button","Media","Row","Col","FormControl","FormGroup","InputGroup","connect","ToastContainer","Week","Month","Agenda","TimelineViews","TimelineMonth","ScheduleComponent","ViewsDirective","ViewDirective","ResourcesDirective","ResourceDirective","Inject","moment","extend","ImageCropper","DownloadLink","DatePickerComponent","TimePickerComponent","showErrorToast","ZoomInAndOut","theRapidHireApiService","CONSTANTS","TimeSlots","constructor","props","arguments","handleChange","date","console","log","setState","startDate","state","isOpen","Date","timeData","componentDidMount","user","otherUser","userId","getUserProfileData","getSlotDetails","then","response","data","status","userProfile","result","catch","err","interviewerId","forEach","item","index","launchDate","startTimeStamp","day","getUTCDate","month","getMonth","year","getFullYear","min","getMinutes","hour","getHours","endTimeStamp","endDate","push","slotId","text","StartTime","EndTime","Color","onPopupOpen","args","valueOf","cancel","self","slotRegisteredDate","format","isLoading","error","render","schedule","scheduleObj","bind","dataSource","mapStateToProps","User","userData","parent","parentData","otherUserInfoData","student","Student"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../header/header';\nimport {\n  Button,\n  Media,\n  Row,\n  Col,\n  FormControl,FormGroup,\n  InputGroup\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport { Week, Month, Agenda,TimelineViews, TimelineMonth, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\n\nimport moment from 'moment';\n\nimport { extend } from '@syncfusion/ej2-base';\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\";\n//import \"@syncfusion/ej2-split-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\n//import '../node_modules/@syncfusion/ej2/material.css';\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\";\n//import Img from '../../common/cropper/img';\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\n//import moment from 'moment';\nimport {\n  showErrorToast ,ZoomInAndOut \n} from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\n\n\nclass TimeSlots extends Component {\n   constructor(props) {\n        super(...arguments);\n    this.state = {      \n      isOpen: false,\n      startDate: new Date(),\n      timeData:[]\n    };   \n    \n  }\n \n  componentDidMount() {  \n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\n    if(user){\n      let userId =user.userId;       \n      this.setState({userId: userId,user:user});\n      this.getUserProfileData(userId);\n      this.getSlotDetails(userId);  \n    }   \n  }\n\n  getUserProfileData(userId){\n    theRapidHireApiService('getUserSkillsById',{userId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response.data);       \n         let userProfile = response.data.result[0];     \n        this.setState({userProfile:userProfile                  \n         });        \n      }\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  } \n\n  getSlotDetails(userId){\n    let interviewerId= userId;\n    theRapidHireApiService('getTimeSlotByInterviewer',{interviewerId})\n    .then(response => {     \n      if (response.data.status === 'Success') {\n        console.log(response);\n        let timeData=  [];\n        response.data.result.forEach(function(item,index){    \n          let launchDate = new Date(item.startTimeStamp);     \n          let day = launchDate.getUTCDate();\n          let month = launchDate.getMonth();\n          let year = launchDate.getFullYear(); \n          let min = launchDate.getMinutes();\n          let hour = launchDate.getHours();\n\n          let startDate= new Date(year,month,day,hour,min);\n\n           launchDate = new Date(item.endTimeStamp);     \n           day = launchDate.getUTCDate();\n           month = launchDate.getMonth();\n           year = launchDate.getFullYear(); \n           min = launchDate.getMinutes();\n           hour = launchDate.getHours();\n\n          let endDate= new Date(year,month,day,hour,min);\n\n          timeData.push({\n              slotId: item.slotId, \n              text: 'Photogenic',     \n              userId:  item.userId,     \n              StartTime: startDate,\n              EndTime: endDate,              \n              Color :item.userId ? '#1aaa55' :'#7fa900'\n            })\n      });\n      this.setState({timeData:timeData});\n      }\n     \n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n \n  handleChange = date => {\n    console.log(date);\n    this.setState({\n      startDate: date\n    });\n  };\n\n  onPopupOpen(args) {\n    console.log(args);   \n\n     if(moment(args.data.StartTime).valueOf() <  moment().valueOf()){\n      args.cancel = true;\n      showErrorToast('Selected time can not be less than current time.');\n      return false;\n     }  \n\n     console.log(args.data.StartTime);\n    let self= this;\n    let startDate= new Date(args.data.StartTime);\n   \n    let endDate= new Date(args.data.EndTime);\n \n     console.log(moment(args.data.StartTime));   \n\n    let data={\n      slotRegisteredDate:new Date(moment(args.data.StartTime).format(\"DD-MMM-YYYY\")).valueOf(),\n      startTimeStamp: moment(startDate).valueOf(),\n      endTimeStamp: moment(endDate).valueOf(),\n      interviewerId: this.state.userId\n    };\n   if(!args.data.slotId){\n      theRapidHireApiService('createSlot', data)\n      .then(response => {\n        if (response.data.status===\"Success\") {      \n            self.setState({ isLoading: false });    \n            self.getSlotDetails(self.state.userId);   \n        } \n      })\n      .catch(error => {\n      // self.setState({ isLoading: false });\n        console.log(error);\n      });\n    }else{\n      let slotId= args.data.slotId\n      console.log(args.data);     \n      \n      theRapidHireApiService('deleteTimeSlotByInterviewer',{slotId})\n      .then(response => {\n        if (response.data.status===\"Success\") {      \n            self.setState({ isLoading: false });    \n            self.getSlotDetails(self.state.userId);   \n        } \n      })\n      .catch(error => {\n      // self.setState({ isLoading: false });\n        console.log(error);\n      });\n    }\n    args.cancel = true;\n}\n\n\n\n \n  render() {\n    return (\n      <div className=\"wrapper\">\n       <ToastContainer\n          autoClose={5000}\n          className=\"custom-toaster-main-cls\"\n          toastClassName=\"custom-toaster-bg\"\n          transition={ZoomInAndOut}\n        /> \n        <Header {...this.props} />     \n          <div className=\"main-panel\">\n           <div className=\"w3-content main-panel1\"> \n           {this.state.userProfile ? \n              <ScheduleComponent width='100%' height='800px' \n                ref={schedule => this.scheduleObj = schedule}\n                popupOpen={this.onPopupOpen.bind(this)} showQuickInfo={false} \n                //  eventRendered={this.onEventRendered.bind(this)} selectedDate={new Date(2018, 3, 1)}\n                onChange={this.handleChange.bind(this)} eventSettings={{ dataSource: this.state.timeData }} \n                >\n                      <ViewsDirective>\n                      <ViewDirective option='Day' startHour='09:30' endHour='18:00' />\n                          <ViewDirective option='Week'/>                \n                          <ViewDirective option='Agenda'/>\n                      </ViewsDirective>\n                      <ResourcesDirective>\n                          <ResourceDirective field='slotId' title='Slot' name='Slot' allowMultiple={false} textField='text' dataSource={this.state.timeData} idField='id' colorField='Color'>\n                          </ResourceDirective>\n                      </ResourcesDirective> \n                      <Inject  services={[Week,Agenda]}/>\n                </ScheduleComponent> :\n                <div className=\"container main\">\n                  Kindly complete profile first\n                  </div>\n             }\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(TimeSlots);\n"]},"metadata":{},"sourceType":"module"}