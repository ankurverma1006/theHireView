{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\videoChat\\\\js\\\\CallWindow.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'proptypes';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport _ from 'lodash';\nimport { Player } from 'video-react'; //import 'video-react/dist/video-react.css'; // import css\n\nclass CallWindow extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onDragStart = (event, taskName) => {\n      console.log('dragstart on div: ', taskName);\n      event.dataTransfer.setData('taskName', taskName);\n    };\n\n    this.onDragOver = event => {\n      event.preventDefault();\n    };\n\n    this.onDrop = (event, cat) => {\n      let taskName = event.dataTransfer.getData('taskName');\n      const saveSkiilTag = this.props.saveSkiilTag;\n      console.log('taskName -- ', taskName);\n      console.log(this.props);\n      this.props.saveSkillTag(taskName);\n      let tasks = this.state.tasks.filter(task => {\n        if (task.taskName == taskName) {\n          task.type = cat;\n        }\n\n        return task;\n      });\n      this.setState(_objectSpread({}, this.state, {\n        tasks\n      }));\n    };\n\n    this.state = {\n      Video: true,\n      Audio: true,\n      Audio: {\n        echoCancellation: true\n      },\n      tasks: [{\n        id: '1',\n        taskName: 'Read book',\n        type: 'inProgress',\n        backgroundColor: 'red'\n      }, {\n        id: '2',\n        taskName: 'Pay bills',\n        type: 'inProgress',\n        backgroundColor: 'green'\n      }, {\n        id: '3',\n        taskName: 'Go to the gym',\n        type: 'Done',\n        backgroundColor: 'blue'\n      }, {\n        id: '4',\n        taskName: 'Play baseball',\n        type: 'Done',\n        backgroundColor: 'green'\n      }],\n      skillTag: []\n    };\n    this.btns = [{\n      type: 'Video',\n      icon: 'fa-video-camera'\n    }, {\n      type: 'Audio',\n      icon: 'fa-microphone'\n    }];\n  }\n\n  componentDidMount() {\n    this.setMediaStream();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('this.props -- ', this.props);\n    const currentConfig = this.props.config; // Initialize when the call started\n\n    if (!currentConfig && nextProps.config) {\n      const config = nextProps.config,\n            mediaDevice = nextProps.mediaDevice;\n\n      _.forEach(config, (conf, type) => mediaDevice.toggle(_.capitalize(type), conf));\n\n      this.setState({\n        Video: config.video,\n        Audio: config.audio\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.setMediaStream();\n  } //   doSomethingBeforeUnload = () => {\n  //     this.props.endCall(true);\n  //     // Do something\n  // }\n  // // Setup the `beforeunload` event listener\n  // setupBeforeUnloadListener = () => {\n  //     window.addEventListener(\"beforeunload\", (ev) => {\n  //         ev.preventDefault();\n  //         return this.doSomethingBeforeUnload();\n  //     });\n  // };\n\n\n  setMediaStream() {\n    const _this$props = this.props,\n          peerSrc = _this$props.peerSrc,\n          localSrc = _this$props.localSrc;\n    if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\n    if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc;\n  }\n  /**\r\n   * Turn on/off a media device\r\n   * @param {String} deviceType - Type of the device eg: Video, Audio\r\n   */\n\n\n  toggleMediaDevice(deviceType) {\n    const mediaDevice = this.props.mediaDevice;\n\n    const deviceState = _.get(this.state, deviceType);\n\n    this.setState({\n      [deviceType]: !deviceState\n    });\n    mediaDevice.toggle(deviceType);\n  }\n\n  renderControlButtons() {\n    const getClass = (icon, type) => classnames(\"btn-action fa \".concat(icon), {\n      disable: !_.get(this.state, type)\n    });\n\n    return this.btns.map(btn => React.createElement(\"button\", {\n      key: \"btn\".concat(btn.type),\n      type: \"button\",\n      className: getClass(btn.icon, btn.type),\n      onClick: () => this.toggleMediaDevice(btn.type),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    var tasks = {\n      inProgress: [],\n      Done: []\n    };\n    let self = this;\n    this.state.tasks.forEach(task => {\n      tasks[task.type].push(React.createElement(\"div\", {\n        key: task.id,\n        onDragStart: event => this.onDragStart(event, task.taskName),\n        draggable: true,\n        className: \"draggable\",\n        style: {\n          backgroundColor: task.bgcolor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, task.taskName));\n    });\n    const _this$props2 = this.props,\n          status = _this$props2.status,\n          endCall = _this$props2.endCall,\n          startCallInterviewer = _this$props2.startCallInterviewer,\n          saveSkiilTag = _this$props2.saveSkiilTag;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames('call-window', status),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"drag-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"To Do List Drag & Drop\"), React.createElement(\"div\", {\n      className: \"inProgress\",\n      onDragOver: event => this.onDragOver(event),\n      onDrop: event => {\n        this.onDrop(event, 'inProgress');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"group-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"In Progress\"), tasks.inProgress), React.createElement(\"div\", {\n      className: \"droppable\",\n      onDragOver: event => this.onDragOver(event),\n      onDrop: event => this.onDrop(event, 'Done'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"group-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Done\"), tasks.Done)), React.createElement(\"video\", {\n      id: \"peerVideo\",\n      ref: el => this.peerVideo = el,\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }), React.createElement(\"video\", {\n      id: \"localVideo\",\n      ref: el => this.localVideo = el,\n      autoPlay: true,\n      muted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"video-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.renderControlButtons(), this.props.user && this.props.user.roleId == 2 ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-action hangup fa fa-phone\",\n      onClick: () => endCall(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }) : null, this.props.user && this.props.user.roleId == 2 ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-action startup fa fa-phone\",\n      onClick: () => startCallInterviewer(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nCallWindow.propTypes = {\n  status: PropTypes.string.isRequired,\n  localSrc: PropTypes.object,\n  // eslint-disable-line\n  peerSrc: PropTypes.object,\n  // eslint-disable-line\n  config: PropTypes.object,\n  // eslint-disable-line\n  mediaDevice: PropTypes.object,\n  // eslint-disable-line\n  endCall: PropTypes.func.isRequired,\n  startCallInterviewer: PropTypes.func.isRequired,\n  saveSkiilTag: PropTypes.func.isRequired\n}; // export default CallWindow;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData\n  };\n};\n\nexport default connect(mapStateToProps, null)(CallWindow);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\videoChat\\js\\CallWindow.js"],"names":["React","Component","PropTypes","connect","classnames","_","Player","CallWindow","constructor","props","context","onDragStart","event","taskName","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","saveSkiilTag","saveSkillTag","tasks","state","filter","task","type","setState","Video","Audio","echoCancellation","id","backgroundColor","skillTag","btns","icon","componentDidMount","setMediaStream","componentWillReceiveProps","nextProps","currentConfig","config","mediaDevice","forEach","conf","toggle","capitalize","video","audio","componentDidUpdate","peerSrc","localSrc","peerVideo","srcObject","localVideo","toggleMediaDevice","deviceType","deviceState","get","renderControlButtons","getClass","disable","map","btn","render","inProgress","Done","self","push","bgcolor","status","endCall","startCallInterviewer","el","user","roleId","propTypes","string","isRequired","object","func","mapStateToProps","User","userData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'proptypes';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport _ from 'lodash';\r\nimport { Player } from 'video-react';\r\n//import 'video-react/dist/video-react.css'; // import css\r\n\r\nclass CallWindow extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      Video: true,\r\n      Audio: true,\r\n      Audio: { echoCancellation: true },\r\n      tasks: [\r\n        {\r\n          id: '1',\r\n          taskName: 'Read book',\r\n          type: 'inProgress',\r\n          backgroundColor: 'red'\r\n        },\r\n        {\r\n          id: '2',\r\n          taskName: 'Pay bills',\r\n          type: 'inProgress',\r\n          backgroundColor: 'green'\r\n        },\r\n        {\r\n          id: '3',\r\n          taskName: 'Go to the gym',\r\n          type: 'Done',\r\n          backgroundColor: 'blue'\r\n        },\r\n        {\r\n          id: '4',\r\n          taskName: 'Play baseball',\r\n          type: 'Done',\r\n          backgroundColor: 'green'\r\n        }\r\n      ],\r\n      skillTag: []\r\n    };\r\n\r\n    this.btns = [\r\n      { type: 'Video', icon: 'fa-video-camera' },\r\n      { type: 'Audio', icon: 'fa-microphone' }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setMediaStream();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log('this.props -- ', this.props);\r\n    const { config: currentConfig } = this.props;\r\n    // Initialize when the call started\r\n    if (!currentConfig && nextProps.config) {\r\n      const { config, mediaDevice } = nextProps;\r\n\r\n      _.forEach(config, (conf, type) =>\r\n        mediaDevice.toggle(_.capitalize(type), conf)\r\n      );\r\n\r\n      this.setState({\r\n        Video: config.video,\r\n        Audio: config.audio\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setMediaStream();\r\n  }\r\n\r\n  //   doSomethingBeforeUnload = () => {\r\n  //     this.props.endCall(true);\r\n  //     // Do something\r\n  // }\r\n\r\n  // // Setup the `beforeunload` event listener\r\n  // setupBeforeUnloadListener = () => {\r\n  //     window.addEventListener(\"beforeunload\", (ev) => {\r\n\r\n  //         ev.preventDefault();\r\n\r\n  //         return this.doSomethingBeforeUnload();\r\n  //     });\r\n  // };\r\n\r\n  setMediaStream() {\r\n    const { peerSrc, localSrc } = this.props;\r\n    if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\r\n    if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc;\r\n  }\r\n\r\n  /**\r\n   * Turn on/off a media device\r\n   * @param {String} deviceType - Type of the device eg: Video, Audio\r\n   */\r\n  toggleMediaDevice(deviceType) {\r\n    const { mediaDevice } = this.props;\r\n    const deviceState = _.get(this.state, deviceType);\r\n    this.setState({ [deviceType]: !deviceState });\r\n    mediaDevice.toggle(deviceType);\r\n  }\r\n\r\n  renderControlButtons() {\r\n    const getClass = (icon, type) =>\r\n      classnames(`btn-action fa ${icon}`, {\r\n        disable: !_.get(this.state, type)\r\n      });\r\n\r\n    return this.btns.map(btn => (\r\n      <button\r\n        key={`btn${btn.type}`}\r\n        type=\"button\"\r\n        className={getClass(btn.icon, btn.type)}\r\n        onClick={() => this.toggleMediaDevice(btn.type)}\r\n      />\r\n    ));\r\n  }\r\n\r\n  onDragStart = (event, taskName) => {\r\n    console.log('dragstart on div: ', taskName);\r\n    event.dataTransfer.setData('taskName', taskName);\r\n  };\r\n  onDragOver = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  onDrop = (event, cat) => {\r\n    let taskName = event.dataTransfer.getData('taskName');\r\n    const { saveSkiilTag } = this.props;\r\n    console.log('taskName -- ', taskName);\r\n    console.log(this.props);\r\n    this.props.saveSkillTag(taskName);\r\n\r\n    let tasks = this.state.tasks.filter(task => {\r\n      if (task.taskName == taskName) {\r\n        task.type = cat;\r\n      }\r\n      return task;\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      tasks\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var tasks = {\r\n      inProgress: [],\r\n      Done: []\r\n    };\r\n    let self = this;\r\n\r\n    this.state.tasks.forEach(task => {\r\n      tasks[task.type].push(\r\n        <div\r\n          key={task.id}\r\n          onDragStart={event => this.onDragStart(event, task.taskName)}\r\n          draggable\r\n          className=\"draggable\"\r\n          style={{ backgroundColor: task.bgcolor }}\r\n        >\r\n          {task.taskName}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    const { status, endCall, startCallInterviewer, saveSkiilTag } = this.props;\r\n    return (\r\n      <div>\r\n        <div className={classnames('call-window', status)}>\r\n          <div className=\"drag-container\">\r\n            <h2 className=\"head\">To Do List Drag & Drop</h2>\r\n            <div\r\n              className=\"inProgress\"\r\n              onDragOver={event => this.onDragOver(event)}\r\n              onDrop={event => {\r\n                this.onDrop(event, 'inProgress');\r\n              }}\r\n            >\r\n              <span className=\"group-header\">In Progress</span>\r\n              {tasks.inProgress}\r\n            </div>\r\n            <div\r\n              className=\"droppable\"\r\n              onDragOver={event => this.onDragOver(event)}\r\n              onDrop={event => this.onDrop(event, 'Done')}\r\n            >\r\n              <span className=\"group-header\">Done</span>\r\n\r\n              {tasks.Done}\r\n            </div>\r\n          </div>\r\n          <video id=\"peerVideo\" ref={el => (this.peerVideo = el)} autoPlay />\r\n          {/* <Player\r\n          ref={player => {\r\n            this.player = player;\r\n          }}\r\n          autoPlay\r\n        >\r\n          <source src={this.state.peerSrc} /></Player>  */}\r\n\r\n          <video\r\n            id=\"localVideo\"\r\n            ref={el => (this.localVideo = el)}\r\n            autoPlay\r\n            muted\r\n          />\r\n\r\n          <div className=\"video-control\">\r\n            {this.renderControlButtons()}\r\n            {this.props.user && this.props.user.roleId == 2 ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-action hangup fa fa-phone\"\r\n                onClick={() => endCall(true)}\r\n              />\r\n            ) : null}\r\n            {this.props.user && this.props.user.roleId == 2 ? (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-action startup fa fa-phone\"\r\n                onClick={() => startCallInterviewer(true)}\r\n              ></button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCallWindow.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  localSrc: PropTypes.object, // eslint-disable-line\r\n  peerSrc: PropTypes.object, // eslint-disable-line\r\n  config: PropTypes.object, // eslint-disable-line\r\n  mediaDevice: PropTypes.object, // eslint-disable-line\r\n  endCall: PropTypes.func.isRequired,\r\n  startCallInterviewer: PropTypes.func.isRequired,\r\n  saveSkiilTag: PropTypes.func.isRequired\r\n};\r\n\r\n// export default CallWindow;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(CallWindow);\r\n"]},"metadata":{},"sourceType":"module"}