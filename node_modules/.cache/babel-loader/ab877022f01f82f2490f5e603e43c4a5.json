{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\videoChat\\\\js\\\\CallWindow.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'proptypes';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport _ from 'lodash'; //import { Player } from 'video-react';\n//import 'video-react/dist/video-react.css'; // import css\n\nclass CallWindow extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onDragStart = (event, taskName) => {\n      console.log('dragstart on div: ', taskName);\n      event.dataTransfer.setData(\"taskName\", taskName);\n    };\n\n    this.onDragOver = event => {\n      event.preventDefault();\n    };\n\n    this.onDrop = (event, cat) => {\n      let taskName = event.dataTransfer.getData(\"taskName\");\n      let tasks = this.state.tasks.filter(task => {\n        if (task.taskName == taskName) {\n          task.type = cat;\n        }\n\n        return task;\n      });\n      this.setState(_objectSpread({}, this.state, {\n        tasks\n      }));\n    };\n\n    this.state = {\n      Video: true,\n      Audio: true,\n      Audio: {\n        echoCancellation: true\n      },\n      tasks: [{\n        id: \"1\",\n        taskName: \"Read book\",\n        type: \"inProgress\",\n        backgroundColor: \"red\"\n      }, {\n        id: \"2\",\n        taskName: \"Pay bills\",\n        type: \"inProgress\",\n        backgroundColor: \"green\"\n      }, {\n        id: \"3\",\n        taskName: \"Go to the gym\",\n        type: \"Done\",\n        backgroundColor: \"blue\"\n      }, {\n        id: \"4\",\n        taskName: \"Play baseball\",\n        type: \"Done\",\n        backgroundColor: \"green\"\n      }]\n    };\n    this.btns = [{\n      type: 'Video',\n      icon: 'fa-video-camera'\n    }, {\n      type: 'Audio',\n      icon: 'fa-microphone'\n    }];\n  }\n\n  componentDidMount() {\n    this.setMediaStream();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const currentConfig = this.props.config; // Initialize when the call started\n\n    if (!currentConfig && nextProps.config) {\n      const config = nextProps.config,\n            mediaDevice = nextProps.mediaDevice;\n\n      _.forEach(config, (conf, type) => mediaDevice.toggle(_.capitalize(type), conf));\n\n      this.setState({\n        Video: config.video,\n        Audio: config.audio\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.setMediaStream();\n  }\n\n  setMediaStream() {\n    const _this$props = this.props,\n          peerSrc = _this$props.peerSrc,\n          localSrc = _this$props.localSrc;\n    if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\n    if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc;\n  }\n  /**\r\n   * Turn on/off a media device\r\n   * @param {String} deviceType - Type of the device eg: Video, Audio\r\n   */\n\n\n  toggleMediaDevice(deviceType) {\n    const mediaDevice = this.props.mediaDevice;\n\n    const deviceState = _.get(this.state, deviceType);\n\n    this.setState({\n      [deviceType]: !deviceState\n    });\n    mediaDevice.toggle(deviceType);\n  }\n\n  renderControlButtons() {\n    const getClass = (icon, type) => classnames(\"btn-action fa \".concat(icon), {\n      disable: !_.get(this.state, type)\n    });\n\n    return this.btns.map(btn => React.createElement(\"button\", {\n      key: \"btn\".concat(btn.type),\n      type: \"button\",\n      className: getClass(btn.icon, btn.type),\n      onClick: () => this.toggleMediaDevice(btn.type),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    var tasks = {\n      inProgress: [],\n      Done: []\n    };\n    this.state.tasks.forEach(task => {\n      tasks[task.type].push(React.createElement(\"div\", {\n        key: task.taskName,\n        className: \"draggable\",\n        style: {\n          backgroundColor: task.bgcolor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, task.taskName));\n    });\n    const _this$props2 = this.props,\n          status = _this$props2.status,\n          endCall = _this$props2.endCall,\n          startCallInterviewer = _this$props2.startCallInterviewer;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames('call-window', status),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inProgress\",\n      onDragOver: event => this.onDragOver(event),\n      onDrop: event => {\n        this.onDrop(event, \"inProgress\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"group-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"In Progress\"), tasks.inProgress), React.createElement(\"div\", {\n      className: \"droppable\",\n      onDragOver: event => this.onDragOver(event),\n      onDrop: event => this.onDrop(event, \"Done\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"group-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Done\"), tasks.Done), React.createElement(\"video\", {\n      id: \"peerVideo\",\n      ref: el => this.peerVideo = el,\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), \" */}\", React.createElement(\"video\", {\n      id: \"localVideo\",\n      ref: el => this.localVideo = el,\n      autoPlay: true,\n      muted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"video-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.renderControlButtons(), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-action hangup fa fa-phone\",\n      onClick: () => endCall(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), this.props.user && this.props.user.roleId == 2 ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-action startup fa fa-phone\",\n      onClick: () => startCallInterviewer(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nCallWindow.propTypes = {\n  status: PropTypes.string.isRequired,\n  localSrc: PropTypes.object,\n  // eslint-disable-line\n  peerSrc: PropTypes.object,\n  // eslint-disable-line\n  config: PropTypes.object,\n  // eslint-disable-line\n  mediaDevice: PropTypes.object,\n  // eslint-disable-line\n  endCall: PropTypes.func.isRequired,\n  startCallInterviewer: PropTypes.func.isRequired\n}; // export default CallWindow;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData\n  };\n};\n\nexport default connect(mapStateToProps, null)(CallWindow);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\videoChat\\js\\CallWindow.js"],"names":["React","Component","PropTypes","connect","classnames","_","CallWindow","constructor","props","context","onDragStart","event","taskName","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","state","filter","task","type","setState","Video","Audio","echoCancellation","id","backgroundColor","btns","icon","componentDidMount","setMediaStream","componentWillReceiveProps","nextProps","currentConfig","config","mediaDevice","forEach","conf","toggle","capitalize","video","audio","componentDidUpdate","peerSrc","localSrc","peerVideo","srcObject","localVideo","toggleMediaDevice","deviceType","deviceState","get","renderControlButtons","getClass","disable","map","btn","render","inProgress","Done","push","bgcolor","status","endCall","startCallInterviewer","el","user","roleId","propTypes","string","isRequired","object","func","mapStateToProps","User","userData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'proptypes';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport _ from 'lodash';\r\n//import { Player } from 'video-react';\r\n//import 'video-react/dist/video-react.css'; // import css\r\n\r\n\r\nclass CallWindow extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      Video: true,\r\n      Audio: true,\r\n      Audio: {echoCancellation:true},\r\n      tasks: [\r\n        {id: \"1\", taskName:\"Read book\",type:\"inProgress\", backgroundColor: \"red\"},\r\n        {id: \"2\", taskName:\"Pay bills\", type:\"inProgress\", backgroundColor:\"green\"},\r\n        {id: \"3\", taskName:\"Go to the gym\", type:\"Done\", backgroundColor:\"blue\"},\r\n        {id: \"4\", taskName:\"Play baseball\", type:\"Done\", backgroundColor:\"green\"}\r\n    ]          \r\n    };\r\n\r\n    this.btns = [\r\n      { type: 'Video', icon: 'fa-video-camera' },\r\n      { type: 'Audio', icon: 'fa-microphone' }\r\n    ];  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.setMediaStream();   \r\n   }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { config: currentConfig } = this.props;\r\n    // Initialize when the call started\r\n    if (!currentConfig && nextProps.config) {\r\n      const { config, mediaDevice } = nextProps;\r\n      _.forEach(config, (conf, type) => mediaDevice.toggle(_.capitalize(type), conf));\r\n\r\n      this.setState({\r\n        Video: config.video,\r\n        Audio: config.audio\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setMediaStream();\r\n  }\r\n \r\n  setMediaStream() {\r\n    const { peerSrc, localSrc } = this.props;\r\n    if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\r\n    if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc; \r\n  }\r\n\r\n  /**\r\n   * Turn on/off a media device\r\n   * @param {String} deviceType - Type of the device eg: Video, Audio\r\n   */\r\n  toggleMediaDevice(deviceType) {\r\n    const { mediaDevice } = this.props;\r\n    const deviceState = _.get(this.state, deviceType);\r\n    this.setState({ [deviceType]: !deviceState });\r\n    mediaDevice.toggle(deviceType);\r\n  }\r\n\r\n  renderControlButtons() {\r\n    const getClass = (icon, type) => classnames(`btn-action fa ${icon}`, {\r\n      disable: !_.get(this.state, type)\r\n    });\r\n\r\n    return this.btns.map(btn => (\r\n      <button\r\n        key={`btn${btn.type}`}\r\n        type=\"button\"\r\n        className={getClass(btn.icon, btn.type)}\r\n        onClick={() => this.toggleMediaDevice(btn.type)}\r\n      />\r\n    ));\r\n  }\r\n\r\n  onDragStart = (event, taskName) => {\r\n    console.log('dragstart on div: ', taskName);\r\n    event.dataTransfer.setData(\"taskName\", taskName);\r\n}\r\nonDragOver = (event) => {\r\n    event.preventDefault();\r\n}\r\n\r\nonDrop = (event, cat) => {\r\n    let taskName = event.dataTransfer.getData(\"taskName\");\r\n\r\n    let tasks = this.state.tasks.filter((task) => {\r\n        if (task.taskName == taskName) {\r\n            task.type = cat;\r\n        }\r\n        return task;\r\n    });\r\n\r\n    this.setState({\r\n        ...this.state,\r\n        tasks\r\n    });\r\n}\r\n\r\n  render() {\r\n    var tasks = {\r\n      inProgress: [],\r\n      Done: []\r\n    }\r\n\r\n    this.state.tasks.forEach ((task) => {\r\n\t\t  tasks[task.type].push(\r\n\t\t    <div key={task.taskName} \r\n\t\t      className=\"draggable\"\r\n\t\t      style = {{backgroundColor: task.bgcolor}}>\r\n\t\t      {task.taskName}\r\n\t\t    </div>\r\n\t\t  );\r\n    });\r\n    \r\n    const { status, endCall,startCallInterviewer } = this.props;\r\n    return (\r\n   <div>  \r\n      <div className={classnames('call-window', status)}>     \r\n      <div className=\"inProgress\"\r\n      onDragOver={(event)=>this.onDragOver(event)}\r\n        onDrop={(event)=>{this.onDrop(event, \"inProgress\")}}>\r\n        <span className=\"group-header\">In Progress</span>\r\n        {tasks.inProgress}\r\n      </div>\r\n      <div className=\"droppable\"\r\n        onDragOver={(event)=>this.onDragOver(event)}\r\n          onDrop={(event)=>this.onDrop(event, \"Done\")}>\r\n        <span className=\"group-header\">Done</span>\r\n        {tasks.Done}\r\n      </div>\r\n      \r\n        <video id=\"peerVideo\" ref={el => this.peerVideo = el} autoPlay /> */}\r\n        {/* <Player\r\n          ref={player => {\r\n            this.player = player;\r\n          }}\r\n          autoPlay\r\n        >\r\n          <source src={this.state.source} /></Player> */}\r\n\r\n        <video id=\"localVideo\" ref={el => this.localVideo = el} autoPlay muted />\r\n        <div className=\"video-control\">\r\n          {this.renderControlButtons()}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-action hangup fa fa-phone\"\r\n            onClick={() => endCall(true)}\r\n          />\r\n    {this.props.user && this.props.user.roleId == 2 ?\r\n           <button\r\n            type=\"button\"\r\n            className=\"btn-action startup fa fa-phone\"\r\n            onClick={() => startCallInterviewer(true)}\r\n          ></button>: null}\r\n        </div> \r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCallWindow.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  localSrc: PropTypes.object, // eslint-disable-line\r\n  peerSrc: PropTypes.object, // eslint-disable-line\r\n  config: PropTypes.object, // eslint-disable-line\r\n  mediaDevice: PropTypes.object, // eslint-disable-line\r\n  endCall: PropTypes.func.isRequired,\r\n  startCallInterviewer: PropTypes.func.isRequired\r\n};\r\n\r\n// export default CallWindow;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(CallWindow);"]},"metadata":{},"sourceType":"module"}