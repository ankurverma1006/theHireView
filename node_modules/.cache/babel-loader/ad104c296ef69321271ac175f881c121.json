{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\common\\\\videoChat\\\\CallWindow.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'proptypes';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport _ from 'lodash';\nimport { Player } from 'video-react'; //import 'video-react/dist/video-react.css'; // import css\n\nclass CallWindow extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onDragStart = (event, taskName) => {\n      console.log('dragstart on div: ', taskName);\n      event.dataTransfer.setData(\"taskName\", taskName);\n    };\n\n    this.onDragOver = event => {\n      event.preventDefault();\n    };\n\n    this.onDrop = (event, cat) => {\n      let taskName = event.dataTransfer.getData(\"taskName\");\n      const saveSkiilTag = this.props.saveSkiilTag;\n      console.log('taskName -- ', taskName);\n      console.log(this.props);\n      this.props.saveSkillTag(taskName);\n      let tasks = this.state.tasks.filter(task => {\n        if (task.taskName == taskName) {\n          task.type = cat;\n        }\n\n        return task;\n      });\n      this.setState(_objectSpread({}, this.state, {\n        tasks\n      }));\n    };\n\n    this.state = {\n      Video: true,\n      Audio: true,\n      Audio: {\n        echoCancellation: true\n      },\n      tasks: [{\n        id: \"1\",\n        taskName: \"Read book\",\n        type: \"inProgress\",\n        backgroundColor: \"red\"\n      }, {\n        id: \"2\",\n        taskName: \"Pay bills\",\n        type: \"inProgress\",\n        backgroundColor: \"green\"\n      }, {\n        id: \"3\",\n        taskName: \"Go to the gym\",\n        type: \"Done\",\n        backgroundColor: \"blue\"\n      }, {\n        id: \"4\",\n        taskName: \"Play baseball\",\n        type: \"Done\",\n        backgroundColor: \"green\"\n      }],\n      skillTag: []\n    };\n    this.btns = [{\n      type: 'Video',\n      icon: 'fa-video-camera'\n    }, {\n      type: 'Audio',\n      icon: 'fa-microphone'\n    }];\n  }\n\n  componentDidMount() {\n    this.setMediaStream();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('this.props -- ', this.props);\n    const currentConfig = this.props.config; // Initialize when the call started\n\n    if (!currentConfig && nextProps.config) {\n      const config = nextProps.config,\n            mediaDevice = nextProps.mediaDevice;\n\n      _.forEach(config, (conf, type) => mediaDevice.toggle(_.capitalize(type), conf));\n\n      this.setState({\n        Video: config.video,\n        Audio: config.audio\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.setMediaStream();\n  } //   doSomethingBeforeUnload = () => {\n  //     this.props.endCall(true);\n  //     // Do something\n  // }\n  // // Setup the `beforeunload` event listener\n  // setupBeforeUnloadListener = () => {\n  //     window.addEventListener(\"beforeunload\", (ev) => {\n  //         ev.preventDefault();\n  //         return this.doSomethingBeforeUnload();\n  //     });\n  // };\n\n\n  setMediaStream() {\n    const _this$props = this.props,\n          peerSrc = _this$props.peerSrc,\n          localSrc = _this$props.localSrc;\n    if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\n    if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc;\n  }\n  /**\r\n   * Turn on/off a media device\r\n   * @param {String} deviceType - Type of the device eg: Video, Audio\r\n   */\n\n\n  toggleMediaDevice(deviceType) {\n    const mediaDevice = this.props.mediaDevice;\n\n    const deviceState = _.get(this.state, deviceType);\n\n    this.setState({\n      [deviceType]: !deviceState\n    });\n    mediaDevice.toggle(deviceType);\n  }\n\n  renderControlButtons() {\n    const getClass = (icon, type) => classnames(\"btn-action fa \".concat(icon), {\n      disable: !_.get(this.state, type)\n    });\n\n    return this.btns.map(btn => React.createElement(\"button\", {\n      key: \"btn\".concat(btn.type),\n      type: \"button\",\n      className: getClass(btn.icon, btn.type),\n      onClick: () => this.toggleMediaDevice(btn.type),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    var tasks = {\n      inProgress: [],\n      Done: []\n    };\n    let self = this;\n    this.state.tasks.forEach(task => {\n      tasks[task.type].push(React.createElement(\"div\", {\n        key: task.id,\n        onDragStart: event => this.onDragStart(event, task.taskName),\n        draggable: true,\n        className: \"draggable\",\n        style: {\n          backgroundColor: task.bgcolor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, task.taskName));\n    });\n    const _this$props2 = this.props,\n          status = _this$props2.status,\n          endCall = _this$props2.endCall,\n          startCallInterviewer = _this$props2.startCallInterviewer,\n          saveSkiilTag = _this$props2.saveSkiilTag;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classnames('call-window', status),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.props.user && this.props.user.roleId == 2 ? React.createElement(\"div\", {\n      className: \"drag-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"To Do List Drag & Drop\"), React.createElement(\"div\", {\n      className: \"inProgress\",\n      onDragOver: event => this.onDragOver(event),\n      onDrop: event => {\n        this.onDrop(event, \"inProgress\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"group-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"In Progress\"), tasks.inProgress), React.createElement(\"div\", {\n      className: \"droppable\",\n      onDragOver: event => this.onDragOver(event),\n      onDrop: event => this.onDrop(event, \"Done\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"group-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Done\"), tasks.Done)) : null, React.createElement(\"video\", {\n      id: \"peerVideo\",\n      ref: el => this.peerVideo = el,\n      autoPlay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"video\", {\n      id: \"localVideo\",\n      ref: el => this.localVideo = el,\n      autoPlay: true,\n      muted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"video-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.renderControlButtons(), this.props.user && this.props.user.roleId == 2 ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-action hangup fa fa-phone\",\n      onClick: () => endCall(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }) : null, this.props.user && this.props.user.roleId == 2 ? React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-action startup fa fa-phone\",\n      onClick: () => startCallInterviewer(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }) : null)));\n  }\n\n}\n\nCallWindow.propTypes = {\n  status: PropTypes.string.isRequired,\n  localSrc: PropTypes.object,\n  // eslint-disable-line\n  peerSrc: PropTypes.object,\n  // eslint-disable-line\n  config: PropTypes.object,\n  // eslint-disable-line\n  mediaDevice: PropTypes.object,\n  // eslint-disable-line\n  endCall: PropTypes.func.isRequired,\n  startCallInterviewer: PropTypes.func.isRequired,\n  saveSkiilTag: PropTypes.func.isRequired\n}; // export default CallWindow;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData\n  };\n};\n\nexport default connect(mapStateToProps, null)(CallWindow);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\common\\videoChat\\CallWindow.js"],"names":["React","Component","PropTypes","connect","classnames","_","Player","CallWindow","constructor","props","context","onDragStart","event","taskName","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","saveSkiilTag","saveSkillTag","tasks","state","filter","task","type","setState","Video","Audio","echoCancellation","id","backgroundColor","skillTag","btns","icon","componentDidMount","setMediaStream","componentWillReceiveProps","nextProps","currentConfig","config","mediaDevice","forEach","conf","toggle","capitalize","video","audio","componentDidUpdate","peerSrc","localSrc","peerVideo","srcObject","localVideo","toggleMediaDevice","deviceType","deviceState","get","renderControlButtons","getClass","disable","map","btn","render","inProgress","Done","self","push","bgcolor","status","endCall","startCallInterviewer","user","roleId","el","propTypes","string","isRequired","object","func","mapStateToProps","User","userData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'proptypes';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport _ from 'lodash';\r\nimport { Player } from 'video-react';\r\n//import 'video-react/dist/video-react.css'; // import css\r\n\r\n\r\nclass CallWindow extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      Video: true,\r\n      Audio: true,\r\n      Audio: {echoCancellation:true},\r\n      tasks: [\r\n        {id: \"1\", taskName:\"Read book\",type:\"inProgress\", backgroundColor: \"red\"},\r\n        {id: \"2\", taskName:\"Pay bills\", type:\"inProgress\", backgroundColor:\"green\"},\r\n        {id: \"3\", taskName:\"Go to the gym\", type:\"Done\", backgroundColor:\"blue\"},\r\n        {id: \"4\", taskName:\"Play baseball\", type:\"Done\", backgroundColor:\"green\"}\r\n    ],\r\n     skillTag:[]          \r\n    };\r\n\r\n    this.btns = [\r\n      { type: 'Video', icon: 'fa-video-camera' },\r\n      { type: 'Audio', icon: 'fa-microphone' }\r\n    ];  \r\n  }\r\n\r\n  componentDidMount() {  \r\n    this.setMediaStream();   \r\n    \r\n   }\r\n\r\n\r\n\r\n  \r\n  componentWillReceiveProps(nextProps) {\r\n    console.log( 'this.props -- ',this.props );\r\n    const { config: currentConfig } = this.props;\r\n    // Initialize when the call started\r\n    if (!currentConfig && nextProps.config) {\r\n      const { config, mediaDevice } = nextProps;\r\n      \r\n      _.forEach(config, (conf, type) => mediaDevice.toggle(_.capitalize(type), conf));\r\n\r\n      this.setState({\r\n        Video: config.video,\r\n        Audio: config.audio\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.setMediaStream();\r\n \r\n  }\r\n\r\n//   doSomethingBeforeUnload = () => {\r\n//     this.props.endCall(true);\r\n//     // Do something\r\n// }\r\n\r\n// // Setup the `beforeunload` event listener\r\n// setupBeforeUnloadListener = () => {\r\n//     window.addEventListener(\"beforeunload\", (ev) => {\r\n    \r\n//         ev.preventDefault();\r\n      \r\n//         return this.doSomethingBeforeUnload();\r\n//     });\r\n// };\r\n \r\n  setMediaStream() {  \r\n      const { peerSrc, localSrc } = this.props;\r\n      if (this.peerVideo && peerSrc) this.peerVideo.srcObject = peerSrc;\r\n      if (this.localVideo && localSrc) this.localVideo.srcObject = localSrc;      \r\n  }\r\n\r\n  /**\r\n   * Turn on/off a media device\r\n   * @param {String} deviceType - Type of the device eg: Video, Audio\r\n   */\r\n  toggleMediaDevice(deviceType) {\r\n    const { mediaDevice } = this.props;\r\n    const deviceState = _.get(this.state, deviceType);\r\n    this.setState({ [deviceType]: !deviceState });\r\n    mediaDevice.toggle(deviceType);\r\n  }\r\n\r\n  renderControlButtons() {\r\n    const getClass = (icon, type) => classnames(`btn-action fa ${icon}`, {\r\n      disable: !_.get(this.state, type)\r\n    });\r\n\r\n    return this.btns.map(btn => (\r\n      <button\r\n        key={`btn${btn.type}`}\r\n        type=\"button\"\r\n        className={getClass(btn.icon, btn.type)}\r\n        onClick={() => this.toggleMediaDevice(btn.type)}\r\n      />\r\n    ));\r\n  }\r\n\r\n  onDragStart = (event, taskName) => {\r\n    console.log('dragstart on div: ', taskName);\r\n    event.dataTransfer.setData(\"taskName\", taskName);\r\n}\r\nonDragOver = (event) => {\r\n    event.preventDefault();\r\n}\r\n\r\nonDrop = (event, cat) => {\r\n    let taskName = event.dataTransfer.getData(\"taskName\");\r\n    const { saveSkiilTag } = this.props;\r\n    console.log('taskName -- ',taskName);\r\n    console.log(this.props);\r\n    this.props.saveSkillTag(taskName);\r\n\r\n    let tasks = this.state.tasks.filter((task) => {\r\n        if (task.taskName == taskName) {\r\n            task.type = cat;\r\n        }\r\n        return task;\r\n    });\r\n\r\n    this.setState({\r\n        ...this.state,\r\n        tasks\r\n    });\r\n}\r\n\r\n  render() {\r\n    var tasks = {\r\n      inProgress: [],\r\n      Done: []\r\n    }\r\n    let self= this;\r\n\r\n  this.state.tasks.forEach ((task) => {\r\n    tasks[task.type].push(\r\n      <div key={task.id} \r\n      onDragStart = {(event) => this.onDragStart(event, task.taskName)}\r\n        draggable\r\n        className=\"draggable\"\r\n        style = {{backgroundColor: task.bgcolor}}>\r\n        {task.taskName}\r\n      </div>\r\n    );\r\n  });\r\n\r\n    \r\n    const { status, endCall,startCallInterviewer,saveSkiilTag } = this.props;\r\n    return (\r\n   <div>      \r\n      <div className={classnames('call-window', status)}>     \r\n    \r\n      {this.props.user && this.props.user.roleId == 2 ? \r\n       <div className=\"drag-container\">\r\n \t        <h2 className=\"head\">To Do List Drag & Drop</h2>\r\n \t\t    <div className=\"inProgress\"\r\n\t    \t\tonDragOver={(event)=>this.onDragOver(event)}\r\n      \t\t\tonDrop={(event)=>{this.onDrop(event, \"inProgress\")}}>\r\n\t          <span className=\"group-header\">In Progress</span>\r\n\t          {tasks.inProgress}\r\n\t        </div>\r\n\t        <div className=\"droppable\"\r\n\t        \tonDragOver={(event)=>this.onDragOver(event)}\r\n          \t\tonDrop={(event)=>this.onDrop(event, \"Done\")}>\r\n\t          <span className=\"group-header\">Done</span>\r\n           \r\n\t          {tasks.Done}\r\n\t        </div>\t        \r\n\t      </div>  : null}    \r\n        <video id=\"peerVideo\" ref={el => this.peerVideo = el} autoPlay />\r\n        {/* <Player\r\n          ref={player => {\r\n            this.player = player;\r\n          }}\r\n          autoPlay\r\n        >\r\n          <source src={this.state.peerSrc} /></Player>  */}\r\n\r\n        <video id=\"localVideo\" ref={el => this.localVideo = el} autoPlay muted />\r\n       \r\n        <div className=\"video-control\">\r\n          {this.renderControlButtons()}\r\n          {this.props.user && this.props.user.roleId == 2 ?    <button\r\n            type=\"button\"\r\n            className=\"btn-action hangup fa fa-phone\"\r\n            onClick={() => endCall(true)}\r\n          />   : null}    \r\n    {this.props.user && this.props.user.roleId == 2 ?\r\n           <button\r\n            type=\"button\"\r\n            className=\"btn-action startup fa fa-phone\"\r\n            onClick={() => startCallInterviewer(true)}\r\n          ></button>: null}\r\n        </div> \r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCallWindow.propTypes = {\r\n  status: PropTypes.string.isRequired,\r\n  localSrc: PropTypes.object, // eslint-disable-line\r\n  peerSrc: PropTypes.object, // eslint-disable-line\r\n  config: PropTypes.object, // eslint-disable-line\r\n  mediaDevice: PropTypes.object, // eslint-disable-line\r\n  endCall: PropTypes.func.isRequired,\r\n  startCallInterviewer: PropTypes.func.isRequired,\r\n  saveSkiilTag: PropTypes.func.isRequired\r\n};\r\n\r\n// export default CallWindow;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(CallWindow);"]},"metadata":{},"sourceType":"module"}