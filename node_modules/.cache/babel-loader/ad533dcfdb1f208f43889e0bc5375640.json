{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\recruiter\\\\jobDescription\\\\showVideo.js\";\nimport React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Portal } from 'react-overlays';\nimport { Button, Modal, Form, FormGroup, Checkbox, Col, ControlLabel, FormControl, InputGroup, Radio } from 'react-bootstrap';\nimport Header from '../header/header';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.css';\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date'; //import DatePicker from 'react-datepicker';\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionGetStudentList } from '../../common/core/redux/actions';\nimport { actionSetStudentAsUser } from '../../common/core/redux/actions';\nimport moment from 'moment';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport classnames from 'classnames';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport _ from 'lodash';\nimport VideoPlayer from 'react-video-js-player';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport { renderMessage, isValidURL, ZoomInAndOut, generateTimestamp } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService'; //import MediaList from '../mediaList';\n\nlet validationMessages = CONSTANTS.validationMessages;\nlet regExpressions = CONSTANTS.regExpressions;\nlet badgeImgArray = [];\nlet badgeImgPreview = [];\nlet certificateImgArray = [];\nlet certificateImgPreview = [];\nlet mediaImgArray = [];\nlet mediaImgPreview = [];\nconst emptyToDate = '10000000';\n\nclass ShowVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closeShowVideoModal = status => {\n      this.setState({\n        showVideoModal: false\n      });\n      this.props.closeShowVideoComponent();\n    };\n\n    this.state = {\n      // video: {\n      //     src: this.props.chatLink,\n      //     poster: \"http://www.example.com/path/to/video_poster.jpg\"         \n      // }, \n      showVideoModal: true\n    };\n  }\n\n  componentWillMount() {\n    console.log(typeof this.props.chatLink);\n    console.log(this.props.userId);\n    let videoLink = this.props.chatLink;\n    this.setState({\n      chatLink: this.props.chatLink\n    });\n  }\n\n  onPlayerReady(player) {\n    console.log(\"Player is ready: \", player);\n    this.player = player;\n  }\n\n  onVideoPlay(duration) {\n    console.log(\"Video played at: \", duration);\n  }\n\n  onVideoPause(duration) {\n    console.log(\"Video paused at: \", duration);\n  }\n\n  onVideoTimeUpdate(duration) {\n    console.log(\"Time updated: \", duration);\n  }\n\n  onVideoSeeking(duration) {\n    console.log(\"Video seeking: \", duration);\n  }\n\n  onVideoSeeked(from, to) {\n    console.log(\"Video seeked from \".concat(from, \" to \").concat(to));\n  }\n\n  onVideoEnd() {\n    console.log(\"Video ended\");\n  }\n\n  render() {\n    let self = this;\n    const isLoading = this.state.isLoading;\n    console.log(self.props.chatLink);\n    return React.createElement(Modal, {\n      bsSize: \"large\",\n      show: this.state.showVideoModal,\n      onHide: this.closeShowVideoModal.bind(this, 'close'),\n      backdrop: \"static\",\n      keyboard: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Video\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, this.state.chatLink ? React.createElement(VideoPlayer, {\n      controls: true,\n      src: this.state.chatLink // poster={this.state.video.poster}\n      ,\n      width: \"720\",\n      height: \"420\",\n      type: \"video/webm\",\n      onReady: this.onPlayerReady.bind(this),\n      onPlay: this.onVideoPlay.bind(this),\n      onPause: this.onVideoPause.bind(this),\n      onTimeUpdate: this.onVideoTimeUpdate.bind(this),\n      onSeeking: this.onVideoSeeking.bind(this),\n      onSeeked: this.onVideoSeeked.bind(this),\n      onEnd: this.onVideoEnd.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }) : \"Video is not available\"), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }));\n  }\n\n}\n\nShowVideo = validation(strategy)(ShowVideo);\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    actionGetStudentList,\n    actionSetStudentAsUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowVideo);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\recruiter\\jobDescription\\showVideo.js"],"names":["React","Component","ToastContainer","Portal","Button","Modal","Form","FormGroup","Checkbox","Col","ControlLabel","FormControl","InputGroup","Radio","Header","Select","YearPicker","MonthPicker","DayPicker","connect","bindActionCreators","actionGetStudentList","actionSetStudentAsUser","moment","validation","strategy","classnames","ImageCropper","achievementDefaultImage","_","VideoPlayer","CONSTANTS","renderMessage","isValidURL","ZoomInAndOut","generateTimestamp","theRapidHireApiService","validationMessages","regExpressions","badgeImgArray","badgeImgPreview","certificateImgArray","certificateImgPreview","mediaImgArray","mediaImgPreview","emptyToDate","ShowVideo","constructor","props","closeShowVideoModal","status","setState","showVideoModal","closeShowVideoComponent","state","componentWillMount","console","log","chatLink","userId","videoLink","onPlayerReady","player","onVideoPlay","duration","onVideoPause","onVideoTimeUpdate","onVideoSeeking","onVideoSeeked","from","to","onVideoEnd","render","self","isLoading","bind","mapStateToProps","user","User","userData","parent","parentData","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\nimport Header from '../header/header';\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionGetStudentList } from '../../common/core/redux/actions';\r\nimport { actionSetStudentAsUser } from '../../common/core/redux/actions';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\nimport VideoPlayer from 'react-video-js-player';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass ShowVideo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {   \r\n        // video: {\r\n        //     src: this.props.chatLink,\r\n        //     poster: \"http://www.example.com/path/to/video_poster.jpg\"         \r\n        // }, \r\n        showVideoModal:true\r\n    }; \r\n  }\r\n\r\n  componentWillMount() {   \r\n      console.log(typeof(this.props.chatLink));\r\n      console.log(this.props.userId);\r\n     let videoLink = this.props.chatLink;   \r\n     this.setState({chatLink:this.props.chatLink });\r\n  }\r\n\r\n\r\nonPlayerReady(player){\r\n    console.log(\"Player is ready: \", player);\r\n    this.player = player;\r\n}\r\n\r\nonVideoPlay(duration){\r\n    console.log(\"Video played at: \", duration);\r\n}\r\n\r\nonVideoPause(duration){\r\n    console.log(\"Video paused at: \", duration);\r\n}\r\n\r\nonVideoTimeUpdate(duration){\r\n    console.log(\"Time updated: \", duration);\r\n}\r\n\r\nonVideoSeeking(duration){\r\n    console.log(\"Video seeking: \", duration);\r\n}\r\n\r\nonVideoSeeked(from, to){\r\n    console.log(`Video seeked from ${from} to ${to}`);\r\n}\r\n\r\nonVideoEnd(){\r\n    console.log(\"Video ended\");\r\n}\r\n\r\n\r\n\r\n\r\n  closeShowVideoModal = status => {   \r\n    this.setState({\r\n      showVideoModal: false\r\n      \r\n    });   \r\n    this.props.closeShowVideoComponent();\r\n  };\r\n\r\n  render() {\r\n    let self = this;\r\n    const { isLoading } = this.state;  \r\n     console.log(self.props.chatLink);\r\n  \r\n    return (\r\n      <Modal\r\n      bsSize=\"large\"\r\n      show={this.state.showVideoModal}\r\n      onHide={this.closeShowVideoModal.bind(this, 'close')}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n    >\r\n      <ToastContainer\r\n        autoClose={5000}\r\n        className=\"custom-toaster-main-cls\"\r\n        toastClassName=\"custom-toaster-bg\"\r\n        transition={ZoomInAndOut}\r\n      />\r\n      <Modal.Header closeButton>\r\n        <Modal.Title className=\"subtitle text-center\">\r\n         Video           \r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n         {this.state.chatLink ?     <VideoPlayer\r\n                        controls={true}\r\n                        src={this.state.chatLink}\r\n                       // poster={this.state.video.poster}\r\n                        width=\"720\"\r\n                        height=\"420\"\r\n                        type=\"video/webm\" \r\n                        onReady={this.onPlayerReady.bind(this)}\r\n                        onPlay={this.onVideoPlay.bind(this)}\r\n                        onPause={this.onVideoPause.bind(this)}\r\n                        onTimeUpdate={this.onVideoTimeUpdate.bind(this)}\r\n                        onSeeking={this.onVideoSeeking.bind(this)}\r\n                        onSeeked={this.onVideoSeeked.bind(this)}\r\n                        onEnd={this.onVideoEnd.bind(this)}\r\n                    /> : \"Video is not available\"}   \r\n              </Modal.Body>\r\n          <Modal.Footer>\r\n       \r\n           \r\n           </Modal.Footer>\r\n           </Modal>          \r\n            \r\n     \r\n    );\r\n  }\r\n}\r\nShowVideo = validation(strategy)(ShowVideo);\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    { actionGetStudentList, actionSetStudentAsUser },\r\n    dispatch\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShowVideo);\r\n"]},"metadata":{},"sourceType":"module"}