{"ast":null,"code":"var _jsxFileName = \"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/interviewer/profile/addProject.js\";\nimport React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Portal } from 'react-overlays';\nimport { Button, Modal, Form, FormGroup, Checkbox, Col, ControlLabel, FormControl, InputGroup, Radio } from 'react-bootstrap';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.css';\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\nimport { connect } from 'react-redux';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport classnames from 'classnames';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport { renderMessage, isValidURL, ZoomInAndOut, generateTimestamp, showErrorToast } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService'; //import MediaList from '../mediaList';\n\nlet validationMessages = CONSTANTS.validationMessages;\nlet regExpressions = CONSTANTS.regExpressions;\nlet badgeImgArray = [];\nlet badgeImgPreview = [];\nlet certificateImgArray = [];\nlet certificateImgPreview = [];\nlet mediaImgArray = [];\nlet mediaImgPreview = [];\nconst emptyToDate = '10000000';\n\nclass addProject extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValidatorData = () => {\n      return this.state;\n    };\n\n    this.getClasses = field => {\n      return classnames({\n        error: !this.props.isValid(field)\n      });\n    };\n\n    this.setProjectData = data => {\n      let startDay = '',\n          startMonth = '',\n          startYear = '',\n          endDay = '',\n          endMonth = '',\n          endYear = '',\n          todaysDate = '';\n\n      if (data) {\n        if (data.startDate) {\n          startDay = moment(data.startDate).format('D');\n          startMonth = Number(moment(data.startDate).format('M')) - 1;\n          startYear = moment(data.startDate).format('YYYY');\n        }\n\n        if (data.endDate) {\n          endDay = moment(data.endDate).format('D');\n          endMonth = Number(moment(data.endDate).format('M')) - 1;\n          endYear = moment(data.endDate).format('YYYY');\n        } else {\n          todaysDate = '';\n        }\n\n        this.setState({\n          userId: data.userId,\n          projectName: data.projectName,\n          projectURL: data.projectURL,\n          associatedWith: data.associatedWith,\n          projectFinished: data.projectFinished,\n          description: data.description,\n          projectId: data.projectId,\n          startDay: startDay,\n          startMonth: startMonth,\n          startYear: startYear,\n          endDay: endDay,\n          endMonth: endMonth,\n          endYear: endYear,\n          //startDate: moment(data.fromDate),\n          // endDate: data.toDate ? moment(data.toDate) : emptyToDate,   \n          todaysDate: data.toDate ? false : true\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeStart = startDate => {\n      this.handleDateChange({\n        startDate\n      });\n    };\n\n    this.handleChangeEnd = endDate => {\n      this.handleDateChange({\n        endDate\n      });\n    };\n\n    this.handleDateChange = ({\n      startDate,\n      endDate\n    }) => {\n      startDate = startDate || this.state.startDate;\n      endDate = endDate || this.state.endDate;\n\n      if (startDate && endDate) {\n        if (startDate.isAfter(endDate)) {\n          endDate = startDate;\n        }\n      }\n\n      this.setState({\n        startDate,\n        endDate\n      });\n    };\n\n    this.validateData = () => {\n      let self = this;\n      let today = new Date();\n      this.props.validate(function (error) {\n        if (!error) {\n          if (self.state.fromDate && self.state.fromDate > today && self.state.toDate && self.state.toDate > today) {\n            showErrorToast('\"From\" and \"To\" date should be less than future date');\n            self.setState({\n              startYear: '',\n              startMonth: '',\n              startDay: '',\n              endYear: '',\n              endMonth: '',\n              endDay: ''\n            });\n          } else if (self.state.fromDate && self.state.fromDate > today) {\n            showErrorToast('\"From\" date should be less than future date');\n            self.setState({\n              startYear: '',\n              startMonth: '',\n              startDay: ''\n            });\n          } else if (self.state.toDate && self.state.toDate > today) {\n            showErrorToast('\"To\" date should be less than future date');\n            self.setState({\n              endYear: '',\n              endMonth: '',\n              endDay: ''\n            });\n          } else if (self.state.fromDate !== '' && self.state.toDate !== '' && self.state.fromDate > self.state.toDate) {\n            showErrorToast('The \"to\" date should be greater than or equal to \"from\" date');\n            self.setState({\n              endYear: '',\n              endMonth: '',\n              endDay: ''\n            });\n          } else {\n            self.setState({\n              isLoading: true\n            });\n            self.handleSubmit();\n          }\n        }\n      });\n    };\n\n    this.selectStartDate = (type, value) => {\n      if (type === 'startYear') {\n        this.setState({\n          startYear: value\n        }, () => this.selectDateChange());\n      }\n\n      if (type === 'startMonth') {\n        this.setState({\n          startMonth: value\n        }, () => this.selectDateChange());\n      }\n\n      if (type === 'startDay') {\n        this.setState({\n          startDay: 1\n        }, () => this.selectDateChange());\n      }\n    };\n\n    this.selectEndDate = (type, value) => {\n      if (type === 'endYear') {\n        this.setState({\n          endYear: value\n        }, () => this.selectDateChange());\n      }\n\n      if (type === 'endMonth') {\n        this.setState({\n          endMonth: value\n        }, () => this.selectDateChange());\n      } // if (type === 'endDay') {\n      //   this.setState({ endDay: 1 }, () => this.selectDateChange());\n      // }\n\n    };\n\n    this.selectDateChange = () => {\n      let fromDate = '';\n      let toDate = '';\n      let startDay = 1,\n          startYear = '',\n          startMonth = '',\n          endDay = 1,\n          endMonth = '',\n          endYear = '';\n\n      if (this.state.startYear && this.state.startMonth) {\n        startDay = 1;\n        startMonth = this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\n        startYear = this.state.startYear !== '' ? this.state.startYear : '';\n        fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\n      }\n\n      if (this.state.endYear && this.state.endMonth) {\n        endDay = 1;\n        endMonth = this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\n        endYear = this.state.endYear !== '' ? this.state.endYear : '';\n        toDate = moment(endYear + '-' + endMonth + '-' + endDay);\n      }\n\n      if (toDate && fromDate) {\n        if (fromDate.isAfter(toDate)) {\n          this.setState({\n            endDay: startDay,\n            endMonth: startMonth - 1,\n            endYear: startYear,\n            fromDate,\n            toDate\n          });\n        } else {\n          this.setState({\n            fromDate,\n            toDate\n          });\n        }\n      }\n    };\n\n    this.currentCheckBox = event => {\n      if (event.target.checked) {\n        this.setState({\n          todaysDate: true,\n          endDate: emptyToDate,\n          endDay: '',\n          endMonth: '',\n          endYear: '',\n          projectFinished: true\n        });\n      } else {\n        this.setState({\n          todaysDate: false,\n          endYear: moment().format('YYYY'),\n          endMonth: moment().format('M') - 1,\n          endDay: moment().format('D'),\n          projectFinished: false\n        });\n      } // let endDate = null;\n      // if (!todaysDate) endDate = emptyToDate;\n      // else endDate = '';\n      // this.setState({ todaysDate: !todaysDate, endDate: endDate });\n\n    };\n\n    this.closeProjectModal = status => {\n      this.setState({\n        projectModal: false\n      });\n      this.props.closeProjectComponent();\n    };\n\n    this.state = {\n      isLoading: false,\n      startDate: '',\n      endDate: '',\n      promptRecommendation: false,\n      userId: '',\n      todaysDate: false,\n      startYear: moment().format('YYYY'),\n      startMonth: moment().format('M') - 1,\n      startDay: moment().format('D'),\n      endYear: moment().format('YYYY'),\n      endMonth: moment().format('M') - 1,\n      endDay: moment().format('D'),\n      lwdYear: moment().format('YYYY'),\n      lwdMonth: moment().format('M') - 1,\n      lwdDay: moment().format('D'),\n      designation: '',\n      organisation: '',\n      projectModal: true,\n      projectId: '',\n      associateList: []\n    };\n    this.getValidatorData = this.getValidatorData.bind(this);\n    this.getClasses = this.getClasses.bind(this);\n    this.validatorTypes = strategy.createSchema({\n      projectName: 'required'\n    }, {\n      'required.projectName': validationMessages.projectName.required\n    });\n  }\n\n  componentDidMount() {\n    let userId = null;\n\n    if (this.props.user) {\n      userId = this.props.user.userId;\n      this.setState({\n        userId: userId\n      });\n    }\n\n    this.setProjectData(this.props.projectDetail);\n    this.getAssociatedListData(userId);\n  }\n\n  getAssociatedListData(userId) {\n    theRapidHireApiService('getAssociatedListDataByUserId', {\n      userId\n    }).then(response => {\n      if (response.data.statusCode === 200) {\n        let associateList = this.state.associateList;\n        associateList = response.data.resourceData[0];\n        this.setState({\n          associateList: associateList\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken').then(response => {\n      if (response.data.status === 'Success') {\n        let sasToken = response.data.result.sasToken;\n        this.setState({\n          sasToken\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleSubmit() {\n    let projectName = this.state.projectName;\n    let projectURL = this.state.projectURL;\n    let associatedWith = this.state.associatedWith;\n    let projectFinished = this.state.projectFinished;\n    let description = this.state.description;\n    let userId = this.props.user.userId;\n    let projectId = this.state.projectId;\n    console.log('this.state.startDay -- ', this.state.startDay);\n    let startDay = 1;\n    let startMonth = this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\n    let startYear = this.state.startYear !== '' ? this.state.startYear : '';\n    let fromDate = '';\n\n    if (startDay && startMonth && startYear) {\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\n      fromDate = moment(fromDate).valueOf();\n    }\n\n    let endDay = 1;\n    let endMonth = this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\n    let endYear = this.state.endYear !== '' ? this.state.endYear : '';\n    let toDate = '';\n\n    if (endDay && endMonth && endYear) {\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\n      toDate = moment(toDate).valueOf();\n      toDate = this.state.todaysDate ? '' : toDate;\n    }\n\n    let data = {\n      projectId,\n      userId,\n      projectName,\n      projectURL,\n      associatedWith,\n      projectFinished,\n      description,\n      startDate: fromDate,\n      endDate: toDate\n    };\n    let self = this;\n\n    if (!this.state.projectId || this.state.projectId === '') {\n      theRapidHireApiService('addProject', data).then(response => {\n        if (response.data.status === 'Success') {\n          self.setState({\n            isLoading: false\n          });\n          self.closeProjectModal('save');\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    } else {\n      theRapidHireApiService('editProject', data).then(response => {\n        if (response.data.status === 'Success') {\n          self.closeProjectModal('save');\n          self.setState({\n            isLoading: false\n          });\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    console.log('this.props.employmentDetail ', this.props.projectDetail);\n\n    const CalendarContainer = ({\n      children\n    }) => {\n      const el = document.getElementById('calendar-portal');\n      return React.createElement(Portal, {\n        container: el,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, children);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      bsSize: \"large\",\n      show: this.state.projectModal,\n      onHide: this.closeProjectModal.bind(this, 'close'),\n      backdrop: \"static\",\n      keyboard: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, !this.state.ProjectId || this.state.ProjectId === '' ? 'Add Project' : 'Edit Project')), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(Form, {\n      horizontal: true,\n      className: \"lightBgForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"formControlsTextarea\",\n      className: this.getClasses('title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, \"Project Name\")), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Add a project\",\n      name: \"projectName\",\n      value: this.state.projectName,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('projectName')))), React.createElement(FormGroup, {\n      className: \"addDateInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, \"Date From\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(YearPicker, {\n      id: \"year\",\n      name: \"startYear\",\n      classes: \"form-control\",\n      defaultValue: \"Year\",\n      end: moment().year(),\n      reverse: true,\n      value: this.state.startYear,\n      onChange: year => this.selectStartDate('startYear', year),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      id: \"month\",\n      name: \"startMonth\",\n      classes: \"form-control\",\n      defaultValue: 'Month',\n      short: true,\n      endYearGiven: true,\n      year: this.state.startYear,\n      value: this.state.startMonth,\n      onChange: month => this.selectStartDate('startMonth', month),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536\n      },\n      __self: this\n    }))))), React.createElement(FormGroup, {\n      className: \"addDateInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, \"Date To\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, React.createElement(YearPicker, {\n      id: \"year\",\n      name: \"endYear\",\n      disabled: this.state.todaysDate ? true : false,\n      classes: \"form-control\",\n      defaultValue: \"Year\",\n      end: moment().year(),\n      reverse: true,\n      value: this.state.endYear,\n      onChange: year => this.selectEndDate('endYear', year),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      id: \"month\",\n      name: \"endMonth\",\n      disabled: this.state.todaysDate ? true : false,\n      classes: \"form-control\",\n      defaultValue: 'Month',\n      short: true,\n      endYearGiven: true,\n      year: this.state.endYear,\n      value: this.state.endMonth,\n      onChange: month => this.selectEndDate('endMonth', month),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      className: \"checkbox-primary \",\n      onClick: this.currentCheckBox.bind(this),\n      defaultChecked: this.state.projectFinished ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, \"Is project going on?\", React.createElement(\"span\", {\n      className: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }))))), React.createElement(FormGroup, {\n      controlId: \"formControlsTextarea\",\n      className: this.getClasses('description'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654\n      },\n      __self: this\n    }, \"Description\")), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      componentClass: \"textarea\",\n      placeholder: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('description')))), React.createElement(FormGroup, {\n      controlId: \"formControlsTextarea\",\n      className: this.getClasses('title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677\n      },\n      __self: this\n    }, \"Project URL\")), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Add a projectURL\",\n      name: \"projectURL\",\n      value: this.state.projectURL,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('projectURL'))))), React.createElement(\"div\", {\n      className: \"flex align-center justify-content-between fullWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bsStyle: \"primary\",\n      className: \"no-bold no-round\",\n      disabled: this.state.isLoading,\n      onClick: !this.state.isLoading ? this.validateData : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697\n      },\n      __self: this\n    }, this.state.isLoading ? 'In Progress...' : 'Save'), React.createElement(Button, {\n      bsStyle: \"default\",\n      className: \"no-bold no-round\",\n      onClick: this.closeProjectModal.bind(this, 'close'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(Modal //  bsSize=\"medium\"\n    , {\n      show: this.state.imagesModal,\n      onHide: this.closeImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721\n      },\n      __self: this\n    }, \"Photos Gallery\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 727\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bstyle: \"default no-round\",\n      onClick: this.closeImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\naddProject = validation(strategy)(addProject);\n\nconst mapStateToProps = state => {\n  return {//  user: state.User.userData    \n  };\n};\n\nexport default connect(mapStateToProps, null)(addProject);","map":{"version":3,"sources":["/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/interviewer/profile/addProject.js"],"names":["React","Component","ToastContainer","Portal","Button","Modal","Form","FormGroup","Checkbox","Col","ControlLabel","FormControl","InputGroup","Radio","Select","YearPicker","MonthPicker","DayPicker","connect","validation","strategy","classnames","ImageCropper","achievementDefaultImage","_","moment","CONSTANTS","renderMessage","isValidURL","ZoomInAndOut","generateTimestamp","showErrorToast","theRapidHireApiService","validationMessages","regExpressions","badgeImgArray","badgeImgPreview","certificateImgArray","certificateImgPreview","mediaImgArray","mediaImgPreview","emptyToDate","addProject","constructor","props","getValidatorData","state","getClasses","field","error","isValid","setProjectData","data","startDay","startMonth","startYear","endDay","endMonth","endYear","todaysDate","startDate","format","Number","endDate","setState","userId","projectName","projectURL","associatedWith","projectFinished","description","projectId","toDate","handleChange","event","target","value","type","checked","name","handleChangeStart","handleDateChange","handleChangeEnd","isAfter","validateData","self","today","Date","validate","fromDate","isLoading","handleSubmit","selectStartDate","selectDateChange","selectEndDate","currentCheckBox","closeProjectModal","status","projectModal","closeProjectComponent","promptRecommendation","lwdYear","lwdMonth","lwdDay","designation","organisation","associateList","bind","validatorTypes","createSchema","required","componentDidMount","user","projectDetail","getAssociatedListData","then","response","statusCode","resourceData","catch","err","console","log","generateSASToken","sasToken","result","valueOf","render","CalendarContainer","children","el","document","getElementById","ProjectId","getValidationMessages","year","month","imagesModal","closeImageModal","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio  \r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\nimport moment from 'moment';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp,\r\n  showErrorToast\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass addProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation:'',\r\n      organisation:'',\r\n      projectModal:true,\r\n      projectId:'',\r\n      associateList: []\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        projectName: 'required'       \r\n      },\r\n      {\r\n        'required.projectName': validationMessages.projectName.required       \r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  }; \r\n\r\n  componentDidMount() {\r\n    let userId= null;\r\n    if(this.props.user){\r\n      userId = this.props.user.userId;\r\n      this.setState({userId: userId});\r\n    } \r\n   \r\n    this.setProjectData(this.props.projectDetail);\r\n    this.getAssociatedListData(userId);\r\n  }\r\n\r\n  getAssociatedListData(userId){\r\n    theRapidHireApiService('getAssociatedListDataByUserId',{userId})\r\n    .then(response => {     \r\n      if (response.data.statusCode === 200) {\r\n         let associateList= this.state.associateList;\r\n         associateList= response.data.resourceData[0];\r\n         this.setState({associateList: associateList});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n  setProjectData = data => {\r\n    \r\n    let startDay = '',\r\n      startMonth = '',\r\n      startYear = '',\r\n      endDay = '',\r\n      endMonth = '',\r\n      endYear = '',\r\n      todaysDate = '';\r\n    if (data) {        \r\n     \r\n      if (data.startDate) {\r\n        startDay = moment(data.startDate).format('D');\r\n        startMonth = Number(moment(data.startDate).format('M')) - 1;\r\n\r\n        startYear = moment(data.startDate).format('YYYY');\r\n      }\r\n\r\n      if (data.endDate) {\r\n        endDay = moment(data.endDate).format('D');\r\n        endMonth = Number(moment(data.endDate).format('M')) - 1;\r\n        endYear = moment(data.endDate).format('YYYY');\r\n      } else {\r\n        todaysDate = '';\r\n      }\r\n\r\n      this.setState({      \r\n        userId:data.userId,\r\n        projectName : data.projectName,\r\n        projectURL : data.projectURL,\r\n        associatedWith : data.associatedWith,\r\n        projectFinished : data.projectFinished,       \r\n        description : data.description,     \r\n        projectId:  data.projectId,\r\n        startDay: startDay,\r\n        startMonth: startMonth,\r\n        startYear: startYear,\r\n        endDay: endDay,\r\n        endMonth: endMonth,\r\n        endYear: endYear,\r\n        //startDate: moment(data.fromDate),\r\n        // endDate: data.toDate ? moment(data.toDate) : emptyToDate,   \r\n        todaysDate: data.toDate ? false : true       \r\n      });     \r\n    }\r\n  };\r\n\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {  \r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    let today = new Date();  \r\n    this.props.validate(function(error) {     \r\n      if (!error) {\r\n        if (\r\n          self.state.fromDate &&\r\n          self.state.fromDate > today &&\r\n          (self.state.toDate && self.state.toDate > today)\r\n        ) {\r\n          showErrorToast(\r\n            '\"From\" and \"To\" date should be less than future date'\r\n          );\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: '',\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (self.state.fromDate && self.state.fromDate > today) {\r\n          showErrorToast('\"From\" date should be less than future date');\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: ''\r\n          });\r\n        } else if (self.state.toDate && self.state.toDate > today) {\r\n          showErrorToast('\"To\" date should be less than future date');\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (\r\n          self.state.fromDate !== '' &&\r\n          self.state.toDate !== '' &&\r\n          self.state.fromDate > self.state.toDate\r\n        ) {\r\n          showErrorToast(\r\n            'The \"to\" date should be greater than or equal to \"from\" date'\r\n          );\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        }else { \r\n          self.setState({ isLoading: true });       \r\n              self.handleSubmit();        \r\n          }\r\n        }    \r\n    });\r\n  };\r\n\r\n  selectStartDate = (type, value) => {\r\n    if (type === 'startYear') {\r\n      this.setState({ startYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startMonth') {\r\n      this.setState({ startMonth: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startDay') {\r\n      this.setState({ startDay: 1 }, () => this.selectDateChange());\r\n    }\r\n  };\r\n\r\n  selectEndDate = (type, value) => {\r\n    if (type === 'endYear') {\r\n      this.setState({ endYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'endMonth') {\r\n      this.setState({ endMonth: value }, () => this.selectDateChange());\r\n    }\r\n    // if (type === 'endDay') {\r\n    //   this.setState({ endDay: 1 }, () => this.selectDateChange());\r\n    // }\r\n  };\r\n \r\n  selectDateChange = () => {\r\n    let fromDate = '';\r\n    let toDate = '';\r\n    let startDay = 1,\r\n      startYear = '',\r\n      startMonth = '',\r\n      endDay = 1,\r\n      endMonth = '',\r\n      endYear = '';\r\n\r\n    if (this.state.startYear && this.state.startMonth) {\r\n      startDay = 1;\r\n      startMonth =\r\n        this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n      startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n    }\r\n\r\n    if (this.state.endYear && this.state.endMonth) {\r\n      endDay = 1;\r\n      endMonth =\r\n        this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n      endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n    }\r\n\r\n    if (toDate && fromDate) {\r\n      if (fromDate.isAfter(toDate)) {      \r\n        this.setState({\r\n          endDay: startDay,\r\n          endMonth: startMonth - 1,\r\n          endYear: startYear,\r\n          fromDate,\r\n          toDate\r\n        });\r\n      } else {\r\n        this.setState({\r\n          fromDate,\r\n          toDate\r\n        });\r\n      }\r\n    }\r\n  }; \r\n\r\n  handleSubmit() {  \r\n\r\n    let projectName = this.state.projectName;\r\n    let projectURL = this.state.projectURL;\r\n    let associatedWith = this.state.associatedWith;\r\n    let projectFinished = this.state.projectFinished;\r\n    let description = this.state.description;\r\n \r\n    let userId = this.props.user.userId;\r\n    let projectId=  this.state.projectId;   \r\n   \r\n    console.log('this.state.startDay -- ',this.state.startDay);\r\n\r\n    let startDay = 1;\r\n    let startMonth =\r\n      this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n    let startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n    let fromDate = '';\r\n    if (startDay && startMonth && startYear) {\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n      fromDate = moment(fromDate).valueOf();\r\n    }\r\n\r\n    let endDay = 1;\r\n    let endMonth =\r\n      this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n    let endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n    let toDate = '';\r\n    if (endDay && endMonth && endYear) {\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n      toDate = moment(toDate).valueOf();\r\n      toDate = this.state.todaysDate ? '' : toDate;\r\n    }    \r\n  \r\n    let data = {\r\n      projectId,\r\n      userId,\r\n      projectName,\r\n      projectURL,\r\n      associatedWith,\r\n      projectFinished,\r\n      description, \r\n      startDate:fromDate,\r\n      endDate:toDate      \r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.projectId || this.state.projectId === '') {\r\n      theRapidHireApiService('addProject', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n           self.closeProjectModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editProject', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n           self.closeProjectModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  currentCheckBox = event => {\r\n    if (event.target.checked) {\r\n      this.setState({\r\n        todaysDate: true,\r\n        endDate: emptyToDate,\r\n        endDay: '',\r\n        endMonth: '',\r\n        endYear: '',\r\n        projectFinished: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        todaysDate: false,\r\n        endYear: moment().format('YYYY'),\r\n        endMonth: moment().format('M') - 1,\r\n        endDay: moment().format('D'),\r\n        projectFinished:false\r\n      });\r\n    }\r\n    // let endDate = null;\r\n    // if (!todaysDate) endDate = emptyToDate;\r\n    // else endDate = '';\r\n    // this.setState({ todaysDate: !todaysDate, endDate: endDate });\r\n  };\r\n\r\n  closeProjectModal = status => {   \r\n    this.setState({\r\n      projectModal: false\r\n      \r\n    });   \r\n    this.props.closeProjectComponent();\r\n  };\r\n\r\n  render() {\r\n\r\n    console.log('this.props.employmentDetail ',this.props.projectDetail);\r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.projectModal}\r\n          onHide={this.closeProjectModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.ProjectId || this.state.ProjectId === ''\r\n                ? 'Add Project'\r\n                : 'Edit Project'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('title')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Project Name</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a project\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('projectName'))}\r\n                  </Col>\r\n                </FormGroup>                     \r\n               \r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date From\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"startYear\"\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.startYear}\r\n                          onChange={year =>\r\n                            this.selectStartDate('startYear', year)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"startMonth\"\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.startYear}\r\n                          value={this.state.startMonth}\r\n                          onChange={month =>\r\n                            this.selectStartDate('startMonth', month)\r\n                          }\r\n                        />\r\n                      </div>                 \r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date To\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"endYear\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.endYear}\r\n                          onChange={year => this.selectEndDate('endYear', year)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"endMonth\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.endYear}\r\n                          value={this.state.endMonth}\r\n                          onChange={month =>\r\n                            this.selectEndDate('endMonth', month)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      {/* <div className=\"form-group\">\r\n                        <DayPicker\r\n                          defaultValue=\"Day\"\r\n                          id=\"day\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          name=\"endDay\"\r\n                          classes=\"form-control\"\r\n                          year={this.state.endYear}\r\n                          month={this.state.endMonth}\r\n                          endYearGiven\r\n                          value={this.state.endDay}\r\n                          onChange={day => this.selectEndDate('endDay', day)}\r\n                        /> \r\n                      </div>*/}\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <Checkbox\r\n                        className=\"checkbox-primary \"\r\n                        onClick={this.currentCheckBox.bind(this)}\r\n                        defaultChecked={this.state.projectFinished ? true : false}\r\n                      >\r\n                        Is project going on?\r\n                        <span className=\"check\" />\r\n                      </Checkbox>\r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                {/* <div>    <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Associated With\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"associatedWith\"\r\n                          name=\"associatedWith\"\r\n                          value={this.state.associatedWith}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">associatedWith</option>\r\n                       {this.state.associateList.map((ass, i) => (\r\n                       <option value={ass}>{ass}</option>\r\n                       ))}                                 \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('associatedWith')\r\n                        )}\r\n                      </div>                                  \r\n                    </div>\r\n                  </Col>\r\n                </FormGroup>\r\n                </div> */}\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Description</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      componentClass=\"textarea\"\r\n                      placeholder=\"description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"1000\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('description')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>    \r\n\r\n                 <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('title')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Project URL</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a projectURL\"\r\n                      name=\"projectURL\"\r\n                      value={this.state.projectURL}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('projectURL'))}\r\n                  </Col>\r\n                </FormGroup>         \r\n               \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeProjectModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddProject = validation(strategy)(addProject);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addProject);\r\n"]},"metadata":{},"sourceType":"module"}