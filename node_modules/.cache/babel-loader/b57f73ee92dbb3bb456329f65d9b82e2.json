{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\interviewer\\\\profile\\\\addEmployment.js\";\nimport React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Portal } from 'react-overlays';\nimport { Button, Modal, Form, FormGroup, Checkbox, Col, ControlLabel, FormControl, InputGroup, Radio, Row } from 'react-bootstrap';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.css';\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport classnames from 'classnames';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport _ from 'lodash';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport { renderMessage, isValidURL, ZoomInAndOut, generateTimestamp, showErrorToast } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService'; //import MediaList from '../mediaList';\n\nlet validationMessages = CONSTANTS.validationMessages;\nlet regExpressions = CONSTANTS.regExpressions;\nlet badgeImgArray = [];\nlet badgeImgPreview = [];\nlet certificateImgArray = [];\nlet certificateImgPreview = [];\nlet mediaImgArray = [];\nlet mediaImgPreview = [];\nconst emptyToDate = '10000000';\n\nclass addEmployment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closeAchievementyModal = status => {\n      this.setState({}); // if (status === 'save')\n      //   this.props.closeSaveAchievementComponent(this.props.competencyTypeId);\n      // else this.props.closeAchievementComponent(this.props.competencyTypeId);\n    };\n\n    this.getValidatorData = () => {\n      return this.state;\n    };\n\n    this.getClasses = field => {\n      return classnames({\n        error: !this.props.isValid(field)\n      });\n    };\n\n    this.setEmploymentData = data => {\n      let startDay = '',\n          startMonth = '',\n          startYear = '',\n          endDay = '',\n          endMonth = '',\n          endYear = '',\n          todaysDate = '';\n\n      if (data) {\n        if (data.startDate) {\n          startDay = moment(data.startDate).format('D');\n          startMonth = Number(moment(data.startDate).format('M')) - 1;\n          startYear = moment(data.startDate).format('YYYY');\n        }\n\n        if (data.endDate) {\n          endDay = moment(data.endDate).format('D');\n          endMonth = Number(moment(data.endDate).format('M')) - 1;\n          endYear = moment(data.endDate).format('YYYY');\n        } else {\n          todaysDate = '';\n        }\n\n        this.setState({\n          userId: data.userId,\n          designation: data.designation,\n          organisation: data.organisation,\n          currentCompany: data.currentCompany,\n          currentSalary: data.currentSalary,\n          lakh: data.currentSalaryInLakh,\n          thousand: data.currentSalaryInThousand,\n          describe: data.describe,\n          noticePeriod: data.noticePeriod,\n          offeredSalary: data.offeredSalary,\n          offeredSalaryInLakh: data.offeredSalaryInLakh,\n          offeredSalaryInThousand: data.offeredSalaryInThousand,\n          offeredDesignation: data.offeredDesignation,\n          nextEmployer: data.nextEmployer,\n          userId: 10,\n          employmentId: data.employmentId,\n          startDay: startDay,\n          startMonth: startMonth,\n          startYear: startYear,\n          endDay: endDay,\n          endMonth: endMonth,\n          endYear: endYear,\n          //startDate: moment(data.fromDate),\n          // endDate: data.toDate ? moment(data.toDate) : emptyToDate,\n          todaysDate: data.toDate ? false : true\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleChangeStart = startDate => {\n      this.handleDateChange({\n        startDate\n      });\n    };\n\n    this.handleChangeEnd = endDate => {\n      this.handleDateChange({\n        endDate\n      });\n    };\n\n    this.handleDateChange = ({\n      startDate,\n      endDate\n    }) => {\n      console.log(endDate);\n      startDate = startDate || this.state.startDate;\n      endDate = endDate || this.state.endDate;\n\n      if (startDate && endDate) {\n        if (startDate.isAfter(endDate)) {\n          endDate = startDate;\n        }\n      }\n\n      this.setState({\n        startDate,\n        endDate\n      });\n    };\n\n    this.validateData = () => {\n      let self = this;\n      let today = new Date();\n\n      if (this.state.noticePeriod == 6) {\n        // serving notice period === 6\n        this.validatorTypes.rules['offeredDesignation'] = ['required'];\n        this.validatorTypes.messages['required.offeredDesignation'] = validationMessages.offeredDesignation.required;\n        this.validatorTypes.rules['nextEmployer'] = ['required'];\n        this.validatorTypes.messages['required.nextEmployer'] = validationMessages.nextEmployer.required;\n        this.validatorTypes.rules['offeredSalary'] = ['required'];\n        this.validatorTypes.messages['required.offeredSalary'] = validationMessages.offeredSalary.required;\n        this.validatorTypes.rules['offeredSalaryInLakh'] = ['required'];\n        this.validatorTypes.messages['required.offeredSalaryInLakh'] = validationMessages.offeredSalaryInLakh.required;\n        this.validatorTypes.rules['offeredSalaryInThousand'] = ['required'];\n        this.validatorTypes.messages['required.offeredSalaryInThousand'] = validationMessages.offeredSalaryInThousand.required;\n\n        if (self.state.lwdDate && self.state.lwdDate > today) {\n          showErrorToast('\"From\" and \"To\" date should be less than future date');\n          self.setState({\n            lwdDay: '',\n            lwdYear: '',\n            lwdMonth: '',\n            lwdDate: ''\n          });\n        }\n      } else {\n        this.validatorTypes.rules['offeredDesignation'] = '';\n        this.validatorTypes.messages['required.offeredDesignation'] = '';\n        this.validatorTypes.rules['nextEmployer'] = '';\n        this.validatorTypes.messages['required.nextEmployer'] = '';\n        this.validatorTypes.rules['offeredSalary'] = '';\n        this.validatorTypes.messages['required.offeredSalary'] = '';\n        this.validatorTypes.rules['offeredSalaryInLakh'] = '';\n        this.validatorTypes.messages['required.offeredSalaryInLakh'] = '';\n        this.validatorTypes.rules['offeredSalaryInThousand'] = '';\n        this.validatorTypes.messages['required.offeredSalaryInThousand'] = '';\n        self.setState({\n          lwdDay: '',\n          lwdYear: '',\n          lwdMonth: '',\n          lwdDate: ''\n        });\n      }\n\n      this.props.validate(function (error) {\n        if (!error) {\n          if (self.state.fromDate && self.state.fromDate > today && self.state.toDate && self.state.toDate > today) {\n            showErrorToast('\"From\" and \"To\" date should be less than future date');\n            self.setState({\n              startYear: '',\n              startMonth: '',\n              startDay: '',\n              endYear: '',\n              endMonth: '',\n              endDay: ''\n            });\n          } else if (self.state.fromDate && self.state.fromDate > today) {\n            showErrorToast('\"From\" date should be less than future date');\n            self.setState({\n              startYear: '',\n              startMonth: '',\n              startDay: ''\n            });\n          } else if (self.state.toDate && self.state.toDate > today) {\n            showErrorToast('\"To\" date should be less than future date');\n            self.setState({\n              endYear: '',\n              endMonth: '',\n              endDay: ''\n            });\n          } else if (self.state.fromDate !== '' && self.state.toDate !== '' && self.state.fromDate > self.state.toDate) {\n            showErrorToast('The \"to\" date should be greater than or equal to \"from\" date');\n            self.setState({\n              endYear: '',\n              endMonth: '',\n              endDay: ''\n            });\n          } else {\n            self.setState({\n              isLoading: true\n            });\n            self.handleSubmit();\n          }\n        }\n      });\n    };\n\n    this.selectStartDate = (type, value) => {\n      if (type === 'startYear') {\n        this.setState({\n          startYear: value\n        }, () => this.selectDateChange());\n      }\n\n      if (type === 'startMonth') {\n        this.setState({\n          startMonth: value\n        }, () => this.selectDateChange());\n      }\n\n      if (type === 'startDay') {\n        this.setState({\n          startDay: 1\n        }, () => this.selectDateChange());\n      }\n    };\n\n    this.selectEndDate = (type, value) => {\n      if (type === 'endYear') {\n        this.setState({\n          endYear: value\n        }, () => this.selectDateChange());\n      }\n\n      if (type === 'endMonth') {\n        this.setState({\n          endMonth: value\n        }, () => this.selectDateChange());\n      } // if (type === 'endDay') {\n      //   this.setState({ endDay: 1 }, () => this.selectDateChange());\n      // }\n\n    };\n\n    this.selectLWDDate = (type, value) => {\n      if (type === 'lwdYear') {\n        this.setState({\n          lwdYear: value\n        }, () => this.selectLwdChange());\n      }\n\n      if (type === 'lwdMonth') {\n        this.setState({\n          lwdMonth: value\n        }, () => this.selectLwdChange());\n      }\n\n      if (type === 'lwdDay') {\n        this.setState({\n          lwdDay: 1\n        }); // () => this.selectDateChange());\n      }\n    };\n\n    this.selectLwdChange = () => {\n      let lwdDate = '';\n      let lwdDay = 1,\n          lwdYear = '',\n          lwdMonth = '';\n\n      if (this.state.lwdYear && this.state.lwdMonth) {\n        lwdDay = 1;\n        lwdMonth = this.state.lwdMonth !== '' ? Number(this.state.lwdMonth) + 1 : '';\n        lwdYear = this.state.lwdYear !== '' ? this.state.lwdYear : '';\n        lwdDate = moment(lwdYear + '-' + lwdMonth + '-' + lwdDay);\n      }\n\n      this.setState({\n        lwdDate\n      });\n    };\n\n    this.selectDateChange = () => {\n      let fromDate = '';\n      let toDate = '';\n      let startDay = 1,\n          startYear = '',\n          startMonth = '',\n          endDay = 1,\n          endMonth = '',\n          endYear = '';\n\n      if (this.state.startYear && this.state.startMonth) {\n        startDay = 1;\n        startMonth = this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\n        startYear = this.state.startYear !== '' ? this.state.startYear : '';\n        fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\n      }\n\n      if (this.state.endYear && this.state.endMonth) {\n        endDay = 1;\n        endMonth = this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\n        endYear = this.state.endYear !== '' ? this.state.endYear : '';\n        toDate = moment(endYear + '-' + endMonth + '-' + endDay);\n      }\n\n      if (toDate && fromDate) {\n        if (fromDate.isAfter(toDate)) {\n          console.log('dd');\n          this.setState({\n            endDay: startDay,\n            endMonth: startMonth - 1,\n            endYear: startYear,\n            fromDate,\n            toDate\n          });\n        } else {\n          this.setState({\n            fromDate,\n            toDate\n          });\n        }\n      }\n    };\n\n    this.closeImageModal = () => {\n      this.setState({\n        imagesModal: !this.state.imagesModal\n      });\n    };\n\n    this.currentCheckBox = event => {\n      if (event.target.checked) {\n        this.validatorTypes.rules['endDay'] = '';\n        this.validatorTypes.rules['endMonth'] = '';\n        this.validatorTypes.rules['endYear'] = '';\n        this.setState({\n          toDate: '',\n          todaysDate: true,\n          endDay: '',\n          endMonth: '',\n          endYear: '',\n          currentCompany: false\n        });\n        this.validatorTypes.rules['noticePeriod'] = 'required';\n        this.validatorTypes.messages['required.noticePeriod'] = validationMessages.noticePeriod.required;\n        this.validatorTypes.rules['currentSalary'] = ['required'];\n        this.validatorTypes.messages['required.currentSalary'] = validationMessages.currentSalary.required;\n        this.validatorTypes.rules['lakh'] = ['required'];\n        this.validatorTypes.messages['required.lakh'] = validationMessages.lakh.required;\n        this.validatorTypes.rules['thousand'] = ['required'];\n        this.validatorTypes.messages['required.thousand'] = validationMessages.thousand.required;\n      } else {\n        this.validatorTypes.rules['noticePeriod'] = '';\n        this.validatorTypes.messages['required.noticePeriod'] = '';\n        this.validatorTypes.rules['currentSalary'] = '';\n        this.validatorTypes.messages['required.currentSalary'] = '';\n        this.validatorTypes.rules['lakh'] = '';\n        this.validatorTypes.messages['required.lakh'] = '';\n        this.validatorTypes.rules['thousand'] = '';\n        this.validatorTypes.messages['required.thousand'] = '';\n        this.validatorTypes.rules['endDay'] = 'required';\n        this.validatorTypes.messages['required.endDay'] = validationMessages.day.required;\n        this.validatorTypes.rules['endMonth'] = 'required';\n        this.validatorTypes.messages['required.endMonth'] = validationMessages.month.required;\n        this.validatorTypes.rules['endYear'] = 'required';\n        this.validatorTypes.messages['required.endYear'] = validationMessages.year.required;\n        this.setState({\n          todaysDate: false,\n          endYear: '',\n          endMonth: '',\n          endDay: '',\n          currentCompany: true\n        });\n      }\n    };\n\n    this.deleteEmployment = event => {\n      let employmentId = this.state.employmentId,\n          self = this;\n      theRapidHireApiService('deleteEmployment', {\n        employmentId\n      }).then(response => {\n        if (response.data.status === 'Success') {\n          self.closeEmploymentModal('save');\n          self.setState({\n            isLoading: false\n          });\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    };\n\n    this.closeEmploymentModal = status => {\n      this.setState({\n        employmentModal: false\n      });\n      this.props.closeEmploymentComponent();\n    };\n\n    this.state = {\n      isLoading: false,\n      startDate: '',\n      endDate: '',\n      promptRecommendation: false,\n      userId: '',\n      todaysDate: false,\n      startYear: moment().format('YYYY'),\n      startMonth: moment().format('M') - 1,\n      startDay: moment().format('D'),\n      endYear: moment().format('YYYY'),\n      endMonth: moment().format('M') - 1,\n      endDay: moment().format('D'),\n      lwdYear: moment().format('YYYY'),\n      lwdMonth: moment().format('M') - 1,\n      lwdDay: moment().format('D'),\n      designation: '',\n      organisation: '',\n      employmentModal: true,\n      employmentId: ''\n    };\n    this.getValidatorData = this.getValidatorData.bind(this);\n    this.getClasses = this.getClasses.bind(this);\n    this.validatorTypes = strategy.createSchema({\n      designation: 'required',\n      organisation: 'required'\n    }, {\n      'required.designation': validationMessages.designation.required,\n      'required.organisation': validationMessages.organisation.required\n    });\n  }\n\n  componentDidMount() {\n    // if(this.props.user){\n    //  let userId = this.props.user.userId;\n    // }  \n    console.log('this.props.employmentDetail ', this.props.employmentDetail);\n    this.setEmploymentData(this.props.employmentDetail);\n  }\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken').then(response => {\n      if (response.data.status === 'Success') {\n        let sasToken = response.data.result.sasToken;\n        this.setState({\n          sasToken\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleSubmit() {\n    let designation = this.state.designation;\n    let organisation = this.state.organisation;\n    let currentCompany = this.state.currentCompany;\n    let currentSalary = this.state.currentSalary;\n    let currentSalaryInLakh = this.state.lakh;\n    let currentSalaryInThousand = this.state.thousand;\n    let describe = this.state.describe;\n    let noticePeriod = this.state.noticePeriod;\n    let offeredSalary = this.state.offeredSalary;\n    let offeredSalaryInLakh = this.state.offeredSalaryInLakh;\n    let offeredSalaryInThousand = this.state.offeredSalaryInThousand;\n    let offeredDesignation = this.state.offeredDesignation;\n    let nextEmployer = this.state.nextEmployer;\n    let userId = this.props.user.userId;\n    let employmentId = this.state.employmentId;\n    console.log('this.state.startDay -- ', this.state.startDay);\n    let startDay = 1;\n    let startMonth = this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\n    let startYear = this.state.startYear !== '' ? this.state.startYear : '';\n    let fromDate = '';\n\n    if (startDay && startMonth && startYear) {\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\n      fromDate = moment(fromDate).valueOf();\n    }\n\n    let endDay = 1;\n    let endMonth = this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\n    let endYear = this.state.endYear !== '' ? this.state.endYear : '';\n    let toDate = '';\n\n    if (endDay && endMonth && endYear) {\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\n      toDate = moment(toDate).valueOf();\n      toDate = this.state.todaysDate ? '' : toDate;\n    }\n\n    let lwdDay = this.state.lwdDay !== '' ? this.state.lwdDay : '';\n    let lwdMonth = this.state.lwdMonth !== '' ? Number(this.state.lwdMonth) + 1 : '';\n    let lwdYear = this.state.lwdYear !== '' ? this.state.lwdYear : '';\n    let lwdDate = '';\n\n    if (this.state.lwdMonth && this.state.lwdDay && this.state.lwdYear) {\n      lwdDate = moment(lwdYear + '-' + lwdMonth + '-' + lwdDay);\n      lwdDate = moment(lwdDate).valueOf();\n    }\n\n    let data = {\n      employmentId,\n      userId,\n      designation,\n      organisation,\n      currentCompany,\n      currentSalary,\n      currentSalaryInLakh,\n      currentSalaryInThousand,\n      describe,\n      noticePeriod,\n      offeredSalary,\n      offeredSalaryInLakh,\n      offeredSalaryInThousand,\n      offeredDesignation,\n      startDate: fromDate,\n      endDate: toDate,\n      lastWorkingDate: lwdDate,\n      nextEmployer\n    };\n    let self = this;\n    console.log('this.state.employmentId -- ', this.state.employmentId);\n\n    if (!this.state.employmentId || this.state.employmentId === '') {\n      theRapidHireApiService('addEmployment', data).then(response => {\n        if (response.data.status === 'Success') {\n          self.setState({\n            isLoading: false\n          });\n          self.closeEmploymentModal('save');\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    } else {\n      theRapidHireApiService('editEmployment', data).then(response => {\n        if (response.data.status === 'Success') {\n          self.closeEmploymentModal('save');\n          self.setState({\n            isLoading: false\n          });\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const CalendarContainer = ({\n      children\n    }) => {\n      const el = document.getElementById('calendar-portal');\n      return React.createElement(Portal, {\n        container: el,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }, children);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      bsSize: \"large\",\n      show: this.state.employmentModal,\n      onHide: this.closeEmploymentModal.bind(this, 'close'),\n      backdrop: \"static\",\n      keyboard: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, !this.state.EmploymentId || this.state.EmploymentId === '' ? 'Add Employment' : 'Edit Employment')), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }, React.createElement(Form, {\n      horizontal: true,\n      className: \"lightBgForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"formControlsTextarea\",\n      className: this.getClasses('title'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }, \"Designation\")), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Add a designation\",\n      name: \"designation\",\n      value: this.state.designation,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('designation')))), React.createElement(FormGroup, {\n      controlId: \"formControlsTextarea\",\n      className: this.getClasses('organisation'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    }, \"Organisation\")), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Add a organisation\",\n      name: \"organisation\",\n      value: this.state.organisation,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('organisation')))), React.createElement(FormGroup, {\n      controlId: \"formHorizontalPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }, \"Is this your current company ?\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 728\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      name: \"currentCompany\",\n      className: \"radio-primary\",\n      value: true,\n      checked: this.state.currentCompany === true ? true : false,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730\n      },\n      __self: this\n    }, \"Yes\", React.createElement(\"div\", {\n      className: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740\n      },\n      __self: this\n    })), ' ', React.createElement(Radio, {\n      name: \"currentCompany\",\n      className: \"radio-primary\",\n      value: false,\n      checked: this.state.currentCompany === false ? true : false,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 742\n      },\n      __self: this\n    }, \"No\", React.createElement(\"div\", {\n      className: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 752\n      },\n      __self: this\n    })), ' '))), React.createElement(FormGroup, {\n      className: \"addDateInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759\n      },\n      __self: this\n    }, \"Date From\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764\n      },\n      __self: this\n    }, React.createElement(YearPicker, {\n      id: \"year\",\n      name: \"startYear\",\n      classes: \"form-control\",\n      defaultValue: \"Year\",\n      end: moment().year(),\n      reverse: true,\n      value: this.state.startYear,\n      onChange: year => this.selectStartDate('startYear', year),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      id: \"month\",\n      name: \"startMonth\",\n      classes: \"form-control\",\n      defaultValue: 'Month',\n      short: true,\n      endYearGiven: true,\n      year: this.state.startYear,\n      value: this.state.startMonth,\n      onChange: month => this.selectStartDate('startMonth', month),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }))))), React.createElement(FormGroup, {\n      className: \"addDateInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798\n      },\n      __self: this\n    }, \"Date To\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 801\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803\n      },\n      __self: this\n    }, React.createElement(YearPicker, {\n      id: \"year\",\n      name: \"endYear\",\n      disabled: this.state.todaysDate ? true : false,\n      classes: \"form-control\",\n      defaultValue: \"Year\",\n      end: moment().year(),\n      reverse: true,\n      value: this.state.endYear,\n      onChange: year => this.selectEndDate('endYear', year),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      id: \"month\",\n      name: \"endMonth\",\n      disabled: this.state.todaysDate ? true : false,\n      classes: \"form-control\",\n      defaultValue: 'Month',\n      short: true,\n      endYearGiven: true,\n      year: this.state.endYear,\n      value: this.state.endMonth,\n      onChange: month => this.selectEndDate('endMonth', month),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 817\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      className: \"checkbox-primary \",\n      onClick: this.currentCheckBox.bind(this),\n      defaultChecked: this.state.currentCompany ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 834\n      },\n      __self: this\n    }, \"Are you working here now\", React.createElement(\"span\", {\n      className: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }))))), this.state.todaysDate === true ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"formHorizontalPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849\n      },\n      __self: this\n    }, \"Current Salary\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      name: \"currentSalary\",\n      className: \"radio-primary\",\n      value: \"indian\",\n      checked: this.state.currentSalary === 'indian' ? true : false,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854\n      },\n      __self: this\n    }, \"Indian\", React.createElement(\"div\", {\n      className: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    })), ' ', React.createElement(Radio, {\n      name: \"currentSalary\",\n      className: \"radio-primary\",\n      value: \"dollar\",\n      checked: this.state.currentSalary === 'dollar' ? true : false,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 866\n      },\n      __self: this\n    }, \"Dollars\", React.createElement(\"div\", {\n      className: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    })), ' ')), renderMessage(this.props.getValidationMessages('currentSalary'))), React.createElement(FormGroup, {\n      className: \"addDateInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886\n      },\n      __self: this\n    }, \"Salary\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 891\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      componentClass: \"select\",\n      placeholder: \"lakh\",\n      name: \"lakh\",\n      value: this.state.lakh,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 892\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901\n      },\n      __self: this\n    }, \"lakh\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902\n      },\n      __self: this\n    }, \"1 lakh\"), React.createElement(\"option\", {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903\n      },\n      __self: this\n    }, \"2 lakh\"), React.createElement(\"option\", {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904\n      },\n      __self: this\n    }, \"3 lakh\"), React.createElement(\"option\", {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905\n      },\n      __self: this\n    }, \"4 lakh\"), React.createElement(\"option\", {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906\n      },\n      __self: this\n    }, \"5 lakh\"), React.createElement(\"option\", {\n      value: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907\n      },\n      __self: this\n    }, \"6 lakh\"), React.createElement(\"option\", {\n      value: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908\n      },\n      __self: this\n    }, \"7 lakh\"), React.createElement(\"option\", {\n      value: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909\n      },\n      __self: this\n    }, \"8 lakh\"), React.createElement(\"option\", {\n      value: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910\n      },\n      __self: this\n    }, \"9 lakh\"), React.createElement(\"option\", {\n      value: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911\n      },\n      __self: this\n    }, \"10 lakh\"), React.createElement(\"option\", {\n      value: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912\n      },\n      __self: this\n    }, \"11 lakh\"), React.createElement(\"option\", {\n      value: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913\n      },\n      __self: this\n    }, \"12 lakh\")), renderMessage(this.props.getValidationMessages('lakh'))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      componentClass: \"select\",\n      placeholder: \"thousand\",\n      name: \"thousand\",\n      value: this.state.thousand,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929\n      },\n      __self: this\n    }, \"thousand\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930\n      },\n      __self: this\n    }, \"1 thousand\"), React.createElement(\"option\", {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931\n      },\n      __self: this\n    }, \"2 thousand\"), React.createElement(\"option\", {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932\n      },\n      __self: this\n    }, \"3 thousand\"), React.createElement(\"option\", {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933\n      },\n      __self: this\n    }, \"4 thousand\"), React.createElement(\"option\", {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934\n      },\n      __self: this\n    }, \"5 thousand\"), React.createElement(\"option\", {\n      value: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935\n      },\n      __self: this\n    }, \"6 thousand\"), React.createElement(\"option\", {\n      value: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936\n      },\n      __self: this\n    }, \"7 thousand\"), React.createElement(\"option\", {\n      value: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937\n      },\n      __self: this\n    }, \"8 thousand\"), React.createElement(\"option\", {\n      value: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938\n      },\n      __self: this\n    }, \"9 thousand\"), React.createElement(\"option\", {\n      value: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939\n      },\n      __self: this\n    }, \"10 thousand\"), React.createElement(\"option\", {\n      value: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940\n      },\n      __self: this\n    }, \"11 thousand\"), React.createElement(\"option\", {\n      value: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941\n      },\n      __self: this\n    }, \"12 thousand\")), renderMessage(this.props.getValidationMessages('thousand'))))))) : '', React.createElement(FormGroup, {\n      controlId: \"formControlsTextarea\",\n      className: this.getClasses('description'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958\n      },\n      __self: this\n    }, \"Describe\")), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      componentClass: \"textarea\",\n      placeholder: \"Tell us how this made you unique\",\n      name: \"describe\",\n      value: this.state.describe,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 961\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('description')))), this.state.todaysDate === true ? React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978\n      },\n      __self: this\n    }, \"Notice Period\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon-down_arrow selectIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 983\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      componentClass: \"select\",\n      placeholder: \"Select Notice Period\",\n      name: \"noticePeriod\",\n      value: this.state.noticePeriod,\n      onChange: this.handleChange,\n      onClick: this.handleChange,\n      inputRef: element => {\n        this.competencyDropdown = element;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 984\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995\n      },\n      __self: this\n    }, \"Select Achievement Level\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996\n      },\n      __self: this\n    }, \"15 days or less\"), React.createElement(\"option\", {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997\n      },\n      __self: this\n    }, \"1 month\"), React.createElement(\"option\", {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998\n      },\n      __self: this\n    }, \"2 month\"), React.createElement(\"option\", {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999\n      },\n      __self: this\n    }, \"3 month\"), React.createElement(\"option\", {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000\n      },\n      __self: this\n    }, \"more than 3 month\"), React.createElement(\"option\", {\n      value: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001\n      },\n      __self: this\n    }, \"Serving notice period\"))))) : '', this.state.noticePeriod == 6 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"addDateInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009\n      },\n      __self: this\n    }, \"Last Working Days\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1014\n      },\n      __self: this\n    }, React.createElement(YearPicker, {\n      id: \"year\",\n      name: \"lwdYear\",\n      classes: \"form-control\",\n      defaultValue: \"Year\",\n      end: moment().year(),\n      reverse: true,\n      value: this.state.lwdYear,\n      onChange: year => this.selectLWDDate('lwdYear', year),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1028\n      },\n      __self: this\n    }, React.createElement(MonthPicker, {\n      id: \"month\",\n      name: \"lwdMonth\",\n      classes: \"form-control\",\n      defaultValue: 'Month',\n      short: true,\n      endYearGiven: true,\n      year: this.state.lwdYear,\n      value: this.state.lwdMonth,\n      onChange: month => this.selectLWDDate('lwdYear', month),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043\n      },\n      __self: this\n    }, React.createElement(DayPicker, {\n      defaultValue: \"Day\",\n      id: \"day\",\n      name: \"lwdDay\",\n      classes: \"form-control\",\n      year: this.state.lwdYear,\n      month: this.state.lwdMonth,\n      endYearGiven: true,\n      value: this.state.lwdDay,\n      onChange: day => this.selectLWDDate('lwdDay', day),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044\n      },\n      __self: this\n    }))))), React.createElement(FormGroup, {\n      controlId: \"formHorizontalPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1064\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1065\n      },\n      __self: this\n    }, \"Offered Salary\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      name: \"offeredSalary\",\n      className: \"radio-primary\",\n      value: \"indian\",\n      checked: this.state.offeredSalary === 'indian' ? true : false,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070\n      },\n      __self: this\n    }, \"Indian\", React.createElement(\"div\", {\n      className: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1080\n      },\n      __self: this\n    })), ' ', React.createElement(Radio, {\n      name: \"offeredSalary\",\n      className: \"radio-primary\",\n      value: \"dollar\",\n      checked: this.state.offeredSalary === 'dollar' ? true : false,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1082\n      },\n      __self: this\n    }, \"Dollars\", React.createElement(\"div\", {\n      className: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092\n      },\n      __self: this\n    })), ' '), renderMessage(this.props.getValidationMessages('offeredSalary')))), React.createElement(FormGroup, {\n      className: \"addDateInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102\n      },\n      __self: this\n    }, \"Salary\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1107\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      componentClass: \"select\",\n      placeholder: \"lakh\",\n      name: \"offeredSalaryInLakh\",\n      value: this.state.offeredSalaryInLakh,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1108\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1117\n      },\n      __self: this\n    }, \"lakh\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1118\n      },\n      __self: this\n    }, \"1 lakh\"), React.createElement(\"option\", {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119\n      },\n      __self: this\n    }, \"2 lakh\"), React.createElement(\"option\", {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1120\n      },\n      __self: this\n    }, \"3 lakh\"), React.createElement(\"option\", {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121\n      },\n      __self: this\n    }, \"4 lakh\"), React.createElement(\"option\", {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1122\n      },\n      __self: this\n    }, \"5 lakh\"), React.createElement(\"option\", {\n      value: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1123\n      },\n      __self: this\n    }, \"6 lakh\"), React.createElement(\"option\", {\n      value: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1124\n      },\n      __self: this\n    }, \"7 lakh\"), React.createElement(\"option\", {\n      value: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1125\n      },\n      __self: this\n    }, \"8 lakh\"), React.createElement(\"option\", {\n      value: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126\n      },\n      __self: this\n    }, \"9 lakh\"), React.createElement(\"option\", {\n      value: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1127\n      },\n      __self: this\n    }, \"10 lakh\"), React.createElement(\"option\", {\n      value: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128\n      },\n      __self: this\n    }, \"11 lakh\"), React.createElement(\"option\", {\n      value: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129\n      },\n      __self: this\n    }, \"12 lakh\")), renderMessage(this.props.getValidationMessages('offeredSalaryInLakh'))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1135\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      componentClass: \"select\",\n      placeholder: \"thousand\",\n      name: \"offeredSalaryInThousand\",\n      value: this.state.offeredSalaryInThousand,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1145\n      },\n      __self: this\n    }, \"thousand\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1146\n      },\n      __self: this\n    }, \"1 thousand\"), React.createElement(\"option\", {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1147\n      },\n      __self: this\n    }, \"2 thousand\"), React.createElement(\"option\", {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1148\n      },\n      __self: this\n    }, \"3 thousand\"), React.createElement(\"option\", {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1149\n      },\n      __self: this\n    }, \"4 thousand\"), React.createElement(\"option\", {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1150\n      },\n      __self: this\n    }, \"5 thousand\"), React.createElement(\"option\", {\n      value: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151\n      },\n      __self: this\n    }, \"6 thousand\"), React.createElement(\"option\", {\n      value: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152\n      },\n      __self: this\n    }, \"7 thousand\"), React.createElement(\"option\", {\n      value: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1153\n      },\n      __self: this\n    }, \"8 thousand\"), React.createElement(\"option\", {\n      value: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1154\n      },\n      __self: this\n    }, \"9 thousand\"), React.createElement(\"option\", {\n      value: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1155\n      },\n      __self: this\n    }, \"10 thousand\"), React.createElement(\"option\", {\n      value: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1156\n      },\n      __self: this\n    }, \"11 thousand\"), React.createElement(\"option\", {\n      value: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1157\n      },\n      __self: this\n    }, \"12 thousand\")), renderMessage(this.props.getValidationMessages('offeredSalaryInThousand')))))), React.createElement(FormGroup, {\n      controlId: \"formControlsTextarea\",\n      className: this.getClasses('offeredDesignation'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1168\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1172\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1173\n      },\n      __self: this\n    }, \"Offered Designation\")), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1175\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Add a Designation\",\n      name: \"offeredDesignation\",\n      value: this.state.offeredDesignation,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176\n      },\n      __self: this\n    })), renderMessage(this.props.getValidationMessages('offeredDesignation'))), React.createElement(FormGroup, {\n      controlId: \"formControlsTextarea\",\n      className: this.getClasses('nextEmployer'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1195\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1196\n      },\n      __self: this\n    }, \"Next Employer\")), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1198\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Add your next employer\",\n      name: \"nextEmployer\",\n      value: this.state.nextEmployer,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1199\n      },\n      __self: this\n    })), renderMessage(this.props.getValidationMessages('nextEmployer')))) : ''), React.createElement(\"div\", {\n      className: \"flex align-center justify-content-between fullWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1214\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bsStyle: \"default\",\n      className: \"no-bold no-round\",\n      onClick: this.deleteEmployment.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1218\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(Button, {\n      bsStyle: \"primary\",\n      className: \"no-bold no-round\",\n      disabled: this.state.isLoading,\n      onClick: !this.state.isLoading ? this.validateData : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1226\n      },\n      __self: this\n    }, this.state.isLoading ? 'In Progress...' : 'Save'), React.createElement(Button, {\n      bsStyle: \"default\",\n      className: \"no-bold no-round\",\n      onClick: this.closeEmploymentModal.bind(this, 'close'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(Modal //  bsSize=\"medium\"\n    , {\n      show: this.state.imagesModal,\n      onHide: this.closeImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1249\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1250\n      },\n      __self: this\n    }, \"Photos Gallery\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1254\n      },\n      __self: this\n    }), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1256\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bstyle: \"default no-round\",\n      onClick: this.closeImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1258\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\naddEmployment = validation(strategy)(addEmployment);\n\nconst mapStateToProps = state => {\n  return {//  user: state.User.userData    \n  };\n};\n\nexport default connect(mapStateToProps, null)(addEmployment);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\interviewer\\profile\\addEmployment.js"],"names":["React","Component","ToastContainer","Portal","Button","Modal","Form","FormGroup","Checkbox","Col","ControlLabel","FormControl","InputGroup","Radio","Row","Select","YearPicker","MonthPicker","DayPicker","connect","moment","validation","strategy","classnames","ImageCropper","achievementDefaultImage","_","CONSTANTS","renderMessage","isValidURL","ZoomInAndOut","generateTimestamp","showErrorToast","theRapidHireApiService","validationMessages","regExpressions","badgeImgArray","badgeImgPreview","certificateImgArray","certificateImgPreview","mediaImgArray","mediaImgPreview","emptyToDate","addEmployment","constructor","props","closeAchievementyModal","status","setState","getValidatorData","state","getClasses","field","error","isValid","setEmploymentData","data","startDay","startMonth","startYear","endDay","endMonth","endYear","todaysDate","startDate","format","Number","endDate","userId","designation","organisation","currentCompany","currentSalary","lakh","currentSalaryInLakh","thousand","currentSalaryInThousand","describe","noticePeriod","offeredSalary","offeredSalaryInLakh","offeredSalaryInThousand","offeredDesignation","nextEmployer","employmentId","toDate","handleChange","event","target","value","type","checked","name","handleChangeStart","handleDateChange","handleChangeEnd","console","log","isAfter","validateData","self","today","Date","validatorTypes","rules","messages","required","lwdDate","lwdDay","lwdYear","lwdMonth","validate","fromDate","isLoading","handleSubmit","selectStartDate","selectDateChange","selectEndDate","selectLWDDate","selectLwdChange","closeImageModal","imagesModal","currentCheckBox","day","month","year","deleteEmployment","then","response","closeEmploymentModal","catch","employmentModal","closeEmploymentComponent","promptRecommendation","bind","createSchema","componentDidMount","employmentDetail","generateSASToken","sasToken","result","err","user","valueOf","lastWorkingDate","render","CalendarContainer","children","el","document","getElementById","EmploymentId","getValidationMessages","element","competencyDropdown","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio,\r\n  Row\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp,\r\n  showErrorToast\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\nclass addEmployment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,     \r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,    \r\n      userId: '',     \r\n      todaysDate: false,    \r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation:'',\r\n      organisation:'',\r\n      employmentModal:true,\r\n      employmentId:''\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        designation: 'required',\r\n        organisation: 'required'       \r\n      },\r\n      {\r\n        'required.designation': validationMessages.designation.required,\r\n        'required.organisation': validationMessages.organisation.required        \r\n      }\r\n    );\r\n  }\r\n\r\n  closeAchievementyModal = status => {\r\n    \r\n    this.setState({      \r\n    });\r\n    // if (status === 'save')\r\n    //   this.props.closeSaveAchievementComponent(this.props.competencyTypeId);\r\n    // else this.props.closeAchievementComponent(this.props.competencyTypeId);\r\n  };\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n    //  let userId = this.props.user.userId;\r\n    // }  \r\n    console.log('this.props.employmentDetail ',this.props.employmentDetail);\r\n    this.setEmploymentData(this.props.employmentDetail);\r\n  }\r\n\r\n\r\n  setEmploymentData = data => {\r\n    \r\n    let startDay = '',\r\n      startMonth = '',\r\n      startYear = '',\r\n      endDay = '',\r\n      endMonth = '',\r\n      endYear = '',\r\n      todaysDate = '';\r\n    if (data) {        \r\n     \r\n      if (data.startDate) {\r\n        startDay = moment(data.startDate).format('D');\r\n        startMonth = Number(moment(data.startDate).format('M')) - 1;\r\n\r\n        startYear = moment(data.startDate).format('YYYY');\r\n      }\r\n\r\n      if (data.endDate) {\r\n        endDay = moment(data.endDate).format('D');\r\n        endMonth = Number(moment(data.endDate).format('M')) - 1;\r\n        endYear = moment(data.endDate).format('YYYY');\r\n      } else {\r\n        todaysDate = '';\r\n      }\r\n\r\n      this.setState({      \r\n        userId:data.userId,\r\n        designation : data.designation,\r\n        organisation : data.organisation,\r\n        currentCompany : data.currentCompany,\r\n        currentSalary : data.currentSalary,\r\n        lakh : data.currentSalaryInLakh,\r\n        thousand : data.currentSalaryInThousand,\r\n        describe : data.describe,\r\n        noticePeriod : data.noticePeriod,\r\n        offeredSalary : data.offeredSalary,\r\n        offeredSalaryInLakh : data.offeredSalaryInLakh,\r\n        offeredSalaryInThousand : data.offeredSalaryInThousand,\r\n        offeredDesignation : data.offeredDesignation,\r\n        nextEmployer : data.nextEmployer,\r\n        userId: 10,\r\n        employmentId:  data.employmentId,\r\n        startDay: startDay,\r\n        startMonth: startMonth,\r\n        startYear: startYear,\r\n        endDay: endDay,\r\n        endMonth: endMonth,\r\n        endYear: endYear,\r\n        //startDate: moment(data.fromDate),\r\n        // endDate: data.toDate ? moment(data.toDate) : emptyToDate,\r\n   \r\n        todaysDate: data.toDate ? false : true       \r\n      });     \r\n    }\r\n  };\r\n\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleChangeStart = startDate => {\r\n    this.handleDateChange({ startDate });\r\n  };\r\n\r\n  handleChangeEnd = endDate => {\r\n    this.handleDateChange({ endDate });\r\n  };\r\n\r\n  handleDateChange = ({ startDate, endDate }) => {\r\n    console.log(endDate);\r\n    startDate = startDate || this.state.startDate;\r\n    endDate = endDate || this.state.endDate;\r\n    if (startDate && endDate) {\r\n      if (startDate.isAfter(endDate)) {\r\n        endDate = startDate;\r\n      }\r\n    }\r\n    this.setState({ startDate, endDate });\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    let today = new Date();  \r\n\r\n    if (this.state.noticePeriod == 6) { // serving notice period === 6\r\n      this.validatorTypes.rules['offeredDesignation'] = [\r\n        'required'      \r\n      ];\r\n      this.validatorTypes.messages['required.offeredDesignation'] =\r\n        validationMessages.offeredDesignation.required;\r\n\r\n        this.validatorTypes.rules['nextEmployer'] = [\r\n          'required'      \r\n        ];\r\n        this.validatorTypes.messages['required.nextEmployer'] =\r\n          validationMessages.nextEmployer.required;\r\n\r\n          this.validatorTypes.rules['offeredSalary'] = [\r\n            'required'      \r\n          ];\r\n          this.validatorTypes.messages['required.offeredSalary'] =\r\n            validationMessages.offeredSalary.required;\r\n  \r\n            this.validatorTypes.rules['offeredSalaryInLakh'] = [\r\n              'required'      \r\n            ];\r\n            this.validatorTypes.messages['required.offeredSalaryInLakh'] =\r\n              validationMessages.offeredSalaryInLakh.required;\r\n  \r\n              this.validatorTypes.rules['offeredSalaryInThousand'] = [\r\n                'required'      \r\n              ];\r\n              this.validatorTypes.messages['required.offeredSalaryInThousand'] =\r\n                validationMessages.offeredSalaryInThousand.required;\r\n     \r\n          if (\r\n            self.state.lwdDate &&\r\n            self.state.lwdDate > today          \r\n          ) {\r\n            showErrorToast(\r\n              '\"From\" and \"To\" date should be less than future date'\r\n            );\r\n              self.setState({\r\n                lwdDay : '',\r\n                lwdYear : '',\r\n                lwdMonth : '',\r\n                lwdDate:''\r\n              });\r\n          }  \r\n    }else{\r\n      this.validatorTypes.rules['offeredDesignation'] = '';\r\n      this.validatorTypes.messages['required.offeredDesignation'] = '';\r\n\r\n      this.validatorTypes.rules['nextEmployer'] = '';\r\n      this.validatorTypes.messages['required.nextEmployer'] = '';\r\n\r\n      this.validatorTypes.rules['offeredSalary'] = '';\r\n      this.validatorTypes.messages['required.offeredSalary'] = '';\r\n\r\n      this.validatorTypes.rules['offeredSalaryInLakh'] = '';\r\n      this.validatorTypes.messages['required.offeredSalaryInLakh'] = '';\r\n\r\n      this.validatorTypes.rules['offeredSalaryInThousand'] = '';\r\n      this.validatorTypes.messages['required.offeredSalaryInThousand'] = '';\r\n      self.setState({\r\n        lwdDay : '',\r\n        lwdYear : '',\r\n        lwdMonth : '',\r\n        lwdDate:''\r\n      });\r\n    } \r\n\r\n    this.props.validate(function(error) {  \r\n\r\n    \r\n      if (!error) {\r\n        if (\r\n          self.state.fromDate &&\r\n          self.state.fromDate > today &&\r\n          (self.state.toDate && self.state.toDate > today)\r\n        ) {\r\n          showErrorToast(\r\n            '\"From\" and \"To\" date should be less than future date'\r\n          );\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: '',\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (self.state.fromDate && self.state.fromDate > today) {\r\n          showErrorToast('\"From\" date should be less than future date');\r\n          self.setState({\r\n            startYear: '',\r\n            startMonth: '',\r\n            startDay: ''\r\n          });\r\n        } else if (self.state.toDate && self.state.toDate > today) {\r\n          showErrorToast('\"To\" date should be less than future date');\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        } else if (\r\n          self.state.fromDate !== '' &&\r\n          self.state.toDate !== '' &&\r\n          self.state.fromDate > self.state.toDate\r\n        ) {\r\n          showErrorToast(\r\n            'The \"to\" date should be greater than or equal to \"from\" date'\r\n          );\r\n          self.setState({\r\n            endYear: '',\r\n            endMonth: '',\r\n            endDay: ''\r\n          });\r\n        }else { \r\n          self.setState({ isLoading: true });       \r\n              self.handleSubmit();        \r\n          }\r\n        }\r\n    });\r\n  };\r\n\r\n  selectStartDate = (type, value) => {\r\n    if (type === 'startYear') {\r\n      this.setState({ startYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startMonth') {\r\n      this.setState({ startMonth: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'startDay') {\r\n      this.setState({ startDay: 1 }, () => this.selectDateChange());\r\n    }\r\n  };\r\n\r\n  selectEndDate = (type, value) => {\r\n    if (type === 'endYear') {\r\n      this.setState({ endYear: value }, () => this.selectDateChange());\r\n    }\r\n    if (type === 'endMonth') {\r\n      this.setState({ endMonth: value }, () => this.selectDateChange());\r\n    }\r\n    // if (type === 'endDay') {\r\n    //   this.setState({ endDay: 1 }, () => this.selectDateChange());\r\n    // }\r\n  };\r\n\r\n  selectLWDDate = (type, value) => {\r\n    if (type === 'lwdYear') {\r\n      this.setState({ lwdYear: value } ,() => this.selectLwdChange());\r\n    }\r\n    if (type === 'lwdMonth') {\r\n      this.setState({ lwdMonth: value },() => this.selectLwdChange());\r\n    }\r\n    if (type === 'lwdDay') {\r\n      this.setState({ lwdDay: 1 })// () => this.selectDateChange());\r\n    } \r\n  };\r\n\r\n  selectLwdChange = () => {\r\n    let lwdDate = '';  \r\n    let lwdDay = 1,\r\n       lwdYear = '',\r\n       lwdMonth = '';\r\n\r\n       if (this.state.lwdYear && this.state.lwdMonth) {\r\n        lwdDay = 1;\r\n        lwdMonth =\r\n          this.state.lwdMonth !== '' ? Number(this.state.lwdMonth) + 1 : '';\r\n          lwdYear = this.state.lwdYear !== '' ? this.state.lwdYear : '';\r\n          lwdDate = moment(lwdYear + '-' + lwdMonth + '-' + lwdDay);\r\n      }\r\n      this.setState({\r\n        lwdDate\r\n      });\r\n  }\r\n  \r\n\r\n  selectDateChange = () => {\r\n    let fromDate = '';\r\n    let toDate = '';\r\n    let startDay = 1,\r\n      startYear = '',\r\n      startMonth = '',\r\n      endDay = 1,\r\n      endMonth = '',\r\n      endYear = '';\r\n\r\n    if (this.state.startYear && this.state.startMonth) {\r\n      startDay = 1;\r\n      startMonth =\r\n        this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n      startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n    }\r\n\r\n    if (this.state.endYear && this.state.endMonth) {\r\n      endDay = 1;\r\n      endMonth =\r\n        this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n      endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n    }\r\n\r\n    if (toDate && fromDate) {\r\n      if (fromDate.isAfter(toDate)) {\r\n        console.log('dd');\r\n        this.setState({\r\n          endDay: startDay,\r\n          endMonth: startMonth - 1,\r\n          endYear: startYear,\r\n          fromDate,\r\n          toDate\r\n        });\r\n      } else {\r\n        this.setState({\r\n          fromDate,\r\n          toDate\r\n        });\r\n      }\r\n    }\r\n  }; \r\n\r\n  handleSubmit() {\r\n    let designation = this.state.designation;\r\n    let organisation = this.state.organisation;\r\n    let currentCompany = this.state.currentCompany;\r\n    let currentSalary = this.state.currentSalary;\r\n    let currentSalaryInLakh = this.state.lakh;\r\n    let currentSalaryInThousand = this.state.thousand;\r\n    let describe = this.state.describe;\r\n    let noticePeriod = this.state.noticePeriod;\r\n    let offeredSalary = this.state.offeredSalary;\r\n    let offeredSalaryInLakh = this.state.offeredSalaryInLakh;\r\n    let offeredSalaryInThousand = this.state.offeredSalaryInThousand;\r\n    let offeredDesignation = this.state.offeredDesignation;\r\n    let nextEmployer = this.state.nextEmployer;\r\n    let userId= this.props.user.userId;\r\n    let employmentId=  this.state.employmentId;\r\n   \r\n   \r\n    console.log('this.state.startDay -- ',this.state.startDay);\r\n\r\n    let startDay = 1;\r\n    let startMonth =\r\n      this.state.startMonth !== '' ? Number(this.state.startMonth) + 1 : '';\r\n    let startYear = this.state.startYear !== '' ? this.state.startYear : '';\r\n    let fromDate = '';\r\n    if (startDay && startMonth && startYear) {\r\n      fromDate = moment(startYear + '-' + startMonth + '-' + startDay);\r\n      fromDate = moment(fromDate).valueOf();\r\n    }\r\n\r\n    let endDay = 1;\r\n    let endMonth =\r\n      this.state.endMonth !== '' ? Number(this.state.endMonth) + 1 : '';\r\n    let endYear = this.state.endYear !== '' ? this.state.endYear : '';\r\n    let toDate = '';\r\n    if (endDay && endMonth && endYear) {\r\n      toDate = moment(endYear + '-' + endMonth + '-' + endDay);\r\n      toDate = moment(toDate).valueOf();\r\n      toDate = this.state.todaysDate ? '' : toDate;\r\n    }   \r\n\r\n   \r\n    let lwdDay = this.state.lwdDay !== '' ? this.state.lwdDay : '';\r\n    let lwdMonth =\r\n      this.state.lwdMonth !== '' ? Number(this.state.lwdMonth) + 1 : '';\r\n    let lwdYear = this.state.lwdYear !== '' ? this.state.lwdYear : '';\r\n    let lwdDate = '';\r\n    if(this.state.lwdMonth && this.state.lwdDay && this.state.lwdYear) {\r\n      lwdDate = moment(lwdYear + '-' + lwdMonth + '-' + lwdDay);\r\n      lwdDate = moment(lwdDate).valueOf();\r\n    }\r\n  \r\n\r\n    let data = {\r\n      employmentId,\r\n      userId,\r\n      designation,\r\n      organisation,\r\n      currentCompany,\r\n      currentSalary,\r\n      currentSalaryInLakh,\r\n      currentSalaryInThousand,\r\n      describe,\r\n      noticePeriod,\r\n      offeredSalary,\r\n      offeredSalaryInLakh,\r\n      offeredSalaryInThousand,\r\n      offeredDesignation,\r\n      startDate:fromDate,\r\n      endDate:toDate,\r\n      lastWorkingDate:lwdDate,\r\n      nextEmployer    \r\n    };\r\n\r\n    let self = this;\r\n    console.log('this.state.employmentId -- ',this.state.employmentId);\r\n    if (!this.state.employmentId || this.state.employmentId === '') {\r\n      theRapidHireApiService('addEmployment', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {      \r\n            self.setState({ isLoading: false });\r\n            self.closeEmploymentModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editEmployment', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {        \r\n            self.closeEmploymentModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n  currentCheckBox = event => {\r\n    if (event.target.checked) {\r\n      this.validatorTypes.rules['endDay'] = '';\r\n      this.validatorTypes.rules['endMonth'] = '';\r\n      this.validatorTypes.rules['endYear'] = '';\r\n      this.setState({\r\n        toDate: '',\r\n        todaysDate: true,\r\n        endDay: '',\r\n        endMonth: '',\r\n        endYear: '',\r\n        currentCompany: false\r\n      });\r\n\r\n      this.validatorTypes.rules['noticePeriod'] = 'required';\r\n      this.validatorTypes.messages['required.noticePeriod'] =\r\n        validationMessages.noticePeriod.required;\r\n\r\n        this.validatorTypes.rules['currentSalary'] = [\r\n          'required'      \r\n        ];\r\n        this.validatorTypes.messages['required.currentSalary'] =\r\n          validationMessages.currentSalary.required;\r\n\r\n          this.validatorTypes.rules['lakh'] = [\r\n            'required'      \r\n          ];\r\n          this.validatorTypes.messages['required.lakh'] =\r\n            validationMessages.lakh.required;\r\n\r\n            this.validatorTypes.rules['thousand'] = [\r\n              'required'      \r\n            ];\r\n            this.validatorTypes.messages['required.thousand'] =\r\n              validationMessages.thousand.required;\r\n\r\n    } else {\r\n\r\n      this.validatorTypes.rules['noticePeriod'] = '';\r\n      this.validatorTypes.messages['required.noticePeriod'] = '';\r\n\r\n      this.validatorTypes.rules['currentSalary'] = '';\r\n      this.validatorTypes.messages['required.currentSalary'] = '';\r\n\r\n      this.validatorTypes.rules['lakh'] = '';\r\n      this.validatorTypes.messages['required.lakh'] = '';\r\n\r\n      this.validatorTypes.rules['thousand'] = '';\r\n      this.validatorTypes.messages['required.thousand'] = '';\r\n\r\n      this.validatorTypes.rules['endDay'] = 'required';\r\n      this.validatorTypes.messages['required.endDay'] =\r\n        validationMessages.day.required;\r\n\r\n      this.validatorTypes.rules['endMonth'] = 'required';\r\n      this.validatorTypes.messages['required.endMonth'] =\r\n        validationMessages.month.required;\r\n\r\n      this.validatorTypes.rules['endYear'] = 'required';\r\n      this.validatorTypes.messages['required.endYear'] =\r\n        validationMessages.year.required;\r\n\r\n      this.setState({\r\n        todaysDate: false,\r\n        endYear: '',\r\n        endMonth: '',\r\n        endDay: '',\r\n        currentCompany: true     \r\n      });\r\n    }   \r\n  };\r\n\r\n\r\n  deleteEmployment = event => {\r\n    let employmentId= this.state.employmentId,self= this;\r\n    theRapidHireApiService('deleteEmployment', {employmentId})\r\n    .then(response => {\r\n      if (response.data.status === 'Success') {        \r\n        self.closeEmploymentModal('save');\r\n        self.setState({ isLoading: false });\r\n      }\r\n    })\r\n    .catch(error => {\r\n      self.setState({ isLoading: false });\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  closeEmploymentModal = status => {   \r\n    this.setState({\r\n      employmentModal: false\r\n      \r\n    });   \r\n    this.props.closeEmploymentComponent();\r\n  };\r\n\r\n  render() {   \r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>   \r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.employmentModal}\r\n          onHide={this.closeEmploymentModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.EmploymentId || this.state.EmploymentId === ''\r\n                ? 'Add Employment'\r\n                : 'Edit Employment'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('title')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Designation</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a designation\"\r\n                      name=\"designation\"\r\n                      value={this.state.designation}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('designation'))}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n           \r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('organisation')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Organisation</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a organisation\"\r\n                      name=\"organisation\"\r\n                      value={this.state.organisation}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(this.props.getValidationMessages('organisation'))}\r\n                  </Col>\r\n                </FormGroup>              \r\n\r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Is this your current company ?\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"currentCompany\"\r\n                          className=\"radio-primary\"\r\n                          value={true}\r\n                          checked={\r\n                            this.state.currentCompany === true ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Yes\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"currentCompany\"\r\n                          className=\"radio-primary\"\r\n                          value={false}\r\n                          checked={\r\n                            this.state.currentCompany === false ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          No\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date From\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"startYear\"\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.startYear}\r\n                          onChange={year =>\r\n                            this.selectStartDate('startYear', year)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"startMonth\"\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.startYear}\r\n                          value={this.state.startMonth}\r\n                          onChange={month =>\r\n                            this.selectStartDate('startMonth', month)\r\n                          }\r\n                        />\r\n                      </div>                     \r\n                    </div>                  \r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Date To\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"endYear\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.endYear}\r\n                          onChange={year => this.selectEndDate('endYear', year)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"endMonth\"\r\n                          disabled={this.state.todaysDate ? true : false}\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.endYear}\r\n                          value={this.state.endMonth}\r\n                          onChange={month =>\r\n                            this.selectEndDate('endMonth', month)\r\n                          }\r\n                        />\r\n                      </div>                     \r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <Checkbox\r\n                        className=\"checkbox-primary \"\r\n                        onClick={this.currentCheckBox.bind(this)}\r\n                        defaultChecked={this.state.currentCompany ? true : false}\r\n                      >\r\n                        Are you working here now\r\n                        <span className=\"check\" />\r\n                      </Checkbox>\r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                {this.state.todaysDate === true ? <div>\r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Current Salary\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"currentSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"indian\"\r\n                          checked={\r\n                            this.state.currentSalary === 'indian' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Indian\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"currentSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"dollar\"\r\n                          checked={\r\n                            this.state.currentSalary === 'dollar' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Dollars\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                    </Col>\r\n                    {renderMessage(\r\n                          this.props.getValidationMessages('currentSalary')\r\n                        )}\r\n                  </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Salary\r\n                </Col>                \r\n                  <Col sm={9}>                \r\n                  <div className=\"dob\">\r\n                      <div className=\"form-group\">                     \r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"lakh\"\r\n                          name=\"lakh\"\r\n                          value={this.state.lakh}                          \r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >                        \r\n                       <option value=\"\">lakh</option>\r\n                       <option value={1}>1 lakh</option>\r\n                       <option value={2}>2 lakh</option>\r\n                       <option value={3}>3 lakh</option>\r\n                       <option value={4}>4 lakh</option>\r\n                       <option value={5}>5 lakh</option>    \r\n                       <option value={6}>6 lakh</option>        \r\n                       <option value={7}>7 lakh</option>\r\n                       <option value={8}>8 lakh</option>\r\n                       <option value={9}>9 lakh</option>\r\n                       <option value={10}>10 lakh</option>\r\n                       <option value={11}>11 lakh</option>    \r\n                       <option value={12}>12 lakh</option>                                      \r\n                      </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('lakh')\r\n                        )}\r\n                      </div>              \r\n                     <div className=\"form-group\">                                              \r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"thousand\"\r\n                          name=\"thousand\"\r\n                          value={this.state.thousand}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >      \r\n                        <option value=\"\">thousand</option>\r\n                       <option value={1}>1 thousand</option>\r\n                       <option value={2}>2 thousand</option>\r\n                       <option value={3}>3 thousand</option>\r\n                       <option value={4}>4 thousand</option>\r\n                       <option value={5}>5 thousand</option>    \r\n                       <option value={6}>6 thousand</option>        \r\n                       <option value={7}>7 thousand</option>\r\n                       <option value={8}>8 thousand</option>\r\n                       <option value={9}>9 thousand</option>\r\n                       <option value={10}>10 thousand</option>\r\n                       <option value={11}>11 thousand</option>    \r\n                       <option value={12}>12 thousand</option>                                      \r\n                      </FormControl>      \r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('thousand')\r\n                        )}           \r\n                      </div>                                    \r\n                      </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n                </div>:''}\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Describe</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      componentClass=\"textarea\"\r\n                      placeholder=\"Tell us how this made you unique\"\r\n                      name=\"describe\"\r\n                      value={this.state.describe}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"1000\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('description')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n              {this.state.todaysDate === true ? \r\n                <FormGroup>\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Notice Period\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"custom-select\">\r\n                      <span className=\"icon-down_arrow selectIcon\" />\r\n                      <FormControl\r\n                        componentClass=\"select\"\r\n                        placeholder=\"Select Notice Period\"\r\n                        name=\"noticePeriod\"\r\n                        value={this.state.noticePeriod}\r\n                        onChange={this.handleChange}\r\n                        onClick={this.handleChange}\r\n                        inputRef={element => {\r\n                          this.competencyDropdown = element;\r\n                        }}\r\n                      > \r\n                       <option value=\"\">Select Achievement Level</option>\r\n                       <option value={1}>15 days or less</option>\r\n                       <option value={2}>1 month</option>\r\n                       <option value={3}>2 month</option>\r\n                       <option value={4}>3 month</option>\r\n                       <option value={5}>more than 3 month</option>    \r\n                       <option value={6}>Serving notice period</option>                                      \r\n                      </FormControl>\r\n                    </div>                   \r\n                  </Col>\r\n                </FormGroup>\r\n              :''}\r\n             {this.state.noticePeriod == 6 ? <div>\r\n                   <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Last Working Days\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <YearPicker\r\n                          id=\"year\"\r\n                          name=\"lwdYear\"\r\n                          classes=\"form-control\"\r\n                          defaultValue=\"Year\"\r\n                          end={moment().year()}\r\n                          reverse\r\n                          value={this.state.lwdYear}\r\n                          onChange={year =>\r\n                            this.selectLWDDate('lwdYear', year)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <MonthPicker\r\n                          id=\"month\"\r\n                          name=\"lwdMonth\"\r\n                          classes=\"form-control\"\r\n                          defaultValue={'Month'}\r\n                          short\r\n                          endYearGiven\r\n                          year={this.state.lwdYear}\r\n                          value={this.state.lwdMonth}\r\n                          onChange={month =>\r\n                            this.selectLWDDate('lwdYear', month)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <DayPicker\r\n                          defaultValue=\"Day\"\r\n                          id=\"day\"\r\n                          name=\"lwdDay\"\r\n                          classes=\"form-control\"\r\n                          year={this.state.lwdYear}\r\n                          month={this.state.lwdMonth}\r\n                          endYearGiven\r\n                          value={this.state.lwdDay}\r\n                          onChange={day =>\r\n                            this.selectLWDDate('lwdDay', day)\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup> \r\n\r\n                <FormGroup controlId=\"formHorizontalPassword\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Offered Salary\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"flex\">\r\n                        <Radio\r\n                          name=\"offeredSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"indian\"\r\n                          checked={\r\n                            this.state.offeredSalary === 'indian' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Indian\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                        <Radio\r\n                          name=\"offeredSalary\"\r\n                          className=\"radio-primary\"\r\n                          value=\"dollar\"\r\n                          checked={\r\n                            this.state.offeredSalary === 'dollar' ? true : false\r\n                          }\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          Dollars\r\n                          <div className=\"check\" />\r\n                        </Radio>{' '}\r\n                      </div>\r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('offeredSalary')\r\n                        )}\r\n                    </Col>\r\n                  </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\"> \r\n                <Col componentClass={ControlLabel} sm={3}>\r\n                       Salary\r\n                </Col>                \r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"lakh\"\r\n                          name=\"offeredSalaryInLakh\"\r\n                          value={this.state.offeredSalaryInLakh}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >\r\n                        <option value=\"\">lakh</option>\r\n                       <option value={1}>1 lakh</option>\r\n                       <option value={2}>2 lakh</option>\r\n                       <option value={3}>3 lakh</option>\r\n                       <option value={4}>4 lakh</option>\r\n                       <option value={5}>5 lakh</option>    \r\n                       <option value={6}>6 lakh</option>        \r\n                       <option value={7}>7 lakh</option>\r\n                       <option value={8}>8 lakh</option>\r\n                       <option value={9}>9 lakh</option>\r\n                       <option value={10}>10 lakh</option>\r\n                       <option value={11}>11 lakh</option>    \r\n                       <option value={12}>12 lakh</option>                                      \r\n                      </FormControl>      \r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('offeredSalaryInLakh')\r\n                        )}               \r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                      <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"thousand\"\r\n                          name=\"offeredSalaryInThousand\"\r\n                          value={this.state.offeredSalaryInThousand}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >  \r\n                         <option value=\"\">thousand</option>\r\n                       <option value={1}>1 thousand</option>\r\n                       <option value={2}>2 thousand</option>\r\n                       <option value={3}>3 thousand</option>\r\n                       <option value={4}>4 thousand</option>\r\n                       <option value={5}>5 thousand</option>    \r\n                       <option value={6}>6 thousand</option>        \r\n                       <option value={7}>7 thousand</option>\r\n                       <option value={8}>8 thousand</option>\r\n                       <option value={9}>9 thousand</option>\r\n                       <option value={10}>10 thousand</option>\r\n                       <option value={11}>11 thousand</option>    \r\n                       <option value={12}>12 thousand</option>                                      \r\n                      </FormControl>  \r\n                      {renderMessage(\r\n                          this.props.getValidationMessages('offeredSalaryInThousand')\r\n                        )}                                \r\n                      </div>                     \r\n                    </div>                   \r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"  \r\n                  className={this.getClasses('offeredDesignation')}                \r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Offered Designation</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add a Designation\"\r\n                      name=\"offeredDesignation\"\r\n                      value={this.state.offeredDesignation}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />                    \r\n                  </Col>\r\n                  {renderMessage(\r\n                      this.props.getValidationMessages('offeredDesignation')\r\n                  )}\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\" \r\n                  className={this.getClasses('nextEmployer')}               \r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>Next Employer</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add your next employer\"\r\n                      name=\"nextEmployer\"\r\n                      value={this.state.nextEmployer}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />                  \r\n                  </Col>\r\n                  {renderMessage(\r\n                      this.props.getValidationMessages('nextEmployer')\r\n                  )}\r\n                </FormGroup>\r\n              </div>:''} \r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.deleteEmployment.bind(this)}              \r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeEmploymentModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddEmployment = validation(strategy)(addEmployment);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n  //  user: state.User.userData    \r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addEmployment);"]},"metadata":{},"sourceType":"module"}