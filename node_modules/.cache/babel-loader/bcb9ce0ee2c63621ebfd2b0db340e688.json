{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\user\\\\profile\\\\slotArrangement.js\";\nimport React, { Component } from 'react';\nimport Header from '../header/header';\nimport { Button, Media, Row, Col, FormControl, FormGroup, InputGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\nimport _ from 'lodash'; //import Summary from './summary/addSummary';\n//import Education from './education/addEducation';\n//import DatePicker from 'react-datepicker';\n//import DatePicker from 'react-date-picker';\n\nimport { Week, Month, Agenda, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\nimport { DataManager, Query, Predicate, Internationalization } from '@syncfusion/ej2-data';\nimport { extend } from '@syncfusion/ej2-base';\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\"; //import \"@syncfusion/ej2-split-buttons/styles/material.css\";\n\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\"; //import '../node_modules/@syncfusion/ej2/material.css';\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\n\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\"; //import Img from '../../common/cropper/img';\n\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'; //import moment from 'moment';\n\nimport { showErrorToast, uploadToAzure, limitCharacter, SampleNextArrow, SamplePrevArrow, getThumbImage, ZoomInAndOut } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig'; //import AvailableTimes from 'react-available-times';\n// import {\n//   actionGetStudentPersonalInfo,\n//   actionGetAllCompetency,\n//   actionGetAchievementsByUser,\n//   actionGetRecommendationsByUser,\n//   actionUpdateUserInfo,\n//   actionGetAchievementsData\n// } from '../../common/core/redux/actions';\n\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\n\nclass SlotArrangement extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      startDate: new Date()\n    };\n  }\n\n  componentWillMount() {\n    //let userId = this.props.user.userId;\n    document.body.classList.add('light-theme');\n    document.body.classList.add('absoluteHeader');\n    document.body.classList.remove('home');\n    document.body.classList.remove('fixedHeader');\n  }\n\n  componentWillReceiveProps(res) {}\n\n  componentDidMount() {\n    this.getSlotList();\n  }\n\n  getSlotList(userId) {\n    theRapidHireApiService('getProjectListById', {\n      userId\n    }).then(response => {\n      if (response.data.statusCode === 200) {\n        let projectListData = this.state.projectListData;\n        projectListData = response.data.resourceData[0];\n        this.setState({\n          projectListData: projectListData\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  onPopupOpen(args) {\n    console.log(args);\n    let self = this;\n    let data = {\n      startTime: args.data.StartTime,\n      endTime: args.data.EndTime,\n      userId: 17\n    };\n    theRapidHireApiService('createSlot', data).then(response => {\n      if (response.data.statusCode === 200) {\n        self.setState({\n          isLoading: false\n        });\n        self.closeProjectModal('save');\n      }\n    }).catch(error => {\n      self.setState({\n        isLoading: false\n      });\n      console.log(error);\n    });\n    args.cancel = true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"innerWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"fullWidthDatepicker \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SlotArrangement);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\user\\profile\\slotArrangement.js"],"names":["React","Component","Header","Button","Media","Row","Col","FormControl","FormGroup","InputGroup","connect","bindActionCreators","ToastContainer","Slider","_","Week","Month","Agenda","ScheduleComponent","ViewsDirective","ViewDirective","ResourcesDirective","ResourceDirective","Inject","DataManager","Query","Predicate","Internationalization","extend","ImageCropper","DownloadLink","DatePickerComponent","TimePickerComponent","showErrorToast","uploadToAzure","limitCharacter","SampleNextArrow","SamplePrevArrow","getThumbImage","ZoomInAndOut","theRapidHireApiService","CONSTANTS","achievementDefaultImage","SpiderChart","SlotArrangement","constructor","props","context","state","isOpen","startDate","Date","componentWillMount","document","body","classList","add","remove","componentWillReceiveProps","res","componentDidMount","getSlotList","userId","then","response","data","statusCode","projectListData","resourceData","setState","catch","err","console","log","onPopupOpen","args","self","startTime","StartTime","endTime","EndTime","isLoading","closeProjectModal","error","cancel","render","mapStateToProps","user","User","userData","parent","parentData","student","Student","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../header/header';\r\nimport {\r\n  Button,\r\n  Media,\r\n  Row,\r\n  Col,\r\n  FormControl,FormGroup,\r\n  InputGroup\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Slider from 'react-slick';\r\nimport _ from 'lodash';\r\n\r\n \r\n\r\n//import Summary from './summary/addSummary';\r\n//import Education from './education/addEducation';\r\n\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from 'react-date-picker';\r\n\r\nimport { Week, Month, Agenda, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\r\nimport { DataManager, Query, Predicate, Internationalization } from '@syncfusion/ej2-data';\r\n\r\n\r\nimport { extend } from '@syncfusion/ej2-base';\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\n//import \"@syncfusion/ej2-split-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\n//import '../node_modules/@syncfusion/ej2/material.css';\r\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport DownloadLink from \"react-download-link\";\r\n//import Img from '../../common/cropper/img';\r\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\n//import moment from 'moment';\r\nimport {\r\n  showErrorToast,\r\n  uploadToAzure,\r\n  limitCharacter,\r\n  SampleNextArrow,\r\n  SamplePrevArrow,\r\n  getThumbImage,\r\n  ZoomInAndOut\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n//import AvailableTimes from 'react-available-times';\r\n// import {\r\n//   actionGetStudentPersonalInfo,\r\n//   actionGetAllCompetency,\r\n//   actionGetAchievementsByUser,\r\n//   actionGetRecommendationsByUser,\r\n//   actionUpdateUserInfo,\r\n//   actionGetAchievementsData\r\n// } from '../../common/core/redux/actions';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport SpiderChart from '../../common/spiderChart/spiderChart';\r\n\r\n\r\n\r\n\r\nclass SlotArrangement extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.state = {      \r\n      isOpen: false,\r\n      startDate: new Date()\r\n    };\r\n  \r\n    \r\n    \r\n  }\r\n\r\n  componentWillMount() {\r\n    //let userId = this.props.user.userId;\r\n  \r\n    document.body.classList.add('light-theme');\r\n    document.body.classList.add('absoluteHeader');\r\n    document.body.classList.remove('home');\r\n    document.body.classList.remove('fixedHeader');\r\n  }\r\n\r\n  componentWillReceiveProps(res) {\r\n    \r\n  }\r\n\r\n  componentDidMount() {  \r\n    this.getSlotList();\r\n  }\r\n \r\n  getSlotList(userId){\r\n    theRapidHireApiService('getProjectListById',{userId})\r\n    .then(response => {     \r\n      if (response.data.statusCode === 200) {\r\n         let projectListData= this.state.projectListData;\r\n         projectListData= response.data.resourceData[0];\r\n         this.setState({projectListData: projectListData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  onPopupOpen(args) {\r\n    console.log(args);\r\n    let self= this;\r\n    let data={\r\n      startTime: args.data.StartTime,\r\n      endTime: args.data.EndTime,\r\n      userId: 17\r\n    };\r\n    theRapidHireApiService('createSlot', data)\r\n    .then(response => {\r\n      if (response.data.statusCode === 200) {      \r\n        self.setState({ isLoading: false });\r\n        self.closeProjectModal('save');\r\n      } \r\n    })\r\n    .catch(error => {\r\n      self.setState({ isLoading: false });\r\n      console.log(error);\r\n    });\r\n\r\n    args.cancel = true;\r\n}\r\n\r\n\r\n \r\n  render() {\r\n    return (\r\n      <div className=\"innerWrapper\">      \r\n       <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        /> \r\n          <Header {...this.props} />    \r\n \r\n  <div >\r\n          <div >\r\n            <div className=\"loader\">\r\n <FormGroup\r\n                    className={`fullWidthDatepicker `}>\r\n                   \r\n                    </FormGroup> \r\n\r\n      \r\n</div></div></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    student: state.Student\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n     \r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SlotArrangement);\r\n"]},"metadata":{},"sourceType":"module"}