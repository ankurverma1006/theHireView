{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\interviewer\\\\profile\\\\timeSlots.js\";\nimport React, { Component } from 'react';\nimport Header from '../header/header';\nimport { Button, Media, Row, Col, FormControl, FormGroup, InputGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { Week, Month, Agenda, TimelineViews, TimelineMonth, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\nimport moment from 'moment';\nimport { extend, createElement } from '@syncfusion/ej2-base';\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\"; //import \"@syncfusion/ej2-split-buttons/styles/material.css\";\n\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\"; //import '../node_modules/@syncfusion/ej2/material.css';\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\n\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\"; //import Img from '../../common/cropper/img';\n\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'; //import moment from 'moment';\n\nimport { showErrorToast, ZoomInAndOut } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\n\nclass TimeSlots extends Component {\n  constructor(props) {\n    super(...arguments);\n\n    this.handleChange = date => {\n      console.log(date);\n      this.setState({\n        startDate: date\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      startDate: new Date(),\n      timeData: []\n    };\n  }\n\n  componentDidMount() {\n    let user = this.props.otherUser ? this.props.otherUser : this.props.user;\n\n    if (user) {\n      let userId = user.userId;\n      this.setState({\n        userId: userId,\n        user: user\n      });\n      this.getUserProfileData(userId);\n      this.getSlotDetails(userId);\n    }\n  }\n\n  getUserProfileData(userId) {\n    theRapidHireApiService('getUserSkillsById', {\n      userId\n    }).then(response => {\n      if (response.data.status === 'Success') {\n        console.log(response.data);\n        let userProfile = response.data.result[0];\n        this.setState({\n          userProfile: userProfile\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getSlotDetails(userId) {\n    let interviewerId = userId;\n    theRapidHireApiService('getTimeSlotByInterviewer', {\n      interviewerId\n    }).then(response => {\n      if (response.data.status === 'Success') {\n        console.log(response);\n        let timeData = [];\n        response.data.result.forEach(function (item, index) {\n          let launchDate = new Date(item.startTimeStamp);\n          let day = launchDate.getUTCDate();\n          let month = launchDate.getMonth();\n          let year = launchDate.getFullYear();\n          let min = launchDate.getMinutes();\n          let hour = launchDate.getHours();\n          let startDate = new Date(year, month, day, hour, min);\n          launchDate = new Date(item.endTimeStamp);\n          day = launchDate.getUTCDate();\n          month = launchDate.getMonth();\n          year = launchDate.getFullYear();\n          min = launchDate.getMinutes();\n          hour = launchDate.getHours();\n          let endDate = new Date(year, month, day, hour, min);\n          console.log(item.userId);\n          timeData.push({\n            Subject: 'Available',\n            slotId: item.slotId,\n            text: 'Photogenic',\n            userId: item.userId,\n            StartTime: startDate,\n            EndTime: endDate,\n            color: item.userId ? '#1aaa55' : '#7fa900'\n          });\n        });\n        this.setState({\n          timeData: timeData\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  onPopupOpen(args) {\n    console.log(args);\n\n    if (moment(args.data.StartTime).valueOf() < moment().valueOf()) {\n      args.cancel = true;\n      showErrorToast('Selected time can not be less than current time.');\n      return false;\n    }\n\n    console.log(args.data.StartTime);\n    let self = this;\n    let startDate = new Date(args.data.StartTime);\n    let endDate = new Date(args.data.EndTime);\n    console.log(moment(args.data.StartTime));\n    let data = {\n      slotRegisteredDate: new Date(moment(args.data.StartTime).format(\"DD-MMM-YYYY\")).valueOf(),\n      startTimeStamp: moment(startDate).valueOf(),\n      endTimeStamp: moment(endDate).valueOf(),\n      interviewerId: this.state.userId\n    };\n\n    if (!args.data.slotId) {\n      theRapidHireApiService('createSlot', data).then(response => {\n        if (response.data.status === \"Success\") {\n          self.setState({\n            isLoading: false\n          });\n          self.getSlotDetails(self.state.userId);\n        }\n      }).catch(error => {\n        // self.setState({ isLoading: false });\n        console.log(error);\n      });\n    } else {\n      let slotId = args.data.slotId;\n      console.log(args.data);\n      theRapidHireApiService('deleteTimeSlotByInterviewer', {\n        slotId\n      }).then(response => {\n        if (response.data.status === \"Success\") {\n          self.setState({\n            isLoading: false\n          });\n          self.getSlotDetails(self.state.userId);\n        }\n      }).catch(error => {\n        // self.setState({ isLoading: false });\n        console.log(error);\n      });\n    }\n\n    if (args.elementType == 'workCells' || args.elementType == 'monthCells') {\n      let weekEnds = [0, 6];\n\n      if (weekEnds.indexOf(args.date.getDay()) >= 0) {\n        let ele = createElement('div', {\n          innerHTML: \"<img src='https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg' />\",\n          className: 'templatewrap'\n        });\n        args.element.appendChild(ele);\n      }\n    }\n\n    args.cancel = true;\n  }\n\n  onRenderCell(args) {}\n\n  render() {\n    let self = this;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-content main-panel1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.state.userProfile ? React.createElement(ScheduleComponent, {\n      width: \"100%\",\n      height: \"800px\",\n      ref: schedule => this.scheduleObj = schedule,\n      popupOpen: this.onPopupOpen.bind(this),\n      showQuickInfo: false //  eventRendered={this.onEventRendered.bind(this)} selectedDate={new Date(2018, 3, 1)}\n      ,\n      onChange: this.handleChange.bind(this),\n      eventSettings: {\n        dataSource: this.state.timeData,\n        field: {\n          id: 'slotId',\n          subject: {\n            name: 'Subject'\n          }\n        }\n      },\n      renderCell: this.onRenderCell.bind(this),\n      cssClass: \"schedule-cell-dimension\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(ViewsDirective, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(ViewDirective, {\n      option: \"Day\",\n      startHour: \"09:30\",\n      endHour: \"18:00\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(ViewDirective, {\n      option: \"Week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(ViewDirective, {\n      option: \"Agenda\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(ResourcesDirective, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(ResourceDirective, {\n      field: \"slotId\",\n      title: \"Slot\",\n      name: \"Slot\",\n      allowMultiple: false,\n      textField: \"text\",\n      dataSource: self.state.timeData,\n      idField: \"id\",\n      colorField: \"color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })), React.createElement(Inject, {\n      services: [Week, Agenda],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"container main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Kindly complete profile first\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nexport default connect(mapStateToProps, null)(TimeSlots);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\interviewer\\profile\\timeSlots.js"],"names":["React","Component","Header","Button","Media","Row","Col","FormControl","FormGroup","InputGroup","connect","ToastContainer","Week","Month","Agenda","TimelineViews","TimelineMonth","ScheduleComponent","ViewsDirective","ViewDirective","ResourcesDirective","ResourceDirective","Inject","moment","extend","createElement","ImageCropper","DownloadLink","DatePickerComponent","TimePickerComponent","showErrorToast","ZoomInAndOut","theRapidHireApiService","CONSTANTS","TimeSlots","constructor","props","arguments","handleChange","date","console","log","setState","startDate","state","isOpen","Date","timeData","componentDidMount","user","otherUser","userId","getUserProfileData","getSlotDetails","then","response","data","status","userProfile","result","catch","err","interviewerId","forEach","item","index","launchDate","startTimeStamp","day","getUTCDate","month","getMonth","year","getFullYear","min","getMinutes","hour","getHours","endTimeStamp","endDate","push","Subject","slotId","text","StartTime","EndTime","color","onPopupOpen","args","valueOf","cancel","self","slotRegisteredDate","format","isLoading","error","elementType","weekEnds","indexOf","getDay","ele","innerHTML","className","element","appendChild","onRenderCell","render","schedule","scheduleObj","bind","dataSource","field","id","subject","name","mapStateToProps","User","userData","parent","parentData","otherUserInfoData","student","Student"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,GAHF,EAIEC,GAJF,EAKEC,WALF,EAKcC,SALd,EAMEC,UANF,QAOO,iBAPP;AAQA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA6BC,aAA7B,EAA4CC,aAA5C,EAA2DC,iBAA3D,EAA8EC,cAA9E,EAA8FC,aAA9F,EAA6GC,kBAA7G,EAAiIC,iBAAjI,EAAoJC,MAApJ,QAAkK,gCAAlK;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,MAAT,EAAgBC,aAAhB,QAAqC,sBAArC;AACA,OAAO,0CAAP;AACA,OAAO,6CAAP;AACA,OAAO,+CAAP;AACA,OAAO,+CAAP;AACA,OAAO,4CAAP;AACA,OAAO,2CAAP;AACA,OAAO,iDAAP;AACA,OAAO,4CAAP,C,CACA;;AACA,OAAO,oDAAP,C,CACA;AACA;;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CACA;;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,SAASC,mBAAT,QAAoC,iCAApC,C,CACA;;AACA,SACEC,cADF,EACkBC,YADlB,QAEO,8BAFP;AAGA,OAAOC,sBAAP,MAAmC,kCAAnC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;;AAGA,MAAMC,SAAN,SAAwBjC,SAAxB,CAAkC;AAC/BkC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACd,UAAM,GAAGC,SAAT;;AADc,SAiFpBC,YAjFoB,GAiFLC,IAAI,IAAI;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEJ;AADC,OAAd;AAGD,KAtFmB;;AAElB,SAAKK,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXF,MAAAA,SAAS,EAAE,IAAIG,IAAJ,EAFA;AAGXC,MAAAA,QAAQ,EAAC;AAHE,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,IAAI,GAAE,KAAKb,KAAL,CAAWc,SAAX,GAAsB,KAAKd,KAAL,CAAWc,SAAjC,GAA4C,KAAKd,KAAL,CAAWa,IAAjE;;AACA,QAAGA,IAAH,EAAQ;AACN,UAAIE,MAAM,GAAEF,IAAI,CAACE,MAAjB;AACA,WAAKT,QAAL,CAAc;AAACS,QAAAA,MAAM,EAAEA,MAAT;AAAgBF,QAAAA,IAAI,EAACA;AAArB,OAAd;AACA,WAAKG,kBAAL,CAAwBD,MAAxB;AACA,WAAKE,cAAL,CAAoBF,MAApB;AACD;AACF;;AAEDC,EAAAA,kBAAkB,CAACD,MAAD,EAAQ;AACxBnB,IAAAA,sBAAsB,CAAC,mBAAD,EAAqB;AAACmB,MAAAA;AAAD,KAArB,CAAtB,CACCG,IADD,CACMC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,SAA7B,EAAwC;AACtCjB,QAAAA,OAAO,CAACC,GAAR,CAAYc,QAAQ,CAACC,IAArB;AACC,YAAIE,WAAW,GAAGH,QAAQ,CAACC,IAAT,CAAcG,MAAd,CAAqB,CAArB,CAAlB;AACD,aAAKjB,QAAL,CAAc;AAACgB,UAAAA,WAAW,EAACA;AAAb,SAAd;AAED;AACF,KARD,EASCE,KATD,CASOC,GAAG,IAAI;AACZrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAZ;AACD,KAXD;AAYD;;AAEDR,EAAAA,cAAc,CAACF,MAAD,EAAQ;AACpB,QAAIW,aAAa,GAAEX,MAAnB;AACAnB,IAAAA,sBAAsB,CAAC,0BAAD,EAA4B;AAAC8B,MAAAA;AAAD,KAA5B,CAAtB,CACCR,IADD,CACMC,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,SAA7B,EAAwC;AACtCjB,QAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACA,YAAIR,QAAQ,GAAG,EAAf;AACAQ,QAAAA,QAAQ,CAACC,IAAT,CAAcG,MAAd,CAAqBI,OAArB,CAA6B,UAASC,IAAT,EAAcC,KAAd,EAAoB;AAC/C,cAAIC,UAAU,GAAG,IAAIpB,IAAJ,CAASkB,IAAI,CAACG,cAAd,CAAjB;AACA,cAAIC,GAAG,GAAGF,UAAU,CAACG,UAAX,EAAV;AACA,cAAIC,KAAK,GAAGJ,UAAU,CAACK,QAAX,EAAZ;AACA,cAAIC,IAAI,GAAGN,UAAU,CAACO,WAAX,EAAX;AACA,cAAIC,GAAG,GAAGR,UAAU,CAACS,UAAX,EAAV;AACA,cAAIC,IAAI,GAAGV,UAAU,CAACW,QAAX,EAAX;AAEA,cAAIlC,SAAS,GAAE,IAAIG,IAAJ,CAAS0B,IAAT,EAAcF,KAAd,EAAoBF,GAApB,EAAwBQ,IAAxB,EAA6BF,GAA7B,CAAf;AAECR,UAAAA,UAAU,GAAG,IAAIpB,IAAJ,CAASkB,IAAI,CAACc,YAAd,CAAb;AACAV,UAAAA,GAAG,GAAGF,UAAU,CAACG,UAAX,EAAN;AACAC,UAAAA,KAAK,GAAGJ,UAAU,CAACK,QAAX,EAAR;AACAC,UAAAA,IAAI,GAAGN,UAAU,CAACO,WAAX,EAAP;AACAC,UAAAA,GAAG,GAAGR,UAAU,CAACS,UAAX,EAAN;AACAC,UAAAA,IAAI,GAAGV,UAAU,CAACW,QAAX,EAAP;AAED,cAAIE,OAAO,GAAE,IAAIjC,IAAJ,CAAS0B,IAAT,EAAcF,KAAd,EAAoBF,GAApB,EAAwBQ,IAAxB,EAA6BF,GAA7B,CAAb;AAEAlC,UAAAA,OAAO,CAACC,GAAR,CAAYuB,IAAI,CAACb,MAAjB;AACAJ,UAAAA,QAAQ,CAACiC,IAAT,CAAc;AACVC,YAAAA,OAAO,EAAE,WADC;AAEVC,YAAAA,MAAM,EAAElB,IAAI,CAACkB,MAFH;AAGVC,YAAAA,IAAI,EAAE,YAHI;AAIVhC,YAAAA,MAAM,EAAGa,IAAI,CAACb,MAJJ;AAKViC,YAAAA,SAAS,EAAEzC,SALD;AAMV0C,YAAAA,OAAO,EAAEN,OANC;AAOVO,YAAAA,KAAK,EAAEtB,IAAI,CAACb,MAAL,GAAc,SAAd,GAAyB;AAPtB,WAAd;AASH,SA7BC;AA8BF,aAAKT,QAAL,CAAc;AAACK,UAAAA,QAAQ,EAACA;AAAV,SAAd;AACC;AAEF,KAtCD,EAuCCa,KAvCD,CAuCOC,GAAG,IAAI;AACZrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAZ;AACD,KAzCD;AA0CD;;AASD0B,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChBhD,IAAAA,OAAO,CAACC,GAAR,CAAY+C,IAAZ;;AAEC,QAAGjE,MAAM,CAACiE,IAAI,CAAChC,IAAL,CAAU4B,SAAX,CAAN,CAA4BK,OAA5B,KAAyClE,MAAM,GAAGkE,OAAT,EAA5C,EAA+D;AAC9DD,MAAAA,IAAI,CAACE,MAAL,GAAc,IAAd;AACA5D,MAAAA,cAAc,CAAC,kDAAD,CAAd;AACA,aAAO,KAAP;AACA;;AAEDU,IAAAA,OAAO,CAACC,GAAR,CAAY+C,IAAI,CAAChC,IAAL,CAAU4B,SAAtB;AACD,QAAIO,IAAI,GAAE,IAAV;AACA,QAAIhD,SAAS,GAAE,IAAIG,IAAJ,CAAS0C,IAAI,CAAChC,IAAL,CAAU4B,SAAnB,CAAf;AAEA,QAAIL,OAAO,GAAE,IAAIjC,IAAJ,CAAS0C,IAAI,CAAChC,IAAL,CAAU6B,OAAnB,CAAb;AAEC7C,IAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAM,CAACiE,IAAI,CAAChC,IAAL,CAAU4B,SAAX,CAAlB;AAED,QAAI5B,IAAI,GAAC;AACPoC,MAAAA,kBAAkB,EAAC,IAAI9C,IAAJ,CAASvB,MAAM,CAACiE,IAAI,CAAChC,IAAL,CAAU4B,SAAX,CAAN,CAA4BS,MAA5B,CAAmC,aAAnC,CAAT,EAA4DJ,OAA5D,EADZ;AAEPtB,MAAAA,cAAc,EAAE5C,MAAM,CAACoB,SAAD,CAAN,CAAkB8C,OAAlB,EAFT;AAGPX,MAAAA,YAAY,EAAEvD,MAAM,CAACwD,OAAD,CAAN,CAAgBU,OAAhB,EAHP;AAIP3B,MAAAA,aAAa,EAAE,KAAKlB,KAAL,CAAWO;AAJnB,KAAT;;AAMD,QAAG,CAACqC,IAAI,CAAChC,IAAL,CAAU0B,MAAd,EAAqB;AAClBlD,MAAAA,sBAAsB,CAAC,YAAD,EAAewB,IAAf,CAAtB,CACCF,IADD,CACMC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAuB,SAA3B,EAAsC;AAClCkC,UAAAA,IAAI,CAACjD,QAAL,CAAc;AAAEoD,YAAAA,SAAS,EAAE;AAAb,WAAd;AACAH,UAAAA,IAAI,CAACtC,cAAL,CAAoBsC,IAAI,CAAC/C,KAAL,CAAWO,MAA/B;AACH;AACF,OAND,EAOCS,KAPD,CAOOmC,KAAK,IAAI;AAChB;AACEvD,QAAAA,OAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,OAVD;AAWD,KAZF,MAYM;AACH,UAAIb,MAAM,GAAEM,IAAI,CAAChC,IAAL,CAAU0B,MAAtB;AACA1C,MAAAA,OAAO,CAACC,GAAR,CAAY+C,IAAI,CAAChC,IAAjB;AAEAxB,MAAAA,sBAAsB,CAAC,6BAAD,EAA+B;AAACkD,QAAAA;AAAD,OAA/B,CAAtB,CACC5B,IADD,CACMC,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAuB,SAA3B,EAAsC;AAClCkC,UAAAA,IAAI,CAACjD,QAAL,CAAc;AAAEoD,YAAAA,SAAS,EAAE;AAAb,WAAd;AACAH,UAAAA,IAAI,CAACtC,cAAL,CAAoBsC,IAAI,CAAC/C,KAAL,CAAWO,MAA/B;AACH;AACF,OAND,EAOCS,KAPD,CAOOmC,KAAK,IAAI;AAChB;AACEvD,QAAAA,OAAO,CAACC,GAAR,CAAYsD,KAAZ;AACD,OAVD;AAWD;;AACD,QAAIP,IAAI,CAACQ,WAAL,IAAoB,WAApB,IAAmCR,IAAI,CAACQ,WAAL,IAAoB,YAA3D,EAAyE;AACvE,UAAIC,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf;;AACA,UAAIA,QAAQ,CAACC,OAAT,CAAkBV,IAAI,CAACjD,IAAN,CAAY4D,MAAZ,EAAjB,KAA0C,CAA9C,EAAiD;AAC7C,YAAIC,GAAG,GAAG3E,aAAa,CAAC,KAAD,EAAQ;AAC3B4E,UAAAA,SAAS,EAAE,gFADgB;AAE3BC,UAAAA,SAAS,EAAE;AAFgB,SAAR,CAAvB;AAICd,QAAAA,IAAI,CAACe,OAAN,CAAeC,WAAf,CAA2BJ,GAA3B;AACH;AACJ;;AACCZ,IAAAA,IAAI,CAACE,MAAL,GAAc,IAAd;AACH;;AAGCe,EAAAA,YAAY,CAACjB,IAAD,EAAO,CAElB;;AAGDkB,EAAAA,MAAM,GAAG;AACP,QAAIf,IAAI,GAAE,IAAV;AACA,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,cAAD;AACG,MAAA,SAAS,EAAE,IADd;AAEG,MAAA,SAAS,EAAC,yBAFb;AAGG,MAAA,cAAc,EAAC,mBAHlB;AAIG,MAAA,UAAU,EAAE5D,YAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAOE,oBAAC,MAAD,oBAAY,KAAKK,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPF,EAQI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKQ,KAAL,CAAWc,WAAX,GACE,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,MAAzB;AAAgC,MAAA,MAAM,EAAC,OAAvC;AAEE,MAAA,GAAG,EAAEiD,QAAQ,IAAI,KAAKC,WAAL,GAAmBD,QAFtC;AAGE,MAAA,SAAS,EAAE,KAAKpB,WAAL,CAAiBsB,IAAjB,CAAsB,IAAtB,CAHb;AAG0C,MAAA,aAAa,EAAE,KAHzD,CAIE;AAJF;AAKE,MAAA,QAAQ,EAAE,KAAKvE,YAAL,CAAkBuE,IAAlB,CAAuB,IAAvB,CALZ;AAK0C,MAAA,aAAa,EAAE;AAAEC,QAAAA,UAAU,EAAE,KAAKlE,KAAL,CAAWG,QAAzB;AAAkCgE,QAAAA,KAAK,EAAC;AAACC,UAAAA,EAAE,EAAC,QAAJ;AAAaC,UAAAA,OAAO,EAAC;AAACC,YAAAA,IAAI,EAAC;AAAN;AAArB;AAAxC,OALzD;AAME,MAAA,UAAU,EAAE,KAAKT,YAAL,CAAkBI,IAAlB,CAAuB,IAAvB,CANd;AAOE,MAAA,QAAQ,EAAC,yBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASQ,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAC,KAAtB;AAA4B,MAAA,SAAS,EAAC,OAAtC;AAA8C,MAAA,OAAO,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CATR,EAcQ,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,QAAzB;AAAkC,MAAA,KAAK,EAAC,MAAxC;AAA+C,MAAA,IAAI,EAAC,MAApD;AAA2D,MAAA,aAAa,EAAE,KAA1E;AAAiF,MAAA,SAAS,EAAC,MAA3F;AAAmG,MAAA,UAAU,EAAElB,IAAI,CAAC/C,KAAL,CAAWG,QAA1H;AAAoI,MAAA,OAAO,EAAC,IAA5I;AAAiJ,MAAA,UAAU,EAAC,OAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAdR,EAkBQ,oBAAC,MAAD;AAAS,MAAA,QAAQ,EAAE,CAACnC,IAAD,EAAME,MAAN,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBR,CADF,GAqBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAtBL,CADD,CARJ,CADF;AAwCD;;AAzM+B;;AA2MlC,MAAMqG,eAAe,GAAGvE,KAAK,IAAI;AAC/B,SAAO;AACLK,IAAAA,IAAI,EAAEL,KAAK,CAACwE,IAAN,CAAWC,QADZ;AAELC,IAAAA,MAAM,EAAE1E,KAAK,CAACwE,IAAN,CAAWG,UAFd;AAGLrE,IAAAA,SAAS,EAAEN,KAAK,CAACwE,IAAN,CAAWI,iBAHjB;AAILC,IAAAA,OAAO,EAAE7E,KAAK,CAAC8E;AAJV,GAAP;AAMD,CAPD;;AASA,eAAehH,OAAO,CACpByG,eADoB,EAEpB,IAFoB,CAAP,CAGbjF,SAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../header/header';\r\nimport {\r\n  Button,\r\n  Media,\r\n  Row,\r\n  Col,\r\n  FormControl,FormGroup,\r\n  InputGroup\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport { Week, Month, Agenda,TimelineViews, TimelineMonth, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\r\n\r\nimport moment from 'moment';\r\n\r\nimport { extend,createElement } from '@syncfusion/ej2-base';\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\n//import \"@syncfusion/ej2-split-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\n//import '../node_modules/@syncfusion/ej2/material.css';\r\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport DownloadLink from \"react-download-link\";\r\n//import Img from '../../common/cropper/img';\r\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\n//import moment from 'moment';\r\nimport {\r\n  showErrorToast ,ZoomInAndOut \r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n\r\n\r\nclass TimeSlots extends Component {\r\n   constructor(props) {\r\n        super(...arguments);\r\n    this.state = {      \r\n      isOpen: false,\r\n      startDate: new Date(),\r\n      timeData:[]\r\n    };   \r\n    \r\n  }\r\n \r\n  componentDidMount() {  \r\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\r\n    if(user){\r\n      let userId =user.userId;       \r\n      this.setState({userId: userId,user:user});\r\n      this.getUserProfileData(userId);\r\n      this.getSlotDetails(userId);  \r\n    }   \r\n  }\r\n\r\n  getUserProfileData(userId){\r\n    theRapidHireApiService('getUserSkillsById',{userId})\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n        console.log(response.data);       \r\n         let userProfile = response.data.result[0];     \r\n        this.setState({userProfile:userProfile                  \r\n         });        \r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  } \r\n\r\n  getSlotDetails(userId){\r\n    let interviewerId= userId;\r\n    theRapidHireApiService('getTimeSlotByInterviewer',{interviewerId})\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n        console.log(response);\r\n        let timeData=  [];\r\n        response.data.result.forEach(function(item,index){    \r\n          let launchDate = new Date(item.startTimeStamp);     \r\n          let day = launchDate.getUTCDate();\r\n          let month = launchDate.getMonth();\r\n          let year = launchDate.getFullYear(); \r\n          let min = launchDate.getMinutes();\r\n          let hour = launchDate.getHours();\r\n\r\n          let startDate= new Date(year,month,day,hour,min);\r\n\r\n           launchDate = new Date(item.endTimeStamp);     \r\n           day = launchDate.getUTCDate();\r\n           month = launchDate.getMonth();\r\n           year = launchDate.getFullYear(); \r\n           min = launchDate.getMinutes();\r\n           hour = launchDate.getHours();\r\n\r\n          let endDate= new Date(year,month,day,hour,min);\r\n\r\n          console.log(item.userId);\r\n          timeData.push({\r\n              Subject: 'Available',\r\n              slotId: item.slotId, \r\n              text: 'Photogenic',     \r\n              userId:  item.userId,     \r\n              StartTime: startDate,\r\n              EndTime: endDate,              \r\n              color :item.userId ? '#1aaa55' :'#7fa900'\r\n            })\r\n      });\r\n      this.setState({timeData:timeData});\r\n      }\r\n     \r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n \r\n  handleChange = date => {\r\n    console.log(date);\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n\r\n  onPopupOpen(args) {\r\n    console.log(args);   \r\n\r\n     if(moment(args.data.StartTime).valueOf() <  moment().valueOf()){\r\n      args.cancel = true;\r\n      showErrorToast('Selected time can not be less than current time.');\r\n      return false;\r\n     }  \r\n\r\n     console.log(args.data.StartTime);\r\n    let self= this;\r\n    let startDate= new Date(args.data.StartTime);\r\n   \r\n    let endDate= new Date(args.data.EndTime);\r\n \r\n     console.log(moment(args.data.StartTime));   \r\n\r\n    let data={\r\n      slotRegisteredDate:new Date(moment(args.data.StartTime).format(\"DD-MMM-YYYY\")).valueOf(),\r\n      startTimeStamp: moment(startDate).valueOf(),\r\n      endTimeStamp: moment(endDate).valueOf(),\r\n      interviewerId: this.state.userId\r\n    };\r\n   if(!args.data.slotId){\r\n      theRapidHireApiService('createSlot', data)\r\n      .then(response => {\r\n        if (response.data.status===\"Success\") {      \r\n            self.setState({ isLoading: false });    \r\n            self.getSlotDetails(self.state.userId);   \r\n        } \r\n      })\r\n      .catch(error => {\r\n      // self.setState({ isLoading: false });\r\n        console.log(error);\r\n      });\r\n    }else{\r\n      let slotId= args.data.slotId\r\n      console.log(args.data);     \r\n      \r\n      theRapidHireApiService('deleteTimeSlotByInterviewer',{slotId})\r\n      .then(response => {\r\n        if (response.data.status===\"Success\") {      \r\n            self.setState({ isLoading: false });    \r\n            self.getSlotDetails(self.state.userId);   \r\n        } \r\n      })\r\n      .catch(error => {\r\n      // self.setState({ isLoading: false });\r\n        console.log(error);\r\n      });\r\n    }\r\n    if (args.elementType == 'workCells' || args.elementType == 'monthCells') {\r\n      let weekEnds = [0, 6];\r\n      if (weekEnds.indexOf((args.date).getDay()) >= 0) {\r\n          let ele = createElement('div', {\r\n              innerHTML: \"<img src='https://ej2.syncfusion.com/demos/src/schedule/images/newyear.svg' />\",\r\n              className: 'templatewrap'\r\n          });\r\n          (args.element).appendChild(ele);\r\n      }\r\n  }\r\n    args.cancel = true;\r\n}\r\n\r\n\r\n  onRenderCell(args) {\r\n   \r\n  }\r\n\r\n \r\n  render() {\r\n    let self= this;\r\n    return (\r\n      <div className=\"wrapper\">\r\n       <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        /> \r\n        <Header {...this.props} />     \r\n          <div className=\"main-panel\">\r\n           <div className=\"w3-content main-panel1\"> \r\n           {this.state.userProfile ? \r\n              <ScheduleComponent width='100%' height='800px' \r\n              \r\n                ref={schedule => this.scheduleObj = schedule}\r\n                popupOpen={this.onPopupOpen.bind(this)} showQuickInfo={false} \r\n                //  eventRendered={this.onEventRendered.bind(this)} selectedDate={new Date(2018, 3, 1)}\r\n                onChange={this.handleChange.bind(this)} eventSettings={{ dataSource: this.state.timeData,field:{id:'slotId',subject:{name:'Subject'}} }} \r\n                renderCell={this.onRenderCell.bind(this)}\r\n                cssClass='schedule-cell-dimension'\r\n                >\r\n                      <ViewsDirective>\r\n                      <ViewDirective option='Day' startHour='09:30' endHour='18:00' />\r\n                          <ViewDirective option='Week'/>                \r\n                          <ViewDirective option='Agenda'/>\r\n                      </ViewsDirective>\r\n                      <ResourcesDirective>\r\n                          <ResourceDirective field='slotId' title='Slot' name='Slot' allowMultiple={false} textField='text'  dataSource={self.state.timeData} idField='id' colorField='color'>\r\n                          </ResourceDirective>\r\n                      </ResourcesDirective> \r\n                      <Inject  services={[Week,Agenda]}/>\r\n                </ScheduleComponent> :\r\n                <div className=\"container main\">\r\n                  Kindly complete profile first\r\n                  </div>\r\n             }\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    otherUser: state.User.otherUserInfoData,\r\n    student: state.Student\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(TimeSlots);\r\n"]},"metadata":{},"sourceType":"module"}