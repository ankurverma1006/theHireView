{"ast":null,"code":"var _jsxFileName = \"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/user/profile/videoIntroduction.js\";\nimport React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Portal } from 'react-overlays';\nimport { Button, Modal, Form, FormGroup, Checkbox, Col, ControlLabel, FormControl, InputGroup, Radio } from 'react-bootstrap';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.css';\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date'; //import DatePicker from 'react-datepicker';\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\n\nimport moment from 'moment';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport classnames from 'classnames';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport _ from 'lodash';\nimport VideoPlayer from 'react-video-js-player';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport { renderMessage, isValidURL, ZoomInAndOut, generateTimestamp } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService'; //import MediaList from '../mediaList';\n\nlet validationMessages = CONSTANTS.validationMessages;\nlet regExpressions = CONSTANTS.regExpressions;\nlet badgeImgArray = [];\nlet badgeImgPreview = [];\nlet certificateImgArray = [];\nlet certificateImgPreview = [];\nlet mediaImgArray = [];\nlet mediaImgPreview = [];\nconst emptyToDate = '10000000';\n\nclass videoIntroduction extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.validateData = () => {\n      let self = this;\n      this.props.validate(function (error) {\n        let imageObject = {\n          media: self.state.mediaImgArray || []\n        };\n\n        if (!error) {\n          self.setState({\n            isLoading: true\n          });\n          self.handleSubmit();\n        } else {\n          self.handleSubmit();\n        }\n      });\n    };\n\n    this.closeVideoModal = status => {\n      this.setState({\n        skillsModal: false\n      });\n      this.props.closeVideoComponent();\n    };\n\n    this.state = {\n      isLoading: false,\n      promptRecommendation: false,\n      userId: '',\n      videoModal: true,\n      skillId: '',\n      video: {\n        src: \"http://www.example.com/path/to/video.mp4\",\n        poster: \"http://www.example.com/path/to/video_poster.jpg\"\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  onPlayerReady(player) {\n    console.log(\"Player is ready: \", player);\n    this.player = player;\n  }\n\n  onVideoPlay(duration) {\n    console.log(\"Video played at: \", duration);\n  }\n\n  onVideoPause(duration) {\n    console.log(\"Video paused at: \", duration);\n  }\n\n  onVideoTimeUpdate(duration) {\n    console.log(\"Time updated: \", duration);\n  }\n\n  onVideoSeeking(duration) {\n    console.log(\"Video seeking: \", duration);\n  }\n\n  onVideoSeeked(from, to) {\n    console.log(\"Video seeked from \".concat(from, \" to \").concat(to));\n  }\n\n  onVideoEnd() {\n    console.log(\"Video ended\");\n  }\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken').then(response => {\n      if (response.data.status === 'Success') {\n        let sasToken = response.data.result.sasToken;\n        this.setState({\n          sasToken\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleSubmit() {\n    let rating = this.state.rating;\n    let skills = [];\n    this.state.skills.forEach(function (item) {\n      skills.push(item.label);\n    });\n    let userId = 10;\n    let skillId = this.state.skillId;\n    let data = {\n      rating,\n      userId,\n      skills,\n      skillId\n    };\n    let self = this;\n\n    if (!this.state.skillId || this.state.skillId === '') {\n      theRapidHireApiService('addUserSkills', data).then(response => {\n        if (response.data.statusCode === 200) {\n          self.setState({\n            isLoading: false\n          });\n          self.closeVideoModal('save');\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    } else {\n      theRapidHireApiService('editUserSkills', data).then(response => {\n        if (response.data.statusCode === 200) {\n          self.closeVideoModal('save');\n          self.setState({\n            isLoading: false\n          });\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const CalendarContainer = ({\n      children\n    }) => {\n      const el = document.getElementById('calendar-portal');\n      return React.createElement(Portal, {\n        container: el,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, children);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      bsSize: \"large\",\n      show: this.state.videoModal,\n      onHide: this.closeVideoModal.bind(this, 'close'),\n      backdrop: \"static\",\n      keyboard: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(VideoPlayer, {\n      controls: true,\n      src: \"http://download.blender.org/peach/bigbuckbunny_movies/BigBuckBunny_320x180.mp4\",\n      poster: this.state.video.poster,\n      width: \"720\",\n      height: \"420\",\n      onReady: this.onPlayerReady.bind(this),\n      onPlay: this.onVideoPlay.bind(this),\n      onPause: this.onVideoPause.bind(this),\n      onTimeUpdate: this.onVideoTimeUpdate.bind(this),\n      onSeeking: this.onVideoSeeking.bind(this),\n      onSeeked: this.onVideoSeeked.bind(this),\n      onEnd: this.onVideoEnd.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bsStyle: \"primary\",\n      className: \"no-bold no-round\",\n      disabled: this.state.isLoading,\n      onClick: !this.state.isLoading ? this.validateData : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, this.state.isLoading ? 'In Progress...' : 'Save'), React.createElement(Button, {\n      bsStyle: \"default\",\n      className: \"no-bold no-round\",\n      onClick: this.closeVideoModal.bind(this, 'close'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(Modal //  bsSize=\"medium\"\n    , {\n      show: this.state.imagesModal,\n      onHide: this.closeImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Photos Gallery\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bstyle: \"default no-round\",\n      onClick: this.closeImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nvideoIntroduction = validation(strategy)(videoIntroduction);\nexport default videoIntroduction;","map":{"version":3,"sources":["/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/user/profile/videoIntroduction.js"],"names":["React","Component","ToastContainer","Portal","Button","Modal","Form","FormGroup","Checkbox","Col","ControlLabel","FormControl","InputGroup","Radio","Select","YearPicker","MonthPicker","DayPicker","moment","validation","strategy","classnames","ImageCropper","achievementDefaultImage","_","VideoPlayer","CONSTANTS","renderMessage","isValidURL","ZoomInAndOut","generateTimestamp","theRapidHireApiService","validationMessages","regExpressions","badgeImgArray","badgeImgPreview","certificateImgArray","certificateImgPreview","mediaImgArray","mediaImgPreview","emptyToDate","videoIntroduction","constructor","props","handleChange","event","target","value","type","checked","name","setState","validateData","self","validate","error","imageObject","media","state","isLoading","handleSubmit","closeVideoModal","status","skillsModal","closeVideoComponent","promptRecommendation","userId","videoModal","skillId","video","src","poster","componentDidMount","onPlayerReady","player","console","log","onVideoPlay","duration","onVideoPause","onVideoTimeUpdate","onVideoSeeking","onVideoSeeked","from","to","onVideoEnd","generateSASToken","then","response","data","sasToken","result","catch","err","rating","skills","forEach","item","push","label","statusCode","render","CalendarContainer","children","el","document","getElementById","bind","imagesModal","closeImageModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\nimport VideoPlayer from 'react-video-js-player';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\n\r\n\r\nclass videoIntroduction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,         \r\n      promptRecommendation: false,    \r\n      userId: '',       \r\n      videoModal:true,\r\n      skillId:''  ,\r\n      video: {\r\n        src: \"http://www.example.com/path/to/video.mp4\",\r\n        poster: \"http://www.example.com/path/to/video_poster.jpg\"\r\n    },     \r\n    };\r\n\r\n  \r\n  }\r\n\r\n\r\n  componentDidMount() {  \r\n \r\n  }\r\n \r\n\r\n  onPlayerReady(player){\r\n    console.log(\"Player is ready: \", player);\r\n    this.player = player;\r\n}\r\n\r\nonVideoPlay(duration){\r\n    console.log(\"Video played at: \", duration);\r\n}\r\n\r\nonVideoPause(duration){\r\n    console.log(\"Video paused at: \", duration);\r\n}\r\n\r\nonVideoTimeUpdate(duration){\r\n    console.log(\"Time updated: \", duration);\r\n}\r\n\r\nonVideoSeeking(duration){\r\n    console.log(\"Video seeking: \", duration);\r\n}\r\n\r\nonVideoSeeked(from, to){\r\n    console.log(`Video seeked from ${from} to ${to}`);\r\n}\r\n\r\nonVideoEnd(){\r\n    console.log(\"Video ended\");\r\n}\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n \r\n  \r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      let imageObject = {\r\n        media: self.state.mediaImgArray || []\r\n      };\r\n\r\n      if (!error) {\r\n        self.setState({ isLoading: true });       \r\n            self.handleSubmit();        \r\n        } else {\r\n          self.handleSubmit();\r\n        }      \r\n    });\r\n  };  \r\n\r\n  handleSubmit() {\r\n   \r\n   let rating = this.state.rating;  \r\n  \r\n   let skills = [];     \r\n   this.state.skills.forEach(function(item){\r\n    skills.push(item.label);\r\n   })\r\n \r\n    let userId = 10;\r\n    let skillId=  this.state.skillId;   \r\n\r\n   \r\n    let data = {\r\n      rating,\r\n      userId,\r\n      skills,\r\n      skillId\r\n    };\r\n\r\n    let self = this;\r\n   \r\n    if (!this.state.skillId || this.state.skillId === '') {\r\n      theRapidHireApiService('addUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.statusCode === 200) {      \r\n            self.setState({ isLoading: false });\r\n            self.closeVideoModal('save');\r\n          } \r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.statusCode === 200) {        \r\n            self.closeVideoModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  closeVideoModal = status => {   \r\n    this.setState({\r\n      skillsModal: false\r\n      \r\n    });   \r\n    this.props.closeVideoComponent();\r\n  };\r\n\r\n  render() {  \r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.videoModal}\r\n          onHide={this.closeVideoModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {/* {!this.state.profileId || this.state.profiletId === ''\r\n                ? 'Add Career Profile'\r\n                : 'Edit Career Profile'} */}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>   \r\n            \r\n     \r\n\r\n\r\n  <VideoPlayer\r\n                    controls={true}\r\n                    src=\"http://download.blender.org/peach/bigbuckbunny_movies/BigBuckBunny_320x180.mp4\"\r\n                    poster={this.state.video.poster}\r\n                    width=\"720\"\r\n                    height=\"420\"\r\n                    onReady={this.onPlayerReady.bind(this)}\r\n                    onPlay={this.onVideoPlay.bind(this)}\r\n                    onPause={this.onVideoPause.bind(this)}\r\n                    onTimeUpdate={this.onVideoTimeUpdate.bind(this)}\r\n                    onSeeking={this.onVideoSeeking.bind(this)}\r\n                    onSeeked={this.onVideoSeeked.bind(this)}\r\n                    onEnd={this.onVideoEnd.bind(this)}\r\n                />  \r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closeVideoModal.bind(this, 'close')}              \r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>            \r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nvideoIntroduction = validation(strategy)(videoIntroduction);\r\nexport default videoIntroduction;\r\n"]},"metadata":{},"sourceType":"module"}