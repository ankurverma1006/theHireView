{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\common\\\\authorization\\\\login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport classnames from 'classnames';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux'; //import { Field, reduxForm } from 'redux-form';\n//import renderField from 'components/FormInputs/renderField';\n\nimport { getLocalStorage, encrypt, decrypt, getIPAddress, ZoomInAndOut, renderMessage, showErrorToast } from '../../common/commonFunctions';\nimport cube from '../../common/commonFunctions';\nimport { Button, FormGroup, InputGroup, FormControl, Nav, NavItem } from 'react-bootstrap';\nimport { actionUserLogin } from '../core/redux/actions';\nimport { actionSetStudentAsUser } from '../core/redux/actions';\nimport Sidebar from './sideBar';\nimport CONSTANTS from '../core/config/appConfig';\nlet validationMessages = CONSTANTS.validationMessages;\nlet regExpressions = CONSTANTS.regExpressions;\n\nfunction getUrlParameter(name, url) {\n  name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n  var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n  var results = regex.exec(url); // return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ''));\n\n  return results === null ? '' : decodeURIComponent(results[1]);\n}\n\nclass Login extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.getValidatorData = () => {\n      return this.state;\n    };\n\n    this.getClasses = field => {\n      return classnames({\n        error: !this.props.isValid(field)\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.validateData = () => {\n      let self = this;\n      this.props.validate(function (error) {\n        if (!error) {\n          self.setState({\n            isLoading: true\n          });\n          self.handleSubmit();\n        }\n      });\n    };\n\n    this.submitData = event => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        this.validateData();\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      isLoading: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getValidatorData = this.getValidatorData.bind(this);\n    this.getClasses = this.getClasses.bind(this);\n    this.validatorTypes = strategy.createSchema({\n      email: 'required|email',\n      password: ['required', 'regex:' + regExpressions.passwordPattern]\n    }, {\n      'required.email': validationMessages.email.required,\n      'email.email': validationMessages.email.invalid,\n      'required.password': validationMessages.password.required,\n      'regex.password': validationMessages.password.passwordPattern\n    });\n  }\n\n  componentDidMount() {\n    let _this = this;\n\n    var isIE =\n    /*@cc_on!@*/\n    false || !!document.documentMode;\n    var isEdge = !isIE && !!window.StyleMedia;\n\n    if (!isEdge) {\n      getIPAddress(function (ip) {\n        _this.setState({\n          deviceId: ip\n        });\n      });\n    } else {\n      _this.setState({\n        deviceId: '0.0.0.0'\n      });\n    }\n  }\n\n  componentWillMount() {\n    document.body.classList.remove('light-theme');\n    document.body.classList.remove('home');\n    document.body.classList.remove('fixedHeader');\n  }\n\n  handleSubmit() {\n    let self = this;\n    let email = null;\n    let password = null;\n    let url = this.state.matchUrl || this.props.match.url;\n    let groupId = null;\n\n    if (this.props.match.url.indexOf('/autoLogin/') >= 0 && this.props.match.params && this.props.match.params.user && this.props.match.params.pass) {\n      email = this.props.match.params.user.trim();\n      password = this.props.match.params.pass.trim();\n    } else if (this.props.match.url.indexOf('/recommendation/') >= 0 && this.props.match.params.email && this.props.match.params.pass && this.props.match.params.pass !== 'null') {\n      email = this.props.match.params.email.toLowerCase().trim();\n      password = this.props.match.params.pass.trim();\n    } else if (this.props.match.url.indexOf('/previewprofile/') >= 0 && this.props.match.params.email && this.props.match.params.pass && this.props.match.params.pass !== 'null') {\n      email = this.props.match.params.email.toLowerCase().trim();\n      password = this.props.match.params.pass.trim();\n    } else if (url.indexOf('/joingroup') >= 0) {\n      let search = this.state.search ? this.state.search : this.props.location.search;\n      let parsedGroupId = getUrlParameter('groupId', search);\n      let parsedEmail = getUrlParameter('email', search);\n      let parsedPass = getUrlParameter('pass', search);\n\n      if (parsedEmail && parsedPass && parsedPass !== 'null') {\n        groupId = parsedGroupId;\n        email = parsedEmail.toLowerCase().trim();\n        password = parsedPass.trim();\n      } else if (parsedGroupId) {\n        groupId = parsedGroupId;\n        email = this.state.email.toLowerCase().trim();\n        password = encrypt(this.state.password.trim());\n      }\n    } else {\n      email = this.state.email.toLowerCase().trim();\n      password = encrypt(this.state.password.trim());\n    }\n\n    let deviceId = this.state.deviceId;\n    let data = {\n      email,\n      password,\n      deviceId\n    };\n    this.props.actionUserLogin(data).then(response => {\n      console.log(response);\n\n      if (response.payload && response.payload.data.status === 'Success') {\n        self.setState({\n          isLoading: false\n        });\n        const userResponse = response.payload.data.result;\n\n        if (userResponse && userResponse.token) {\n          if (userResponse.roleId === 1) self.props.history.push('/user/profile');else if (userResponse.roleId === 2) self.props.history.push('/interviewer/interviewerProfile');else if (userResponse.roleId === 3) self.props.history.push('/recruiter/jobDesription');else if (userResponse.roleId === 4) self.props.history.push('/admin/candidate');\n        }\n      } else {\n        self.setState({\n          isLoading: false,\n          password: ''\n        });\n      }\n    }).catch(error => {\n      self.setState({\n        isLoading: false,\n        password: ''\n      });\n      console.log('err', error);\n    });\n  }\n\n  render() {\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"   \", React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"banner-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), \"     \"), React.createElement(\"div\", {\n      className: \"login_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header forgotPasswordForm bg-transparent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"h4login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"  \", React.createElement(\"legend\", {\n      className: \"color-blue mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-md-3 control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: this.getClasses('email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('email'))))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-md-3 control-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: this.getClasses('password'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      onKeyPress: this.submitData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('password'))))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/forgot\",\n      className: \"forgotPass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Forgot Password?\"))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bsStyle: \"primary\",\n      className: \"centeredBtn btn-lg\",\n      disabled: isLoading,\n      onClick: !isLoading ? this.validateData : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, isLoading ? 'Checking Credentials...' : 'Sign In')), React.createElement(Link, {\n      style: {\n        position: 'absolute',\n        right: '20px',\n        bottom: '107px'\n      },\n      to: {\n        pathname: '/signup',\n        state: {\n          eventKey: 2\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Register\"))))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    actionUserLogin,\n    actionSetStudentAsUser\n  }, dispatch);\n};\n\nLogin = validation(strategy)(Login);\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\common\\authorization\\login.js"],"names":["React","Component","Link","ToastContainer","validation","strategy","classnames","bindActionCreators","connect","getLocalStorage","encrypt","decrypt","getIPAddress","ZoomInAndOut","renderMessage","showErrorToast","cube","Button","FormGroup","InputGroup","FormControl","Nav","NavItem","actionUserLogin","actionSetStudentAsUser","Sidebar","CONSTANTS","validationMessages","regExpressions","getUrlParameter","name","url","replace","regex","RegExp","results","exec","decodeURIComponent","Login","constructor","props","context","getValidatorData","state","getClasses","field","error","isValid","handleChange","event","setState","target","value","validateData","self","validate","isLoading","handleSubmit","submitData","key","preventDefault","email","password","bind","validatorTypes","createSchema","passwordPattern","required","invalid","componentDidMount","_this","isIE","document","documentMode","isEdge","window","StyleMedia","ip","deviceId","componentWillMount","body","classList","remove","matchUrl","match","groupId","indexOf","params","user","pass","trim","toLowerCase","search","location","parsedGroupId","parsedEmail","parsedPass","data","then","response","console","log","payload","status","userResponse","result","token","roleId","history","push","catch","render","getValidationMessages","position","right","bottom","pathname","eventKey","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\n//import { Field, reduxForm } from 'redux-form';\r\n//import renderField from 'components/FormInputs/renderField';\r\nimport {\r\n  getLocalStorage,\r\n  encrypt,\r\n  decrypt,\r\n  getIPAddress,\r\n  ZoomInAndOut,\r\n  renderMessage,showErrorToast\r\n} from '../../common/commonFunctions';\r\nimport cube from '../../common/commonFunctions';\r\nimport {\r\n  Button,\r\n  FormGroup,\r\n  InputGroup,\r\n  FormControl,\r\n  Nav,\r\n  NavItem\r\n} from 'react-bootstrap';\r\n\r\nimport { actionUserLogin } from '../core/redux/actions';\r\nimport { actionSetStudentAsUser } from '../core/redux/actions';\r\nimport Sidebar from './sideBar';\r\n\r\nimport CONSTANTS from '../core/config/appConfig';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\n\r\nfunction getUrlParameter(name, url) {\r\n  name = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n  var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\r\n  var results = regex.exec(url);\r\n  // return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ''));\r\n  return results === null ? '' : decodeURIComponent(results[1]);\r\n}\r\n\r\nclass Login extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      isLoading: false\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        email: 'required|email',\r\n        password: ['required', 'regex:' + regExpressions.passwordPattern]\r\n      },\r\n      {\r\n        'required.email': validationMessages.email.required,\r\n        'email.email': validationMessages.email.invalid,\r\n        'required.password': validationMessages.password.required,\r\n        'regex.password': validationMessages.password.passwordPattern\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    let _this = this;\r\n    var isIE = /*@cc_on!@*/ false || !!document.documentMode;\r\n    var isEdge = !isIE && !!window.StyleMedia;\r\n    if (!isEdge) {\r\n      getIPAddress(function(ip) {\r\n        _this.setState({\r\n          deviceId: ip\r\n        });\r\n      });\r\n    } else {\r\n      _this.setState({\r\n        deviceId: '0.0.0.0'\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.body.classList.remove('light-theme');\r\n    document.body.classList.remove('home');\r\n    document.body.classList.remove('fixedHeader');\r\n\r\n  \r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        self.handleSubmit();\r\n      }\r\n    });\r\n  };\r\n\r\n  submitData = event => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      this.validateData();\r\n    }\r\n  };\r\n\r\n  handleSubmit() {\r\n    let self = this;\r\n    let email = null;\r\n    let password = null;\r\n    let url = this.state.matchUrl || this.props.match.url;\r\n    let groupId = null;\r\n\r\n    if (\r\n      this.props.match.url.indexOf('/autoLogin/') >= 0 &&\r\n      this.props.match.params &&\r\n      this.props.match.params.user &&\r\n      this.props.match.params.pass\r\n    ) {\r\n      email = this.props.match.params.user.trim();\r\n      password = this.props.match.params.pass.trim();\r\n    } else if (\r\n      this.props.match.url.indexOf('/recommendation/') >= 0 &&\r\n      this.props.match.params.email &&\r\n      this.props.match.params.pass &&\r\n      this.props.match.params.pass !== 'null'\r\n    ) {\r\n      email = this.props.match.params.email.toLowerCase().trim();\r\n      password = this.props.match.params.pass.trim();\r\n    } else if (\r\n      this.props.match.url.indexOf('/previewprofile/') >= 0 &&\r\n      this.props.match.params.email &&\r\n      this.props.match.params.pass &&\r\n      this.props.match.params.pass !== 'null'\r\n    ) {\r\n      email = this.props.match.params.email.toLowerCase().trim();\r\n      password = this.props.match.params.pass.trim();\r\n    } else if (url.indexOf('/joingroup') >= 0) {\r\n      let search = this.state.search\r\n        ? this.state.search\r\n        : this.props.location.search;\r\n      let parsedGroupId = getUrlParameter('groupId', search);\r\n      let parsedEmail = getUrlParameter('email', search);\r\n      let parsedPass = getUrlParameter('pass', search);\r\n      if (parsedEmail && parsedPass && parsedPass !== 'null') {\r\n        groupId = parsedGroupId;\r\n        email = parsedEmail.toLowerCase().trim();\r\n        password = parsedPass.trim();\r\n      } else if (parsedGroupId) {\r\n        groupId = parsedGroupId;\r\n        email = this.state.email.toLowerCase().trim();\r\n        password = encrypt(this.state.password.trim());\r\n      }\r\n    } else {\r\n      email = this.state.email.toLowerCase().trim();\r\n      password = encrypt(this.state.password.trim());\r\n    }\r\n\r\n    let deviceId = this.state.deviceId;\r\n\r\n    let data = {\r\n      email,\r\n      password,\r\n      deviceId\r\n    };\r\n \r\n    this.props\r\n    .actionUserLogin(data)\r\n    .then(response => {\r\n      console.log(response);      \r\n      if (response.payload && response.payload.data.status === 'Success') {        \r\n          self.setState({ isLoading: false });\r\n          const userResponse = response.payload.data.result;\r\n          if (userResponse && userResponse.token) {\r\n            if (userResponse.roleId === 1)\r\n              self.props.history.push('/user/profile');          \r\n            else if (userResponse.roleId === 2)\r\n              self.props.history.push('/interviewer/interviewerProfile');\r\n              else if (userResponse.roleId === 3)\r\n              self.props.history.push('/recruiter/jobDesription');\r\n              else if (userResponse.roleId === 4)\r\n              self.props.history.push('/admin/candidate');\r\n        }\r\n      } else { \r\n        self.setState({ isLoading: false, password: '' });\r\n      }\r\n    })\r\n      .catch(error => {\r\n        self.setState({\r\n          isLoading: false,\r\n          password: ''\r\n        });\r\n        console.log('err', error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n    return (\r\n<div>   <div className=\"wrapper\">\r\n        \r\n<ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        /> \r\n          <div className=\"main-panel\">   \r\n          <div className=\"banner\">\r\n          <div className=\"overlay\"></div>\r\n          <div className=\"banner-content\">\r\n          </div> \r\n    </div>     </div>   \r\n      <div className=\"login_card\">\r\n      <div className=\"header forgotPasswordForm bg-transparent\">\r\n        <h4 className=\"h4login\">  <legend className=\"color-blue mb-0\">Login</legend></h4>\r\n      </div>     \r\n      <div className=\"content\">\r\n        <form className=\"form-horizontal\">\r\n  \r\n          <div className=\"form-group\">\r\n            <label className=\"col-md-3 control-label\">Email</label>\r\n            <div className=\"col-md-9\">\r\n            <FormGroup className={this.getClasses('email')}>\r\n               \r\n                  {/* <InputGroup.Addon>\r\n                    <span className=\"icon-email\" />\r\n                  </InputGroup.Addon> */}\r\n                  <FormControl\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                  />\r\n               \r\n                {renderMessage(this.props.getValidationMessages('email'))}\r\n              </FormGroup>    \r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"form-group\">\r\n            <label className=\"col-md-3 control-label\">Password</label>\r\n            <div className=\"col-md-9\">\r\n            <FormGroup className={this.getClasses('password')}>\r\n              \r\n                  {/* <InputGroup.Addon>\r\n                    <span className=\"icon-password\" />\r\n                  </InputGroup.Addon> */}\r\n                  <FormControl\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                    autoComplete=\"off\"\r\n                    onKeyPress={this.submitData}                   \r\n                  />\r\n              \r\n                {renderMessage(this.props.getValidationMessages('password'))}\r\n              </FormGroup>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label className=\"col-md-3\"></label>\r\n            <div className=\"col-md-9\">\r\n            <Link to=\"/forgot\" className=\"forgotPass\">\r\n                Forgot Password?\r\n              </Link>           \r\n            </div>\r\n          </div>\r\n  \r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"col-md-3\"></label>\r\n            <div className=\"col-md-9\">\r\n            <FormGroup>\r\n                <Button\r\n                  bsStyle=\"primary\"\r\n                  className=\"centeredBtn btn-lg\"\r\n                  disabled={isLoading}\r\n                  onClick={!isLoading ? this.validateData : null}\r\n                >\r\n                  {isLoading ? 'Checking Credentials...' : 'Sign In'}\r\n                </Button>\r\n              </FormGroup>\r\n              <Link style={{position :'absolute',right:'20px',bottom: '107px'}} \r\n                                                                                                    to={{\r\n                                                                                                      pathname: '/signup',\r\n                                                                                                      state: {\r\n                                                                                                        eventKey: 2\r\n                                                                                                      }\r\n                                                                                                    }}\r\n                >\r\n                      Register\r\n                      </Link>       \r\n              {/* <a style={{position :'absolute',right:'65px',bottom: '10px'}} href=\"https://theRapidHiremediastorage.blob.core.windows.net/theRapidHire-media-production/sv_1/PrivacyPolicy.html\" target=\"_blank\">\r\n           Terms and Condition\r\n        </a> */}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    { actionUserLogin, actionSetStudentAsUser },\r\n    dispatch\r\n  );\r\n};\r\n\r\nLogin = validation(strategy)(Login);\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Login);\r\n"]},"metadata":{},"sourceType":"module"}