{"ast":null,"code":"var _jsxFileName = \"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/recruiter/jobDescription/userMapping.js\";\nimport React, { Component } from 'react';\nimport Header from '../header/header';\nimport SideBar from '../header/sidebar'; // import {\n//   Button,\n//   Media,\n//   Row,\n//   Col,\n//   FormControl,\n//   InputGroup\n// } from 'react-bootstrap';\n\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\nimport _ from 'lodash';\nimport S3FileUpload from 'react-s3'; //import Summary from './summary/addSummary';\n\nimport ShowVideo from '../jobDescription/showVideo'; //import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\n\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\"; //import Img from '../../common/cropper/img';\n\nimport { showErrorToast, uploadToAzure, limitCharacter, SampleNextArrow, SamplePrevArrow, getThumbImage, ZoomInAndOut } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport { actionGetStudentPersonalInfo, actionGetAllCompetency, actionGetAchievementsByUser, actionGetRecommendationsByUser, actionUpdateUserInfo, actionGetAchievementsData } from '../../common/core/redux/actions';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\nconst config = {\n  bucketName: 'ankurself',\n  dirName: 'photos',\n\n  /* optional */\n  region: 'ap-south-1',\n  // Put your aws region here\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\n};\nvar settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 3,\n  swipeToSlide: true,\n  nextArrow: React.createElement(SampleNextArrow, {\n    props: this.props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }),\n  prevArrow: React.createElement(SamplePrevArrow, {\n    props: this.props,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }),\n  responsive: [{\n    breakpoint: 1024,\n    settings: {\n      slidesToShow: 3,\n      slidesToScroll: 3,\n      infinite: true,\n      dots: true\n    }\n  }, {\n    breakpoint: 600,\n    settings: {\n      slidesToShow: 2,\n      slidesToScroll: 2,\n      initialSlide: 2\n    }\n  }, {\n    breakpoint: 480,\n    settings: {\n      slidesToShow: 1,\n      slidesToScroll: 1\n    }\n  }]\n};\n\nclass UserMapping extends Component {\n  constructor(props, context) {\n    super(props);\n\n    this.handleSubmit = (data, action) => {\n      let jobMapId = data.jobMapId;\n      let jobId = this.state.jobId;\n      let candidateId = data.userId;\n      let hrId = this.state.userId;\n      let status = action;\n      let createdBy = this.props.user.userId;\n      let dataMap = {\n        jobMapId,\n        jobId,\n        candidateId,\n        hrId,\n        status,\n        createdBy\n      };\n\n      if (jobMapId !== \"\" || jobMapId !== null) {\n        theRapidHireApiService('createJobMap', dataMap).then(response => {\n          if (response.data.status === \"Success\") {\n            this.getUserListForMapping(this.state.jobId); //  let jobDescriptionListData= this.state.jobDescriptionListData;\n            //  jobDescriptionListData= response.data.result;\n            //  this.setState({jobDescriptionListData: jobDescriptionListData});\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        theRapidHireApiService('updateJobMap', dataMap).then(response => {\n          if (response.data.status === \"Success\") {\n            this.getUserListForMapping(this.state.jobId); //  let jobDescriptionListData= this.state.jobDescriptionListData;\n            //  jobDescriptionListData= response.data.result;\n            //  this.setState({jobDescriptionListData: jobDescriptionListData});\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.contentEditable = () => {\n      window.scrollTo(500, 0); //console.log(!this.state.contentEditable);\n\n      this.setState({\n        contentEditable: !this.state.contentEditable\n      });\n    };\n\n    this.setProfileData = data => {\n      //console.log(data);\n      if (data) {\n        let userId = data.userId;\n        let summary = data.summary;\n        let firstName = data.firstName;\n        let lastName = data.lastName; // let tagline = data.tagline.trim();\n        // let editTag = data.tagline.trim();\n\n        let tagline = data.tagline ? data.tagline.trim() : null;\n        let editTag = data.tagline ? data.tagline.trim() : null;\n        let name = (data.firstName ? data.firstName : '') + ' ' + (data.lastName ? data.lastName : '');\n        let profileImage = data.profilePicture;\n\n        if (profileImage) {\n          profileImage = getThumbImage('medium', profileImage);\n        }\n\n        let coverImage = data.coverImage;\n\n        if (coverImage) {\n          coverImage = getThumbImage('original', coverImage);\n        }\n\n        let isActive = data.isActive;\n        this.setState({\n          editTag,\n          summary,\n          firstName,\n          lastName,\n          userId,\n          profileImage,\n          coverImage,\n          tagline,\n          isActive,\n          name\n        });\n      }\n    };\n\n    this.showVideoComponent = index => {\n      let jobDescriptionListData = this.state.jobDescriptionListData;\n      if (jobDescriptionListData[index]) jobDescriptionListData[index]['showVideoComponent'] = jobDescriptionListData[index]['showVideoComponent'] ? !jobDescriptionListData[index]['showVideoComponent'] : true;\n      this.setState({\n        jobDescriptionListData: this.state.jobDescriptionListData\n      });\n    };\n\n    this.editJobDescriptionComponent = jobDescriptionDetail => {\n      console.log(jobDescriptionDetail);\n      this.setState({\n        jobDescriptionDetail: jobDescriptionDetail,\n        showJobDescriptionComponent: !this.state.showJobDescriptionComponent\n      });\n    };\n\n    this.getProfileData = () => {\n      let userId = this.state.userId;\n      this.props.actionGetStudentPersonalInfo(userId);\n    };\n\n    this.toggleDropdown = () => {\n      this.setState({\n        showDropdown: !this.state.showDropdown\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.showVideoHistory = data => {\n      this.props.history.push({\n        pathname: '/recruiter/videoHistory',\n        state: {\n          userId: data.userId\n        }\n      });\n    };\n\n    this.state = {\n      showJobDescriptionComponent: false,\n      jobDescriptionDetail: {},\n      loader1: false,\n      loader2: false,\n      jobDescriptionListData: [],\n      showVideoComponent: false,\n      userData: {},\n      showDropdown: false,\n      isActive: 'true',\n      contentEditable: false,\n      editName: false,\n      name: '',\n      editTagLine: false\n    }; /// this.textInput = React.createRef();    \n  }\n\n  componentWillMount() {\n    let user = this.props.otherUser ? this.props.otherUser : this.props.user;\n\n    if (user) {\n      let userId = user.userId;\n      this.setState({\n        userId: userId,\n        user: user,\n        roleId: user.roleId\n      });\n    }\n\n    let jobDetail = this.props.location.state.jobDetail;\n    console.log(jobDetail);\n\n    if (jobDetail) {\n      if (this.props.user.roleId == 4) {\n        this.getUserListForMapping(jobDetail.jobDescId);\n      } else {\n        this.getUserListForHR(jobDetail.jobDescId);\n      }\n\n      this.setJobDescriptionData(jobDetail);\n    }\n  }\n\n  setJobDescriptionData(jobDescription) {\n    this.setState({\n      jobDescription: jobDescription,\n      description: jobDescription.description,\n      title: jobDescription.title,\n      jobId: jobDescription.jobDescId\n    });\n  }\n\n  getUserListForMapping(jobId) {\n    theRapidHireApiService('getUserListForMapping', {\n      jobId\n    }).then(response => {\n      if (response.data.status === \"Success\") {\n        let jobDescriptionListData = this.state.jobDescriptionListData;\n        jobDescriptionListData = response.data.result;\n        this.setState({\n          jobDescriptionListData: jobDescriptionListData\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  getUserListForHR(jobId) {\n    theRapidHireApiService('getUserListForHR', {\n      jobId\n    }).then(response => {\n      if (response.data.status === \"Success\") {\n        let jobDescriptionListData = this.state.jobDescriptionListData;\n        jobDescriptionListData = response.data.result;\n        this.setState({\n          jobDescriptionListData: jobDescriptionListData\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken').then(response => {\n      if (response.data.status === 'Success') {\n        let sasToken = response.data.result.sasToken;\n        this.setState({\n          sasToken\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let self = this;\n    return (//  <div className=\"wrapper\">\n\n      /* <SideBar jobDescription={this.state.jobDescription} /> */\n      //  <Header {...this.props} />     \n      // <div className=\"main-panel\">   \n      // <div className=\"w3-content main-panel1\">    \n\n      /* <div className=\"\">\r\n        <div className=\"\">\r\n          <img\r\n            src=\"../../assets/img/svg-loaders/three-dots.svg\"\r\n            width=\"50\"\r\n            alt=\"loader\"\r\n            style={\r\n              this.state.loader2 === true\r\n                ? { visibility: 'visible' }\r\n                : { visibility: 'hidden' }\r\n            }\r\n          />\r\n        </div>\r\n        {!this.state.coverImage ? (\r\n          <img className=\"bannerImg\" src=\"\" alt=\"\" />\r\n        ) : (\r\n          <img className=\"bannerImg\" src={this.state.coverImage} alt=\"\" />\r\n        )}\r\n      \r\n        <div className=\"\">                      \r\n        <div className=\"\">\r\n          <ul className=\"\">     \r\n              <li className=\"\">\r\n                <div className=\"\">\r\n                  <p>Desired Career Profile</p>\r\n                </div>\r\n                  <div className=\"\">\r\n                <div className=\"\">\r\n                <a  onClick={this.showJobDescriptionComponent.bind(\r\n                        this                            \r\n                      )}\r\n                      className={                           \r\n                          'btn btn-primary with-icon smallBtn mr-1'                            \r\n                      }\r\n                      style={{ cursor: 'pointer' }}>\r\n                      {' '}\r\n                      <span className=\"icon-plus\" /> {this.state.title}\r\n                    </a>\r\n                                   \r\n                                 {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map((data, index) => (\r\n                              <div key={index} className=\"relative--box\">\r\n                              <ul>\r\n                                  <li>{data.title}</li>\r\n                            </ul>\r\n                              <div className=\"content-box--edit text-left\">\r\n                                <a\r\n                                  onClick={this.editJobDescriptionComponent.bind(\r\n                                    this,\r\n                                    data\r\n                                  )}\r\n                                >\r\n                                  <span className=\"icon-edit_pencil icon\" />\r\n                                </a>\r\n                              </div>  \r\n                              </div>                               \r\n                            ))\r\n                        }                    \r\n                </div></div>\r\n              </li>\r\n                    </ul>\r\n        </div>\r\n        </div>\r\n                 \r\n      </div>\r\n      <ul>\r\n      {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map((data, index) => (\r\n       \r\n       <li>   <div className=\"ankurNewBox\">\r\n            <div key={index} className=\"relative--box\">\r\n                              <ul>\r\n                                  <li>{data.firstName}</li>\r\n                            </ul>\r\n                              <div className=\"content-box--edit text-left\">\r\n                                <a\r\n                                  onClick={this.editJobDescriptionComponent.bind(\r\n                                    this,\r\n                                    data,\r\n                                    null\r\n                                  )}\r\n                                >\r\n                                  <span className=\"icon-edit_pencil icon\" />\r\n                                </a>\r\n                              </div>  \r\n                              </div>  \r\n                            {this.props.user.userId !== this.state.userId ?      \r\n                             <div className=\"buttonAnkur\">\r\n                               <a\r\n                                  onClick={this.handleSubmit.bind(\r\n                                    this,\r\n                                    data,\r\n                                    null\r\n                                  )}\r\n                                >\r\n                                 Go For Map\r\n                                </a>\r\n              </div> : \r\n              <div>\r\n                            <div className=\"buttonAnkur\">\r\n                              <a\r\n                                onClick={this.handleSubmit.bind(\r\n                                  this,\r\n                                  data,\r\n                                  'Shortlist'\r\n                                )}\r\n                              >\r\n                              Shortlist\r\n                              </a>\r\n                              </div>\r\n                              \r\n                              <div className=\"buttonAnkur\">\r\n                              <a\r\n                                onClick={this.handleSubmit.bind(\r\n                                  this,\r\n                                  data,\r\n                                  'Rejected'\r\n                                )}\r\n                              >\r\n                              Rejected\r\n                              </a>\r\n                              </div>\r\n                  </div>\r\n                  }    \r\n          </div>  \r\n          </li>\r\n        ))}  </ul>\r\n      </div> */\n\n      /* <div className=\"card\">\r\n          <div className=\"content table-responsive table-full-width\">\r\n            <table className=\"table table-bigboy\">\r\n              <thead>\r\n                <tr>          \r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map(item => (\r\n                  <tr>\r\n                    <td style={{float:\"\"}}>\r\n                      <div className=\"img-container\" style={{width:\"100px\"}}>\r\n                        <img src={item.profilePicture}  />\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"text-left td-name\">\r\n                      {item.firstName} {item.lastName}\r\n                    </td>\r\n                    <td className=\"td-name\">\r\n                      {item.firstName} {item.lastName}\r\n                    </td>\r\n                     <td>\r\n                     <Button\r\n                        bsStyle=\"primary no-bold no-round mr-1\"\r\n                        className=\"no-bold no-round\"\r\n                     \r\n                      \r\n                      >    Watch\r\n                    </Button>\r\n                    </td>\r\n                   \r\n                    <td className=\"td-actions\">\r\n                     \r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n      \r\n      \r\n                 \r\n                \r\n      \r\n      \r\n              </tbody>\r\n            </table>\r\n          </div></div> */\n      React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        autoClose: 5000,\n        className: \"custom-toaster-main-cls\",\n        toastClassName: \"custom-toaster-bg\",\n        transition: ZoomInAndOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }), React.createElement(Header, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"main-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"w3-content main-panel1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, this.state.jobDescriptionListData && this.state.jobDescriptionListData.map(function (data, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"suggestion-usd\",\n          id: 'student_' + data.userId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"student-img deflt-icon centeredBox flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 562\n          },\n          __self: this\n        }, data.profilePicture ? React.createElement(\"img\", {\n          src: data.profilePicture,\n          alt: \"\",\n          className: \"img-responsive\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 564\n          },\n          __self: this\n        }) : React.createElement(\"div\", {\n          className: \"pp-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"icon-user_default2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 571\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"student-info flex justify-content-space-between\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 576\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"flex-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578\n          },\n          __self: this\n        }, data.firstName ? data.firstName + ' ' + (data.lastName ? data.lastName : '') : null), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585\n          },\n          __self: this\n        }, data.email), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586\n          },\n          __self: this\n        }, data.experience)), React.createElement(\"div\", {\n          className: \"flex-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589\n          },\n          __self: this\n        }, React.createElement(\"h6\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 590\n          },\n          __self: this\n        }, data.profileRole[0] && data.profileRole[0].profileRole ? data.profileRole[0].profileRole : null), data.skills && data.skills.map(item => React.createElement(\"p\", {\n          className: \"p--name wrap-long-words\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593\n          },\n          __self: this\n        }, limitCharacter(item.skillName, 8)))), React.createElement(\"div\", {\n          className: \"btn-group flex align-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 597\n          },\n          __self: this\n        }, self.props.user.roleId == 4 ? React.createElement(\"button\", {\n          onClick: self.handleSubmit.bind(self, data, null),\n          className: \"btn btn-primary no-round\" //  onClick={self.handleClickProfile.bind(self, data)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599\n          },\n          __self: this\n        }, \"Map\") : React.createElement(\"button\", {\n          onClick: self.showVideoComponent.bind(self, index),\n          className: \"btn btn-primary no-round\" //  onClick={self.handleClickProfile.bind(self, data)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 610\n          },\n          __self: this\n        }, \"Watch\"), data.showVideoComponent == true ? React.createElement(ShowVideo, {\n          closeShowVideoComponent: self.showVideoComponent,\n          chatLink: data.chatLink,\n          userId: data.userId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 621\n          },\n          __self: this\n        }) : '', \"\\xA0 \\xA0\", React.createElement(\"button\", {\n          onClick: self.showVideoHistory.bind(self, data),\n          className: \"btn btn-primary no-round\" //  onClick={self.handleClickProfile.bind(self, data)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 635\n          },\n          __self: this\n        }, \"History\"), React.createElement(DropdownButton, {\n          className: \"burger-trigger\",\n          title: React.createElement(\"span\", {\n            className: \"icon-burger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 647\n            },\n            __self: this\n          }),\n          id: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 645\n          },\n          __self: this\n        }, React.createElement(MenuItem // onSelect={self.addParentModel.bind(\n        //   this,\n        //   data.userId\n        // )}\n        , {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 650\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"m-ico icon-plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 656\n          },\n          __self: this\n        }), \"Add Parent\"), React.createElement(MenuItem, {\n          onSelect: () => self.props.history.push({\n            pathname: '/parent/list',\n            state: {\n              studentData: data\n            }\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 659\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"m-ico icon-parent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 667\n          },\n          __self: this\n        }), \" Parent List\"), React.createElement(MenuItem, {\n          onSelect: () => self.props.history.push({\n            pathname: '/student/profilelog',\n            state: {\n              profileOwner: data.userId\n            }\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"m-ico icon-profile-sharing\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 677\n          },\n          __self: this\n        }), ' ', \"Profile Sharing Log\"), React.createElement(MenuItem //   onSelect={self.deleteStudent.bind(\n        //     this,\n        //     data.userId,\n        //     self.props.parent.userId\n        //   )}\n        , {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 681\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"m-ico icon-delete\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 688\n          },\n          __self: this\n        }), \" Delete\"))))));\n      }))))) // </div></div>\n      //   </div>\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    actionGetStudentPersonalInfo,\n    actionGetAllCompetency,\n    actionGetAchievementsByUser,\n    actionGetRecommendationsByUser,\n    actionUpdateUserInfo,\n    actionGetAchievementsData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMapping);","map":{"version":3,"sources":["/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/recruiter/jobDescription/userMapping.js"],"names":["React","Component","Header","SideBar","Modal","DropdownButton","MenuItem","connect","bindActionCreators","ToastContainer","Slider","_","S3FileUpload","ShowVideo","ImageCropper","DownloadLink","showErrorToast","uploadToAzure","limitCharacter","SampleNextArrow","SamplePrevArrow","getThumbImage","ZoomInAndOut","theRapidHireApiService","CONSTANTS","actionGetStudentPersonalInfo","actionGetAllCompetency","actionGetAchievementsByUser","actionGetRecommendationsByUser","actionUpdateUserInfo","actionGetAchievementsData","achievementDefaultImage","SpiderChart","config","bucketName","dirName","region","accessKeyId","secretAccessKey","settings","dots","infinite","speed","slidesToShow","swipeToSlide","nextArrow","props","prevArrow","responsive","breakpoint","slidesToScroll","initialSlide","UserMapping","constructor","context","handleSubmit","data","action","jobMapId","jobId","state","candidateId","userId","hrId","status","createdBy","user","dataMap","then","response","getUserListForMapping","catch","err","console","log","contentEditable","window","scrollTo","setState","setProfileData","summary","firstName","lastName","tagline","trim","editTag","name","profileImage","profilePicture","coverImage","isActive","showVideoComponent","index","jobDescriptionListData","editJobDescriptionComponent","jobDescriptionDetail","showJobDescriptionComponent","getProfileData","toggleDropdown","showDropdown","handleChange","event","target","value","showVideoHistory","history","push","pathname","loader1","loader2","userData","editName","editTagLine","componentWillMount","otherUser","roleId","jobDetail","location","jobDescId","getUserListForHR","setJobDescriptionData","jobDescription","description","title","result","generateSASToken","sasToken","render","self","map","email","experience","profileRole","skills","item","skillName","bind","chatLink","studentData","profileOwner","mapStateToProps","User","parent","parentData","otherUserInfoData","student","Student","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../header/header';\r\nimport SideBar from '../header/sidebar';\r\n// import {\r\n//   Button,\r\n//   Media,\r\n//   Row,\r\n//   Col,\r\n//   FormControl,\r\n//   InputGroup\r\n// } from 'react-bootstrap';\r\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Slider from 'react-slick';\r\nimport _ from 'lodash';\r\nimport S3FileUpload from 'react-s3';\r\n\r\n//import Summary from './summary/addSummary';\r\nimport ShowVideo from '../jobDescription/showVideo';\r\n\r\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport DownloadLink from \"react-download-link\";\r\n//import Img from '../../common/cropper/img';\r\nimport {\r\n  showErrorToast,\r\n  uploadToAzure,\r\n  limitCharacter,\r\n  SampleNextArrow,\r\n  SamplePrevArrow,\r\n  getThumbImage,\r\n  ZoomInAndOut\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n\r\nimport {\r\n  actionGetStudentPersonalInfo,\r\n  actionGetAllCompetency,\r\n  actionGetAchievementsByUser,\r\n  actionGetRecommendationsByUser,\r\n  actionUpdateUserInfo,\r\n  actionGetAchievementsData\r\n} from '../../common/core/redux/actions';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport SpiderChart from '../../common/spiderChart/spiderChart';\r\n\r\n\r\nconst config = {\r\n  bucketName: 'ankurself',\r\n  dirName: 'photos', /* optional */\r\n  region: 'ap-south-1', // Put your aws region here\r\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\r\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\r\n}\r\n\r\n\r\nvar settings = {\r\n  dots: false,\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 3,\r\n  swipeToSlide: true,\r\n  nextArrow: <SampleNextArrow props={this.props} />,\r\n  prevArrow: <SamplePrevArrow props={this.props} />,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n        dots: true\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n        initialSlide: 2\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nclass UserMapping extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.state = {      \r\n      showJobDescriptionComponent: false,      \r\n      jobDescriptionDetail: {},        \r\n     \r\n      loader1: false,\r\n      loader2: false,      \r\n      jobDescriptionListData: [],\r\n      showVideoComponent: false,     \r\n      userData:{},     \r\n      showDropdown: false,     \r\n      isActive: 'true',     \r\n      contentEditable: false,\r\n      editName: false,\r\n      name: '',\r\n      editTagLine: false\r\n    };\r\n   /// this.textInput = React.createRef();    \r\n  }\r\n\r\n  componentWillMount() {\r\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\r\n    if(user){\r\n      let userId =user.userId;       \r\n      this.setState({userId: userId,user:user,roleId:user.roleId});\r\n    }    \r\n    let jobDetail= this.props.location.state.jobDetail;\r\n    console.log(jobDetail);\r\n    if(jobDetail){\r\n      if(this.props.user.roleId == 4){\r\n        this.getUserListForMapping(jobDetail.jobDescId);  \r\n      }else{\r\n        this.getUserListForHR(jobDetail.jobDescId);  \r\n      }  \r\n      this.setJobDescriptionData(jobDetail);   \r\n    } \r\n  }\r\n\r\n  setJobDescriptionData(jobDescription){\r\n     this.setState({\r\n      jobDescription:jobDescription,\r\n      description: jobDescription.description,\r\n      title: jobDescription.title,\r\n      jobId:jobDescription.jobDescId \r\n\r\n     });\r\n  }\r\n\r\n  getUserListForMapping(jobId){\r\n    theRapidHireApiService('getUserListForMapping',{jobId})\r\n    .then(response => {     \r\n      if (response.data.status === \"Success\") {\r\n         let jobDescriptionListData= this.state.jobDescriptionListData;\r\n         jobDescriptionListData= response.data.result;\r\n     \r\n         this.setState({jobDescriptionListData: jobDescriptionListData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  getUserListForHR(jobId){\r\n    theRapidHireApiService('getUserListForHR',{jobId})\r\n    .then(response => {     \r\n      if (response.data.status === \"Success\") {\r\n         let jobDescriptionListData= this.state.jobDescriptionListData;\r\n         jobDescriptionListData= response.data.result;\r\n     \r\n         this.setState({jobDescriptionListData: jobDescriptionListData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  handleSubmit = (data,action) => {\r\n    let jobMapId=data.jobMapId;\r\n    let jobId=this.state.jobId;\r\n    let candidateId=data.userId;\r\n    let hrId=this.state.userId;\r\n    let status= action;\r\n    let createdBy= this.props.user.userId;\r\n\r\n    let dataMap={\r\n      jobMapId,\r\n      jobId,\r\n      candidateId,\r\n      hrId,\r\n      status,\r\n      createdBy        \r\n    }\r\n    \r\n    if(jobMapId!==\"\" || jobMapId!==null){\r\n        theRapidHireApiService('createJobMap',dataMap)\r\n        .then(response => {     \r\n          if (response.data.status === \"Success\") {\r\n            this.getUserListForMapping(this.state.jobId);   \r\n            //  let jobDescriptionListData= this.state.jobDescriptionListData;\r\n            //  jobDescriptionListData= response.data.result;\r\n        \r\n            //  this.setState({jobDescriptionListData: jobDescriptionListData});\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }else{\r\n      theRapidHireApiService('updateJobMap',dataMap)\r\n      .then(response => {     \r\n        if (response.data.status === \"Success\") {\r\n          this.getUserListForMapping(this.state.jobId);   \r\n          //  let jobDescriptionListData= this.state.jobDescriptionListData;\r\n          //  jobDescriptionListData= response.data.result;\r\n      \r\n          //  this.setState({jobDescriptionListData: jobDescriptionListData});\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n    \r\n\r\n\r\n  contentEditable = () => {\r\n    window.scrollTo(500, 0);\r\n    //console.log(!this.state.contentEditable);\r\n    this.setState({ contentEditable: !this.state.contentEditable });\r\n  };\r\n\r\n  setProfileData = data => {\r\n    //console.log(data);\r\n    if (data) {\r\n      let userId = data.userId;\r\n      let summary = data.summary;\r\n      let firstName = data.firstName;\r\n      let lastName = data.lastName;\r\n      // let tagline = data.tagline.trim();\r\n      // let editTag = data.tagline.trim();\r\n      let tagline = data.tagline ? data.tagline.trim() : null;\r\n      let editTag = data.tagline ? data.tagline.trim() : null;\r\n\r\n      let name =\r\n        (data.firstName ? data.firstName : '') +\r\n        ' ' +\r\n        (data.lastName ? data.lastName : '');\r\n      let profileImage = data.profilePicture;\r\n      if (profileImage) {\r\n        profileImage = getThumbImage('medium', profileImage);\r\n      }\r\n      let coverImage = data.coverImage;\r\n      if (coverImage) {\r\n        coverImage = getThumbImage('original', coverImage);\r\n      }\r\n      let isActive = data.isActive;\r\n      this.setState({\r\n        editTag,\r\n        summary,\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        profileImage,\r\n        coverImage,\r\n        tagline,\r\n        isActive,\r\n        name\r\n      });\r\n    }\r\n  };  \r\n\r\n \r\n  showVideoComponent = index => {   \r\n    let jobDescriptionListData= this.state.jobDescriptionListData;\r\n    if(jobDescriptionListData[index])\r\n     jobDescriptionListData[index]['showVideoComponent']= jobDescriptionListData[index]['showVideoComponent'] ? !jobDescriptionListData[index]['showVideoComponent']: true;\r\n    this.setState({\r\n      jobDescriptionListData: this.state.jobDescriptionListData   \r\n    }); \r\n  };\r\n\r\n  editJobDescriptionComponent = jobDescriptionDetail => {\r\n    console.log(jobDescriptionDetail);\r\n    this.setState({\r\n      jobDescriptionDetail: jobDescriptionDetail ,\r\n      showJobDescriptionComponent: !this.state.showJobDescriptionComponent    \r\n    });\r\n  }\r\n\r\n \r\n\r\n  getProfileData = () => {\r\n    let userId = this.state.userId;\r\n    this.props.actionGetStudentPersonalInfo(userId);\r\n  };\r\n  \r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  toggleDropdown = () => {\r\n    this.setState({\r\n      showDropdown: !this.state.showDropdown\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };  \r\n\r\n\r\n  showVideoHistory = data =>{\r\n    this.props.history.push({\r\n      pathname: '/recruiter/videoHistory',\r\n      state: {\r\n        userId: data.userId\r\n      }\r\n    });\r\n  }\r\n \r\n \r\n  render() {let self= this;\r\n    return (\r\n    //  <div className=\"wrapper\">\r\n   \r\n       /* <SideBar jobDescription={this.state.jobDescription} /> */\r\n      //  <Header {...this.props} />     \r\n        // <div className=\"main-panel\">   \r\n        // <div className=\"w3-content main-panel1\">    \r\n          /* <div className=\"\">\r\n            <div className=\"\">\r\n              <img\r\n                src=\"../../assets/img/svg-loaders/three-dots.svg\"\r\n                width=\"50\"\r\n                alt=\"loader\"\r\n                style={\r\n                  this.state.loader2 === true\r\n                    ? { visibility: 'visible' }\r\n                    : { visibility: 'hidden' }\r\n                }\r\n              />\r\n            </div>\r\n            {!this.state.coverImage ? (\r\n              <img className=\"bannerImg\" src=\"\" alt=\"\" />\r\n            ) : (\r\n              <img className=\"bannerImg\" src={this.state.coverImage} alt=\"\" />\r\n            )}\r\n          \r\n\r\n          <div className=\"\">                      \r\n            <div className=\"\">\r\n              <ul className=\"\">     \r\n                  <li className=\"\">\r\n                    <div className=\"\">\r\n                      <p>Desired Career Profile</p>\r\n                    </div>\r\n\r\n                    <div className=\"\">\r\n                    <div className=\"\">\r\n                    <a  onClick={this.showJobDescriptionComponent.bind(\r\n                            this                            \r\n                          )}\r\n                          className={                           \r\n                              'btn btn-primary with-icon smallBtn mr-1'                            \r\n                          }\r\n                          style={{ cursor: 'pointer' }}>\r\n                          {' '}\r\n                          <span className=\"icon-plus\" /> {this.state.title}\r\n                        </a>\r\n                                       \r\n    \r\n\r\n                             {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map((data, index) => (\r\n                                  <div key={index} className=\"relative--box\">\r\n                                  <ul>\r\n                                      <li>{data.title}</li>\r\n                                </ul>\r\n                                  <div className=\"content-box--edit text-left\">\r\n                                    <a\r\n                                      onClick={this.editJobDescriptionComponent.bind(\r\n                                        this,\r\n                                        data\r\n                                      )}\r\n                                    >\r\n                                      <span className=\"icon-edit_pencil icon\" />\r\n                                    </a>\r\n                                  </div>  \r\n                                  </div>                               \r\n                                ))\r\n                            }                    \r\n                    </div></div>\r\n                  </li>\r\n        \r\n              </ul>\r\n            </div>\r\n            </div>\r\n      \r\n             \r\n          </div>\r\n          <ul>\r\n        {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map((data, index) => (\r\n           \r\n           <li>   <div className=\"ankurNewBox\">\r\n                <div key={index} className=\"relative--box\">\r\n                                  <ul>\r\n                                      <li>{data.firstName}</li>\r\n                                </ul>\r\n                                  <div className=\"content-box--edit text-left\">\r\n                                    <a\r\n                                      onClick={this.editJobDescriptionComponent.bind(\r\n                                        this,\r\n                                        data,\r\n                                        null\r\n                                      )}\r\n                                    >\r\n                                      <span className=\"icon-edit_pencil icon\" />\r\n                                    </a>\r\n                                  </div>  \r\n                                  </div>  \r\n                                {this.props.user.userId !== this.state.userId ?      \r\n                                 <div className=\"buttonAnkur\">\r\n                                   <a\r\n                                      onClick={this.handleSubmit.bind(\r\n                                        this,\r\n                                        data,\r\n                                        null\r\n                                      )}\r\n                                    >\r\n                                     Go For Map\r\n                                    </a>\r\n                  </div> : \r\n                  <div>\r\n                                <div className=\"buttonAnkur\">\r\n                                  <a\r\n                                    onClick={this.handleSubmit.bind(\r\n                                      this,\r\n                                      data,\r\n                                      'Shortlist'\r\n                                    )}\r\n                                  >\r\n                                  Shortlist\r\n                                  </a>\r\n                                  </div>\r\n                                  \r\n                                  <div className=\"buttonAnkur\">\r\n                                  <a\r\n                                    onClick={this.handleSubmit.bind(\r\n                                      this,\r\n                                      data,\r\n                                      'Rejected'\r\n                                    )}\r\n                                  >\r\n                                  Rejected\r\n                                  </a>\r\n                                  </div>\r\n                      </div>\r\n                      }    \r\n              </div>  \r\n              </li>\r\n            ))}  </ul>\r\n        </div> */\r\n\r\n\r\n/* <div className=\"card\">\r\n    <div className=\"content table-responsive table-full-width\">\r\n      <table className=\"table table-bigboy\">\r\n        <thead>\r\n          <tr>          \r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map(item => (\r\n            <tr>\r\n              <td style={{float:\"\"}}>\r\n                <div className=\"img-container\" style={{width:\"100px\"}}>\r\n                  <img src={item.profilePicture}  />\r\n                </div>\r\n              </td>\r\n              <td className=\"text-left td-name\">\r\n                {item.firstName} {item.lastName}\r\n              </td>\r\n              <td className=\"td-name\">\r\n                {item.firstName} {item.lastName}\r\n              </td>\r\n               <td>\r\n               <Button\r\n                  bsStyle=\"primary no-bold no-round mr-1\"\r\n                  className=\"no-bold no-round\"\r\n               \r\n                \r\n                >    Watch\r\n              </Button>\r\n              </td>\r\n             \r\n              <td className=\"td-actions\">\r\n               \r\n              </td>\r\n            </tr>\r\n          ))}\r\n\r\n\r\n           \r\n          \r\n\r\n\r\n        </tbody>\r\n      </table>\r\n    </div></div> */\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    <div className=\"wrapper\">\r\n     <ToastContainer\r\n        autoClose={5000}\r\n        className=\"custom-toaster-main-cls\"\r\n        toastClassName=\"custom-toaster-bg\"\r\n        transition={ZoomInAndOut}\r\n      />\r\n        <Header {...this.props} />     \r\n          <div className=\"main-panel\">          \r\n        \r\n\r\n        <div className=\"w3-content main-panel1\">\r\n        \r\n          <div className=\"container main\">\r\n           \r\n\r\n            {/* <div className=\"button--wrapper mb-1 text-center flex flex-1 justify-center dashBtnCenter\">\r\n              <button\r\n                className=\"btn btn-with-border with-icon smallBtn mr-1\"\r\n                onClick={this.viewSampleProfile}\r\n              >\r\n                View Sample Profile\r\n              </button>              \r\n              <button\r\n                className=\"btn btn-with-border with-icon smallBtn\"\r\n                onClick={this.addStudentModel}\r\n              >\r\n                <span className=\"icon-plus\" />\r\n                add student\r\n              </button>\r\n            </div> */}\r\n            {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map(function(data, index) {\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className=\"suggestion-usd\"\r\n                    id={'student_' + data.userId}\r\n                  >\r\n                    <div className=\"student-img deflt-icon centeredBox flex\">\r\n                      {data.profilePicture ? (\r\n                        <img\r\n                          src={data.profilePicture}\r\n                          alt=\"\"\r\n                          className=\"img-responsive\"\r\n                        />\r\n                      ) : (\r\n                        <div className=\"pp-default\">\r\n                          <span className=\"icon-user_default2\" />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"student-info flex justify-content-space-between\">\r\n                      <div className=\"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\">\r\n                        <div className=\"flex-1\">\r\n                          <h3>\r\n                            {data.firstName\r\n                              ? data.firstName +\r\n                                ' ' +\r\n                                (data.lastName ? data.lastName : '')\r\n                              : null}\r\n                          </h3>\r\n                          <p>{data.email}</p>\r\n                          <p>{data.experience}</p>\r\n                        </div>\r\n\r\n                         <div className=\"flex-1\">\r\n                          <h6>\r\n                            {data.profileRole[0] && data.profileRole[0].profileRole ? data.profileRole[0].profileRole :null}                            \r\n                          </h6>\r\n                          {data.skills && data.skills.map(item => ( <p className=\"p--name wrap-long-words\">{\r\n                                                                                    limitCharacter(item.skillName,8)}</p>))}\r\n                        </div>\r\n\r\n                        <div className=\"btn-group flex align-center\">                 \r\n                        {self.props.user.roleId == 4 ?\r\n                            <button onClick={self.handleSubmit.bind(\r\n                                    self,\r\n                                    data,\r\n                                    null                          \r\n                                  )} \r\n                              className=\"btn btn-primary no-round\"\r\n                            //  onClick={self.handleClickProfile.bind(self, data)}\r\n                            >\r\n                              Map\r\n                            </button>                       \r\n                          :\r\n                          <button onClick={self.showVideoComponent.bind(\r\n                            self,\r\n                            index                            \r\n                          )} \r\n                            className=\"btn btn-primary no-round\"\r\n                          //  onClick={self.handleClickProfile.bind(self, data)}\r\n                          >\r\n                           Watch\r\n                          </button>}\r\n                          {data.showVideoComponent ==\r\n                              true ? (\r\n                                <ShowVideo\r\n                                  closeShowVideoComponent={\r\n                                    self.showVideoComponent\r\n                                  }                                 \r\n                                  chatLink={\r\n                                    data.chatLink\r\n                                  }\r\n                                  userId={data.userId}\r\n                                />\r\n                              ) : (\r\n                                '')}\r\n                          &nbsp; &nbsp;\r\n\r\n                          \r\n                          <button onClick={self.showVideoHistory.bind(\r\n                            self,\r\n                            data                            \r\n                          )} \r\n                            className=\"btn btn-primary no-round\"\r\n                          //  onClick={self.handleClickProfile.bind(self, data)}\r\n                          >\r\n                           History\r\n                          </button>\r\n                                              \r\n                          <DropdownButton\r\n                            className=\"burger-trigger\"\r\n                            title={<span className=\"icon-burger\" />}\r\n                            id=\"1\"\r\n                          >\r\n                            <MenuItem\r\n                              // onSelect={self.addParentModel.bind(\r\n                              //   this,\r\n                              //   data.userId\r\n                              // )}\r\n                            >\r\n                              <i className=\"m-ico icon-plus\" />\r\n                              Add Parent\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                              onSelect={() =>\r\n                                self.props.history.push({\r\n                                  pathname: '/parent/list',\r\n                                  state: { studentData: data }\r\n                                })\r\n                              }\r\n                            >\r\n                              <i className=\"m-ico icon-parent\" /> Parent List\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                              onSelect={() =>\r\n                                self.props.history.push({\r\n                                  pathname: '/student/profilelog',\r\n                                  state: { profileOwner: data.userId }\r\n                                })\r\n                              }\r\n                            >\r\n                              <i className=\"m-ico icon-profile-sharing\" />{' '}\r\n                              Profile Sharing Log\r\n                            </MenuItem>\r\n\r\n                            <MenuItem\r\n                            //   onSelect={self.deleteStudent.bind(\r\n                            //     this,\r\n                            //     data.userId,\r\n                            //     self.props.parent.userId\r\n                            //   )}\r\n                            >\r\n                              <i className=\"m-ico icon-delete\" /> Delete\r\n                            </MenuItem>\r\n                          </DropdownButton>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* <div className=\"flex align-center justify-content-space-bettween tag-wrap\">\r\n                        <div className=\"promo-tag br-light\">\r\n                          Skills <span>{data.accomplishment}</span>\r\n                        </div>\r\n                       \r\n                        <div className=\"promo-tag\">\r\n                          Location <span>{data.recommendation}</span>\r\n                        </div>\r\n                      </div> */}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>         \r\n          {/* {this.state.addStudentModel ? (\r\n            <AddMoreStudent\r\n              addStudentModel={this.state.addStudentModel}\r\n              closeAddStudentModel={this.addStudentModel}\r\n            />\r\n          ) : null} */}\r\n        </div></div>\r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    // </div></div>\r\n    //   </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    otherUser: state.User.otherUserInfoData,\r\n    student: state.Student\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      actionGetStudentPersonalInfo,\r\n      actionGetAllCompetency,\r\n      actionGetAchievementsByUser,\r\n      actionGetRecommendationsByUser,\r\n      actionUpdateUserInfo,\r\n      actionGetAchievementsData\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserMapping);\r\n"]},"metadata":{},"sourceType":"module"}