{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\user\\\\profile\\\\timeSlots.js\";\nimport React, { Component } from 'react';\nimport Header from '../header/header';\nimport { Button, Media, Row, Col, FormControl, FormGroup, InputGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ToastContainer } from 'react-toastify';\nimport Slider from 'react-slick';\nimport _ from 'lodash';\nimport { Week, Month, Agenda, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\nimport { DataManager, Query, Predicate, Internationalization } from '@syncfusion/ej2-data';\nimport moment from 'moment';\nimport { extend } from '@syncfusion/ej2-base';\nimport \"@syncfusion/ej2-base/styles/material.css\";\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\nimport \"@syncfusion/ej2-lists/styles/material.css\";\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\nimport \"@syncfusion/ej2-popups/styles/material.css\"; //import \"@syncfusion/ej2-split-buttons/styles/material.css\";\n\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\"; //import '../node_modules/@syncfusion/ej2/material.css';\n\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\"; //import Img from '../../common/cropper/img';\n\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars'; //import moment from 'moment';\n\nimport { showErrorToast, uploadToAzure, limitCharacter, SampleNextArrow, SamplePrevArrow, getThumbImage, ZoomInAndOut } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig'; //import AvailableTimes from 'react-available-times';\n// import {\n//   actionGetStudentPersonalInfo,\n//   actionGetAllCompetency,\n//   actionGetAchievementsByUser,\n//   actionGetRecommendationsByUser,\n//   actionUpdateUserInfo,\n//   actionGetAchievementsData\n// } from '../../common/core/redux/actions';\n\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\n\nclass TimeSlots extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      timeSlotData: []\n    };\n  }\n\n  componentWillMount() {\n    let userId = this.props.user.userId;\n    this.setState({\n      userId: userId\n    });\n    this.bookedTimeSlot(userId);\n    this.getUserProfileData(userId);\n  }\n\n  componentDidMount() {\n    this.setTimeSlotForWeek();\n  }\n\n  getUserProfileData(userId) {\n    theRapidHireApiService('getUserSkillsById', {\n      userId\n    }).then(response => {\n      if (response.data.status === 'Success') {\n        console.log(response.data);\n        let userProfile = response.data.result[0];\n        this.setState({\n          userProfile: userProfile\n        });\n        this.setUserProfileData(userProfile);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  setTimeSlotForWeek() {\n    let timeSlotForWeek = [];\n\n    for (var i = 0; i < 7; i++) {\n      let date = new Date();\n      date.setDate(date.getDate() + i);\n      let finalDate = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n      timeSlotForWeek.push({\n        showDate: finalDate,\n        date: new Date(moment().add('days', i).format(\"DD-MMM-YYYY\")).valueOf()\n      });\n    }\n\n    this.setState({\n      timeSlotForWeek\n    });\n  }\n\n  bookedTimeSlot(userId, date) {\n    let data = {\n      userId: userId,\n      slotRegisteredDate: date\n    };\n    theRapidHireApiService('bookedTimeSlot', data).then(response => {\n      console.log(response);\n\n      if (response.data.status === 'Success') {\n        let timeSlotData = this.state.timeSlotData;\n        timeSlotData = response.data.result;\n        this.setState({\n          timeSlotData: timeSlotData\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  updateTimeSlot(data) {\n    let date = this.state.selectedDate;\n    data.userId = this.props.user.userId;\n    theRapidHireApiService('modifySlot', data).then(response => {\n      console.log(response);\n\n      if (response.data.status === 'Success') {\n        this.bookedTimeSlot(this.state.userId, date);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  dateChange(date) {\n    // console.log(new Date(moment(event.value).format(\"DD-MMM-YYYY\")).valueOf() );\n    //   let date= parseInt(new Date(moment(event.value).format(\"DD-MMM-YYYY\")).valueOf());\n    //  this.setState({newData:});\n    this.bookedTimeSlot(this.state.userId, date);\n    this.setState({\n      selectedDate: date\n    });\n  }\n\n  render() {\n    let dateValue = new Date();\n\n    let _this = this;\n\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.userProfile ? React.createElement(\"div\", {\n      className: \"w3-row-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-third\",\n      style: {\n        width: \"fit-content\",\n        \"margin-left\": \"122px\",\n        \"padding-top\": \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-white w3-text-grey w3-card-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-display-container \",\n      style: {\n        overflow: \"hidden\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.timeSlotForWeek && this.state.timeSlotForWeek.map(data => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bsStyle: \"primary no-bold no-round mr-1\",\n      onClick: _this.dateChange.bind(_this, data.date),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon-share2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), data.showDate)))))), \" \"), React.createElement(\"div\", {\n      className: \"w3-twothird\",\n      style: {\n        \"padding-top\": \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-container w3-card w3-white w3-margin-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"time_slot_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Avalilable TimeSlot\"), React.createElement(\"p\", {\n      className: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Kindly select date then get the date\")), React.createElement(\"div\", {\n      className: \"content table-responsive table-full-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-hover table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"startTime\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"EndTime\"), React.createElement(\"th\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.state.timeSlotData.map(data => React.createElement(\"tr\", {\n      key: data.slotId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, moment(parseInt(data.startTimeStamp, 10)).format(\"hh:mm:ss\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, moment(parseInt(data.endTimeStamp, 10)).format(\"hh:mm:ss\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bsStyle: \"default\",\n      className: \"no-bold no-round\",\n      onClick: _this.updateTimeSlot.bind(_this, data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Book\"))))))))))) : React.createElement(\"div\", {\n      className: \"w3-content main-panel1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Kindly complete profile first\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeSlots);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\user\\profile\\timeSlots.js"],"names":["React","Component","Header","Button","Media","Row","Col","FormControl","FormGroup","InputGroup","connect","bindActionCreators","ToastContainer","Slider","_","Week","Month","Agenda","ScheduleComponent","ViewsDirective","ViewDirective","ResourcesDirective","ResourceDirective","Inject","DataManager","Query","Predicate","Internationalization","moment","extend","ImageCropper","DownloadLink","DatePickerComponent","TimePickerComponent","showErrorToast","uploadToAzure","limitCharacter","SampleNextArrow","SamplePrevArrow","getThumbImage","ZoomInAndOut","theRapidHireApiService","CONSTANTS","achievementDefaultImage","SpiderChart","TimeSlots","constructor","props","context","state","isOpen","timeSlotData","componentWillMount","userId","user","setState","bookedTimeSlot","getUserProfileData","componentDidMount","setTimeSlotForWeek","then","response","data","status","console","log","userProfile","result","setUserProfileData","catch","err","timeSlotForWeek","i","date","Date","setDate","getDate","finalDate","getMonth","getFullYear","push","showDate","add","format","valueOf","slotRegisteredDate","updateTimeSlot","selectedDate","dateChange","render","dateValue","_this","width","overflow","map","bind","slotId","parseInt","startTimeStamp","endTimeStamp","mapStateToProps","User","userData","parent","parentData","student","Student","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../header/header';\r\nimport {\r\n  Button,\r\n  Media,\r\n  Row,\r\n  Col,\r\n  FormControl,FormGroup,\r\n  InputGroup\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Slider from 'react-slick';\r\nimport _ from 'lodash';\r\n\r\nimport { Week, Month, Agenda, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective, Inject } from '@syncfusion/ej2-react-schedule';\r\nimport { DataManager, Query, Predicate, Internationalization } from '@syncfusion/ej2-data';\r\nimport moment from 'moment';\r\n\r\nimport { extend } from '@syncfusion/ej2-base';\r\nimport \"@syncfusion/ej2-base/styles/material.css\";\r\nimport \"@syncfusion/ej2-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-calendars/styles/material.css\";\r\nimport \"@syncfusion/ej2-dropdowns/styles/material.css\";\r\nimport \"@syncfusion/ej2-inputs/styles/material.css\";\r\nimport \"@syncfusion/ej2-lists/styles/material.css\";\r\nimport \"@syncfusion/ej2-navigations/styles/material.css\";\r\nimport \"@syncfusion/ej2-popups/styles/material.css\";\r\n//import \"@syncfusion/ej2-split-buttons/styles/material.css\";\r\nimport \"@syncfusion/ej2-react-schedule/styles/material.css\";\r\n//import '../node_modules/@syncfusion/ej2/material.css';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport DownloadLink from \"react-download-link\";\r\n//import Img from '../../common/cropper/img';\r\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\n//import moment from 'moment';\r\nimport {\r\n  showErrorToast,\r\n  uploadToAzure,\r\n  limitCharacter,\r\n  SampleNextArrow,\r\n  SamplePrevArrow,\r\n  getThumbImage,ZoomInAndOut\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n//import AvailableTimes from 'react-available-times';\r\n// import {\r\n//   actionGetStudentPersonalInfo,\r\n//   actionGetAllCompetency,\r\n//   actionGetAchievementsByUser,\r\n//   actionGetRecommendationsByUser,\r\n//   actionUpdateUserInfo,\r\n//   actionGetAchievementsData\r\n// } from '../../common/core/redux/actions';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport SpiderChart from '../../common/spiderChart/spiderChart';\r\n\r\nclass TimeSlots extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.state = {      \r\n      isOpen: false,\r\n      timeSlotData:[]\r\n    };   \r\n    \r\n  }\r\n\r\n  componentWillMount() {\r\n    let userId = this.props.user.userId;\r\n    this.setState({userId:userId});\r\n   this.bookedTimeSlot(userId);   \r\n   this.getUserProfileData(userId);\r\n  }\r\n\r\n  componentDidMount() {  \r\n    this.setTimeSlotForWeek();\r\n  }\r\n\r\n  getUserProfileData(userId){\r\n    theRapidHireApiService('getUserSkillsById',{userId})\r\n    .then(response => {     \r\n      if (response.data.status === 'Success') {\r\n        console.log(response.data);       \r\n         let userProfile = response.data.result[0];     \r\n        this.setState({userProfile:userProfile                  \r\n         }); \r\n         this.setUserProfileData(userProfile);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  } \r\n\r\n  setTimeSlotForWeek(){  \r\n    let timeSlotForWeek=[];\r\n    for(var i=0;i<7;i++){\r\n      let date = new Date();\r\n      date.setDate(date.getDate() + i);    \r\n     \r\n      let finalDate = date.getDate()+'/'+ (date.getMonth()+1) +'/'+date.getFullYear();\r\n      \r\n      timeSlotForWeek.push({showDate:finalDate,date : new Date(moment().add('days', i).format(\"DD-MMM-YYYY\")).valueOf() })\r\n    }\r\n    this.setState({timeSlotForWeek});\r\n  }\r\n \r\n  bookedTimeSlot(userId,date){\r\n    let data={\r\n      userId:userId,\r\n      slotRegisteredDate:date\r\n    }\r\n    theRapidHireApiService('bookedTimeSlot',data)\r\n    .then(response => {    \r\n      console.log(response); \r\n      if (response.data.status === 'Success' ) {\r\n         let timeSlotData= this.state.timeSlotData;\r\n         timeSlotData= response.data.result;     \r\n         this.setState({timeSlotData: timeSlotData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  updateTimeSlot(data){\r\n   let date=  this.state.selectedDate;\r\n   data.userId = this.props.user.userId;    \r\n    theRapidHireApiService('modifySlot',data)\r\n    .then(response => {    \r\n      console.log(response); \r\n      if (response.data.status === 'Success') {\r\n        this.bookedTimeSlot(this.state.userId,date)\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n\r\n  dateChange(date){\r\n   // console.log(new Date(moment(event.value).format(\"DD-MMM-YYYY\")).valueOf() );\r\n //   let date= parseInt(new Date(moment(event.value).format(\"DD-MMM-YYYY\")).valueOf());\r\n  //  this.setState({newData:});\r\n   this.bookedTimeSlot(this.state.userId,date);\r\n   this.setState({selectedDate:date })\r\n  }\r\n\r\n \r\n  render() {\r\n    let dateValue=new Date();\r\n    let _this= this;\r\n    return (\r\n      <div className=\"wrapper\">\r\n       <ToastContainer\r\n          autoClose={5000}\r\n          className=\"custom-toaster-main-cls\"\r\n          toastClassName=\"custom-toaster-bg\"\r\n          transition={ZoomInAndOut}\r\n        /> \r\n      <Header {...this.props} />     \r\n      <div className=\"main-panel\">   \r\n      <div className=\"\">\r\n      \r\n      {this.state.userProfile ?   \r\n      <div className=\"w3-row-padding\">\r\n      <div className=\"w3-third\" style={{width: \"fit-content\",\"margin-left\": \"122px\",\"padding-top\": \"15px\"}}>\r\n     <div className=\"w3-white w3-text-grey w3-card-4\">\r\n      <div className=\"w3-display-container \" style={{overflow:\"hidden\"}}> \r\n      <div className=\"w3-container\">\r\n        {this.state.timeSlotForWeek && this.state.timeSlotForWeek.map((data) => (    \r\n                     <p>    \r\n                         <Button\r\n                                      bsStyle=\"primary no-bold no-round mr-1\"\r\n                                        onClick={_this.dateChange.bind(\r\n                                          _this,\r\n                                          data.date                      \r\n                                        )}\r\n                                       >\r\n                                       <span className=\"icon-share2\" />\r\n                                       {data.showDate}\r\n                            </Button></p>\r\n        ))}                               \r\n        </div>\r\n        </div>\r\n        </div> </div>\r\n        <div className=\"w3-twothird\" style={{\"padding-top\": \"15px\"}}>\r\n          <div className=\"w3-container w3-card w3-white w3-margin-bottom\">    \r\n            \r\n               {/* <DatePickerComponent id=\"datepicker\" onChange={this.dateChange.bind(this)} format='yyyy-MM-dd' placeholder='Enter date' />  */}\r\n\r\n       \r\n       <div className=\"time_slot_card\">\r\n        <div className=\"header\">\r\n          <h4 className=\"title\">Avalilable TimeSlot</h4>\r\n          <p className=\"category\">Kindly select date then get the date</p>\r\n        </div>\r\n        <div className=\"content table-responsive table-full-width\">\r\n          <table className=\"table table-hover table-striped\">\r\n            <thead>\r\n              <tr>              \r\n                <th>startTime</th>\r\n                <th>EndTime</th>            \r\n                <th className=\"text-right\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.timeSlotData.map(data => (\r\n                <tr key={data.slotId}>\r\n                  <td>{moment(parseInt(data.startTimeStamp,10)).format(\"hh:mm:ss\")}</td>\r\n                  <td>{moment(parseInt(data.endTimeStamp,10)).format(\"hh:mm:ss\")}</td>                                 \r\n                  <td><Button\r\n                          bsStyle=\"default\"\r\n                          className=\"no-bold no-round\"\r\n                          onClick={_this.updateTimeSlot.bind(_this, data)}              \r\n                        >\r\n                        Book\r\n                       </Button></td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n      </div>\r\n       \r\n       </div>\r\n       </div>\r\n       </div>:<div className=\"w3-content main-panel1\">\r\n                <div className=\"container main\">\r\n                  Kindly complete profile first\r\n                  </div>\r\n              </div>\r\n\r\n            }\r\n       </div>\r\n      </div>\r\n       \r\n       \r\n       \r\n       \r\n \r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    student: state.Student\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n     \r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TimeSlots);\r\n"]},"metadata":{},"sourceType":"module"}