{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\admin\\\\hruser\\\\hruser.js\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\nimport { setLocalStorage, uploadToAzure, getThumbImage } from '../../common/commonFunctions';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport Header from '../header/header';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport AddMoreStudent from './addMoreStudent';\nimport { actionSetStudentAsUser, actionGetStudentPersonalInfo, actionGetStudentUpdatedInfo, actionRemoveStudent, actionUpdateParentInfo } from '../../common/core/redux/actions';\nimport sampleProfile from '../../assets/img/sample-profile.jpg';\n\nclass Hruser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setProfileData = data => {\n      if (data) {\n        let userId = data.userId;\n        let firstName = data.firstName;\n        let lastName = data.lastName;\n        let profileImage = data.profilePicture;\n\n        if (profileImage) {\n          profileImage = profileImage;\n        }\n\n        let coverImage = data.coverImage;\n\n        if (coverImage) {\n          coverImage = getThumbImage('original', coverImage);\n        }\n\n        this.setState({\n          firstName,\n          lastName,\n          userId,\n          profileImage,\n          coverImage\n        });\n      }\n    };\n\n    this.handleClickProfile = otherUserInfoData => {\n      otherUserInfoData['token'] = this.props.user['token'];\n      let candidateAndHrDataJson = {\n        otherUserInfoData: otherUserInfoData\n      };\n      this.props.actionSetStudentAsUser(candidateAndHrDataJson);\n      this.props.history.push('/recruiter/jobDesription');\n    };\n\n    this.handleChange = event => {\n      let self = this;\n      let studentList = self.state.studentList;\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      var str_array = name.split('_');\n      let id1 = str_array[1];\n      let id2 = str_array[2];\n      let userId = str_array[1];\n      let data = {\n        isActive: value,\n        userId,\n        index: id2\n      };\n      theRapidHireApiService('updateUserStatus', data).then(response => {\n        if (response && response.data.status === 'Success') {\n          self.props.actionGetStudentUpdatedInfo(data);\n        }\n      }).catch(error => {});\n      studentList[id2].isActive = !studentList[id2].isActive;\n      self.setState({\n        isActive: false,\n        studentLis: studentList\n      });\n    };\n\n    this.handleImageChange = (action, event) => {\n      this.setState({\n        imageSource: ''\n      });\n      const file = event.target.files[0];\n      const fileName = file.name;\n      const fileType = file.type;\n\n      if (file) {\n        this.generateSASToken();\n        let reader = new FileReader();\n        reader.readAsDataURL(event.target.files[0]);\n\n        reader.onload = event => {\n          this.setState({\n            imageSource: event.target.result,\n            imageName: fileName,\n            imageType: fileType,\n            action: action\n          });\n        };\n      }\n    };\n\n    this.updateUserData = (type, uploadPath, userId) => {\n      if (type === 1) {\n        let profilePicture = uploadPath;\n        let data = {\n          userId,\n          profilePicture\n        };\n        this.props.actionUpdateParentInfo({\n          profilePicture\n        });\n        theRapidHireApiService('updateProfileImage', data);\n      }\n\n      if (type === 2) {\n        let coverImage = uploadPath;\n        let data = {\n          userId,\n          coverImage\n        };\n        this.props.actionUpdateParentInfo({\n          coverImage\n        });\n        theRapidHireApiService('updateCoverImage', data);\n      }\n    };\n\n    this.removeStudent = (data, index) => {\n      let _this = this;\n\n      confirmAlert({\n        customUI: ({\n          onClose\n        }) => {\n          return React.createElement(\"div\", {\n            className: \"custom-ui\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288\n            },\n            __self: this\n          }, \"Are you sure?\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289\n            },\n            __self: this\n          }, \"You want to delete this student?\"), React.createElement(\"button\", {\n            onClick: onClose,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            },\n            __self: this\n          }, \"No\"), React.createElement(\"button\", {\n            onClick: () => {\n              let userId = data.userId;\n              let isArchived = true;\n              let userData = {\n                userId,\n                isArchived\n              };\n              theRapidHireApiService('removeStudentUser', userData).then(response => {\n                if (response && response.data && response.data.status == \"Success\") {\n                  _this.props.actionRemoveStudent(userData);\n\n                  onClose();\n\n                  _this.resetStudentList(userId);\n                } else {\n                  onClose();\n                }\n              }).catch(error => {\n                console.log('err', error);\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 291\n            },\n            __self: this\n          }, \"Yes, Delete it!\"));\n        }\n      });\n    };\n\n    this.viewSampleProfile = () => {\n      this.setState({\n        showProfile: !this.state.showProfile\n      });\n    };\n\n    this.deleteStudent = (studentId, parentId) => {\n      if (studentId && parentId) {\n        let _this = this;\n\n        confirmAlert({\n          customUI: ({\n            onClose\n          }) => {\n            return React.createElement(\"div\", {\n              className: \"custom-ui\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 342\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 343\n              },\n              __self: this\n            }, \"Are you sure you want to delete this student?\"), React.createElement(\"button\", {\n              onClick: onClose,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 344\n              },\n              __self: this\n            }, \"No\"), React.createElement(\"button\", {\n              onClick: () => {\n                let userData = {\n                  studentId,\n                  parentId\n                };\n                theRapidHireApiService('removeStudentUser', userData).then(response => {\n                  if (response && response.data && response.data.status == \"Success\") {\n                    let userData = {\n                      userId: studentId,\n                      parentId\n                    };\n\n                    _this.props.actionRemoveStudent(userData);\n\n                    onClose();\n\n                    _this.resetStudentList(studentId);\n                  } else {\n                    onClose();\n                  }\n                }).catch(error => {\n                  console.log('err', error);\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 345\n              },\n              __self: this\n            }, \"Yes, Delete it!\"));\n          }\n        });\n      }\n    };\n\n    this.state = {\n      sasToken: '',\n      loader1: false,\n      loader2: false,\n      imageSource: '',\n      imageName: '',\n      imageType: '',\n      addStudentModel: false,\n      addParentModel: false,\n      studentId: ''\n    };\n    this.handleClickProfile = this.handleClickProfile.bind(this);\n    this.uploadImageToAzure = this.uploadImageToAzure.bind(this);\n    this.addStudentModel = this.addStudentModel.bind(this);\n    this.addParentModel = this.addParentModel.bind(this);\n    setLocalStorage('userInfo', this.props.parent ? this.props.parent : this.props.user);\n  }\n\n  componentWillMount() {\n    document.body.classList.add('light-theme');\n    document.body.classList.add('absoluteHeader');\n  }\n\n  componentDidMount() {\n    if (this.props.user) {\n      this.setState({\n        user: this.props.user\n      });\n      let studentList = this.props.parent && this.props.parent.students ? this.props.parent.students : this.props.user.students || [];\n      this.setProfileData(this.props.user);\n      this.setStudentData(studentList);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {// this.setParentProfileData(nextProps.parent);\n  }\n\n  setStudentData(studentList) {\n    var userId = this.props.user.userId;\n    theRapidHireApiService('getHrList', {\n      userId\n    }).then(response => {\n      console.log(response);\n\n      if (response && response.data.status === 'Success' && response.data.result.length > 0) {\n        console.log(response);\n        let student = this.state.studentList;\n        studentList = response.data.result;\n        this.setState({\n          studentList: studentList\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken').then(response => {\n      if (response.data.status === 'Success') {\n        let sasToken = response.data.result.sasToken;\n        this.setState({\n          sasToken\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  uploadImageToAzure(file) {\n    let userId = this.state.userId;\n    let type = this.state.action;\n    let sasToken = this.state.sasToken;\n\n    if (file !== '') {\n      type === 1 ? this.setState({\n        loader1: true,\n        profileImage: ''\n      }) : this.setState({\n        loader2: true,\n        coverImage: ''\n      });\n      uploadToAzure(type, userId, file, sasToken, (error, result, uploadPath) => {\n        if (error) {\n          return;\n        }\n\n        if (result) {\n          if (type === 1) {\n            let profileImage = \"\".concat(CONSTANTS.azureBlobURI, \"/\").concat(CONSTANTS.azureContainer, \"/\").concat(uploadPath);\n            this.setState({\n              profileImage: profileImage,\n              loader1: false\n            });\n          }\n\n          if (type === 2) {\n            let coverImage = \"\".concat(CONSTANTS.azureBlobURI, \"/\").concat(CONSTANTS.azureContainer, \"/\").concat(uploadPath);\n            this.setState({\n              coverImage: coverImage,\n              loader2: false\n            });\n          }\n\n          this.updateUserData(type, uploadPath, userId);\n          console.log('upload is successful', uploadPath);\n        }\n      });\n    }\n  }\n\n  addStudentModel() {\n    this.setState({\n      addStudentModel: !this.state.addStudentModel\n    });\n    let studentList = this.props.parent && this.props.parent.students ? this.props.parent.students : this.props.user.students || [];\n    this.setStudentData(studentList);\n  }\n\n  addParentModel(studentId) {\n    console.log(studentId);\n    this.setState({\n      addParentModel: !this.state.addParentModel,\n      studentId\n    });\n  }\n\n  resetStudentList(userId) {\n    let studentList = this.state.studentList || [];\n    studentList.splice(studentList.findIndex(todo => todo.userId === parseInt(userId, 10)), 1);\n    this.setState({\n      studentList: studentList\n    });\n  }\n\n  render() {\n    let self = this;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-content main-panel1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"button--wrapper mb-1 text-center flex flex-1 justify-center dashBtnCenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-with-border with-icon smallBtn\",\n      onClick: this.addStudentModel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"icon-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), \"add HR\")), this.state.studentList && this.state.studentList.map(function (data, index) {\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"suggestion-usd\",\n        id: 'student_' + data.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"student-img deflt-icon centeredBox flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, data.profilePicture ? React.createElement(\"img\", {\n        src: data.profilePicture,\n        alt: \"\",\n        className: \"img-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"pp-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"icon-user_default2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"student-info flex justify-content-space-between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, data.firstName ? data.firstName + ' ' + (data.lastName ? data.lastName : '') : null), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, data.email)), React.createElement(\"div\", {\n        className: \"btn-group flex align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: data.isActive ? 'toggleWrapper active' : 'toggleWrapper',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, \"Active\"), React.createElement(\"div\", {\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"isActive_\".concat(data.userId, \"_\").concat(index),\n        onChange: self.handleChange,\n        checked: data.isActive ? true : false,\n        id: \"toggle_today_summary\".concat(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"toggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"toggle_today_summary\".concat(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }))))), React.createElement(\"button\", {\n        className: \"btn btn-primary no-round\",\n        onClick: self.handleClickProfile.bind(self, data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, \"Go to profile\"), \"\\xA0 \\xA0\", React.createElement(DropdownButton, {\n        className: \"burger-trigger\",\n        title: React.createElement(\"span\", {\n          className: \"icon-burger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465\n          },\n          __self: this\n        }),\n        id: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onSelect: self.addParentModel.bind(this, data.userId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"m-ico icon-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      }), \"Add Parent\"), React.createElement(MenuItem, {\n        onSelect: () => self.props.history.push({\n          pathname: '/parent/list',\n          state: {\n            studentData: data\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"m-ico icon-parent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }), \" Parent List\"), React.createElement(MenuItem, {\n        onSelect: () => self.props.history.push({\n          pathname: '/student/profilelog',\n          state: {\n            profileOwner: data.userId\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"m-ico icon-profile-sharing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }), ' ', \"Profile Sharing Log\"), React.createElement(MenuItem //   onSelect={self.deleteStudent.bind(\n      //     this,\n      //     data.userId,\n      //     self.props.parent.userId\n      //   )}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"m-ico icon-delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }), \" Delete\")))), React.createElement(\"div\", {\n        className: \"flex align-center justify-content-space-bettween tag-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"promo-tag br-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, \"Accomplishments \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, data.accomplishment)), React.createElement(\"div\", {\n        className: \"promo-tag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        },\n        __self: this\n      }, \"Recommendation \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, data.recommendation)))));\n    })), this.state.addStudentModel ? React.createElement(AddMoreStudent, {\n      addStudentModel: this.state.addStudentModel,\n      closeAddStudentModel: this.addStudentModel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    headerCount: state.User.headerCount\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    actionSetStudentAsUser,\n    actionGetStudentPersonalInfo,\n    actionGetStudentUpdatedInfo,\n    actionRemoveStudent,\n    actionUpdateParentInfo\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Hruser);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\admin\\hruser\\hruser.js"],"names":["React","Component","bindActionCreators","connect","confirmAlert","theRapidHireApiService","Modal","DropdownButton","MenuItem","setLocalStorage","uploadToAzure","getThumbImage","CONSTANTS","Header","ImageCropper","AddMoreStudent","actionSetStudentAsUser","actionGetStudentPersonalInfo","actionGetStudentUpdatedInfo","actionRemoveStudent","actionUpdateParentInfo","sampleProfile","Hruser","constructor","props","setProfileData","data","userId","firstName","lastName","profileImage","profilePicture","coverImage","setState","handleClickProfile","otherUserInfoData","user","candidateAndHrDataJson","history","push","handleChange","event","self","studentList","state","target","value","type","checked","name","str_array","split","id1","id2","isActive","index","then","response","status","catch","error","studentLis","handleImageChange","action","imageSource","file","files","fileName","fileType","generateSASToken","reader","FileReader","readAsDataURL","onload","result","imageName","imageType","updateUserData","uploadPath","removeStudent","_this","customUI","onClose","isArchived","userData","resetStudentList","console","log","viewSampleProfile","showProfile","deleteStudent","studentId","parentId","sasToken","loader1","loader2","addStudentModel","addParentModel","bind","uploadImageToAzure","parent","componentWillMount","document","body","classList","add","componentDidMount","students","setStudentData","componentWillReceiveProps","nextProps","length","student","err","azureBlobURI","azureContainer","splice","findIndex","todo","parseInt","render","map","email","pathname","studentData","profileOwner","accomplishment","recommendation","mapStateToProps","User","parentData","headerCount","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport { Modal, DropdownButton, MenuItem } from 'react-bootstrap';\r\nimport {\r\n  setLocalStorage,\r\n  uploadToAzure,\r\n  getThumbImage\r\n} from '../../common/commonFunctions';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport Header from '../header/header';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport AddMoreStudent from './addMoreStudent';\r\nimport {\r\n  actionSetStudentAsUser,\r\n  actionGetStudentPersonalInfo,\r\n  actionGetStudentUpdatedInfo,\r\n  actionRemoveStudent,\r\n  actionUpdateParentInfo\r\n} from '../../common/core/redux/actions';\r\n\r\nimport sampleProfile from '../../assets/img/sample-profile.jpg';\r\n\r\nclass Hruser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sasToken: '',\r\n      loader1: false,\r\n      loader2: false,\r\n      imageSource: '',\r\n      imageName: '',\r\n      imageType: '',\r\n      addStudentModel: false,\r\n      addParentModel: false,\r\n      studentId: ''\r\n    };\r\n\r\n    this.handleClickProfile = this.handleClickProfile.bind(this);\r\n    this.uploadImageToAzure = this.uploadImageToAzure.bind(this);\r\n    this.addStudentModel = this.addStudentModel.bind(this);\r\n    this.addParentModel = this.addParentModel.bind(this);\r\n    setLocalStorage(\r\n      'userInfo',\r\n      this.props.parent ? this.props.parent : this.props.user\r\n    );\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.body.classList.add('light-theme');\r\n    document.body.classList.add('absoluteHeader');\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user) {\r\n      this.setState({\r\n        user: this.props.user\r\n      });\r\n\r\n      let studentList =\r\n        this.props.parent && this.props.parent.students\r\n          ? this.props.parent.students\r\n          : this.props.user.students || [];\r\n\r\n      this.setProfileData(this.props.user);\r\n      this.setStudentData(studentList);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n   // this.setParentProfileData(nextProps.parent);\r\n  }\r\n\r\n  setProfileData = data => {\r\n    if (data) {\r\n      let userId = data.userId;\r\n\r\n      let firstName = data.firstName;\r\n      let lastName = data.lastName;\r\n\r\n      let profileImage = data.profilePicture;\r\n      if (profileImage) {\r\n        profileImage = profileImage;\r\n      }\r\n      let coverImage = data.coverImage;\r\n      if (coverImage) {\r\n        coverImage = getThumbImage('original', coverImage);\r\n      }\r\n      this.setState({\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        profileImage,\r\n        coverImage\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  setStudentData(studentList) {  \r\n\r\n      var userId = this.props.user.userId;\r\n\r\n      theRapidHireApiService('getHrList', { userId })\r\n        .then(response => {\r\n            console.log(response);\r\n          if (\r\n            response &&\r\n            response.data.status === 'Success' &&\r\n            response.data.result.length > 0\r\n          ) {\r\n           console.log(response);\r\n            let student = this.state.studentList;\r\n           \r\n            studentList = response.data.result;\r\n            this.setState({ studentList: studentList });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    \r\n  }\r\n\r\n  handleClickProfile = otherUserInfoData => {\r\n    otherUserInfoData['token'] = this.props.user['token'];\r\n    let candidateAndHrDataJson = {     \r\n        otherUserInfoData: otherUserInfoData\r\n    };\r\n    this.props.actionSetStudentAsUser(candidateAndHrDataJson);\r\n    this.props.history.push('/recruiter/jobDesription');\r\n  };\r\n\r\n  handleChange = event => {\r\n    let self = this;\r\n    let studentList = self.state.studentList;\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    var str_array = name.split('_');\r\n    let id1 = str_array[1];\r\n    let id2 = str_array[2];\r\n\r\n    let userId = str_array[1];\r\n    let data = {\r\n      isActive: value,\r\n      userId,\r\n      index: id2\r\n    };\r\n\r\n    theRapidHireApiService('updateUserStatus', data)\r\n      .then(response => {\r\n        if (response && response.data.status === 'Success') {\r\n          self.props.actionGetStudentUpdatedInfo(data);\r\n        }\r\n      })\r\n      .catch(error => {});\r\n    studentList[id2].isActive = !studentList[id2].isActive;\r\n    self.setState({\r\n      isActive: false,\r\n      studentLis: studentList\r\n    });\r\n  };\r\n\r\n  handleImageChange = (action, event) => {\r\n    this.setState({ imageSource: '' });\r\n    const file = event.target.files[0];\r\n    const fileName = file.name;\r\n    const fileType = file.type;\r\n    if (file) {\r\n      this.generateSASToken();\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      reader.onload = event => {\r\n        this.setState({\r\n          imageSource: event.target.result,\r\n          imageName: fileName,\r\n          imageType: fileType,\r\n          action: action\r\n        });\r\n      };\r\n    }\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  uploadImageToAzure(file) {\r\n    let userId = this.state.userId;\r\n    let type = this.state.action;\r\n    let sasToken = this.state.sasToken;\r\n\r\n    if (file !== '') {\r\n      type === 1\r\n        ? this.setState({ loader1: true, profileImage: '' })\r\n        : this.setState({ loader2: true, coverImage: '' });\r\n      uploadToAzure(\r\n        type,\r\n        userId,\r\n        file,\r\n        sasToken,\r\n        (error, result, uploadPath) => {\r\n          if (error) {\r\n            return;\r\n          }\r\n          if (result) {\r\n            if (type === 1) {\r\n              let profileImage = `${CONSTANTS.azureBlobURI}/${\r\n                CONSTANTS.azureContainer\r\n              }/${uploadPath}`;\r\n              this.setState({ profileImage: profileImage, loader1: false });\r\n            }\r\n\r\n            if (type === 2) {\r\n              let coverImage = `${CONSTANTS.azureBlobURI}/${\r\n                CONSTANTS.azureContainer\r\n              }/${uploadPath}`;\r\n\r\n              this.setState({ coverImage: coverImage, loader2: false });\r\n            }\r\n            this.updateUserData(type, uploadPath, userId);\r\n            console.log('upload is successful', uploadPath);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  updateUserData = (type, uploadPath, userId) => {\r\n    if (type === 1) {\r\n      let profilePicture = uploadPath;\r\n      let data = {\r\n        userId,\r\n        profilePicture\r\n      };\r\n      this.props.actionUpdateParentInfo({ profilePicture });\r\n      theRapidHireApiService('updateProfileImage', data);\r\n    }\r\n\r\n    if (type === 2) {\r\n      let coverImage = uploadPath;\r\n      let data = {\r\n        userId,\r\n        coverImage\r\n      };\r\n      this.props.actionUpdateParentInfo({ coverImage });\r\n      theRapidHireApiService('updateCoverImage', data);\r\n    }\r\n  };\r\n\r\n  addStudentModel() {\r\n    this.setState({ addStudentModel: !this.state.addStudentModel });\r\n    let studentList =\r\n      this.props.parent && this.props.parent.students\r\n        ? this.props.parent.students\r\n        : this.props.user.students || [];\r\n\r\n    this.setStudentData(studentList);\r\n  }\r\n\r\n  addParentModel(studentId) {\r\n    console.log(studentId);\r\n    this.setState({\r\n      addParentModel: !this.state.addParentModel,\r\n      studentId\r\n    });\r\n  }\r\n\r\n  removeStudent = (data, index) => {\r\n    let _this = this;\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"custom-ui\">\r\n            <h1>Are you sure?</h1>\r\n            <p>You want to delete this student?</p>\r\n            <button onClick={onClose}>No</button>\r\n            <button\r\n              onClick={() => {\r\n                let userId = data.userId;\r\n                let isArchived = true;\r\n                let userData = {\r\n                  userId,\r\n                  isArchived\r\n                };\r\n\r\n                theRapidHireApiService('removeStudentUser', userData).then(response => {                                 \r\n                  if(response && response.data && response.data.status == \"Success\"){                   \r\n                    _this.props.actionRemoveStudent(userData);\r\n                     onClose();\r\n                    _this.resetStudentList(userId);\r\n                  }else{\r\n                    onClose();\r\n                  }  \r\n                }).catch(error => {               \r\n                  console.log('err', error);\r\n                });    \r\n            }}\r\n            >\r\n              Yes, Delete it!\r\n            </button>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  resetStudentList(userId) {\r\n    let studentList = this.state.studentList || [];\r\n    studentList.splice(\r\n      studentList.findIndex(todo => todo.userId === parseInt(userId, 10)),\r\n      1\r\n    );\r\n    this.setState({ studentList: studentList });\r\n  }\r\n\r\n  viewSampleProfile = () => {\r\n    this.setState({\r\n      showProfile: !this.state.showProfile\r\n    });\r\n  };\r\n\r\n  deleteStudent = (studentId, parentId) => {\r\n    if (studentId && parentId) {\r\n      let _this = this;\r\n      confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n          return (\r\n            <div className=\"custom-ui\">\r\n              <p>Are you sure you want to delete this student?</p>\r\n              <button onClick={onClose}>No</button>\r\n              <button\r\n                onClick={() => {\r\n                  let userData = {\r\n                    studentId,\r\n                    parentId\r\n                  };\r\n                  theRapidHireApiService('removeStudentUser', userData).then(response => {                                 \r\n                    if(response && response.data && response.data.status == \"Success\"){\r\n                      let userData = {\r\n                        userId: studentId,\r\n                        parentId\r\n                      }; \r\n                      _this.props.actionRemoveStudent(userData);\r\n                       onClose();\r\n                      _this.resetStudentList(studentId);\r\n                    }else{\r\n                      onClose();\r\n                    }  \r\n                  }).catch(error => {               \r\n                    console.log('err', error);\r\n                  });                 \r\n                }}\r\n              >\r\n                Yes, Delete it!\r\n              </button>\r\n            </div>\r\n          );\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let self = this;\r\n    return (\r\n      <div className=\"wrapper\">\r\n       <Header {...this.props} />     \r\n        <div className=\"main-panel\">   \r\n          <div className=\"w3-content main-panel1\">   \r\n        \r\n         \r\n           \r\n            <div className=\"button--wrapper mb-1 text-center flex flex-1 justify-center dashBtnCenter\">            \r\n              <button\r\n                className=\"btn btn-with-border with-icon smallBtn\"\r\n                onClick={this.addStudentModel}\r\n              >\r\n                <span className=\"icon-plus\" />\r\n                add HR\r\n              </button>\r\n            </div>\r\n            {this.state.studentList &&\r\n              this.state.studentList.map(function(data, index) {\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className=\"suggestion-usd\"\r\n                    id={'student_' + data.userId}\r\n                  >\r\n                    <div className=\"student-img deflt-icon centeredBox flex\">\r\n                      {data.profilePicture ? (\r\n                        <img\r\n                          src={data.profilePicture}\r\n                          alt=\"\"\r\n                          className=\"img-responsive\"\r\n                        />\r\n                      ) : (\r\n                        <div className=\"pp-default\">\r\n                          <span className=\"icon-user_default2\" />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"student-info flex justify-content-space-between\">\r\n                      <div className=\"flex align-center justify-content-space-bettween p-20-30 stuBgWhite\">\r\n                        <div className=\"flex-1\">\r\n                          <h3>\r\n                            {data.firstName\r\n                              ? data.firstName +\r\n                                ' ' +\r\n                                (data.lastName ? data.lastName : '')\r\n                              : null}\r\n                          </h3>\r\n                          <p>{data.email}</p>\r\n                        </div>\r\n\r\n                        <div className=\"btn-group flex align-center\">\r\n                 \r\n                          <div\r\n                            className={\r\n                              data.isActive\r\n                                ? 'toggleWrapper active'\r\n                                : 'toggleWrapper'\r\n                            }\r\n                          >\r\n                            <label htmlFor=\"#\">Active</label>\r\n                            <div className=\"item\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                name={`isActive_${data.userId}_${index}`}\r\n                                onChange={self.handleChange}\r\n                                checked={data.isActive ? true : false}\r\n                                id={`toggle_today_summary${index}`}\r\n                              />\r\n                              <div className=\"toggle\">\r\n                                <label htmlFor={`toggle_today_summary${index}`}>\r\n                                  <i />\r\n                                </label>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <button\r\n                            className=\"btn btn-primary no-round\"\r\n                            onClick={self.handleClickProfile.bind(self, data)}\r\n                          >\r\n                            Go to profile\r\n                          </button>\r\n                          &nbsp; &nbsp;\r\n                      \r\n                          <DropdownButton\r\n                            className=\"burger-trigger\"\r\n                            title={<span className=\"icon-burger\" />}\r\n                            id=\"1\"\r\n                          >\r\n                            <MenuItem\r\n                              onSelect={self.addParentModel.bind(\r\n                                this,\r\n                                data.userId\r\n                              )}\r\n                            >\r\n                              <i className=\"m-ico icon-plus\" />\r\n                              Add Parent\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                              onSelect={() =>\r\n                                self.props.history.push({\r\n                                  pathname: '/parent/list',\r\n                                  state: { studentData: data }\r\n                                })\r\n                              }\r\n                            >\r\n                              <i className=\"m-ico icon-parent\" /> Parent List\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                              onSelect={() =>\r\n                                self.props.history.push({\r\n                                  pathname: '/student/profilelog',\r\n                                  state: { profileOwner: data.userId }\r\n                                })\r\n                              }\r\n                            >\r\n                              <i className=\"m-ico icon-profile-sharing\" />{' '}\r\n                              Profile Sharing Log\r\n                            </MenuItem>\r\n\r\n                            <MenuItem\r\n                            //   onSelect={self.deleteStudent.bind(\r\n                            //     this,\r\n                            //     data.userId,\r\n                            //     self.props.parent.userId\r\n                            //   )}\r\n                            >\r\n                              <i className=\"m-ico icon-delete\" /> Delete\r\n                            </MenuItem>\r\n                          </DropdownButton>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex align-center justify-content-space-bettween tag-wrap\">\r\n                        <div className=\"promo-tag br-light\">\r\n                          Accomplishments <span>{data.accomplishment}</span>\r\n                        </div>\r\n                        {/* <div className=\"promo-tag br-light\">\r\n                          Endorsement <span>{data.endorsement}</span>\r\n                        </div> */}\r\n                        <div className=\"promo-tag\">\r\n                          Recommendation <span>{data.recommendation}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>         \r\n          {this.state.addStudentModel ? (\r\n            <AddMoreStudent\r\n              addStudentModel={this.state.addStudentModel}\r\n              closeAddStudentModel={this.addStudentModel}\r\n            />\r\n          ) : null}\r\n          {/* <Modal\r\n            show={this.state.showProfile}\r\n            onHide={this.viewSampleProfile}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Sample Profile</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div>\r\n                <img src={sampleProfile} />\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    headerCount: state.User.headerCount\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      actionSetStudentAsUser,\r\n      actionGetStudentPersonalInfo,\r\n      actionGetStudentUpdatedInfo,\r\n      actionRemoveStudent,  \r\n      actionUpdateParentInfo\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Hruser);\r\n"]},"metadata":{},"sourceType":"module"}