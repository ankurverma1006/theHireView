{"ast":null,"code":"import { USER_LOGIN, USER_LOGOUT, GET_STUDENT_PERSONAL_INFO, SET_STUDENT_AS_USER, GET_STUDENT_LIST, UPDATE_STUDENT_INFO, GET_HEADER_COUNT, UPDATE_HEADER_COUNT, CHANGE_PASSWORD_STATUS, REMOVE_STUDENT_DATA, UPDATE_USER_PERSONAL_INFO, UPDATE_PARENT_PERSONAL_INFO, UPDATE_FEED_GROUP_INFO, GROUP_LIST_DATA } from '../types';\nimport { setLocalStorage, getLocalStorage, clearLocalStorage } from '../../../commonFunctions';\nconst INITIAL_STATE = {\n  userData: getLocalStorage('userInfo') || {},\n  parentData: getLocalStorage('parentInfo'),\n  otherUserInfoData: getLocalStorage('otherUserInfo')\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case USER_LOGIN:\n      if (action.payload && action.payload.data && action.payload.data.result) {\n        let userInfo = action.payload.data.result || {};\n\n        if (userInfo.roleId === 1) {\n          state.userData = userInfo;\n          state.parentData = null;\n          setLocalStorage('parentInfo', null);\n        } //else if (\n        //   userInfo.roleId === 2 &&\n        //   userInfo.students &&\n        //   userInfo.students.length === 1\n        // ) {\n        //   state.parentData = userInfo;\n        //   setLocalStorage('parentInfo', userInfo);\n        //   userInfo.students[0]['token'] = userInfo['token'];\n        //   userInfo = userInfo.students[0];\n        //   state.userData = userInfo;\n        // }\n        else if (userInfo.roleId === 2) {\n            state.parentData = userInfo;\n            setLocalStorage('parentInfo', userInfo); //  userInfo.students[0]['token'] = userInfo['token'];\n\n            state.userData = userInfo;\n          } else {\n            state.userData = userInfo;\n          }\n\n        setLocalStorage('userInfo', userInfo);\n      }\n\n      return Object.assign({}, state);\n\n    case GET_STUDENT_PERSONAL_INFO:\n      if (action.payload && action.payload.data && action.payload.data.result) {\n        const object = action.payload.data.result;\n        let userInfo = getLocalStorage('userInfo');\n\n        for (const key in object) {\n          if (object.hasOwnProperty(key)) {\n            const element = object[key];\n            userInfo[key] = element;\n            state[key] = element;\n          }\n        }\n\n        state.userData = userInfo;\n        setLocalStorage('userInfo', userInfo);\n      }\n\n      return Object.assign({}, state);\n\n    case USER_LOGOUT:\n      state.userData = {};\n      state.parentData = null;\n      state.headerCount = null;\n      clearLocalStorage();\n      return Object.assign({}, state);\n\n    case SET_STUDENT_AS_USER:\n      if (action.payload && action.payload.otherUserInfoData) {\n        let otherUserInfoData = action.payload.otherUserInfoData;\n        state.otherUserInfoData = otherUserInfoData;\n        setLocalStorage('otherUserInfo', otherUserInfoData);\n      }\n\n      return Object.assign({}, state);\n\n    case GET_STUDENT_LIST:\n      if (action.payload) {\n        const userInfoStudent = action.payload.data.result;\n        let userInfo = getLocalStorage('parentInfo') ? getLocalStorage('parentInfo') : getLocalStorage('userInfo');\n        userInfo.students = userInfoStudent;\n        state.userData = userInfo;\n        state.parentData = userInfo;\n        setLocalStorage('parentInfo', userInfo);\n        setLocalStorage('userInfo', userInfo);\n      }\n\n      return Object.assign({}, state);\n\n    case UPDATE_STUDENT_INFO:\n      if (action.payload && action.payload.data.userId) {\n        let userInfo = state.userData;\n        state.userData.students[action.payload.data.index].isActive = action.payload.data.isActive;\n        setLocalStorage(state.userData.students[action.payloaddata.data.index].isActive, true);\n      }\n\n      return Object.assign({}, state);\n\n    case GET_HEADER_COUNT:\n      if (action.payload && action.payload.data && action.payload.data.result[0]) {\n        const headerCountMessage = action.payload.data.result[0];\n        state.headerCount = headerCountMessage;\n      }\n\n      return Object.assign({}, state);\n\n    case UPDATE_HEADER_COUNT:\n      if (action) {\n        let headerCount = action.payload;\n        headerCount['connectionCount'] = headerCount.connectionCount === '0' ? 0 : headerCount.connectionCount;\n        headerCount['messagingCount'] = headerCount.messagingCount === '0' ? 0 : headerCount.messagingCount;\n        headerCount['notificationCount'] = headerCount.notificationCount === '0' ? 0 : headerCount.notificationCount;\n        state.headerCount = headerCount;\n      }\n\n      return Object.assign({}, state);\n\n    case CHANGE_PASSWORD_STATUS:\n      let userInfo = getLocalStorage('parentInfo') ? getLocalStorage('parentInfo') : getLocalStorage('userInfo');\n      console.log(userInfo['isPasswordChanged']);\n      userInfo['isPasswordChanged'] = true;\n      state.userData = userInfo;\n\n      if (getLocalStorage('parentInfo')) {\n        state.parentData = userInfo;\n        setLocalStorage('parentInfo', userInfo);\n      }\n\n      setLocalStorage('userInfo', userInfo);\n      return Object.assign({}, state);\n\n    case REMOVE_STUDENT_DATA:\n      if (action.payload && action.payload.userId) {\n        let userInfo = getLocalStorage('parentInfo');\n\n        if (getLocalStorage('parentInfo')) {\n          userInfo['students'].splice(userInfo['students'].findIndex(todo => todo.userId === parseInt(action.payload.userId, 10)), 1);\n          state.parentData = userInfo;\n          state.userData = userInfo;\n          setLocalStorage('parentInfo', userInfo);\n          setLocalStorage('userInfo', userInfo);\n        }\n      }\n\n      return Object.assign({}, state);\n\n    case UPDATE_USER_PERSONAL_INFO:\n      if (action.payload) {\n        const object = action.payload;\n        let userInfo = getLocalStorage('userInfo');\n\n        for (const key in object) {\n          if (object.hasOwnProperty(key)) {\n            const element = object[key];\n            userInfo[key] = element;\n            state[key] = element;\n          }\n        }\n\n        state.userData = userInfo;\n        setLocalStorage('userInfo', userInfo);\n      }\n\n      return Object.assign({}, state);\n\n    case UPDATE_PARENT_PERSONAL_INFO:\n      if (action.payload) {\n        const object = action.payload;\n        console.log(object);\n        let parentInfo = getLocalStorage('parentInfo');\n\n        for (const key in object) {\n          if (object.hasOwnProperty(key)) {\n            const element = object[key];\n            parentInfo[key] = element;\n            state[key] = element;\n          }\n        }\n\n        state.parentData = parentInfo;\n        setLocalStorage('parentInfo', parentInfo);\n      }\n\n      return Object.assign({}, state);\n\n    case UPDATE_FEED_GROUP_INFO:\n      if (action.payload) {\n        console.log(action.payload);\n        state.groupInfoData = action.payload;\n\n        if (state.groupListData) {\n          let groupListData = state.groupListData;\n          let index = state.groupListData.findIndex(todo => todo.groupId == action.payload.groupId);\n\n          if (index !== -1) {\n            groupListData[index] = action.payload;\n            state.groupListData = groupListData;\n          }\n        }\n      }\n\n      return Object.assign({}, state);\n\n    case GROUP_LIST_DATA:\n      if (action.payload && action.payload.data.result) {\n        state.groupListData = action.payload.data.result;\n      }\n\n      return Object.assign({}, state);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/common/core/redux/reducers/reducerUser.js"],"names":["USER_LOGIN","USER_LOGOUT","GET_STUDENT_PERSONAL_INFO","SET_STUDENT_AS_USER","GET_STUDENT_LIST","UPDATE_STUDENT_INFO","GET_HEADER_COUNT","UPDATE_HEADER_COUNT","CHANGE_PASSWORD_STATUS","REMOVE_STUDENT_DATA","UPDATE_USER_PERSONAL_INFO","UPDATE_PARENT_PERSONAL_INFO","UPDATE_FEED_GROUP_INFO","GROUP_LIST_DATA","setLocalStorage","getLocalStorage","clearLocalStorage","INITIAL_STATE","userData","parentData","otherUserInfoData","state","action","type","payload","data","result","userInfo","roleId","Object","assign","object","key","hasOwnProperty","element","headerCount","userInfoStudent","students","userId","index","isActive","payloaddata","headerCountMessage","connectionCount","messagingCount","notificationCount","console","log","splice","findIndex","todo","parseInt","parentInfo","groupInfoData","groupListData","groupId"],"mappings":"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","sourcesContent":["import {\r\n  USER_LOGIN,\r\n  USER_LOGOUT,\r\n  GET_STUDENT_PERSONAL_INFO,\r\n  SET_STUDENT_AS_USER,\r\n  GET_STUDENT_LIST,\r\n  UPDATE_STUDENT_INFO,\r\n  GET_HEADER_COUNT,\r\n  UPDATE_HEADER_COUNT,\r\n  CHANGE_PASSWORD_STATUS,\r\n  REMOVE_STUDENT_DATA,\r\n  UPDATE_USER_PERSONAL_INFO,\r\n  UPDATE_PARENT_PERSONAL_INFO,\r\n  UPDATE_FEED_GROUP_INFO,\r\n  GROUP_LIST_DATA\r\n} from '../types';\r\nimport {\r\n  setLocalStorage,\r\n  getLocalStorage,\r\n  clearLocalStorage\r\n} from '../../../commonFunctions';\r\n\r\nconst INITIAL_STATE = {\r\n  userData: getLocalStorage('userInfo') || {},  \r\n  parentData: getLocalStorage('parentInfo'),\r\n  otherUserInfoData: getLocalStorage('otherUserInfo')\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN:\r\n      if (action.payload && action.payload.data && action.payload.data.result) {\r\n        let userInfo = action.payload.data.result || {};\r\n        if (userInfo.roleId === 1) {\r\n          state.userData = userInfo;\r\n          state.parentData = null;\r\n          setLocalStorage('parentInfo', null);\r\n        }\r\n        //else if (\r\n        //   userInfo.roleId === 2 &&\r\n        //   userInfo.students &&\r\n        //   userInfo.students.length === 1\r\n        // ) {\r\n        //   state.parentData = userInfo;\r\n        //   setLocalStorage('parentInfo', userInfo);\r\n        //   userInfo.students[0]['token'] = userInfo['token'];\r\n        //   userInfo = userInfo.students[0];\r\n        //   state.userData = userInfo;\r\n        // }\r\n        else if (userInfo.roleId === 2) {\r\n          state.parentData = userInfo;\r\n          setLocalStorage('parentInfo', userInfo);\r\n          //  userInfo.students[0]['token'] = userInfo['token'];\r\n          state.userData = userInfo;\r\n        } else {\r\n          state.userData = userInfo;\r\n        }\r\n        setLocalStorage('userInfo', userInfo);\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_STUDENT_PERSONAL_INFO:\r\n      if (action.payload && action.payload.data && action.payload.data.result) {\r\n        const object = action.payload.data.result;\r\n        let userInfo = getLocalStorage('userInfo');\r\n\r\n        for (const key in object) {\r\n          if (object.hasOwnProperty(key)) {\r\n            const element = object[key];\r\n            userInfo[key] = element;\r\n            state[key] = element;\r\n          }\r\n        }\r\n        state.userData = userInfo;\r\n        setLocalStorage('userInfo', userInfo);\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case USER_LOGOUT:\r\n      state.userData = {};\r\n      state.parentData = null;\r\n      state.headerCount = null;\r\n      clearLocalStorage();\r\n      return Object.assign({}, state);\r\n\r\n    case SET_STUDENT_AS_USER:\r\n      if (\r\n        action.payload &&        \r\n        action.payload.otherUserInfoData\r\n      ) {      \r\n        let otherUserInfoData = action.payload.otherUserInfoData;        \r\n        state.otherUserInfoData = otherUserInfoData;\r\n        setLocalStorage('otherUserInfo', otherUserInfoData);       \r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_STUDENT_LIST:\r\n      if (action.payload) {\r\n        const userInfoStudent = action.payload.data.result;\r\n        let userInfo = getLocalStorage('parentInfo')\r\n          ? getLocalStorage('parentInfo')\r\n          : getLocalStorage('userInfo');\r\n        userInfo.students = userInfoStudent;\r\n        state.userData = userInfo;\r\n        state.parentData = userInfo;\r\n        setLocalStorage('parentInfo', userInfo);\r\n        setLocalStorage('userInfo', userInfo);\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case UPDATE_STUDENT_INFO:\r\n      if (action.payload && action.payload.data.userId) {\r\n        let userInfo = state.userData;\r\n        state.userData.students[action.payload.data.index].isActive =\r\n          action.payload.data.isActive;\r\n        setLocalStorage(\r\n          state.userData.students[action.payloaddata.data.index].isActive,\r\n          true\r\n        );\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GET_HEADER_COUNT:\r\n      if (\r\n        action.payload &&\r\n        action.payload.data &&\r\n        action.payload.data.result[0]\r\n      ) {\r\n        const headerCountMessage = action.payload.data.result[0];\r\n        state.headerCount = headerCountMessage;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case UPDATE_HEADER_COUNT:\r\n      if (action) {\r\n        let headerCount = action.payload;\r\n        headerCount['connectionCount'] =\r\n          headerCount.connectionCount === '0' ? 0 : headerCount.connectionCount;\r\n        headerCount['messagingCount'] =\r\n          headerCount.messagingCount === '0' ? 0 : headerCount.messagingCount;\r\n        headerCount['notificationCount'] =\r\n          headerCount.notificationCount === '0'\r\n            ? 0\r\n            : headerCount.notificationCount;\r\n        state.headerCount = headerCount;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case CHANGE_PASSWORD_STATUS:\r\n      let userInfo = getLocalStorage('parentInfo')\r\n        ? getLocalStorage('parentInfo')\r\n        : getLocalStorage('userInfo');\r\n      console.log(userInfo['isPasswordChanged']);\r\n      userInfo['isPasswordChanged'] = true;\r\n      state.userData = userInfo;\r\n      if (getLocalStorage('parentInfo')) {\r\n        state.parentData = userInfo;\r\n        setLocalStorage('parentInfo', userInfo);\r\n      }\r\n      setLocalStorage('userInfo', userInfo);\r\n      return Object.assign({}, state);\r\n\r\n    case REMOVE_STUDENT_DATA:\r\n      if (action.payload && action.payload.userId) {\r\n        let userInfo = getLocalStorage('parentInfo');\r\n        if (getLocalStorage('parentInfo')) {\r\n          userInfo['students'].splice(\r\n            userInfo['students'].findIndex(\r\n              todo => todo.userId === parseInt(action.payload.userId, 10)\r\n            ),\r\n            1\r\n          );\r\n          state.parentData = userInfo;\r\n          state.userData = userInfo;\r\n          setLocalStorage('parentInfo', userInfo);\r\n          setLocalStorage('userInfo', userInfo);\r\n        }\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case UPDATE_USER_PERSONAL_INFO:\r\n      if (action.payload) {\r\n        const object = action.payload;\r\n        let userInfo = getLocalStorage('userInfo');\r\n\r\n        for (const key in object) {\r\n          if (object.hasOwnProperty(key)) {\r\n            const element = object[key];\r\n            userInfo[key] = element;\r\n            state[key] = element;\r\n          }\r\n        }\r\n        state.userData = userInfo;\r\n        setLocalStorage('userInfo', userInfo);\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case UPDATE_PARENT_PERSONAL_INFO:\r\n      if (action.payload) {\r\n        const object = action.payload;\r\n        console.log(object);\r\n        let parentInfo = getLocalStorage('parentInfo');\r\n\r\n        for (const key in object) {\r\n          if (object.hasOwnProperty(key)) {\r\n            const element = object[key];\r\n            parentInfo[key] = element;\r\n            state[key] = element;\r\n          }\r\n        }\r\n        state.parentData = parentInfo;\r\n        setLocalStorage('parentInfo', parentInfo);\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case UPDATE_FEED_GROUP_INFO:\r\n      if (action.payload) {\r\n        console.log(action.payload);\r\n        state.groupInfoData = action.payload;\r\n        if (state.groupListData) {\r\n          let groupListData = state.groupListData;\r\n          let index = state.groupListData.findIndex(\r\n            todo => todo.groupId == action.payload.groupId\r\n          );\r\n          if (index !== -1) {\r\n            groupListData[index] = action.payload;\r\n            state.groupListData = groupListData;\r\n          }\r\n        }\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    case GROUP_LIST_DATA:\r\n      if (action.payload && action.payload.data.result) {\r\n        state.groupListData = action.payload.data.result;\r\n      }\r\n      return Object.assign({}, state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}