{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\src\\\\interviewer\\\\profile\\\\addPersonalProfile.js\";\nimport React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { Portal } from 'react-overlays';\nimport { Button, Modal, Form, FormGroup, Checkbox, Col, ControlLabel, FormControl, InputGroup, Radio } from 'react-bootstrap';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.css';\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\nimport { connect } from 'react-redux'; //import DatePicker from 'react-datepicker';\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\n\nimport moment from 'moment';\nimport validation from 'react-validation-mixin';\nimport strategy from 'react-validatorjs-strategy';\nimport classnames from 'classnames';\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport _ from 'lodash';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport { renderMessage, isValidURL, ZoomInAndOut, generateTimestamp } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService'; //import MediaList from '../mediaList';\n\nlet validationMessages = CONSTANTS.validationMessages;\nlet regExpressions = CONSTANTS.regExpressions;\nlet badgeImgArray = [];\nlet badgeImgPreview = [];\nlet certificateImgArray = [];\nlet certificateImgPreview = [];\nlet mediaImgArray = [];\nlet mediaImgPreview = [];\nconst emptyToDate = '10000000';\nconst locationList = [{\n  locationId: 1,\n  name: 'Indore'\n}, {\n  locationId: 2,\n  name: 'Bhopal'\n}, {\n  locationId: 3,\n  name: 'Pune'\n}];\n\nclass addPersonalProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValidatorData = () => {\n      return this.state;\n    };\n\n    this.getClasses = field => {\n      return classnames({\n        error: !this.props.isValid(field)\n      });\n    };\n\n    this.setProjectData = data => {\n      if (data) {\n        this.setState({\n          userId: data.userId,\n          userProfileId: data.userProfileId,\n          skills: data.skills,\n          year: data.experienceInYear,\n          month: data.experienceInMonth,\n          location: data.currentLocation,\n          mobileNo: data.mobileNo,\n          profileRole: data.profileRole && data.profileRole[0] && data.profileRole[0].profileRoleId\n        });\n      }\n    };\n\n    this.validateData = () => {\n      let self = this;\n      this.props.validate(function (error) {\n        let imageObject = {\n          media: self.state.mediaImgArray || []\n        };\n\n        if (!error) {\n          self.setState({\n            isLoading: true\n          });\n          self.handleSubmit();\n        }\n      });\n    };\n\n    this.closeImageModal = () => {\n      this.setState({\n        imagesModal: !this.state.imagesModal\n      });\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.closePersonalProfileModal = status => {\n      this.setState({\n        personalProfileModal: false\n      });\n      this.props.closePersonalProfileComponent();\n    };\n\n    this.state = {\n      isLoading: false,\n      startDate: '',\n      endDate: '',\n      promptRecommendation: false,\n      userId: '',\n      todaysDate: false,\n      startYear: moment().format('YYYY'),\n      startMonth: moment().format('M') - 1,\n      startDay: moment().format('D'),\n      endYear: moment().format('YYYY'),\n      endMonth: moment().format('M') - 1,\n      endDay: moment().format('D'),\n      lwdYear: moment().format('YYYY'),\n      lwdMonth: moment().format('M') - 1,\n      lwdDay: moment().format('D'),\n      designation: '',\n      organisation: '',\n      personalProfileModal: true,\n      projectId: '',\n      associateList: [],\n      profileRoleList: []\n    };\n    this.getValidatorData = this.getValidatorData.bind(this);\n    this.getClasses = this.getClasses.bind(this);\n    this.validatorTypes = strategy.createSchema({\n      profileRole: 'required',\n      year: 'required',\n      month: 'required',\n      location: 'required',\n      mobileNo: 'required'\n    }, {\n      'required.profileRole': validationMessages.profileRole.required,\n      'required.year': validationMessages.year.required,\n      'required.month': validationMessages.month.required,\n      'required.location': validationMessages.location.required,\n      'required.mobileNo': validationMessages.mobileNo.required\n    });\n  }\n\n  componentDidMount() {\n    // if(this.props.user){\n    let userId = this.props.user.userId; // }\n\n    console.log('this.props.employmentDetail ', this.props.userProfile);\n    this.setProjectData(this.props.userProfile);\n    this.getProfileRoleList();\n  } // getAssociatedListData(userId){\n  //   theRapidHireApiService('getAssociatedListDataByUserId',{userId})\n  //   .then(response => {\n  //     if (response.data.statusCode === 200) {\n  //        let associateList= this.state.associateList;\n  //        associateList= response.data.resourceData[0];\n  //        this.setState({associateList: associateList});\n  //     }\n  //   })\n  //   .catch(err => {\n  //     console.log(err);\n  //   });\n  // }\n\n\n  getProfileRoleList() {\n    theRapidHireApiService('getProfileRoleList').then(response => {\n      if (response.data.status === 'Success') {\n        let profileRoleList = this.state.profileRoleList; // response.data.result.forEach(function(data){\n        //    profileRoleList.push({label: data.profileRole,value:data.profileRoleId })\n        // })\n\n        profileRoleList = response.data.result;\n        console.log(profileRoleList);\n        this.setState({\n          profileRoleList: profileRoleList\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken').then(response => {\n      if (response.data.status === 'Success') {\n        let sasToken = response.data.result.sasToken;\n        this.setState({\n          sasToken\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleSubmit() {\n    let profileRoleId = this.state.profileRole;\n    let profileRole = [];\n    let profileRoleList = this.state.profileRoleList;\n    let index = profileRoleList.findIndex(todo => todo.profileRoleId == profileRoleId);\n    profileRole.push(profileRoleList[index]);\n    let experienceInYear = this.state.year;\n    let experienceInMonth = this.state.month;\n    let currentLocation = this.state.location;\n    let mobileNo = this.state.mobileNo;\n    let skills = this.state.skills;\n    let userId = this.props.user.userId;\n    let userProfileId = this.state.userProfileId;\n    let roleId = this.props.user.roleId;\n    let data = {\n      userProfileId,\n      userId,\n      profileRole,\n      experienceInYear,\n      experienceInMonth,\n      currentLocation,\n      mobileNo,\n      skills,\n      roleId\n    };\n    let self = this;\n\n    if (!this.state.userProfileId || this.state.userProfileId === '') {\n      theRapidHireApiService('addUserSkills', data).then(response => {\n        if (response.data.status === 'Success') {\n          self.setState({\n            isLoading: false\n          });\n          self.closePersonalProfileModal('save');\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    } else {\n      theRapidHireApiService('editUserProfile', data).then(response => {\n        if (response.data.status === 'Success') {\n          self.closePersonalProfileModal('save');\n          self.setState({\n            isLoading: false\n          });\n        }\n      }).catch(error => {\n        self.setState({\n          isLoading: false\n        });\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const CalendarContainer = ({\n      children\n    }) => {\n      const el = document.getElementById('calendar-portal');\n      return React.createElement(Portal, {\n        container: el,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, children);\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      bsSize: \"large\",\n      show: this.state.personalProfileModal,\n      onHide: this.closePersonalProfileModal.bind(this, 'close'),\n      backdrop: \"static\",\n      keyboard: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      autoClose: 5000,\n      className: \"custom-toaster-main-cls\",\n      toastClassName: \"custom-toaster-bg\",\n      transition: ZoomInAndOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, !this.state.userProfileId || this.state.userProfileId === '' ? 'Add Profile' : 'Edit Profile')), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(Form, {\n      horizontal: true,\n      className: \"lightBgForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"addDateInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Profile Role\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      componentClass: \"select\",\n      placeholder: \"profileRole\",\n      name: \"profileRole\",\n      value: this.state.profileRole,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"job role\"), this.state.profileRoleList.map((ass, i) => React.createElement(\"option\", {\n      value: ass.profileRoleId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, ass.profileRole))), renderMessage(this.props.getValidationMessages('associatedWith')))))), React.createElement(FormGroup, {\n      className: \"addDateInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Experience\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      componentClass: \"select\",\n      placeholder: \"year\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }, \"years\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, \"1 years\"), React.createElement(\"option\", {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, \"2 years\"), React.createElement(\"option\", {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"3 years\"), React.createElement(\"option\", {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"4 years\"), React.createElement(\"option\", {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"5 years\"), React.createElement(\"option\", {\n      value: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"6 years\"), React.createElement(\"option\", {\n      value: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"7 years\"), React.createElement(\"option\", {\n      value: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"8 years\"), React.createElement(\"option\", {\n      value: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"9 years\"), React.createElement(\"option\", {\n      value: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"10 years\"), React.createElement(\"option\", {\n      value: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"11 years\"), React.createElement(\"option\", {\n      value: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"12 years\")), renderMessage(this.props.getValidationMessages('year'))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      componentClass: \"select\",\n      placeholder: \"month\",\n      name: \"month\",\n      value: this.state.month,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, \"month\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"1 month\"), React.createElement(\"option\", {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"2 month\"), React.createElement(\"option\", {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"3 month\"), React.createElement(\"option\", {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"4 month\"), React.createElement(\"option\", {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"5 month\"), React.createElement(\"option\", {\n      value: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, \"6 month\"), React.createElement(\"option\", {\n      value: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, \"7 month\"), React.createElement(\"option\", {\n      value: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, \"8 month\"), React.createElement(\"option\", {\n      value: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, \"9 month\"), React.createElement(\"option\", {\n      value: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"10 month\"), React.createElement(\"option\", {\n      value: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, \"11 month\"), React.createElement(\"option\", {\n      value: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \"12 month\")))), renderMessage(this.props.getValidationMessages('month')))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"addDateInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }, \"Current Location\"), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dob\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      componentClass: \"select\",\n      placeholder: \"location\",\n      name: \"location\",\n      value: this.state.location,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"1000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"location\"), locationList.map((ass, i) => React.createElement(\"option\", {\n      value: ass.locationId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      },\n      __self: this\n    }, ass.name))), renderMessage(this.props.getValidationMessages('associatedWith'))))))), React.createElement(FormGroup, {\n      controlId: \"formControlsTextarea\",\n      className: this.getClasses('description'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(Col, {\n      componentClass: ControlLabel,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, \"MobileNo\")), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      placeholder: \"Add mobileNo\",\n      name: \"mobileNo\",\n      value: this.state.mobileNo,\n      onChange: this.handleChange,\n      autoComplete: \"off\",\n      maxLength: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }), renderMessage(this.props.getValidationMessages('mobileNo'))))), React.createElement(\"div\", {\n      className: \"flex align-center justify-content-between fullWidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bsStyle: \"primary\",\n      className: \"no-bold no-round\",\n      disabled: this.state.isLoading,\n      onClick: !this.state.isLoading ? this.validateData : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, this.state.isLoading ? 'In Progress...' : 'Save'), React.createElement(Button, {\n      bsStyle: \"default\",\n      className: \"no-bold no-round\",\n      onClick: this.closePersonalProfileModal.bind(this, 'close'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, \"Close\"))), React.createElement(Modal //  bsSize=\"medium\"\n    , {\n      show: this.state.imagesModal,\n      onHide: this.closeImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      className: \"subtitle text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"Photos Gallery\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(Button, {\n      bstyle: \"default no-round\",\n      onClick: this.closeImageModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\naddPersonalProfile = validation(strategy)(addPersonalProfile);\n\nconst mapStateToProps = state => {\n  return {//  user: state.User.userData\n  };\n};\n\nexport default connect(mapStateToProps, null)(addPersonalProfile);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\interviewer\\profile\\addPersonalProfile.js"],"names":["React","Component","ToastContainer","Portal","Button","Modal","Form","FormGroup","Checkbox","Col","ControlLabel","FormControl","InputGroup","Radio","Select","YearPicker","MonthPicker","DayPicker","connect","moment","validation","strategy","classnames","ImageCropper","achievementDefaultImage","_","CONSTANTS","renderMessage","isValidURL","ZoomInAndOut","generateTimestamp","theRapidHireApiService","validationMessages","regExpressions","badgeImgArray","badgeImgPreview","certificateImgArray","certificateImgPreview","mediaImgArray","mediaImgPreview","emptyToDate","locationList","locationId","name","addPersonalProfile","constructor","props","getValidatorData","state","getClasses","field","error","isValid","setProjectData","data","setState","userId","userProfileId","skills","year","experienceInYear","month","experienceInMonth","location","currentLocation","mobileNo","profileRole","profileRoleId","validateData","self","validate","imageObject","media","isLoading","handleSubmit","closeImageModal","imagesModal","handleChange","event","target","value","type","checked","closePersonalProfileModal","status","personalProfileModal","closePersonalProfileComponent","startDate","endDate","promptRecommendation","todaysDate","startYear","format","startMonth","startDay","endYear","endMonth","endDay","lwdYear","lwdMonth","lwdDay","designation","organisation","projectId","associateList","profileRoleList","bind","validatorTypes","createSchema","required","componentDidMount","user","console","log","userProfile","getProfileRoleList","then","response","result","catch","err","generateSASToken","sasToken","index","findIndex","todo","push","roleId","render","CalendarContainer","children","el","document","getElementById","map","ass","i","getValidationMessages","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Portal } from 'react-overlays';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  FormGroup,\r\n  Checkbox,\r\n  Col,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Radio\r\n} from 'react-bootstrap';\r\n\r\nimport Select from 'react-select';\r\nimport 'react-select/dist/react-select.css';\r\nimport { YearPicker, MonthPicker, DayPicker } from 'react-dropdown-date';\r\nimport { connect } from 'react-redux';\r\n//import DatePicker from 'react-datepicker';\r\n//import DatePicker from '../../../../assets/react-datepicker/es/index';\r\nimport moment from 'moment';\r\nimport validation from 'react-validation-mixin';\r\nimport strategy from 'react-validatorjs-strategy';\r\nimport classnames from 'classnames';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport _ from 'lodash';\r\n\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\nimport {\r\n  renderMessage,\r\n  isValidURL,\r\n  ZoomInAndOut,\r\n  generateTimestamp\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\n//import MediaList from '../mediaList';\r\n\r\nlet validationMessages = CONSTANTS.validationMessages;\r\nlet regExpressions = CONSTANTS.regExpressions;\r\nlet badgeImgArray = [];\r\nlet badgeImgPreview = [];\r\nlet certificateImgArray = [];\r\nlet certificateImgPreview = [];\r\nlet mediaImgArray = [];\r\nlet mediaImgPreview = [];\r\nconst emptyToDate = '10000000';\r\n\r\nconst locationList = [\r\n  { locationId: 1, name: 'Indore' },\r\n  { locationId: 2, name: 'Bhopal' },\r\n  { locationId: 3, name: 'Pune' }\r\n];\r\n\r\nclass addPersonalProfile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      startDate: '',\r\n      endDate: '',\r\n      promptRecommendation: false,\r\n      userId: '',\r\n      todaysDate: false,\r\n      startYear: moment().format('YYYY'),\r\n      startMonth: moment().format('M') - 1,\r\n      startDay: moment().format('D'),\r\n      endYear: moment().format('YYYY'),\r\n      endMonth: moment().format('M') - 1,\r\n      endDay: moment().format('D'),\r\n      lwdYear: moment().format('YYYY'),\r\n      lwdMonth: moment().format('M') - 1,\r\n      lwdDay: moment().format('D'),\r\n      designation: '',\r\n      organisation: '',\r\n      personalProfileModal: true,\r\n      projectId: '',\r\n      associateList: [],\r\n      profileRoleList: []\r\n    };\r\n\r\n    this.getValidatorData = this.getValidatorData.bind(this);\r\n    this.getClasses = this.getClasses.bind(this);\r\n    this.validatorTypes = strategy.createSchema(\r\n      {\r\n        profileRole: 'required',\r\n        year: 'required',\r\n        month: 'required',\r\n        location: 'required',\r\n        mobileNo: 'required'\r\n      },\r\n      {\r\n        'required.profileRole': validationMessages.profileRole.required,\r\n        'required.year': validationMessages.year.required,\r\n        'required.month': validationMessages.month.required,\r\n        'required.location': validationMessages.location.required,\r\n        'required.mobileNo': validationMessages.mobileNo.required\r\n      }\r\n    );\r\n  }\r\n\r\n  getValidatorData = () => {\r\n    return this.state;\r\n  };\r\n\r\n  getClasses = field => {\r\n    return classnames({\r\n      error: !this.props.isValid(field)\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // if(this.props.user){\r\n    let userId = this.props.user.userId;\r\n    // }\r\n    console.log('this.props.employmentDetail ', this.props.userProfile);\r\n    this.setProjectData(this.props.userProfile);\r\n    this.getProfileRoleList();\r\n  }\r\n\r\n  // getAssociatedListData(userId){\r\n  //   theRapidHireApiService('getAssociatedListDataByUserId',{userId})\r\n  //   .then(response => {\r\n  //     if (response.data.statusCode === 200) {\r\n  //        let associateList= this.state.associateList;\r\n  //        associateList= response.data.resourceData[0];\r\n  //        this.setState({associateList: associateList});\r\n  //     }\r\n  //   })\r\n  //   .catch(err => {\r\n  //     console.log(err);\r\n  //   });\r\n  // }\r\n\r\n  getProfileRoleList() {\r\n    theRapidHireApiService('getProfileRoleList')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let profileRoleList = this.state.profileRoleList;\r\n          // response.data.result.forEach(function(data){\r\n          //    profileRoleList.push({label: data.profileRole,value:data.profileRoleId })\r\n          // })\r\n          profileRoleList = response.data.result;\r\n          console.log(profileRoleList);\r\n          this.setState({ profileRoleList: profileRoleList });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  setProjectData = data => {\r\n    if (data) {\r\n      this.setState({\r\n        userId: data.userId,\r\n        userProfileId: data.userProfileId,\r\n        skills: data.skills,\r\n        year: data.experienceInYear,\r\n        month: data.experienceInMonth,\r\n        location: data.currentLocation,\r\n        mobileNo: data.mobileNo,\r\n        profileRole:\r\n          data.profileRole &&\r\n          data.profileRole[0] &&\r\n          data.profileRole[0].profileRoleId\r\n      });\r\n    }\r\n  };\r\n\r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  validateData = () => {\r\n    let self = this;\r\n    this.props.validate(function(error) {\r\n      let imageObject = {\r\n        media: self.state.mediaImgArray || []\r\n      };\r\n      if (!error) {\r\n        self.setState({ isLoading: true });\r\n        self.handleSubmit();\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit() {\r\n    let profileRoleId = this.state.profileRole;\r\n    let profileRole = [];\r\n    let profileRoleList = this.state.profileRoleList;\r\n    let index = profileRoleList.findIndex(\r\n      todo => todo.profileRoleId == profileRoleId\r\n    );\r\n\r\n    profileRole.push(profileRoleList[index]);\r\n\r\n    let experienceInYear = this.state.year;\r\n    let experienceInMonth = this.state.month;\r\n    let currentLocation = this.state.location;\r\n    let mobileNo = this.state.mobileNo;\r\n    let skills = this.state.skills;\r\n    let userId = this.props.user.userId;\r\n    let userProfileId = this.state.userProfileId;\r\n    let roleId = this.props.user.roleId;\r\n    let data = {\r\n      userProfileId,\r\n      userId,\r\n      profileRole,\r\n      experienceInYear,\r\n      experienceInMonth,\r\n      currentLocation,\r\n      mobileNo,\r\n      skills,\r\n      roleId\r\n    };\r\n\r\n    let self = this;\r\n\r\n    if (!this.state.userProfileId || this.state.userProfileId === '') {\r\n      theRapidHireApiService('addUserSkills', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {\r\n            self.setState({ isLoading: false });\r\n            self.closePersonalProfileModal('save');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    } else {\r\n      theRapidHireApiService('editUserProfile', data)\r\n        .then(response => {\r\n          if (response.data.status === 'Success') {\r\n            self.closePersonalProfileModal('save');\r\n            self.setState({ isLoading: false });\r\n          }\r\n        })\r\n        .catch(error => {\r\n          self.setState({ isLoading: false });\r\n          console.log(error);\r\n        });\r\n    }\r\n  }\r\n\r\n  closeImageModal = () => {\r\n    this.setState({\r\n      imagesModal: !this.state.imagesModal\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  closePersonalProfileModal = status => {\r\n    this.setState({\r\n      personalProfileModal: false\r\n    });\r\n    this.props.closePersonalProfileComponent();\r\n  };\r\n\r\n  render() {\r\n    const CalendarContainer = ({ children }) => {\r\n      const el = document.getElementById('calendar-portal');\r\n      return <Portal container={el}>{children}</Portal>;\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {/* {this.state.imageSource ? (\r\n          <ImageCropper\r\n            imageSource={this.state.imageSource}\r\n            imageName={this.state.imageName}\r\n            imageType={this.state.imageType}\r\n            aspectRatio={this.state.action === 1 ? 1 / 1 : 16 / 9}\r\n            modalSize={'medium'}\r\n            cropBoxWidth={this.state.action === 1 ? '300' : '700'}\r\n            cropBoxHeight={this.state.action === 1 ? '300' : '700'}\r\n            uploadImageToAzure={this.handleMediaChange.bind(this)}\r\n            labelName={'ADD_MEDIA'}\r\n          />\r\n        ) : null} */}\r\n\r\n        <Modal\r\n          bsSize=\"large\"\r\n          show={this.state.personalProfileModal}\r\n          onHide={this.closePersonalProfileModal.bind(this, 'close')}\r\n          backdrop=\"static\"\r\n          keyboard={false}\r\n        >\r\n          <ToastContainer\r\n            autoClose={5000}\r\n            className=\"custom-toaster-main-cls\"\r\n            toastClassName=\"custom-toaster-bg\"\r\n            transition={ZoomInAndOut}\r\n          />\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              {!this.state.userProfileId || this.state.userProfileId === ''\r\n                ? 'Add Profile'\r\n                : 'Edit Profile'}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form horizontal className=\"lightBgForm\">\r\n              <Col sm={10}>\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Profile Role\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"profileRole\"\r\n                          name=\"profileRole\"\r\n                          value={this.state.profileRole}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            job role\r\n                          </option>\r\n                          {this.state.profileRoleList.map((ass, i) => (\r\n                            <option value={ass.profileRoleId}>\r\n                              {ass.profileRole}\r\n                            </option>\r\n                          ))}\r\n                        </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('associatedWith')\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                  </Col>\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"addDateInput\">\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    Experience\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <div className=\"dob\">\r\n                      <div className=\"form-group\">\r\n                        <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"year\"\r\n                          name=\"year\"\r\n                          value={this.state.year}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            years\r\n                          </option>\r\n                          <option value={1}>1 years</option>\r\n                          <option value={2}>2 years</option>\r\n                          <option value={3}>3 years</option>\r\n                          <option value={4}>4 years</option>\r\n                          <option value={5}>5 years</option>\r\n                          <option value={6}>6 years</option>\r\n                          <option value={7}>7 years</option>\r\n                          <option value={8}>8 years</option>\r\n                          <option value={9}>9 years</option>\r\n                          <option value={10}>10 years</option>\r\n                          <option value={11}>11 years</option>\r\n                          <option value={12}>12 years</option>\r\n                        </FormControl>\r\n                        {renderMessage(\r\n                          this.props.getValidationMessages('year')\r\n                        )}\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <FormControl\r\n                          componentClass=\"select\"\r\n                          placeholder=\"month\"\r\n                          name=\"month\"\r\n                          value={this.state.month}\r\n                          onChange={this.handleChange}\r\n                          autoComplete=\"off\"\r\n                          maxLength=\"1000\"\r\n                        >\r\n                          <option value=\"\" disabled>\r\n                            month\r\n                          </option>\r\n                          <option value={1}>1 month</option>\r\n                          <option value={2}>2 month</option>\r\n                          <option value={3}>3 month</option>\r\n                          <option value={4}>4 month</option>\r\n                          <option value={5}>5 month</option>\r\n                          <option value={6}>6 month</option>\r\n                          <option value={7}>7 month</option>\r\n                          <option value={8}>8 month</option>\r\n                          <option value={9}>9 month</option>\r\n                          <option value={10}>10 month</option>\r\n                          <option value={11}>11 month</option>\r\n                          <option value={12}>12 month</option>\r\n                        </FormControl>\r\n                      </div>\r\n                    </div>\r\n                    {renderMessage(this.props.getValidationMessages('month'))}\r\n                  </Col>\r\n                </FormGroup>\r\n                <div>\r\n                  <FormGroup className=\"addDateInput\">\r\n                    <Col componentClass={ControlLabel} sm={3}>\r\n                      Current Location\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                      <div className=\"dob\">\r\n                        <div className=\"form-group\">\r\n                          <FormControl\r\n                            componentClass=\"select\"\r\n                            placeholder=\"location\"\r\n                            name=\"location\"\r\n                            value={this.state.location}\r\n                            onChange={this.handleChange}\r\n                            autoComplete=\"off\"\r\n                            maxLength=\"1000\"\r\n                          >\r\n                            <option value=\"\">location</option>\r\n                            {locationList.map((ass, i) => (\r\n                              <option value={ass.locationId}>{ass.name}</option>\r\n                            ))}\r\n                          </FormControl>\r\n                          {renderMessage(\r\n                            this.props.getValidationMessages('associatedWith')\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      {/* {renderMessage(this.props.getValidationMessages('endDate'))} */}\r\n                    </Col>\r\n                  </FormGroup>\r\n                </div>\r\n\r\n                <FormGroup\r\n                  controlId=\"formControlsTextarea\"\r\n                  className={this.getClasses('description')}\r\n                >\r\n                  <Col componentClass={ControlLabel} sm={3}>\r\n                    <ControlLabel>MobileNo</ControlLabel>\r\n                  </Col>\r\n                  <Col sm={9}>\r\n                    <FormControl\r\n                      placeholder=\"Add mobileNo\"\r\n                      name=\"mobileNo\"\r\n                      value={this.state.mobileNo}\r\n                      onChange={this.handleChange}\r\n                      autoComplete=\"off\"\r\n                      maxLength=\"100\"\r\n                    />\r\n                    {renderMessage(\r\n                      this.props.getValidationMessages('mobileNo')\r\n                    )}\r\n                  </Col>\r\n                </FormGroup>\r\n              </Col>\r\n              <div className=\"flex align-center justify-content-between fullWidth\" />\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              bsStyle=\"primary\"\r\n              className=\"no-bold no-round\"\r\n              disabled={this.state.isLoading}\r\n              onClick={!this.state.isLoading ? this.validateData : null}\r\n            >\r\n              {this.state.isLoading ? 'In Progress...' : 'Save'}\r\n            </Button>\r\n            <Button\r\n              bsStyle=\"default\"\r\n              className=\"no-bold no-round\"\r\n              onClick={this.closePersonalProfileModal.bind(this, 'close')}\r\n            >\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n          //  bsSize=\"medium\"\r\n          show={this.state.imagesModal}\r\n          onHide={this.closeImageModal}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title className=\"subtitle text-center\">\r\n              Photos Gallery\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body></Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button bsStyle=\"primary no-bold no-round\">Save</Button> */}\r\n            <Button bstyle=\"default no-round\" onClick={this.closeImageModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\naddPersonalProfile = validation(strategy)(addPersonalProfile);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //  user: state.User.userData\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(addPersonalProfile);\r\n"]},"metadata":{},"sourceType":"module"}