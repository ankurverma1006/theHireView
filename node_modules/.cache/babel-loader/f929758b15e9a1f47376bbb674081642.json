{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\Ankur\\\\Desktop\\\\therapidhire\\\\therapidhireui\\\\TheRapidHireUI\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import Header from'./header/header';import{Button,Media,Row,Col,FormControl,InputGroup}from'react-bootstrap';import{connect}from'react-redux';import{bindActionCreators}from'redux';import{captureUserMedia}from'./AppUtils';//import { ToastContainer } from 'react-toastify';\nimport Slider from'react-slick';import _ from'lodash';//import Webcam from './Webcam.react';\nimport Webcam from\"react-webcam\";//import  \"https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js\";\n//import * as AWS from \"https://sdk.amazonaws.com/js/aws-sdk-2.2.32.min.js\";\n//import Summary from './summary/addSummary';\nimport VideoPlayer from'react-video-js-player';//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\nimport ImageCropper from'./../common/cropper/imageCropper';import DownloadLink from\"react-download-link\";//import Img from '../../common/cropper/img';\nimport{showErrorToast,uploadToAzure,limitCharacter,SampleNextArrow,SamplePrevArrow,getThumbImage}from'./../common/commonFunctions';import theRapidHireApiService from'./../common/core/api/apiService';import CONSTANTS from'./../common/core/config/appConfig';//import videojs from 'video.js'\nimport{actionGetStudentPersonalInfo,actionGetAllCompetency,actionGetAchievementsByUser,actionGetRecommendationsByUser,actionUpdateUserInfo,actionGetAchievementsData}from'./../common/core/redux/actions';import $ from'jquery';import SpiderChart from'./../common/spiderChart/spiderChart';var AWS=require('aws-sdk');//loadScript('https://sdk.amazonaws.com/js/aws-sdk-2.2.32.min.js')\nvar config={bucketName:'ankurself',dirName:'photos',/* optional */region:'ap-south-1',// Put your aws region here\naccessKeyId:'AKIAJHHM3PCJ25PK6OWQ',secretAccessKey:'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'};var settings={dots:false,infinite:false,speed:500,slidesToShow:3,swipeToSlide:true,//nextArrow: <SampleNextArrow props={this.props} />,\n//prevArrow: <SamplePrevArrow props={this.props} />,\nresponsive:[{breakpoint:1024,settings:{slidesToShow:3,slidesToScroll:3,infinite:true,dots:true}},{breakpoint:600,settings:{slidesToShow:2,slidesToScroll:2,initialSlide:2}},{breakpoint:480,settings:{slidesToShow:1,slidesToScroll:1}}]};var hasGetUserMedia=!!(navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia);var Video=/*#__PURE__*/function(_Component){_inherits(Video,_Component);function Video(props,context){var _this;_classCallCheck(this,Video);_this=_possibleConstructorReturn(this,_getPrototypeOf(Video).call(this,props));_this.state={video:{src:\"http://www.example.com/path/to/video.mp4\",poster:\"http://www.example.com/path/to/video_poster.jpg\"},showJobDescriptionComponent:false,jobDescriptionDetail:{},loader1:false,loader2:false,jobDescriptionListData:[],userData:{},showDropdown:false,isActive:'true',contentEditable:false,editName:false,name:'',editTagLine:false,showVideo:false};var wRegion=\"ap-south-1\";var poolid='ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c';var s3bucketName=\"ankurself\";var audioPath=\"/audio-files\";var s3bucketName=\"ankurself\";var audioPath=\"/audio-files\";var audioStoreWithBucket=s3bucketName+audioPath;//AudioStream = new AudioStream(wRegion,poolid,s3bucketName+audioPath)\n_this.region=\"ap-south-1\";//s3 region\n_this.IdentityPoolId='ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c';//identity pool id\n_this.bucketName=audioStoreWithBucket;//audio file store\n_this.s3=null;//variable defination for s3\n_this.dateinfo=new Date();_this.timestampData=_this.dateinfo.getTime();//timestamp used for file uniqueness\n_this.etag=[];// etag is used to save the parts of the single upload file\n_this.recordedChunks=[];//empty Array\n_this.booleanStop=false;// this is for final multipart complete\n_this.incr=0;// multipart requires incremetal so that they can merge all parts by ascending order\n_this.filename=_this.timestampData.toString()+\".webm\";//unique filename\n_this.uploadId=\"\";// upload id is required in multipart\n_this.recorder=null;//initializing recorder variable\n_this.player=null;//To use microphone it shud be {audio: true}\n_this.audioConstraints={//  audio: true,\nvideo:true};return _this;}_createClass(Video,[{key:\"componentWillMount\",value:function componentWillMount(){//let userId = this.props.user.userId;\ndocument.body.classList.add('light-theme');document.body.classList.add('absoluteHeader');document.body.classList.remove('home');document.body.classList.remove('fixedHeader');this.audioStreamInitialize();}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(res){// this.setProfileData(res.user);\n// this.setAchievementData(res.student.achievementData);\n// this.renderRecommendationsByUserId();\n}},{key:\"componentDidMount\",value:function componentDidMount(){var user=this.props.user.userId;console.log(user);if(!hasGetUserMedia){alert(\"Your browser cannot stream from your webcam. Please switch to Chrome or Firefox.\");return;}var script=document.createElement(\"script\");script.src=\"https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js\";script.async=true;document.body.appendChild(script);if(this.props.student.achievementData){console.log(this.props.student.achievementData);}}},{key:\"onPlayerReady\",value:function onPlayerReady(player){console.log(\"Player is ready: \",player);this.player=player;}},{key:\"onVideoPlay\",value:function onVideoPlay(duration){console.log(\"Video played at: \",duration);}},{key:\"onVideoPause\",value:function onVideoPause(duration){console.log(\"Video paused at: \",duration);}},{key:\"onVideoTimeUpdate\",value:function onVideoTimeUpdate(duration){console.log(\"Time updated: \",duration);}},{key:\"onVideoSeeking\",value:function onVideoSeeking(duration){console.log(\"Video seeking: \",duration);}},{key:\"onVideoSeeked\",value:function onVideoSeeked(from,to){console.log(\"Video seeked from \".concat(from,\" to \").concat(to));}},{key:\"onVideoEnd\",value:function onVideoEnd(){console.log(\"Video ended\");}},{key:\"audioStreamInitialize\",value:function audioStreamInitialize(){/*\r\n        Creates a new credentials object, which will allow us to communicate with the aws services.\r\n    */var self=this;AWS.config.update({region:\"ap-south-1\",credentials:new AWS.CognitoIdentityCredentials({IdentityPoolId:'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c',RoleArn:'arn:aws:iam::923146643705:role/Cognito_TestPoolUnauth_Role',AccountId:'923146643705'// your AWS account ID\n})});AWS.config.credentials.get(function(err){if(err)console.log(err);else console.log(AWS.config.credentials);});/*\r\n        Constructs a service object.\r\n    */ // self.s3 = new AWS.S3({apiVersion: '2006-03-01',\n//                     params: {Bucket: 'ankurself'},\n// }\n// );\nself.s3=new AWS.S3({logger:console,//         AWSAccessKeyId=AKIAJRQYW4X2EL2WE6UQ\n// AWSSecretKey=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\napiVersion:'2006-03-01',params:{Bucket:'ankurself'}});/*\r\n        Feature detecting is a simple check for the existence of \"navigator.mediaDevices.getUserMedia\"\r\n        To use the microphone. we need to request permission.\r\n        The parameter to getUserMedia() is an object specifying the details and requirements for each type of media you want to access.\r\n        To use microphone it shud be {audio: true}\r\n    */navigator.mediaDevices.getUserMedia(self.audioConstraints).then(function(stream){/*\r\n                once we accept the prompt for the audio stream from user's mic we enable the record button.\r\n            */$(\"#record_q1\").removeAttr(\"disabled\");/*\r\n                Creates a new MediaRecorder object, given a MediaStream to record.\r\n            */self.recorder=new MediaRecorder(stream);//    self.setState({videosrc:stream});\n/*\r\n                Called to handle the dataavailable event, which is periodically triggered each time timeslice milliseconds of media have been recorded\r\n                (or when the entire media has been recorded, if timeslice wasn't specified).\r\n                The event, of type BlobEvent, contains the recorded media in its data property.\r\n                You can then collect and act upon that recorded media data using this event handler.\r\n            */self.recorder.addEventListener('dataavailable',function(e){var normalArr=[];/*\r\n                    Here we push the stream data to an array for future use.\r\n                */self.recordedChunks.push(e.data);normalArr.push(e.data);/*\r\n                    here we create a blob from the stream data that we have received.\r\n                */var blob=new Blob(normalArr,{type:'video/webm'});/*\r\n                    if the length of recordedChunks is 1 then it means its the 1st part of our data.\r\n                    So we createMultipartUpload which will return an upload id.\r\n                    Upload id is used to upload the other parts of the stream\r\n                    else.\r\n                    It Uploads a part in a multipart upload.\r\n                */if(self.recordedChunks.length==1){console.log(blob.size);self.startMultiUpload(blob,self.filename);}else{/*\r\n                        self.incr is basically a part number.\r\n                        Part number of part being uploaded. This is a positive integer between 1 and 10,000.\r\n                    */self.incr=self.incr+1;self.continueMultiUpload(blob,self.incr,self.uploadId,self.filename,self.bucketName);}});});}},{key:\"startRecording\",value:function startRecording(id){var self=this;// self.enableAllButton();\n//  $(\"#record_q1\").attr(\"disabled\", \"disabled\");\n/*\r\n        1800000 is the number of milliseconds to record into each Blob.\r\n        If this parameter isn't included, the entire media duration is recorded into a single Blob unless the requestData()\r\n        method is called to obtain the Blob and trigger the creation of a new Blob into which the media continues to be recorded.\r\n    */ /*\r\n    PLEASE NOTE YOU CAN CHANGE THIS PARAM OF 1800000 but the size should be greater then or equal to 5MB.\r\n    As for multipart upload the minimum breakdown of the file should be 5MB\r\n    */ //this.recorder.start(1800000);\nthis.recorder.start(1800000);console.log('recprdomg');this.setState({showVideo:true});}},{key:\"stopRecording\",value:function stopRecording(id){var self=this;self.recorder.stop();/*\r\n        Once the recording is stop we change the flag of self.booleanStop to true.\r\n        which means we have completed the recording and now we can\r\n        Completes a multipart upload by assembling previously uploaded parts.\r\n    */self.booleanStop=true;//disable self\nself.disableAllButton();$(\"#stop_q1\").attr(\"disabled\",\"disabled\");// add loader\n//  self.setLoader();\nthis.setState({showVideo:false});}},{key:\"pauseRecording\",value:function pauseRecording(id){var self=this;self.recorder.pause();$(\"#pause_q1\").addClass(\"hide\");$(\"#resume_q1\").removeClass(\"hide\");}},{key:\"resumeRecording\",value:function resumeRecording(id){var self=this;self.recorder.resume();$(\"#resume_q1\").addClass(\"hide\");$(\"#pause_q1\").removeClass(\"hide\");}},{key:\"startMultiUpload\",value:function startMultiUpload(blob,filename){var self=this;var audioBlob=blob;var params={Bucket:'ankurself',Key:filename,ContentType:'video/webm',ACL:'public-read'};// self.s3.getSignedUrl('postObject', params, function (err, url) {\n//       if(err){\n//         console.log(err);\n//       }\n//       console.log(url);\n//          });\nself.s3.createMultipartUpload(params,function(err,data){if(err){console.log(err,err.stack);// an error occurred\n}else{self.uploadId=data.UploadId;self.incr=1;self.continueMultiUpload(audioBlob,self.incr,self.uploadId,self.filename,self.bucketName);}});}/*\r\n       Uploads a part in a multipart upload.\r\n       The following code uploads part of a multipart upload.\r\n       it specifies a file name for the part data. The Upload ID is same that is returned by the initiate multipart upload.\r\n   */},{key:\"continueMultiUpload\",value:function continueMultiUpload(audioBlob,PartNumber,uploadId,key,bucketName){var self=this;var params={Body:audioBlob,Bucket:'ankurself',Key:key,PartNumber:PartNumber,UploadId:uploadId};console.log(params);self.s3.uploadPart(params,function(err,data){if(err){console.log(err,err.stack);}// an error occurred\nelse{/*\r\n                Once the part of data is uploaded we get an Entity tag for the uploaded object(ETag).\r\n                which is used later when we complete our multipart upload.\r\n            */self.etag.push(data.ETag);if(self.booleanStop==true){self.completeMultiUpload();}}});}/*\r\n       Completes a multipart upload by assembling previously uploaded parts.\r\n   */},{key:\"completeMultiUpload\",value:function completeMultiUpload(){var self=this;var outputTag=[];/*\r\n        here we are constructing the Etag data in the required format.\r\n    */self.etag.forEach(function(data,index){var obj={ETag:data,PartNumber:++index};outputTag.push(obj);});var params={Bucket:'ankurself',// required\nKey:self.filename,// required\nUploadId:self.uploadId,// required\nMultipartUpload:{Parts:outputTag}};self.s3.completeMultipartUpload(params,function(err,data){if(err){console.log(err,err.stack);}// an error occurred\nelse{console.log(data.Location);self.saveVideoURL(data.Location);// initialize variable back to normal\nself.etag=[];self.recordedChunks=[];self.uploadId=\"\";self.booleanStop=false;self.disableAllButton();//   self.removeLoader();\nalert(\"we have successfully saved the questionaire..\");}});}},{key:\"saveVideoURL\",value:function saveVideoURL(videoLink){var _this2=this;var data={userId:this.props.user.userId,videoLink:videoLink};theRapidHireApiService('addVideo',data).then(function(response){if(response.data.statusCode===200){var userData=_this2.state.userData;userData=response.data.resourceData[0];console.log(response.data.resourceData[0]);_this2.setState({userData:userData});}}).catch(function(err){console.log(err);});}},{key:\"disableAllButton\",value:function disableAllButton(){$(\"#formdata button[type=button]\").attr(\"disabled\",\"disabled\");}},{key:\"enableAllButton\",value:function enableAllButton(){$(\"#formdata button[type=button]\").removeAttr(\"disabled\");}},{key:\"render\",value:function render(){var videoConstraints={facingMode:\"user\"};return React.createElement(\"div\",{className:\"wrapper\"},React.createElement(Header,this.props),React.createElement(\"div\",{className:\"main-panel\"},React.createElement(\"div\",{className:\"w3-content main-panel1\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-md-12\"},React.createElement(\"div\",{className:\"card\"},React.createElement(\"div\",{className:\"header\"},React.createElement(\"div\",{className:\"content\"},React.createElement(\"div\",{className:\"panel-group\",id:\"accordion\"},React.createElement(\"button\",{onClick:this.startRecording.bind(this)},\"Start Record\"),React.createElement(\"button\",{onClick:this.stopRecording.bind(this)},\"stop Record\"),this.state.uploading?React.createElement(\"div\",null,\"Uploading...\"):null,this.state.showVideo?React.createElement(Webcam,{videoConstraints:videoConstraints}):null)))))))));}}]);return Video;}(Component);var mapStateToProps=function mapStateToProps(state){return{user:state.User.userData,parent:state.User.parentData,student:state.Student};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({actionGetStudentPersonalInfo:actionGetStudentPersonalInfo,actionGetAllCompetency:actionGetAllCompetency,actionGetAchievementsByUser:actionGetAchievementsByUser,actionGetRecommendationsByUser:actionGetRecommendationsByUser,actionUpdateUserInfo:actionUpdateUserInfo,actionGetAchievementsData:actionGetAchievementsData},dispatch);};export default connect(mapStateToProps,mapDispatchToProps)(Video);","map":{"version":3,"sources":["C:\\Users\\Ankur\\Desktop\\therapidhire\\therapidhireui\\TheRapidHireUI\\src\\video\\video.js"],"names":["React","Component","Header","Button","Media","Row","Col","FormControl","InputGroup","connect","bindActionCreators","captureUserMedia","Slider","_","Webcam","VideoPlayer","ImageCropper","DownloadLink","showErrorToast","uploadToAzure","limitCharacter","SampleNextArrow","SamplePrevArrow","getThumbImage","theRapidHireApiService","CONSTANTS","actionGetStudentPersonalInfo","actionGetAllCompetency","actionGetAchievementsByUser","actionGetRecommendationsByUser","actionUpdateUserInfo","actionGetAchievementsData","$","SpiderChart","AWS","require","config","bucketName","dirName","region","accessKeyId","secretAccessKey","settings","dots","infinite","speed","slidesToShow","swipeToSlide","responsive","breakpoint","slidesToScroll","initialSlide","hasGetUserMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Video","props","context","state","video","src","poster","showJobDescriptionComponent","jobDescriptionDetail","loader1","loader2","jobDescriptionListData","userData","showDropdown","isActive","contentEditable","editName","name","editTagLine","showVideo","wRegion","poolid","s3bucketName","audioPath","audioStoreWithBucket","IdentityPoolId","s3","dateinfo","Date","timestampData","getTime","etag","recordedChunks","booleanStop","incr","filename","toString","uploadId","recorder","player","audioConstraints","document","body","classList","add","remove","audioStreamInitialize","res","user","userId","console","log","alert","script","createElement","async","appendChild","student","achievementData","duration","from","to","self","update","credentials","CognitoIdentityCredentials","RoleArn","AccountId","get","err","S3","logger","apiVersion","params","Bucket","mediaDevices","then","stream","removeAttr","MediaRecorder","addEventListener","e","normalArr","push","data","blob","Blob","type","length","size","startMultiUpload","continueMultiUpload","id","start","setState","stop","disableAllButton","attr","pause","addClass","removeClass","resume","audioBlob","Key","ContentType","ACL","createMultipartUpload","stack","UploadId","PartNumber","key","Body","uploadPart","ETag","completeMultiUpload","outputTag","forEach","index","obj","MultipartUpload","Parts","completeMultipartUpload","Location","saveVideoURL","videoLink","response","statusCode","resourceData","catch","videoConstraints","facingMode","startRecording","bind","stopRecording","uploading","mapStateToProps","User","parent","parentData","Student","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from './header/header';\r\nimport {\r\n  Button,\r\n  Media,\r\n  Row,\r\n  Col,\r\n  FormControl,\r\n  InputGroup\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { captureUserMedia } from './AppUtils';\r\n//import { ToastContainer } from 'react-toastify';\r\nimport Slider from 'react-slick';\r\nimport _ from 'lodash';\r\n\r\n//import Webcam from './Webcam.react';\r\nimport Webcam from \"react-webcam\";\r\n//import  \"https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js\";\r\n//import * as AWS from \"https://sdk.amazonaws.com/js/aws-sdk-2.2.32.min.js\";\r\n//import Summary from './summary/addSummary';\r\n\r\nimport VideoPlayer from 'react-video-js-player';\r\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\r\nimport ImageCropper from './../common/cropper/imageCropper';\r\nimport DownloadLink from \"react-download-link\";\r\n//import Img from '../../common/cropper/img';\r\nimport {\r\n  showErrorToast,\r\n  uploadToAzure,\r\n  limitCharacter,\r\n  SampleNextArrow,\r\n  SamplePrevArrow,\r\n  getThumbImage\r\n} from './../common/commonFunctions';\r\nimport theRapidHireApiService from './../common/core/api/apiService';\r\nimport CONSTANTS from './../common/core/config/appConfig';\r\n\r\n//import videojs from 'video.js'\r\n\r\nimport {\r\n  actionGetStudentPersonalInfo,\r\n  actionGetAllCompetency,\r\n  actionGetAchievementsByUser,\r\n  actionGetRecommendationsByUser,\r\n  actionUpdateUserInfo,\r\n  actionGetAchievementsData\r\n} from './../common/core/redux/actions';\r\nimport $ from 'jquery'; \r\nimport SpiderChart from './../common/spiderChart/spiderChart';\r\nvar AWS = require('aws-sdk');\r\n\r\n  //loadScript('https://sdk.amazonaws.com/js/aws-sdk-2.2.32.min.js')\r\n\r\n\r\nconst config = {\r\n  bucketName: 'ankurself',\r\n  dirName: 'photos', /* optional */\r\n  region: 'ap-south-1', // Put your aws region here\r\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\r\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\r\n}\r\n\r\n\r\nvar settings = {\r\n  dots: false,\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 3,\r\n  swipeToSlide: true,\r\n  //nextArrow: <SampleNextArrow props={this.props} />,\r\n  //prevArrow: <SamplePrevArrow props={this.props} />,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n        dots: true\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n        initialSlide: 2\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nconst hasGetUserMedia = !!(navigator.getUserMedia || navigator.webkitGetUserMedia ||\r\n    navigator.mozGetUserMedia || navigator.msGetUserMedia);\r\n\r\nclass Video extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n   \r\n    this.state = {  \r\n        video: {\r\n            src: \"http://www.example.com/path/to/video.mp4\",\r\n            poster: \"http://www.example.com/path/to/video_poster.jpg\"\r\n        },    \r\n      showJobDescriptionComponent: false,      \r\n      jobDescriptionDetail: {},        \r\n     \r\n      loader1: false,\r\n      loader2: false,      \r\n      jobDescriptionListData: [],     \r\n      userData:{},     \r\n      showDropdown: false,     \r\n      isActive: 'true',     \r\n      contentEditable: false,\r\n      editName: false,\r\n      name: '',\r\n      editTagLine: false,\r\n      showVideo:false\r\n    };\r\n    var wRegion = \"ap-south-1\";\r\n    var poolid = 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c';\r\n    var s3bucketName = \"ankurself\";\r\n    var audioPath = \"/audio-files\";\r\n    var s3bucketName = \"ankurself\";\r\n    var audioPath = \"/audio-files\";\r\n    var audioStoreWithBucket=s3bucketName+audioPath;\r\n    //AudioStream = new AudioStream(wRegion,poolid,s3bucketName+audioPath)\r\n\r\n    this.region = \"ap-south-1\"; //s3 region\r\n    this.IdentityPoolId = 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c'; //identity pool id\r\n    this.bucketName = audioStoreWithBucket; //audio file store\r\n    this.s3=null; //variable defination for s3\r\n    this.dateinfo = new Date();\r\n    this.timestampData = this.dateinfo.getTime(); //timestamp used for file uniqueness\r\n    this.etag = []; // etag is used to save the parts of the single upload file\r\n    this.recordedChunks = []; //empty Array\r\n    this.booleanStop = false; // this is for final multipart complete\r\n    this.incr = 0; // multipart requires incremetal so that they can merge all parts by ascending order\r\n    this.filename = this.timestampData.toString() + \".webm\"; //unique filename\r\n    this.uploadId = \"\"; // upload id is required in multipart\r\n    this.recorder=null; //initializing recorder variable\r\n    this.player=null;\r\n    //To use microphone it shud be {audio: true}\r\n    this.audioConstraints = {\r\n      //  audio: true,\r\n        video: true\r\n    };    \r\n  }\r\n\r\n  componentWillMount() {\r\n    //let userId = this.props.user.userId;\r\n    \r\n    document.body.classList.add('light-theme');\r\n    document.body.classList.add('absoluteHeader');\r\n    document.body.classList.remove('home');\r\n    document.body.classList.remove('fixedHeader');\r\n    this.audioStreamInitialize();\r\n  }\r\n\r\n  componentWillReceiveProps(res) {\r\n    // this.setProfileData(res.user);\r\n    // this.setAchievementData(res.student.achievementData);\r\n    // this.renderRecommendationsByUserId();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let user= this.props.user.userId;\r\n    console.log(user);\r\n     if(!hasGetUserMedia) {\r\n      alert(\"Your browser cannot stream from your webcam. Please switch to Chrome or Firefox.\");\r\n      return;\r\n    }\r\n    const script = document.createElement(\"script\");\r\n\r\n    script.src = \"https://cdn.rawgit.com/mattdiamond/Recorderjs/08e7abd9/dist/recorder.js\";\r\n    script.async = true;\r\n\r\n    document.body.appendChild(script)\r\n    if (this.props.student.achievementData) {\r\n      console.log(this.props.student.achievementData);\r\n    }\r\n\r\n  }\r\n\r\n \r\n\r\nonPlayerReady(player){\r\n    console.log(\"Player is ready: \", player);\r\n    this.player = player;\r\n}\r\n\r\nonVideoPlay(duration){\r\n    console.log(\"Video played at: \", duration);\r\n}\r\n\r\nonVideoPause(duration){\r\n    console.log(\"Video paused at: \", duration);\r\n}\r\n\r\nonVideoTimeUpdate(duration){\r\n    console.log(\"Time updated: \", duration);\r\n}\r\n\r\nonVideoSeeking(duration){\r\n    console.log(\"Video seeking: \", duration);\r\n}\r\n\r\nonVideoSeeked(from, to){\r\n    console.log(`Video seeked from ${from} to ${to}`);\r\n}\r\n\r\nonVideoEnd(){\r\n    console.log(\"Video ended\");\r\n}\r\n\r\n  audioStreamInitialize() {\r\n    /*\r\n        Creates a new credentials object, which will allow us to communicate with the aws services.\r\n    */\r\n    var self = this;\r\n    AWS.config.update({\r\n         region: \"ap-south-1\",\r\n             credentials: new AWS.CognitoIdentityCredentials({\r\n                IdentityPoolId: 'ap-south-1:5075a328-2598-4e55-ba57-d4b60ed9548c',\r\n                RoleArn: 'arn:aws:iam::923146643705:role/Cognito_TestPoolUnauth_Role',\r\n                AccountId: '923146643705' // your AWS account ID\r\n\r\n             })\r\n        });\r\n\r\n            AWS.config.credentials.get(function (err) {\r\n    if (err) console.log(err);\r\n    else console.log(AWS.config.credentials);\r\n});\r\n     /*\r\n        Constructs a service object.\r\n    */\r\n    // self.s3 = new AWS.S3({apiVersion: '2006-03-01',\r\n    //                     params: {Bucket: 'ankurself'},\r\n     \r\n    // }\r\n    // );\r\n    self.s3 = new AWS.S3({logger:console,\r\n//         AWSAccessKeyId=AKIAJRQYW4X2EL2WE6UQ\r\n// AWSSecretKey=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\r\n     apiVersion: '2006-03-01',\r\n        params: {Bucket: 'ankurself'}\r\n\r\n\r\n})\r\n    /*\r\n        Feature detecting is a simple check for the existence of \"navigator.mediaDevices.getUserMedia\"\r\n        To use the microphone. we need to request permission.\r\n        The parameter to getUserMedia() is an object specifying the details and requirements for each type of media you want to access.\r\n        To use microphone it shud be {audio: true}\r\n    */\r\n    navigator.mediaDevices.getUserMedia(self.audioConstraints)\r\n        .then(function(stream) {\r\n            \r\n            /*\r\n                once we accept the prompt for the audio stream from user's mic we enable the record button.\r\n            */\r\n            $(\"#record_q1\").removeAttr(\"disabled\");\r\n            /*\r\n                Creates a new MediaRecorder object, given a MediaStream to record.\r\n            */\r\n            self.recorder = new MediaRecorder(stream);\r\n                        //    self.setState({videosrc:stream});\r\n                             \r\n            /*\r\n                Called to handle the dataavailable event, which is periodically triggered each time timeslice milliseconds of media have been recorded\r\n                (or when the entire media has been recorded, if timeslice wasn't specified).\r\n                The event, of type BlobEvent, contains the recorded media in its data property.\r\n                You can then collect and act upon that recorded media data using this event handler.\r\n            */\r\n            self.recorder.addEventListener('dataavailable', function(e) {\r\n                var normalArr = [];\r\n                /*\r\n                    Here we push the stream data to an array for future use.\r\n                */\r\n                self.recordedChunks.push(e.data);\r\n                normalArr.push(e.data);\r\n\r\n                /*\r\n                    here we create a blob from the stream data that we have received.\r\n                */\r\n                var blob = new Blob(normalArr, {\r\n                    type: 'video/webm'\r\n                });\r\n                         \r\n                /*\r\n                    if the length of recordedChunks is 1 then it means its the 1st part of our data.\r\n                    So we createMultipartUpload which will return an upload id.\r\n                    Upload id is used to upload the other parts of the stream\r\n                    else.\r\n                    It Uploads a part in a multipart upload.\r\n                */\r\n                if (self.recordedChunks.length == 1) {\r\n                         console.log(blob.size);\r\n\r\n\r\n                    self.startMultiUpload(blob, self.filename)\r\n                } else {\r\n                    /*\r\n                        self.incr is basically a part number.\r\n                        Part number of part being uploaded. This is a positive integer between 1 and 10,000.\r\n                    */\r\n                    self.incr = self.incr + 1\r\n                    self.continueMultiUpload(blob, self.incr, self.uploadId, self.filename, self.bucketName);\r\n                }\r\n            })\r\n        });\r\n}\r\n\r\n\r\n\r\nstartRecording(id) {\r\n    var self = this;\r\n  \r\n   // self.enableAllButton();\r\n  //  $(\"#record_q1\").attr(\"disabled\", \"disabled\");\r\n    /*\r\n        1800000 is the number of milliseconds to record into each Blob.\r\n        If this parameter isn't included, the entire media duration is recorded into a single Blob unless the requestData()\r\n        method is called to obtain the Blob and trigger the creation of a new Blob into which the media continues to be recorded.\r\n    */\r\n    /*\r\n    PLEASE NOTE YOU CAN CHANGE THIS PARAM OF 1800000 but the size should be greater then or equal to 5MB.\r\n    As for multipart upload the minimum breakdown of the file should be 5MB\r\n    */\r\n    //this.recorder.start(1800000);\r\n    \r\n    this.recorder.start(1800000);\r\n    console.log('recprdomg');\r\n    this.setState({showVideo:true});\r\n}\r\n\r\nstopRecording(id) {\r\n    var self = this;\r\n    self.recorder.stop();\r\n    /*\r\n        Once the recording is stop we change the flag of self.booleanStop to true.\r\n        which means we have completed the recording and now we can\r\n        Completes a multipart upload by assembling previously uploaded parts.\r\n    */\r\n    self.booleanStop = true;\r\n    //disable self\r\n    self.disableAllButton()\r\n    $(\"#stop_q1\").attr(\"disabled\", \"disabled\");\r\n    // add loader\r\n  //  self.setLoader();\r\n    this.setState({showVideo:false});\r\n}\r\n\r\npauseRecording(id) {\r\n    var self = this;\r\n    self.recorder.pause();\r\n   $(\"#pause_q1\").addClass(\"hide\");\r\n    $(\"#resume_q1\").removeClass(\"hide\");\r\n}\r\n \r\n\r\nresumeRecording(id) {\r\n    var self = this;\r\n    self.recorder.resume();\r\n   $(\"#resume_q1\").addClass(\"hide\");\r\n    $(\"#pause_q1\").removeClass(\"hide\");\r\n}\r\n\r\nstartMultiUpload(blob, filename) {\r\n    var self = this;\r\n    var audioBlob = blob;\r\n    var params = {\r\n     \r\n        Bucket: 'ankurself',\r\n        Key: filename,\r\n        ContentType: 'video/webm',\r\n        ACL: 'public-read'           \r\n    };\r\n\r\n// self.s3.getSignedUrl('postObject', params, function (err, url) {\r\n//       if(err){\r\n//         console.log(err);\r\n//       }\r\n//       console.log(url);\r\n//          });\r\n\r\n\r\n    self.s3.createMultipartUpload(params, function(err, data) {\r\n        if (err) {\r\n            console.log(err, err.stack); // an error occurred\r\n        } else {\r\n            self.uploadId = data.UploadId\r\n            self.incr = 1;\r\n            self.continueMultiUpload(audioBlob, self.incr, self.uploadId, self.filename, self.bucketName);\r\n        }\r\n    });\r\n}\r\n \r\n\r\n /*\r\n       Uploads a part in a multipart upload.\r\n       The following code uploads part of a multipart upload.\r\n       it specifies a file name for the part data. The Upload ID is same that is returned by the initiate multipart upload.\r\n   */\r\n  continueMultiUpload(audioBlob, PartNumber, uploadId, key, bucketName) {\r\n    var self = this;\r\n \r\n \r\n \r\n    var params = {\r\n        Body: audioBlob,\r\n        Bucket: 'ankurself',\r\n        Key: key,\r\n        PartNumber: PartNumber,\r\n        UploadId: uploadId\r\n    };\r\n    console.log(params);\r\n    self.s3.uploadPart(params, function(err, data) {\r\n        if (err) {\r\n            console.log(err, err.stack)\r\n        } // an error occurred\r\n        else {\r\n            /*\r\n                Once the part of data is uploaded we get an Entity tag for the uploaded object(ETag).\r\n                which is used later when we complete our multipart upload.\r\n            */\r\n            self.etag.push(data.ETag);\r\n            if (self.booleanStop == true) {\r\n                self.completeMultiUpload();\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\n /*\r\n       Completes a multipart upload by assembling previously uploaded parts.\r\n   */\r\n  completeMultiUpload() {\r\n    var self = this;\r\n    var outputTag = [];\r\n    /*\r\n        here we are constructing the Etag data in the required format.\r\n    */\r\n    self.etag.forEach((data, index) => {\r\n        const obj = {\r\n            ETag: data,\r\n            PartNumber: ++index\r\n        };\r\n        outputTag.push(obj);\r\n    });\r\n\r\n    var params = {\r\n        Bucket:'ankurself', // required\r\n        Key: self.filename, // required\r\n        UploadId: self.uploadId, // required\r\n        MultipartUpload: {\r\n            Parts: outputTag\r\n        }\r\n    };\r\n\r\n    self.s3.completeMultipartUpload(params, function(err, data) {\r\n        if (err) {\r\n            console.log(err, err.stack)\r\n        } // an error occurred\r\n        else {\r\n            console.log(data.Location);\r\n            self.saveVideoURL(data.Location);\r\n            // initialize variable back to normal\r\n            self.etag = [];\r\n            self.recordedChunks = [];\r\n            self.uploadId = \"\";\r\n            self.booleanStop = false;\r\n            self.disableAllButton();\r\n         //   self.removeLoader();\r\n            alert(\"we have successfully saved the questionaire..\");\r\n        }\r\n    });\r\n}\r\n\r\nsaveVideoURL(videoLink){\r\n    let data={\r\n          userId: this.props.user.userId,\r\n        videoLink\r\n    };\r\n\r\n    theRapidHireApiService('addVideo',data)\r\n    .then(response => {     \r\n      if (response.data.statusCode === 200) {\r\n         let userData= this.state.userData;\r\n         userData= response.data.resourceData[0];\r\n         console.log(response.data.resourceData[0]);\r\n         this.setState({userData: userData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\n\r\ndisableAllButton() {\r\n    $(\"#formdata button[type=button]\").attr(\"disabled\", \"disabled\");\r\n}\r\n\r\nenableAllButton() {\r\n    $(\"#formdata button[type=button]\").removeAttr(\"disabled\");\r\n}\r\n\r\n  render() {\r\n    const videoConstraints = {\r\n        facingMode: \"user\"\r\n      };\r\n    return (\r\n        <div className=\"wrapper\">\r\n        <Header {...this.props} />     \r\n          <div className=\"main-panel\">  \r\n\r\n        <div className=\"w3-content main-panel1\">     \r\n        <div className=\"row\">\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card\">\r\n        <div className=\"header\">\r\n        <div className=\"content\">\r\n          <div className=\"panel-group\" id=\"accordion\">\r\n            <button onClick={this.startRecording.bind(this)}>Start Record</button>\r\n               <button onClick={this.stopRecording.bind(this)}>stop Record</button>\r\n                {this.state.uploading ?\r\n            <div>Uploading...</div> : null}           \r\n          \r\n       \r\n                   \r\n              {this.state.showVideo ?   <Webcam videoConstraints={videoConstraints} />: null} \r\n          \r\n       \r\n         {/* <video id='video' autoplay muted src={this.state.videosrc}/> */}\r\n           {/* <button type=\"button\" class=\"btn kc record\" id=\"record_q1\" disabled=\"disabled\" onClick={this.startRecording.bind(this)}>Record</button>\r\n           <button type=\"button\" class=\"btn kc pause\" id=\"pause_q1\" disabled=\"disabled\" onClick={this.pauseRecording.bind(this.id)}>Pause</button>\r\n           <button type=\"button\" class=\"btn kc resume hide\" id=\"resume_q1\" disabled=\"disabled\" onclick={this.resumeRecording.bind(this.id)}>Resume</button>\r\n           <button type=\"button\" class=\"btn kc stop\" id=\"stop_q1\" disabled=\"disabled\" onclick={this.stopRecording.bind(this.id)}>Stop</button> */}\r\n           </div>  \r\n            \r\n        </div>    \r\n        </div></div>  \r\n            \r\n            </div>    \r\n            </div>\r\n             </div>\r\n         </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    student: state.Student\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      actionGetStudentPersonalInfo,\r\n      actionGetAllCompetency,\r\n      actionGetAchievementsByUser,\r\n      actionGetRecommendationsByUser,\r\n      actionUpdateUserInfo,\r\n      actionGetAchievementsData\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Video);\r\n"]},"metadata":{},"sourceType":"module"}