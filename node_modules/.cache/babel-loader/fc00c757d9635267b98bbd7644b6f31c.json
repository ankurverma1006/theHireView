{"ast":null,"code":"var _jsxFileName = \"/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/recruiter/jobDescription/jobDescription.js\";\nimport React, { Component } from 'react';\nimport Header from '../header/header';\nimport { Button, Media, Row, Col, FormControl, InputGroup } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux'; //import { ToastContainer } from 'react-toastify';\n\nimport Slider from 'react-slick';\nimport _ from 'lodash';\nimport S3FileUpload from 'react-s3'; //import Summary from './summary/addSummary';\n\nimport AddJobDescription from '../jobDescription/addJobDescription'; //import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\n\nimport ImageCropper from '../../common/cropper/imageCropper';\nimport DownloadLink from \"react-download-link\"; //import Img from '../../common/cropper/img';\n\nimport { showErrorToast, uploadToAzure, limitCharacter, SampleNextArrow, SamplePrevArrow, getThumbImage } from '../../common/commonFunctions';\nimport theRapidHireApiService from '../../common/core/api/apiService';\nimport CONSTANTS from '../../common/core/config/appConfig';\nimport { actionGetStudentPersonalInfo, actionGetAllCompetency, actionGetAchievementsByUser, actionGetRecommendationsByUser, actionUpdateUserInfo, actionGetAchievementsData } from '../../common/core/redux/actions';\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\nimport SpiderChart from '../../common/spiderChart/spiderChart';\nconst config = {\n  bucketName: 'ankurself',\n  dirName: 'photos',\n\n  /* optional */\n  region: 'ap-south-1',\n  // Put your aws region here\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\n};\nvar settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 3,\n  swipeToSlide: true,\n  //  nextArrow: <SampleNextArrow props={this.props} />,\n  //  prevArrow: <SamplePrevArrow props={this.props} />,\n  responsive: [{\n    breakpoint: 1024,\n    settings: {\n      slidesToShow: 3,\n      slidesToScroll: 3,\n      infinite: true,\n      dots: true\n    }\n  }, {\n    breakpoint: 600,\n    settings: {\n      slidesToShow: 2,\n      slidesToScroll: 2,\n      initialSlide: 2\n    }\n  }, {\n    breakpoint: 480,\n    settings: {\n      slidesToShow: 1,\n      slidesToScroll: 1\n    }\n  }]\n};\n\nclass JobDescription extends Component {\n  constructor(props, context) {\n    super(props);\n\n    this.contentEditable = () => {\n      window.scrollTo(500, 0); //console.log(!this.state.contentEditable);\n\n      this.setState({\n        contentEditable: !this.state.contentEditable\n      });\n    };\n\n    this.setProfileData = data => {\n      //console.log(data);\n      if (data) {\n        let userId = data.userId;\n        let summary = data.summary;\n        let firstName = data.firstName;\n        let lastName = data.lastName; // let tagline = data.tagline.trim();\n        // let editTag = data.tagline.trim();\n\n        let tagline = data.tagline ? data.tagline.trim() : null;\n        let editTag = data.tagline ? data.tagline.trim() : null;\n        let name = (data.firstName ? data.firstName : '') + ' ' + (data.lastName ? data.lastName : '');\n        let profileImage = data.profilePicture;\n\n        if (profileImage) {\n          profileImage = getThumbImage('medium', profileImage);\n        }\n\n        let coverImage = data.coverImage;\n\n        if (coverImage) {\n          coverImage = getThumbImage('original', coverImage);\n        }\n\n        let isActive = data.isActive;\n        this.setState({\n          editTag,\n          summary,\n          firstName,\n          lastName,\n          userId,\n          profileImage,\n          coverImage,\n          tagline,\n          isActive,\n          name\n        });\n      }\n    };\n\n    this.showJobDescriptionComponent = event => {\n      this.setState({\n        showJobDescriptionComponent: !this.state.showJobDescriptionComponent\n      });\n\n      if (!this.state.showJobDescriptionComponent) {\n        this.setState({\n          jobDescriptionDetail: null\n        });\n        this.getJobDescriptionDetails(this.state.userId);\n      }\n    };\n\n    this.editJobDescriptionComponent = jobDescriptionDetail => {\n      console.log(jobDescriptionDetail);\n      this.setState({\n        jobDescriptionDetail: jobDescriptionDetail,\n        showJobDescriptionComponent: !this.state.showJobDescriptionComponent\n      });\n    };\n\n    this.getProfileData = () => {\n      let userId = this.state.userId;\n      this.props.actionGetStudentPersonalInfo(userId);\n    };\n\n    this.toggleDropdown = () => {\n      this.setState({\n        showDropdown: !this.state.showDropdown\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.tagUserForJob = data => {\n      this.props.history.push({\n        pathname: '/recruiter/userMapping',\n        state: {\n          jobDetail: data\n        }\n      });\n    };\n\n    this.state = {\n      showJobDescriptionComponent: false,\n      jobDescriptionDetail: {},\n      loader1: false,\n      loader2: false,\n      jobDescriptionListData: [],\n      userData: {},\n      showDropdown: false,\n      isActive: 'true',\n      contentEditable: false,\n      editName: false,\n      name: '',\n      editTagLine: false\n    };\n  }\n\n  componentWillMount() {\n    let user = this.props.otherUser ? this.props.otherUser : this.props.user;\n\n    if (user) {\n      let userId = user.userId;\n      this.setState({\n        userId: userId,\n        user: user,\n        roleId: user.roleId\n      });\n      this.getJobDescriptionDetails(userId);\n    }\n  }\n\n  getJobDescriptionDetails(userId) {\n    theRapidHireApiService('getJobDescriptonListById', {\n      userId\n    }).then(response => {\n      if (response.data.status === \"Success\") {\n        let jobDescriptionListData = this.state.jobDescriptionListData;\n        jobDescriptionListData = response.data.result;\n        this.setState({\n          jobDescriptionListData: jobDescriptionListData\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  generateSASToken() {\n    theRapidHireApiService('getSASToken').then(response => {\n      if (response.data.status === 'Success') {\n        let sasToken = response.data.result.sasToken;\n        this.setState({\n          sasToken\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"w3-content main-panel1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        \"margin-bottom\": \"10px\",\n        position: \"absolute\",\n        right: \"250px\",\n        \"padding-top\": \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: this.showJobDescriptionComponent.bind(this),\n      className: 'btn btn-primary with-icon smallBtn mr-1 ',\n      style: {\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, ' ', React.createElement(\"span\", {\n      className: \"icon-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), \" Add Job Description\")), this.state.showJobDescriptionComponent == true ? React.createElement(AddJobDescription, {\n      closeJobDescriptionComponent: this.showJobDescriptionComponent,\n      jobDescriptionDetail: this.state.jobDescriptionDetail,\n      userData: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }) : '', React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Job Description List\"), React.createElement(\"p\", {\n      className: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content table-responsive table-full-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-hover table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Role\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"th\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"No of Position\"), React.createElement(\"th\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Experience\"), React.createElement(\"th\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, this.state.jobDescriptionListData && this.state.jobDescriptionListData.map((data, index) => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, data.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, data.location[0]), React.createElement(\"td\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, data.noOfPosition), React.createElement(\"td\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, data.maxExperience), React.createElement(\"td\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.tagUserForJob.bind(this, data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, this.props.user.roleId == 4 ? \"Go For Map\" : \"View Student\")))))))))), \"  \");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.User.userData,\n    parent: state.User.parentData,\n    otherUser: state.User.otherUserInfoData,\n    student: state.Student\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    actionGetStudentPersonalInfo,\n    actionGetAllCompetency,\n    actionGetAchievementsByUser,\n    actionGetRecommendationsByUser,\n    actionUpdateUserInfo,\n    actionGetAchievementsData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobDescription);","map":{"version":3,"sources":["/home/ank/Desktop/therapidhiregit/therapidhireui/TheRapidHireUI/src/recruiter/jobDescription/jobDescription.js"],"names":["React","Component","Header","Button","Media","Row","Col","FormControl","InputGroup","connect","bindActionCreators","Slider","_","S3FileUpload","AddJobDescription","ImageCropper","DownloadLink","showErrorToast","uploadToAzure","limitCharacter","SampleNextArrow","SamplePrevArrow","getThumbImage","theRapidHireApiService","CONSTANTS","actionGetStudentPersonalInfo","actionGetAllCompetency","actionGetAchievementsByUser","actionGetRecommendationsByUser","actionUpdateUserInfo","actionGetAchievementsData","achievementDefaultImage","SpiderChart","config","bucketName","dirName","region","accessKeyId","secretAccessKey","settings","dots","infinite","speed","slidesToShow","swipeToSlide","responsive","breakpoint","slidesToScroll","initialSlide","JobDescription","constructor","props","context","contentEditable","window","scrollTo","setState","state","setProfileData","data","userId","summary","firstName","lastName","tagline","trim","editTag","name","profileImage","profilePicture","coverImage","isActive","showJobDescriptionComponent","event","jobDescriptionDetail","getJobDescriptionDetails","editJobDescriptionComponent","console","log","getProfileData","toggleDropdown","showDropdown","handleChange","target","value","tagUserForJob","history","push","pathname","jobDetail","loader1","loader2","jobDescriptionListData","userData","editName","editTagLine","componentWillMount","user","otherUser","roleId","then","response","status","result","catch","err","generateSASToken","sasToken","render","position","right","bind","cursor","map","index","title","location","noOfPosition","maxExperience","mapStateToProps","User","parent","parentData","otherUserInfoData","student","Student","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../header/header';\r\nimport {\r\n  Button,\r\n  Media,\r\n  Row,\r\n  Col,\r\n  FormControl,\r\n  InputGroup\r\n} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n//import { ToastContainer } from 'react-toastify';\r\nimport Slider from 'react-slick';\r\nimport _ from 'lodash';\r\nimport S3FileUpload from 'react-s3';\r\n\r\n//import Summary from './summary/addSummary';\r\nimport AddJobDescription from '../jobDescription/addJobDescription';\r\n\r\n//import CompetencyRecommendations from '../profile/competency/recommendations/competencyWiseRecommendations';\r\nimport ImageCropper from '../../common/cropper/imageCropper';\r\nimport DownloadLink from \"react-download-link\";\r\n//import Img from '../../common/cropper/img';\r\nimport {\r\n  showErrorToast,\r\n  uploadToAzure,\r\n  limitCharacter,\r\n  SampleNextArrow,\r\n  SamplePrevArrow,\r\n  getThumbImage\r\n} from '../../common/commonFunctions';\r\nimport theRapidHireApiService from '../../common/core/api/apiService';\r\nimport CONSTANTS from '../../common/core/config/appConfig';\r\n\r\nimport {\r\n  actionGetStudentPersonalInfo,\r\n  actionGetAllCompetency,\r\n  actionGetAchievementsByUser,\r\n  actionGetRecommendationsByUser,\r\n  actionUpdateUserInfo,\r\n  actionGetAchievementsData\r\n} from '../../common/core/redux/actions';\r\nimport achievementDefaultImage from '../../assets/img/default_achievement.jpg';\r\nimport SpiderChart from '../../common/spiderChart/spiderChart';\r\n\r\n\r\nconst config = {\r\n  bucketName: 'ankurself',\r\n  dirName: 'photos', /* optional */\r\n  region: 'ap-south-1', // Put your aws region here\r\n  accessKeyId: 'AKIAJHHM3PCJ25PK6OWQ',\r\n  secretAccessKey: 'fTo0CpSivV7OWo2TrFGNUaA5E6ST1pB9Pwnsp5HB'\r\n}\r\n\r\n\r\nvar settings = {\r\n  dots: false,\r\n  infinite: false,\r\n  speed: 500,\r\n  slidesToShow: 3,\r\n  swipeToSlide: true,\r\n//  nextArrow: <SampleNextArrow props={this.props} />,\r\n//  prevArrow: <SamplePrevArrow props={this.props} />,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n        infinite: true,\r\n        dots: true\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 2,\r\n        slidesToScroll: 2,\r\n        initialSlide: 2\r\n      }\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n      }\r\n    }\r\n  ]\r\n};\r\n\r\nclass JobDescription extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n    this.state = {      \r\n      showJobDescriptionComponent: false,      \r\n      jobDescriptionDetail: {},        \r\n     \r\n      loader1: false,\r\n      loader2: false,      \r\n      jobDescriptionListData: [],     \r\n      userData:{},     \r\n      showDropdown: false,     \r\n      isActive: 'true',     \r\n      contentEditable: false,\r\n      editName: false,\r\n      name: '',\r\n      editTagLine: false\r\n    };\r\n   \r\n  }\r\n\r\n  componentWillMount() {\r\n    let user= this.props.otherUser? this.props.otherUser: this.props.user;\r\n    if(user){\r\n      let userId =user.userId;       \r\n      this.setState({userId: userId,user:user,roleId: user.roleId});\r\n      this.getJobDescriptionDetails(userId);   \r\n    }    \r\n  }\r\n\r\n  getJobDescriptionDetails(userId){\r\n    theRapidHireApiService('getJobDescriptonListById',{userId})\r\n    .then(response => {     \r\n      if (response.data.status === \"Success\") {\r\n         let jobDescriptionListData= this.state.jobDescriptionListData;\r\n         jobDescriptionListData= response.data.result;\r\n     \r\n         this.setState({jobDescriptionListData: jobDescriptionListData});\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  contentEditable = () => {\r\n    window.scrollTo(500, 0);\r\n    //console.log(!this.state.contentEditable);\r\n    this.setState({ contentEditable: !this.state.contentEditable });\r\n  };\r\n\r\n  setProfileData = data => {\r\n    //console.log(data);\r\n    if (data) {\r\n      let userId = data.userId;\r\n      let summary = data.summary;\r\n      let firstName = data.firstName;\r\n      let lastName = data.lastName;\r\n      // let tagline = data.tagline.trim();\r\n      // let editTag = data.tagline.trim();\r\n      let tagline = data.tagline ? data.tagline.trim() : null;\r\n      let editTag = data.tagline ? data.tagline.trim() : null;\r\n\r\n      let name =\r\n        (data.firstName ? data.firstName : '') +\r\n        ' ' +\r\n        (data.lastName ? data.lastName : '');\r\n      let profileImage = data.profilePicture;\r\n      if (profileImage) {\r\n        profileImage = getThumbImage('medium', profileImage);\r\n      }\r\n      let coverImage = data.coverImage;\r\n      if (coverImage) {\r\n        coverImage = getThumbImage('original', coverImage);\r\n      }\r\n      let isActive = data.isActive;\r\n      this.setState({\r\n        editTag,\r\n        summary,\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        profileImage,\r\n        coverImage,\r\n        tagline,\r\n        isActive,\r\n        name\r\n      });\r\n    }\r\n  };  \r\n\r\n \r\n  showJobDescriptionComponent = event => {    \r\n    this.setState({\r\n      showJobDescriptionComponent: !this.state.showJobDescriptionComponent   \r\n    });    \r\n    \r\n    if(!this.state.showJobDescriptionComponent){\r\n       this.setState({jobDescriptionDetail :  null});\r\n       this.getJobDescriptionDetails(this.state.userId);\r\n    }\r\n  };\r\n\r\n  editJobDescriptionComponent = jobDescriptionDetail => {\r\n    console.log(jobDescriptionDetail);\r\n    this.setState({\r\n      jobDescriptionDetail: jobDescriptionDetail ,\r\n      showJobDescriptionComponent: !this.state.showJobDescriptionComponent    \r\n    });\r\n  }\r\n\r\n\r\n \r\n\r\n  getProfileData = () => {\r\n    let userId = this.state.userId;\r\n    this.props.actionGetStudentPersonalInfo(userId);\r\n  };\r\n  \r\n  generateSASToken() {\r\n    theRapidHireApiService('getSASToken')\r\n      .then(response => {\r\n        if (response.data.status === 'Success') {\r\n          let sasToken = response.data.result.sasToken;\r\n          this.setState({ sasToken });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  toggleDropdown = () => {\r\n    this.setState({\r\n      showDropdown: !this.state.showDropdown\r\n    });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };  \r\n\r\n\r\n  tagUserForJob = data =>{\r\n     this.props.history.push({\r\n      pathname: '/recruiter/userMapping',\r\n      state: {\r\n        jobDetail: data                                        \r\n      }\r\n     })    \r\n  }\r\n \r\n \r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n       <Header {...this.props} />     \r\n        <div className=\"main-panel\">   \r\n          <div className=\"w3-content main-panel1\">         \r\n\r\n                   <div style={{\"margin-bottom\": \"10px\",position: \"absolute\", right: \"250px\",\"padding-top\": \"10px\"}}>\r\n                    <a  onClick={this.showJobDescriptionComponent.bind(\r\n                            this                            \r\n                          )} \r\n                          className={                           \r\n                              'btn btn-primary with-icon smallBtn mr-1 '                            \r\n                          }\r\n                          style={{ cursor: 'pointer' }}>\r\n                          {' '}\r\n                          <span className=\"icon-plus\" /> Add Job Description\r\n                        </a>\r\n                   </div>  \r\n                          {this.state.showJobDescriptionComponent ==\r\n                              true ? (\r\n                                <AddJobDescription\r\n                                  closeJobDescriptionComponent={\r\n                                    this.showJobDescriptionComponent\r\n                                  }                                 \r\n                                  jobDescriptionDetail={\r\n                                    this.state.jobDescriptionDetail\r\n                                  }\r\n                                  userData={this.state.user}\r\n                                />\r\n                              ) : (\r\n                                '')}\r\n                   \r\n               \r\n\r\n<div className=\"card\">\r\n        <div className=\"header\">\r\n          <h4 className=\"title\">Job Description List</h4>\r\n          <p className=\"category\"></p>\r\n        </div>\r\n        <div className=\"content table-responsive table-full-width\">\r\n          <table className=\"table table-hover table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th>Role</th>\r\n                <th>Location</th>\r\n                <th className=\"text-right\">No of Position</th>\r\n                <th className=\"text-right\">Experience</th>\r\n                <th className=\"text-right\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.jobDescriptionListData && this.state.jobDescriptionListData.map((data, index) => (\r\n                <tr >\r\n                  <td>{data.title}</td>\r\n                  <td>{data.location[0]}</td>\r\n                  <td className=\"text-right\">{data.noOfPosition}</td>\r\n                  <td className=\"text-right\">{data.maxExperience}</td>\r\n                  <td className=\"text-right\">\r\n                  <Button onClick={this.tagUserForJob.bind(this,data)}>\r\n                          {this.props.user.roleId==4 ? \"Go For Map\" : \"View Student\"}\r\n                   </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n        </div>\r\n      </div>\r\n        </div>\r\n      </div>  </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.User.userData,\r\n    parent: state.User.parentData,\r\n    otherUser: state.User.otherUserInfoData,\r\n    student: state.Student\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      actionGetStudentPersonalInfo,\r\n      actionGetAllCompetency,\r\n      actionGetAchievementsByUser,\r\n      actionGetRecommendationsByUser,\r\n      actionUpdateUserInfo,\r\n      actionGetAchievementsData\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JobDescription);\r\n"]},"metadata":{},"sourceType":"module"}