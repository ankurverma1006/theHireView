{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-mapping.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram/custom-cursor.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/interaction/line-routing.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Bpmn':\n                return BpmnFlow;\n            case 'UmlActivity':\n                return ActivityFlow;\n            case 'UmlClassifier':\n                return RelationShip;\n            default:\n                return ConnectorShape;\n        }\n    }\n    return ConnectorShape;\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Straight':\n                return StraightSegment;\n            case 'Bezier':\n                return BezierSegment;\n            case 'Orthogonal':\n                return OrthogonalSegment;\n            default:\n                return StraightSegment;\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if ((!diagram.currentSymbol) && (checkParentAsContainer(diagram, object) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 || shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            var undoObj = cloneObject(shape.lanes[laneIndex]);\n            removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                    redoObject: cloneObject(lane), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            shape.lanes.splice(laneIndex, 1);\n            var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                (findStartLaneIndex(swimLane) + laneIndex);\n            if (shape.orientation === 'Horizontal') {\n                row = grid.rows[index];\n                for (i = 0; i < row.cells.length; i++) {\n                    cell = row.cells[i];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeRow(index);\n            }\n            else {\n                swimLane.width = (swimLane.width !== undefined) ?\n                    swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                for (i = 0; i < grid.rows.length; i++) {\n                    cell = grid.rows[i].cells[index];\n                    if (cell && cell.children.length > 0) {\n                        for (j = 0; j < cell.children.length; j++) {\n                            child = cell.children[j];\n                            removeChildren(diagram, child);\n                        }\n                    }\n                }\n                grid.removeColumn(index);\n            }\n            swimLane.width = swimLane.wrapper.width = grid.width;\n            swimLane.height = swimLane.wrapper.height = grid.height;\n            swimLaneMeasureAndArrange(swimLane);\n            ChangeLaneIndex(diagram, swimLane, index);\n            diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            switch (child.shape.flow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            switch (child.shape.flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(this.currentTarget);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target }, position: this.currentPosition, cancel: false\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = node[id] + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n    \n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n    \n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n    \n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n    \n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n\n\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n\n\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n\n\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n\n\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n\n\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n\n\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n\n\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n\n\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n\n\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n\n\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n\n\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nvar getShapeType = function (obj) {\n    if (obj) {\n        switch (obj.type) {\n            case 'Basic':\n                return BasicShape;\n            case 'Flow':\n                return FlowShape;\n            case 'Path':\n                return Path;\n            case 'Image':\n                return Image;\n            case 'Text':\n                return Text;\n            case 'Bpmn':\n                return BpmnShape;\n            case 'Native':\n                return Native;\n            case 'HTML':\n                return Html;\n            case 'UmlActivity':\n                return UmlActivityShape;\n            case 'UmlClassifier':\n                return UmlClassifierShape;\n            case 'SwimLane':\n                return SwimLane;\n            default:\n                return BasicShape;\n        }\n    }\n    return BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                parentHtmlElement.appendChild(htmlElement);\n                canvas.appendChild(parentHtmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var layer = getHTMLLayer(this.diagramId).children[0];\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                canvas.style.transform = 'scale(' + scaleX + ',' + scaleY + ')';\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    arg = {\n                        source: cloneBlazorObject(args.source), state: 'Completed',\n                        oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                        target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                        allowDrop: arg.allowDrop, cancel: arg.cancel\n                    };\n                    if (isBlazor()) {\n                        arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                    }\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                if (isBlazor) {\n                    arg = getDropEventArguements(args, arg);\n                }\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isBlazor()) {\n            arg = this.getBlazorPositionChangeEventArgs(arg, args.target);\n        }\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        if (!arg1.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        if (arg1.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (currentAction === this.diagram.selectedItems.userHandles[i].name) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    this.diagram.triggerEvent(eventName, arg);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor()) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            } || isBlazor())) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: cloneBlazorObject(target),\n            element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n            actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n        };\n        if (isBlazor()) {\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                arg = {\n                    source: { selector: cloneBlazorObject(obj) } || { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        obj.offsetX = helperObject.offsetX;\n                        obj.offsetY = helperObject.offsetY;\n                        if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                            obj.width = helperObject.width;\n                            obj.height = helperObject.height;\n                        }\n                        obj.rotateAngle = helperObject.rotateAngle;\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                    }\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } }\n            };\n        }\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changed', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                    newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n            }\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: { connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] } },\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] } },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint,\n                    };\n                }\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: 'Changing', type: 'Addition', cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(obj, arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n            newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        if (isBlazor()) {\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n        }\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: cloneBlazorObject(oldValue ? oldValue : []),\n                newValue: cloneBlazorObject(this.getSelectedObject()),\n                cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n            };\n            this.updateBlazorSelectorModel(oldValue);\n            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue);\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (isBlazor()) {\n                arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n            }\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(arrayNodes, true);\n            if (triggerAction) {\n                if (isBlazor()) {\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                }\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, oldValues, { rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n            this.updateSelector();\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                updateDefaultValues(node, child, _this.connectorDefaults);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                newValue: cloneBlazorObject(newProp.nodes[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { node: cloneBlazorObject(actualObject) };\n                                args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                args.newValue = { node: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                newValue: cloneBlazorObject(newProp.connectors[index])\n                            };\n                            if (isBlazor()) {\n                                args.element = { connector: cloneBlazorObject(actualObject) };\n                                args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                args.newValue = { connector: cloneBlazorObject(newValue) };\n                            }\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = {\n                element: cloneBlazorObject(this), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args.element = { diagram: cloneBlazorObject(this) };\n                args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                args.newValue = { diagram: cloneBlazorObject(newValue) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                        view.updateHtmlLayer(view);\n                    }\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n        this.renderComplete();\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(node.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(htmlNode.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change)\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            this.historyManager.startGroupAction();\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            this.historyManager.endGroupAction();\n            this.protectPropertyChange(false);\n        }\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param obj Defines the node that has to be added to diagram\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param obj Defines the connector that has to be added to diagram\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var ejsInterop = 'ejsInterop';\n        if (window && window[ejsInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[ejsInterop].updateDiagramCollection) {\n                window[ejsInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(currentObj.id + '_html_element', elementId);\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            if (isBlazor()) {\n                node = this.nameTable[node.id] || node;\n            }\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            if (nodes_1.length > 0) {\n                this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n            }\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            var updatedNodes = nodes;\n            for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                var obj = updatedNodes_1[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                var conn = _b[_a];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor()) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                source: cloneBlazorObject(this)\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if (layer === undefined || (layer && layer.visible)) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    this.updateDiagramObject(actualObject);\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldObject), newValue: cloneBlazorObject(node)\n            };\n            if (isBlazor()) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = void 0;\n                arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(_this.droppable[source]),\n                        element: getObjectType(_this.currentSymbol) === Connector ? { connector: cloneBlazorObject(_this.currentSymbol) } : { node: cloneBlazorObject(_this.currentSymbol) },\n                        cancel: false,\n                        position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: cloneBlazorObject(args.droppedElement),\n                    element: undefined,\n                    target: cloneBlazorObject(_this.eventHandler['hoverNode'] || (_this.eventHandler['lastObjectUnderMouse']) || _this), cancel: false,\n                    position: undefined\n                };\n                if (isBlazor()) {\n                    arg = {\n                        source: cloneBlazorObject(args.droppedElement),\n                        element: undefined,\n                        cancel: false,\n                        position: undefined,\n                    };\n                    _this.getDropEventArgs(arg);\n                }\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, {\n                    element: cloneBlazorObject(_this.currentSymbol), diagram: cloneBlazorObject(_this)\n                });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagram = cloneBlazorObject(this);\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagram: cloneBlazorObject(this)\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'] - this.size;\n        var top = diagram.spatialSearch['pageTop'] - this.size;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    grid_1.nodeId = [];\n                    grid_1.walkable = true;\n                }\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.LineRouting, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canEnableRouting","state","LineRouting","InheritLineRouting","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","prevChild","phaseRowIndex","prevHeight","laneHeader","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","setConnectorDefaults","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getCollectionChangeEventArguements","args1","isBlazor","cause","cancel","cloneBlazorObject","getDropEventArguements","arg","currentTarget","currentPosition","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","template","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","templatePosition","getAvailableSize","Port","Complex","Connect","Hyperlink","Annotation","parentObj","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","getBlazorPositionChangeEventArgs","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseEnter","isScrolling","preventDefault","onUserHandleMouseDown","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","isSwimlaneElements","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","onUserHandleMouseUp","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","updateSelectedNodeProperties","renderSelector","getBlazorClickEventArgs","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","movingPosition","autoScrollBorder","delay","autoScroll","targets","getBlazorCollectionObject","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","connectorTargetValue","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","defaultConnector","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","updateHtmlLayer","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","sourceValue","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","updateEventValue","addNodeToLane","laneId","hideTooltip","addNode","addConnector","propertyChangeValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","updateSvgNodes","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","nodesCollection","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","layoutInfo","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.LineRouting","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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ImB,cACD9e,EAAQid,UAAW,qBAAkB,IACxCU,IACImB,cACD9e,EAAQid,UAAW,sBAAmB,IACzCU,IACImB,cACD9e,EAAQid,UAAW,mBAAgB,IACtCU,IACImB,cACD9e,EAAQid,UAAW,2BAAwB,IAC9CU,IACImB,cACD9e,EAAQid,UAAW,wBAAqB,IAC3CU,IACImB,cACD9e,EAAQid,UAAW,sBAAmB,IACzCU,IACImB,cACD9e,EAAQid,UAAW,qBAAkB,IACxCU,IACImB,cACD9e,EAAQid,UAAW,wBAAqB,IAC3CU,IACImB,cACD9e,EAAQid,UAAW,oBAAiB,IACvCU,IACImB,cACD9e,EAAQid,UAAW,sBAAmB,IACzCU,IACIqC,gBAAekhD,KAChBlhE,EAAQid,UAAW,mBAAgB,IACtCU,IACImB,cACD9e,EAAQid,UAAW,sBAAmB,IACzCU,IACIwH,aAAY/mC,KACb4hB,EAAQid,UAAW,oBAAiB,IACvCU,IACIwH,aAAYwlB,KACb3qC,EAAQid,UAAW,qBAAkB,IACxCU,IACIwH,aAAYqmB,KACbxrC,EAAQid,UAAW,aAAU,IAChCU,IACIwH,aAAY4M,KACb/xB,EAAQid,UAAW,qBAAkB,IACxCU,IACIohE,WACD/+E,EAAQid,UAAW,iBAAc,IACpCU,IACIohE,WACD/+E,EAAQid,UAAW,gBAAa,IACnCU,IACIohE,WACD/+E,EAAQid,UAAW,gBAAa,IACnCU,IACIohE,WACD/+E,EAAQid,UAAW,eAAY,IAClCU,IACIohE,WACD/+E,EAAQid,UAAW,YAAS,IAC/BU,IACIohE,WACD/+E,EAAQid,UAAW,oBAAiB,IACvCU,IACIohE,WACD/+E,EAAQid,UAAW,yBAAsB,IAC5CU,IACIohE,WACD/+E,EAAQid,UAAW,kBAAe,IACrCU,IACIohE,WACD/+E,EAAQid,UAAW,eAAY,IAClCU,IACIohE,WACD/+E,EAAQid,UAAW,mBAAgB,IACtCU,IACIohE,WACD/+E,EAAQid,UAAW,sBAAmB,IACzCU,IACIohE,WACD/+E,EAAQid,UAAW,iBAAc,IACpCU,IACIohE,WACD/+E,EAAQid,UAAW,uBAAoB,IAC1CU,IACIohE,WACD/+E,EAAQid,UAAW,wBAAqB,IAC3CU,IACIohE,WACD/+E,EAAQid,UAAW,wBAAqB,IAC3CU,IACIohE,WACD/+E,EAAQid,UAAW,qBAAkB,IACxCU,IACIohE,WACD/+E,EAAQid,UAAW,qBAAkB,IACxCU,IACIohE,WACD/+E,EAAQid,UAAW,wBAAqB,IAC3CU,IACIohE,WACD/+E,EAAQid,UAAW,mBAAgB,IACtCU,IACIohE,WACD/+E,EAAQid,UAAW,uBAAoB,IAC1CU,IACIohE,WACD/+E,EAAQid,UAAW,4BAAyB,IAC/CU,IACIohE,WACD/+E,EAAQid,UAAW,0BAAuB,IAC7CU,IACIohE,WACD/+E,EAAQid,UAAW,6BAA0B,IAChDU,IACIohE,WACD/+E,EAAQid,UAAW,6BAA0B,IAChDU,IACIohE,WACD/+E,EAAQid,UAAW,8BAA2B,IACjDU,IACIohE,WACD/+E,EAAQid,UAAW,wBAAqB,IAC3CU,IACIohE,WACD/+E,EAAQid,UAAW,cAAW,IACjCU,IACIohE,WACD/+E,EAAQid,UAAW,iBAAc,IACpCU,IACIohE,WACD/+E,EAAQid,UAAW,iBAAc,IACpCU,IACIohE,WACD/+E,EAAQid,UAAW,gBAAa,IACnCU,IACIohE,WACD/+E,EAAQid,UAAW,sBAAmB,IACzCU,IACIohE,WACD/+E,EAAQid,UAAW,kCAA+B,IACrDU,IACIohE,WACD/+E,EAAQid,UAAW,uBAAoB,IAC1CU,IACIohE,WACD/+E,EAAQid,UAAW,qBAAkB,IACxCU,IACIqC,gBAAe0mC,KAChB1mD,EAAQid,UAAW,aAAU,IAChCU,IACIohE,WACD/+E,EAAQid,UAAW,WAAQ,IACvBjd,GACTkxB,aCl1NE8tD,GAAgC,WAChC,QAASA,GAAeznG,GACpBY,KAAKZ,QAAUA,EAkxBnB,MA5wBAynG,GAAe/hE,UAAUqxD,cAAgB,SAAUt9D,GAC/C,GAAIiuE,GACAliB,EACA3kF,EAGAud,EADA94B,EAAO,OAEPqiH,KACAn3G,EAASipC,EAAQjpC,WACjBuwB,EAAS0Y,GAAWA,EA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"}