{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && action === 'add' && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex]\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n    \n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n    \n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n    \n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n    \n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n    \n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n    \n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n    \n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n    \n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n\n */\nexport var load = 'load';\nexport var rowDataBound = 'rowDataBound';\nexport var dataBound = 'dataBound';\nexport var queryCellInfo = 'queryCellInfo';\nexport var beforeDataBound = 'beforeDataBound';\nexport var actionBegin = 'actionBegin';\nexport var dataStateChange = 'dataStateChange';\nexport var actionComplete = 'actionComplete';\nexport var rowSelecting = 'rowSelecting';\nexport var rowSelected = 'rowSelected';\nexport var checkboxChange = 'checkboxChange';\nexport var rowDeselected = 'rowDeselected';\nexport var toolbarClick = 'toolbarClick';\nexport var beforeExcelExport = 'beforeExcelExport';\nexport var beforePdfExport = 'beforePdfExport';\nexport var resizeStop = 'resizeStop';\nexport var expanded = 'expanded';\nexport var expanding = 'expanding';\nexport var collapsed = 'collapsed';\nexport var collapsing = 'collapsing';\nexport var remoteExpand = 'remoteExpand';\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\nexport var pagingActions = 'pagingActions';\nexport var printGridInit = 'printGrid-Init';\nexport var contextMenuOpen = 'contextMenuOpen';\nexport var contextMenuClick = 'contextMenuClick';\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\nexport var crudAction = 'crudAction';\nexport var beginEdit = 'beginEdit';\nexport var beginAdd = 'beginAdd';\nexport var recordDoubleClick = 'recordDoubleClick';\nexport var cellSave = 'cellSave';\nexport var cellSaved = 'cellSaved';\nexport var cellEdit = 'cellEdit';\nexport var batchDelete = 'batchDelete';\nexport var batchCancel = 'batchCancel';\nexport var batchAdd = 'batchAdd';\nexport var beforeBatchAdd = 'beforeBatchAdd';\nexport var beforeBatchSave = 'beforeBatchSave';\nexport var batchSave = 'batchSave';\nexport var keyPressed = 'key-pressed';\nexport var updateData = 'update-data';\nexport var doubleTap = 'double-tap';\nexport var virtualColumnIndex = 'virtualColumnIndex';\nexport var virtualActionArgs = 'virtual-action-args';\nexport var dataListener = 'data-listener';\nexport var indexModifier = 'index-modifier';\nexport var beforeStartEdit = 'edit-form';\nexport var beforeBatchCancel = 'before-batch-cancel';\nexport var batchEditFormRendered = 'batcheditform-rendered';\nexport var detailDataBound = 'detailDataBound';\nexport var rowDrag = 'rowDrag';\nexport var rowDragStartHelper = 'rowDragStartHelper';\nexport var rowDrop = 'rowDrop';\nexport var rowDragStart = 'rowDragStart';\nexport var rowsAdd = 'rows-add';\nexport var rowsRemove = 'rows-remove';\nexport var rowdraging = 'row-draging';\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n  \n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            var data = getParentData(this.parent, record.uniqueID);\n            for (var j = 0; j < keys.length; j++) {\n                if (data.hasOwnProperty(keys[j])) {\n                    data[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var checkBoxRecord = isBlazor() ? childRecord[0] : childRecords[i];\n                if (checkBoxRecord.checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (checkBoxRecord.checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = isBlazor() ? record[0] : currentRecord;\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkboxRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkboxRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkboxRecord);\n            }\n            if (this.selectedItems.indexOf(checkboxRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkboxRecord);\n            }\n            if (this.selectedItems.indexOf(checkboxRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkboxRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkboxRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                    this.parent.getCurrentViewRecords() : this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n    \n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n  \n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n  \n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            var _loop_1 = function (i) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if ((isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') || !this_1.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRecord_1 = this_1.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = gridRows.filter(function (r) {\n                        return r.classList.contains('e-gridrowindex' + childRecord_1.index + 'level' + (childRecord_1.level + 1));\n                    });\n                    if (childRows.length) {\n                        this_1.collectExpandingRecs({ record: childRecord_1, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this_1.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                _loop_1(i);\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n  \n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n \n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n  \n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n    \n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n \n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n  \n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n  \n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n  \n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n  \n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor()) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor()) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete') {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit') {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n  \n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n  \n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n  \n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n  \n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            gridColumn = {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n  \n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n  \n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n  \n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function () {\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.refreshColumns();\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n  \n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = gridRows.filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n  \n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n  \n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n  \n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        this.canDrop = true;\n        this.isDraggedWithChild = false;\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && (!isRemoteData(this.parent))) {\n            if (this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.json) {\n                treeGridDataSource = this.parent.dataSource.dataSource.json;\n            }\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (proxy.dataSource instanceof DataManager) {\n            if (proxy.dataSource.dataSource.offline && proxy.dataSource.dataSource.json) {\n                tempDataSource = proxy.dataSource.dataSource.json;\n            }\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.parent.dataSource.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = tObj.grid.dataSource[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.parent.dataSource.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof RemoteSaveAdaptor\n            || this.parent.dataSource instanceof JsonAdaptor) {\n            this.treeGridData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                tObj.dataSource.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource = tObj.dataSource;\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = tObj.dataSource;\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                tObj.dataSource.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * RowModelGenerator is used to generate grid data rows.\n\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n            notifyArgs.requestType = 'refresh';\n        }\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n  \n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n  \n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n  \n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('click', this.gridSingleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.gridSingleClick = function (e) {\n        var targetElement = e.target;\n        if (targetElement && this.parent.grid.isEdit && (targetElement.classList.contains('e-treegridexpand') ||\n            targetElement.classList.contains('e-treegridcollapse'))) {\n            this.parent.grid.closeEdit();\n            return;\n        }\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('click', this.gridSingleClick);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) && treeObj.getSelectedRowIndexes().length &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) ? treeObj.getSelectedRowIndexes()[0] :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]];\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n  \n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n  \n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n        if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n            this.contents.scrollTop = 0;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse || this.translateY === 0) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.classList.contains('e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","columns","length","findParentRecords","records","datas","i","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","currentViewRecords","extend","editSettings","newRowPosition","unshift","addAction","Array","k","taskData","_loop_1","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellEdit","batchCancel","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","childRecord","this_1","checkBoxRecord","isBlazor","checkAll","currentRecord","recordIndex","checkboxRecord","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","adaptorName","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","parentRow","rows","targetEle","getElementsByClassName","childRecord_1","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","totalRecordsCount","events.expanded","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","toString","isLocalData","events.crudAction","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","events.pagingActions","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","call","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","bindGridEvents","treeGrid","rowSelecting","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","callBackPromise","events.toolbarClick","toolbarargs","cancel","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","promise","events.cellEdit","events.batchCancel","setTimeout","treeColumnRowTemplate","dotnetInstance","datacount","defaultQuery","dm_1","JsonAdaptor","events.recordDoubleClick","events.detailDataBound","events.actionBegin","getSelectedRecords","updateTreeGridModel","events.beginAdd","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","val","touches","getPager","addRecord","position","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnByUid","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","mergeColumns","storedColumn","getContentTable","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","selectionModule","indexes","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","slice","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowIndexes","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","treeColumn","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","treeGridDataSource","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","dropPosition","dropIndex","dropRows","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","toolbarModule","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateFilterLevel","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","enableItems","saveCell","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","events.keyPressed","contentready","editActionEvents","events.doubleTap","gridDblClick","gridSingleClick","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","doubleClickTarget","targetElement","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","focusModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","contents","renderTable","debounceEvent","TreeInterSectionObserver","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule"],"mappings":"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CrCE,IACIkvB,WACDpY,EAAShX,UAAW,iBAAa,GACpCE,IACIkvB,WACDpY,EAAShX,UAAW,gBAAY,GACnCE,IACIkvB,WACDpY,EAAShX,UAAW,mBAAe,GACtCE,IACIkvB,WACDpY,EAAShX,UAAW,sBAAkB,GACzCE,IACIkvB,WACDpY,EAAShX,UAAW,iBAAa,GACpCE,IACIkvB,WACDpY,EAAShX,UAAW,gBAAY,GACnCE,IACIkvB,WACDpY,EAAShX,UAAW,qBAAiB,GACxCE,IACIkvB,WACDpY,EAAShX,UAAW,iBAAa,GACpCE,IACIkvB,WACDpY,EAAShX,UAAW,yBAAqB,GAC5CE,IACIkvB,WACDpY,EAAShX,UAAW,uBAAmB,GAC1CE,IACIkvB,WACDpY,EAAShX,UAAW,yBAAqB,GAC5CE,IACIkvB,WACDpY,EAAShX,UAAW,oBAAgB,GACvCE,IACIkvB,WACDpY,EAAShX,UAAW,uBAAmB,GAC1CE,IACIkvB,WACDpY,EAAShX,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACVgW,EAAShX,UAAW,sBAAkB,GACzCE,IACIkvB,WACDpY,EAAShX,UAAW,oBAAgB,GACvCE,IACIkvB,WACDpY,EAAShX,UAAW,mBAAe,GACtCE,IACIkvB,WACDpY,EAAShX,UAAW,sBAAkB,GACzCE,IACIkvB,WACDpY,EAAShX,UAAW,qBAAiB,GACxCE,IACIkvB,WACDpY,EAAShX,UAAW,sBAAkB,GACzCE,IACIkvB,WACDpY,EAAShX,UAAW,qBAAiB,GACxCE,IACIkvB,WACDpY,EAAShX,UAAW,sBAAkB,GACzCE,IACIkvB,WACDpY,EAAShX,UAAW,uBAAmB,GAC1CE,IACIkvB,WACDpY,EAAShX,UAAW,oBAAgB,GACvCE,IACIkvB,WACDpY,EAAShX,UAAW,uBAAmB,GAC1CE,IACIkvB,WACDpY,EAAShX,UAAW,sBAAkB,GACzCE,IACIkvB,WACDpY,EAAShX,UAAW,mBAAe,GACtCE,IACIkvB,WACDpY,EAAShX,UAAW,gBAAY,GACnCE,IACIkvB,WACDpY,EAAShX,UAAW,kBAAc,GACrCE,IACIkvB,WACDp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"}