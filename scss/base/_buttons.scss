// Mixin for generating new styles
@mixin btn-styles($btn-color, $btn-states-color) {
  border-color: $btn-color;
  color: $btn-color;
  border-radius: $button-border-radius;
  &:hover,
  &:focus,
  &:active,
  &.active,
  .open > &.dropdown-toggle {
    color: $btn-states-color;
    border-color: $btn-states-color;
  }

  &.disabled,
  &:disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: $transparent-bg;
          border-color: $btn-color;
    }
  }

  .caret{
      border-top-color: $btn-color;
  }
}


@mixin btn-size($padding-vertical, $padding-horizontal, $font-size){
   font-size: $font-size;
   padding: $padding-vertical $padding-horizontal;

   &.btn-rectangle{
       padding: $padding-vertical + 1 $padding-horizontal;
   }

   &.btn-simple{
       padding: $padding-vertical + 2 $padding-horizontal;
   }

}

.btn{
  color: $white-color !important;
  border-width: $border-thin;
  font-weight: $font-weight-normal;
  box-shadow: $btn-shadow;
  border-radius: 0;
  padding: $padding-base-vertical $padding-base-horizontal;
  transition: 0.5s ease-in-out;
  margin-top: 0 !important;
  &:hover,
  &:focus{
      @include opacity(1);
      background: $white-color;
      color: $btn-hover-color !important;
      transition: 0.5s ease-in-out;
  }
  &:active,
  &.active,
  .open > &.dropdown-toggle {
       @include box-shadow(none);
       outline: 0 !important;
  }

  &.btn-icon{
      padding: $padding-base-vertical; 
  }

}

// Apply the mixin to the buttons
//.btn-default { @include btn-styles($default-color, $default-states-color); }
.btn-primary {
  background-color: $primary-bg;
  border-color: $primary-color;
}
.btn-secondary{
  background-color: $secondary-bg;
  border-color: $secondary-bg;
}
.btn-success {
  background-color: $success-bg;
  border-color: $success-bg;
}
.btn-outline-success{
  color: $success-color !important;
  border: 1px solid $success-color;
  &:hover{
    background: $success-bg;
    color: $white-color !important;
  }
}
.btn.btn-edit{
  padding: 4px 10px;
  border-radius: 4px;
}
.btn-info    {
  background-color: $info-bg;
}
.btn-warning {
  background-color: $warning-bg;
}
.btn-danger  {
  background-color: $danger-bg;
  border-color: $danger-bg;
}
.btn-neutral {
  @include btn-styles($white-color, $white-color);

  &:active,
  &.active,
  .open > &.dropdown-toggle{
       background-color: $white-color;
       color: $default-color;
  }

  &.btn-fill,
  &.btn-fill:hover,
  &.btn-fill:focus{
      color: $default-color;
  }

  &.btn-simple:active,
  &.btn-simple.active{
      background-color: transparent;
  }
}

.btn{
   &:disabled,
   &[disabled],
   &.disabled{
      @include opacity(.5);
  }
}
.btn-rectangle{
  border-width: $border-thin;
  border-radius: $btn-rectangle-radius !important;
  padding: $padding-round-vertical $padding-round-horizontal;

  &.btn-icon{
      padding: $padding-round-vertical;
  }
}
.btn-round{
  border-width: $border-thin;
  border-radius: 50%;
  padding: $padding-round-vertical $padding-round-horizontal;

  &.btn-icon{
      padding: $padding-round-vertical;
  }
}
.btn-simple{
  border: $none;
  font-size: $font-size-medium;
  padding: $padding-base-vertical $padding-base-horizontal;

  &.btn-icon{
      padding: $padding-base-vertical;
  }
}
.btn-lg{
 @include btn-size($padding-large-vertical, $padding-large-horizontal, $font-size-large);
 font-weight: $font-weight-normal;
}
.btn-sm{
  @include btn-size($padding-small-vertical, $padding-small-horizontal, $font-size-small);
}
.btn-xs {
  @include btn-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-small);
}
.btn-wd {
  min-width: 140px;
}

.btn-group.select{
  width: 100%;
}
.btn-group.select .btn{
  text-align: left;
}
.btn-group.select .caret{
  position: absolute;
  top: 50%;
  margin-top: -1px;
  right: 8px;
}

.buttons-with-margin .btn {
  margin-bottom: 5px;
  margin-right: 5px;
}