// Variables
$main-color: #FFFFFF;
$secondary-color: darken(#888888, 10%);
$main-font-size: 14px;

$green: #7FBA00;
$yellow: #FCD116;
$red: #E81123;
$blue: #00AFF0;

@mixin constructor($property, $specs...) {
	-webkit-#{$property}: $specs;
	-moz-#{$property}: $specs;
	-o-#{$property}: $specs;
	#{$property}: $specs;
}

@mixin border-radius($specs) {
	@include constructor(border-radius, #{$specs})
}

@mixin box-shadow($specs) {
	@include constructor(box-shadow, $specs)
}

@mixin transition($specs...) {
	@include constructor(transition, $specs)
}

@mixin transform($specs) {
	@include constructor(transform, $specs)
}

@mixin transform-style($specs) {
	@include constructor(transform-style, $specs)
}

@mixin perspective($specs) {
	@include constructor(perspective, $specs)
}

@mixin blur($specs) {
	@include constructor(filter, blur($specs))
}

@mixin forceGpu() {
	@include constructor(transform, translateZ(0))
}

@mixin bg-gradient($specs...) {
	background: -webkit-linear-gradient($specs);
	background: -moz-linear-gradient($specs);
	background: -o-linear-gradient($specs);
	background: linear-gradient($specs);
}

@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    -moz-animation:    $animations;
    -o-animation:      $animations;
    animation:         $animations;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

@mixin no-animation() {
	@include transition(#{"none !important"});
	@include animation(#{"none !important"});
	
	$no-duration: "0s !important";
}

@mixin input-placeholder($color) {
	&::-webkit-input-placeholder {
		color: $color;
	}

	&::-moz-placeholder {  /* Firefox 19+ */
		color: $color;  
	}

	&:-ms-input-placeholder {  
		color: $color;  
	}
}
	

.main-window {
	padding-top: 80px;
	font-size: 1.75em;

	@media screen and (max-width: 767px) {
		padding-top: 40px;

		.pull-left, .pull-right {
			width: 100%;
			text-align: center;
		}

		.pull-right {
			margin-top: 20px;
		}
	}

	.btn-action {
		$height: 60px;
		height: $height;
		width: $height;
		margin: 20px 30px 0px 0px;
		line-height: $height;
		text-align: center;
		border-radius: 50%;
		border: solid 2px #433a3a;
		cursor: pointer;
		transition-duration: 0.25s;
		background-color: transparent;

		&:hover {
			background-color: rgba(#433a3a, 0.2);
		}
	}

	.txt-clientId {
		height: 40px;
		margin: 40px auto 0px 10px;
		color: #433a3a;
		font-size: 0.9em;
		background-color: transparent;
		border: none;
		border-bottom: solid 1px $main-color;
		@include input-placeholder(rgba($main-color, 0.8));
	}

}

.call-window {
	position: absolute;
	top: 0;
	left: 0;
	width: 100vw;
	height: 100vh;
	opacity: 0;
	z-index: -1;
	@include transition(opacity 0.5s);
	@include bg-gradient(top, #074055 0%, #030D10 100%);
	
	&.active {
		opacity: 1;
		z-index: auto;
		
		.video-control {
			z-index: auto;
			@include animation(in-fadeout 3s ease);
		}
	}
	
	.video-control {
		position: absolute;
		bottom: 20px;
		height: 72px;
		width: 100%;
		text-align: center;
		opacity: 0;
		z-index: -1;
		@include transition(opacity 0.5s);
		
		
		&:hover {
			opacity: 1;
		}
	}
	
	video {
		position: absolute;
	}
	
	#localVideo {
		bottom: 0;
		right: 0;
		width: 20%;
		height: 20%;
	}
	
	#peerVideo {
		width: 100%;
		height: 100%;
	}
}

@include keyframes(in-fadeout) {
	0% {opacity: 1}
	75% {opacity: 1}
	100% {opacity: 0}
}

.video-control, .call-modal {
	.btn-action {
		$height: 50px;
		height: $height;
		width: $height;
		line-height: $height;
		margin: 0px 8px;
		font-size: 1.4em;
		text-align: center;
		border-radius: 50%;
		cursor: pointer;
		transition-duration: 0.25s;
		
		&:hover {
			opacity: 0.8;	
		}
		
		&.hangup {
			background-color: $red;
			@include transform(rotate(135deg));
		}
		
		&:not(.hangup) {
			background-color: $blue;
			
			&.disable {
				background-color: $red;
			}
		}
	}
}

.call-modal {
	position: absolute;
	width: 400px;
	padding: 20px;
	left: calc(50vw - 200px);
	top: calc(50vh - 60px);
	@include bg-gradient(top, #074055 0%, #030D10 100%);
	@include border-radius(5px);
	text-align: center;
	display: none;

	&.active {
		display: block;
		z-index: 9999;
		@include animation(blinking 3s infinite linear);
	}

	.btn-action:not(.hangup) {
		background-color: $green;
	}

	span.caller {
		color: $blue;
	}

	p {
		font-size: 1.5em;
	}
}

@include keyframes(blinking) {
	25% {@include transform(scale(0.96))}
	50% {@include transform(scale(1))}
	75% {@include transform(scale(0.96))}
	100% {@include transform(scale(1))}
}
